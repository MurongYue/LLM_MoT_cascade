[
    {
        "question": "Seven red apples and two green apples are in the basket. How many apples are in the basket?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nred_apples = 7\ngreen_apples = 2\ntotal_apples = red_apples + green_apples\nans = total_apples",
            "# Python code, return ans\nred_apples = 7\ngreen_apples = 2\ntotal_apples = red_apples + green_apples\nans = total_apples",
            "# Python code, return ans\nred_apples = 7\ngreen_apples = 2\ntotal_apples = red_apples + green_apples\nans = total_apples"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Ellen has six more balls than Marin. Marin has nine balls. How many balls does Ellen have?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\nMarin_balls = 9\nEllen_balls = Marin_balls + 6\nans = Ellen_balls",
            "# Python code, return ans\nMarin_balls = 9\nEllen_balls = Marin_balls + 6\nans = Ellen_balls",
            "# Python code, return ans\nMarin_balls = 9\nEllen_balls = Marin_balls + 6\nans = Ellen_balls"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "Janet has nine oranges and Sharon has seven oranges. How many oranges do Janet and Sharon have together? ",
        "answer": 16,
        "generated": [
            "# Python code, return ans\nJanet_oranges = 9\nSharon_oranges = 7\ntotal_oranges = Janet_oranges + Sharon_oranges\nans = total_oranges",
            "# Python code, return ans\nJanet_oranges = 9\nSharon_oranges = 7\ntotal_oranges = Janet_oranges + Sharon_oranges\nans = total_oranges",
            "# Python code, return ans\nJanet_oranges = 9\nSharon_oranges = 7\ntotal_oranges = Janet_oranges + Sharon_oranges\nans = total_oranges"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "Allan brought two balloons and Jake brought four balloons to the park. How many balloons did Allan and Jake have in the park?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nAllan_balloons = 2\nJake_balloons = 4\ntotal_balloons = Allan_balloons + Jake_balloons\nans = total_balloons",
            "# Python code, return ans\nAllan_balloons = 2\nJake_balloons = 4\ntotal_balloons = Allan_balloons + Jake_balloons\nans = total_balloons",
            "# Python code, return ans\nAllan_balloons = 2\nJake_balloons = 4\ntotal_balloons = Allan_balloons + Jake_balloons\nans = total_balloons"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Adam has five more apples than Jackie. Jackie has nine apples. How many apples does Adam have?",
        "answer": 14,
        "generated": [
            "# Python code, return ans\nJackie_apples = 9\nAdam_apples = Jackie_apples + 5\nans = Adam_apples",
            "# Python code, return ans\nJackie_apples = 9\nAdam_apples = Jackie_apples + 5\nans = Adam_apples",
            "# Python code, return ans\nJackie_apples = 9\nAdam_apples = Jackie_apples + 5\nans = Adam_apples"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "Brian has four more plums than Paul. Paul has seven plums. How many plums does Brian have?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\nPaul_plums = 7\nBrian_plums = Paul_plums + 4\nans = Brian_plums",
            "# Python code, return ans\nPaul_plums = 7\nBrian_plums = Paul_plums + 4\nans = Brian_plums",
            "# Python code, return ans\nPaul_plums = 7\nBrian_plums = Paul_plums + 4\nans = Brian_plums"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "Sandra took six cups of coffee and Marcie took two cups of coffee. How many cups of coffee did Sandra and Marcie take in total?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nSandra_coffee = 6\nMarcie_coffee = 2\ntotal_coffee = Sandra_coffee + Marcie_coffee\nans = total_coffee",
            "# Python code, return ans\nSandra_coffee = 6\nMarcie_coffee = 2\ntotal_coffee = Sandra_coffee + Marcie_coffee\nans = total_coffee",
            "# Python code, return ans\nSandra_coffee = 6\nMarcie_coffee = 2\ntotal_coffee = Sandra_coffee + Marcie_coffee\nans = total_coffee"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "17 plums were in the basket. More plums were added to the basket. Now there are 21 plums. How many plums were added to the basket?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ninitial_plums = 17\nfinal_plums = 21\nplums_added = final_plums - initial_plums\nans = plums_added",
            "# Python code, return ans\ninitial_plums = 17\nfinal_plums = 21\nplums_added = final_plums - initial_plums\nans = plums_added",
            "# Python code, return ans\ninitial_plums = 17\nfinal_plums = 21\nadded_plums = final_plums - initial_plums\nans = added_plums"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "14 red plums and four green plums are in the basket. How many plums are in the basket? ",
        "answer": 18,
        "generated": [
            "# Python code, return ans\nred_plums = 14\ngreen_plums = 4\ntotal_plums = red_plums + green_plums\nans = total_plums",
            "# Python code, return ans\nred_plums = 14\ngreen_plums = 4\ntotal_plums = red_plums + green_plums\nans = total_plums",
            "# Python code, return ans\nred_plums = 14\ngreen_plums = 4\ntotal_plums = red_plums + green_plums\nans = total_plums"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "Marin has nine apples and Donald has two apples. How many apples do Marin and Donald have together?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\nMarin_apples = 9\nDonald_apples = 2\ntotal_apples = Marin_apples + Donald_apples\nans = total_apples",
            "# Python code, return ans\nMarin_apples = 9\nDonald_apples = 2\ntotal_apples = Marin_apples + Donald_apples\nans = total_apples",
            "# Python code, return ans\nMarin_apples = 9\nDonald_apples = 2\ntotal_apples = Marin_apples + Donald_apples\nans = total_apples"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "46 apples were in the basket. 22 are red and the rest are green. How many apples are green?",
        "answer": 24,
        "generated": [
            "# Python code, return ans\ntotal_apples = 46\nred_apples = 22\ngreen_apples = total_apples - red_apples\nans = green_apples",
            "# Python code, return ans\ntotal_apples = 46\nred_apples = 22\ngreen_apples = total_apples - red_apples\nans = green_apples",
            "# Python code, return ans\ntotal_apples = 46\nred_apples = 22\ngreen_apples = total_apples - red_apples\nans = green_apples"
        ],
        "results": [
            24.0,
            24.0,
            24.0
        ],
        "result_counter": {
            "24.0": 3
        },
        "prediction": 24.0
    },
    {
        "question": "Five red peaches and 14 green peaches are in the basket. How many peaches are in the basket? ",
        "answer": 19,
        "generated": [
            "# Python code, return ans\nred_peaches = 5\ngreen_peaches = 14\ntotal_peaches = red_peaches + green_peaches\nans = total_peaches",
            "# Python code, return ans\nred_peaches = 5\ngreen_peaches = 14\ntotal_peaches = red_peaches + green_peaches\nans = total_peaches",
            "# Python code, return ans\nred_peaches = 5\ngreen_peaches = 14\ntotal_peaches = red_peaches + green_peaches\nans = total_peaches"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "20 peaches are in the basket. 25 more peaches are put in the basket. How many peaches are in the basket now?",
        "answer": 45,
        "generated": [
            "# Python code, return ans\ninitial_peaches = 20\nadded_peaches = 25\ntotal_peaches = initial_peaches + added_peaches\nans = total_peaches",
            "# Python code, return ans\ninitial_peaches = 20\nadded_peaches = 25\ntotal_peaches = initial_peaches + added_peaches\nans = total_peaches",
            "# Python code, return ans\ninitial_peaches = 20\nadded_peaches = 25\ntotal_peaches = initial_peaches + added_peaches\nans = total_peaches"
        ],
        "results": [
            45.0,
            45.0,
            45.0
        ],
        "result_counter": {
            "45.0": 3
        },
        "prediction": 45.0
    },
    {
        "question": "Two marbles are in the basket. Two marbles are taken out of the basket. How many marbles are in the basket now?",
        "answer": 0,
        "generated": [
            "# Python code, return ans\nmarbles_in_basket = 2\nmarbles_taken_out = 2\nmarbles_remaining = marbles_in_basket - marbles_taken_out\nans = marbles_remaining",
            "# Python code, return ans\nmarbles_in_basket = 2\nmarbles_taken_out = 2\nmarbles_left = marbles_in_basket - marbles_taken_out\nans = marbles_left",
            "# Python code, return ans\nmarbles_in_basket = 2\nmarbles_taken_out = 2\nmarbles_left = marbles_in_basket - marbles_taken_out\nans = marbles_left"
        ],
        "results": [
            0.0,
            0.0,
            0.0
        ],
        "result_counter": {
            "0.0": 3
        },
        "prediction": 0.0
    },
    {
        "question": "Eight balls were in the basket. Some of the balls were removed from the basket. Now there are six balls. How many balls were removed from the basket? ",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ninitial_balls = 8\nremaining_balls = 6\nballs_removed = initial_balls - remaining_balls\nans = balls_removed",
            "# Python code, return ans\nballs_initial = 8\nballs_remaining = 6\nballs_removed = balls_initial - balls_remaining\nans = balls_removed",
            "# Python code, return ans\ninitial_balls = 8\nremaining_balls = 6\nballs_removed = initial_balls - remaining_balls\nans = balls_removed"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Some oranges were in the basket. Five oranges were taken from the basket. Now there are three oranges. How many oranges were in the basket before some of the oranges were taken?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\noranges_left = 3\noranges_taken = 5\ninitial_oranges = oranges_left + oranges_taken\nans = initial_oranges",
            "# Python code, return ans\noranges_left = 3\noranges_taken = 5\ninitial_oranges = oranges_left + oranges_taken\nans = initial_oranges",
            "# Python code, return ans\noranges_left = 3\noranges_taken = 5\ninitial_oranges = oranges_left + oranges_taken\nans = initial_oranges"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Jake has six fewer peaches than Steven. Steven has 13 peaches. How many peaches does Jake have? ",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nSteven_peaches = 13\nJake_peaches = Steven_peaches - 6\nans = Jake_peaches\n",
            "# Python code, return ans\nSteven_peaches = 13\nJake_peaches = Steven_peaches - 6\nans = Jake_peaches\n",
            "# Python code, return ans\nSteven_peaches = 13\nJake_peaches = Steven_peaches - 6\nans = Jake_peaches"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "David has zero fewer apples than Marin. Marin has three apples. How many apples does David have?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nMarin_apples = 3\nDavid_apples = Marin_apples - 0\nans = David_apples",
            "# Python code, return ans\nMarin_apples = 3\nDavid_apples = Marin_apples - 0\nans = David_apples",
            "# Python code, return ans\nMarin_apples = 3\nDavid_apples = Marin_apples - 0\nans = David_apples"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Jake has 34 fewer balls than Audrey. Audrey has 41 balls. How many balls does Jake have?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nAudrey_balls = 41\nJake_balls = Audrey_balls - 34\nans = Jake_balls",
            "# Python code, return ans\nAudrey_balls = 41\nJake_balls = Audrey_balls - 34\nans = Jake_balls",
            "# Python code, return ans\nAudrey_balls = 41\nJake_balls = Audrey_balls - 34\nans = Jake_balls"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Brian has zero fewer oranges than Marcie. Marcie has 12 oranges. How many oranges does Brian have? ",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nMarcie_oranges = 12\nBrian_oranges = Marcie_oranges - 0\nans = Brian_oranges",
            "# Python code, return ans\nMarcie_oranges = 12\nBrian_oranges = Marcie_oranges - 0\nans = Brian_oranges",
            "# Python code, return ans\nMarcie_oranges = 12\nBrian_oranges = Marcie_oranges - 0\nans = Brian_oranges"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "2 birds were sitting on the fence. 4 more birds came to join them. How many birds are sitting on the fence?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ninitial_birds = 2\nadditional_birds = 4\ntotal_birds = initial_birds + additional_birds\nans = total_birds",
            "# Python code, return ans\ninitial_birds = 2\nadditional_birds = 4\ntotal_birds = initial_birds + additional_birds\nans = total_birds",
            "# Python code, return ans\ninitial_birds = 2\nnew_birds = 4\ntotal_birds = initial_birds + new_birds\nans = total_birds"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "You have 7 cookies and you ate 2 of them. How many cookies do you have left?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ninitial_cookies = 7\ncookies_eaten = 2\nremaining_cookies = initial_cookies - cookies_eaten\nans = remaining_cookies",
            "# Python code, return ans\ntotal_cookies = 7\ncookies_eaten = 2\ncookies_left = total_cookies - cookies_eaten\nans = cookies_left",
            "# Python code, return ans\ninitial_cookies = 7\ncookies_eaten = 2\ncookies_left = initial_cookies - cookies_eaten\nans = cookies_left"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "You have collected 7 crickets. How many more crickets do you need to collect to have 11 crickets?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ncrickets_collected = 7\ncrickets_needed = 11\nmore_crickets = crickets_needed - crickets_collected\nans = more_crickets",
            "# Python code, return ans\ncollected_crickets = 7\ndesired_crickets = 11\nmore_crickets_needed = desired_crickets - collected_crickets\nans = more_crickets_needed",
            "# Python code, return ans\ncollected_crickets = 7\ndesired_crickets = 11\ncrickets_needed = desired_crickets - collected_crickets\nans = crickets_needed"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "4 birds are sitting on a branch. 1 flies away. How many birds are left on the branch?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nbirds_on_branch = 4\nbirds_fly_away = 1\nbirds_left = birds_on_branch - birds_fly_away\nans = birds_left",
            "# Python code, return ans\nbirds_on_branch = 4\nbirds_fly_away = 1\nbirds_left = birds_on_branch - birds_fly_away\nans = birds_left",
            "# Python code, return ans\nbirds_on_branch = 4\nbirds_fly_away = 1\nbirds_left = birds_on_branch - birds_fly_away\nans = birds_left"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "3 raccoons are playing in the woods. 2 go home to eat dinner. How many raccoons are left in the woods?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\nraccoons_playing = 3\nraccoons_go_home = 2\nraccoons_left = raccoons_playing - raccoons_go_home\nans = raccoons_left",
            "# Python code, return ans\nraccoons_playing = 3\nraccoons_go_home = 2\nraccoons_left = raccoons_playing - raccoons_go_home\nans = raccoons_left",
            "# Python code, return ans\nraccoons_playing = 3\nraccoons_go_home = 2\nraccoons_left = raccoons_playing - raccoons_go_home\nans = raccoons_left"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "1 lonely pigeons was eating breadcrumbs. Another pigeon came to eat breadcrumbs, too. How many pigeons are eating breadcrumbs now?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\nlonely_pigeon = 1\nanother_pigeon = 1\ntotal_pigeons = lonely_pigeon + another_pigeon\nans = total_pigeons",
            "# Python code, return ans\ninitial_pigeons = 1\nnew_pigeon = 1\ntotal_pigeons = initial_pigeons + new_pigeon\nans = total_pigeons",
            "# Python code, return ans\ninitial_pigeons = 1\nnew_pigeon = 1\ntotal_pigeons = initial_pigeons + new_pigeon\nans = total_pigeons"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "3 owls were sitting on the fence. 2 more owls joined them. How many owls are on the fence now?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ninitial_owls = 3\nnew_owls = 2\ntotal_owls = initial_owls + new_owls\nans = total_owls",
            "# Python code, return ans\ninitial_owls = 3\nnew_owls = 2\ntotal_owls = initial_owls + new_owls\nans = total_owls",
            "# Python code, return ans\ninitial_owls = 3\nnew_owls = 2\ntotal_owls = initial_owls + new_owls\nans = total_owls"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "2 beavers were working on their home. 1 went for a swim. How many beavers are still working on their home?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\ntotal_beavers = 2\nbeaver_swimming = 1\nbeavers_working = total_beavers - beaver_swimming\nans = beavers_working",
            "# Python code, return ans\ntotal_beavers = 2\nbeaver_went_swimming = 1\nbeavers_working = total_beavers - beaver_went_swimming\nans = beavers_working",
            "# Python code, return ans\ntotal_beavers = 2\nbeaver_swimming = 1\nbeavers_working = total_beavers - beaver_swimming\nans = beavers_working"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "2 toucans are sitting on a tree limb. 1 more toucan joins them. How many toucans in all?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\ntoucans_initial = 2\ntoucans_joined = 1\ntotal_toucans = toucans_initial + toucans_joined\nans = total_toucans",
            "# Python code, return ans\ntoucans_initial = 2\ntoucans_joined = 1\ntotal_toucans = toucans_initial + toucans_joined\nans = total_toucans",
            "# Python code, return ans\ntoucans_initial = 2\ntoucans_joined = 1\ntotal_toucans = toucans_initial + toucans_joined\nans = total_toucans"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Mrs. Hilt has two pennies, two dimes, and two nickels. Jacob has four pennies, one nickel, and one dime. How much more?",
        "answer": 13,
        "generated": [
            "money does Mrs. Hilt have than Jacob?\n# Python code, return ans\nMrs_Hilt_money = 2 * 0.01 + 2 * 0.1 + 2 * 0.05\nJacob_money = 4 * 0.01 + 1 * 0.05 + 1 * 0.1\nmoney_difference = Mrs_Hilt_money - Jacob_money\nans = money_difference",
            "money does Mrs. Hilt have than Jacob?\n# Python code, return ans\nMrs_Hilt_money = 2 * 0.01 + 2 * 0.1 + 2 * 0.05\nJacob_money = 4 * 0.01 + 1 * 0.05 + 1 * 0.1\nans = Mrs_Hilt_money - Jacob_money"
        ],
        "results": [],
        "result_counter": {},
        "prediction": null
    },
    {
        "question": "Mrs. Hilt found a quarter, 1 dime, and 2 nickels. How much money did she find?",
        "answer": 45,
        "generated": [
            "# Python code, return ans\nquarter = 1 * 0.25\ndime = 1 * 0.10\nnickels = 2 * 0.05\ntotal_money = quarter + dime + nickels\nans = total_money",
            "# Python code, return ans\nquarter = 25\ndime = 10\nnickel = 5\ntotal_money = quarter + dime + 2 * nickel\nans = total_money / 100\nans = f\"${ans:.2f}\"\nans",
            "# Python code, return ans\nquarter = 25\ndime = 10\nnickel = 5\ntotal_money = quarter + dime + 2 * nickel\nans = total_money / 100  # Convert to dollars\nans"
        ],
        "results": [
            0.44999999999999996,
            0.45
        ],
        "result_counter": {
            "0.44999999999999996": 1,
            "0.45": 1
        },
        "prediction": 0.44999999999999996
    },
    {
        "question": "Mrs. Hilt's favorite first grade classes are baking muffins. Mrs. Brier's class bakes 18 muffins, Mrs. MacAdams's class bakes 20 muffins, and Mrs. Flannery's class bakes 17 muffins. How many muffins does first grade bake in all?",
        "answer": 55,
        "generated": [
            "# Python code, return ans\nBrier_muffins = 18\nMacAdams_muffins = 20\nFlannery_muffins = 17\ntotal_muffins = Brier_muffins + MacAdams_muffins + Flannery_muffins\nans = total_muffins",
            "# Python code, return ans\nBrier_muffins = 18\nMacAdams_muffins = 20\nFlannery_muffins = 17\ntotal_muffins = Brier_muffins + MacAdams_muffins + Flannery_muffins\nans = total_muffins",
            "# Python code, return ans\nBrier_muffins = 18\nMacAdams_muffins = 20\nFlannery_muffins = 17\ntotal_muffins = Brier_muffins + MacAdams_muffins + Flannery_muffins\nans = total_muffins"
        ],
        "results": [
            55.0,
            55.0,
            55.0
        ],
        "result_counter": {
            "55.0": 3
        },
        "prediction": 55.0
    },
    {
        "question": "Mrs. Hilt bought a yoyo for 24 cents and a whistle for 14 cents. How much did she spend in all for the two toys?",
        "answer": 38,
        "generated": [
            "# Python code, return ans\nyoyo_cost = 24\nwhistle_cost = 14\ntotal_cost = yoyo_cost + whistle_cost\nans = total_cost",
            "# Python code, return ans\nyoyo_cost = 24\nwhistle_cost = 14\ntotal_cost = yoyo_cost + whistle_cost\nans = total_cost",
            "# Python code, return ans\nyoyo_cost = 24\nwhistle_cost = 14\ntotal_cost = yoyo_cost + whistle_cost\nans = total_cost"
        ],
        "results": [
            38.0,
            38.0,
            38.0
        ],
        "result_counter": {
            "38.0": 3
        },
        "prediction": 38.0
    },
    {
        "question": "Mrs. Hilt made 5 Rice Krispie Treats. She used 8 large marshmallows and 10 mini marshmallows. How many marshmallows did she use altogether?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\nlarge_marshmallows = 8\nmini_marshmallows = 10\ntotal_marshmallows = large_marshmallows + mini_marshmallows\nans = total_marshmallows",
            "# Python code, return ans\nlarge_marshmallows = 8\nmini_marshmallows = 10\ntotal_marshmallows = large_marshmallows + mini_marshmallows\nans = total_marshmallows",
            "# Python code, return ans\nlarge_marshmallows = 8\nmini_marshmallows = 10\ntotal_marshmallows = large_marshmallows + mini_marshmallows\nans = total_marshmallows"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "At Mrs. Hilt's house, there was 29 inches of snow, and Brecknock Elementary School received 17 inches of snow. How much more snow did Mrs. Hilt's house have?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nsnow_at_Hilt_house = 29\nsnow_at_Brecknock_school = 17\ndifference_in_snow = snow_at_Hilt_house - snow_at_Brecknock_school\nans = difference_in_snow",
            "# Python code, return ans\nsnow_Hilt_house = 29\nsnow_Brecknock_school = 17\nmore_snow = snow_Hilt_house - snow_Brecknock_school\nans = more_snow",
            "# Python code, return ans\nsnow_Hilt_house = 29\nsnow_Brecknock_school = 17\nmore_snow = snow_Hilt_house - snow_Brecknock_school\nans = more_snow"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Mrs. Hilt has $10. She spends $3 on a toy truck and $2 on a pencil case. How much money does she have left?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ninitial_money = 10\ntoy_truck_cost = 3\npencil_case_cost = 2\nmoney_left = initial_money - toy_truck_cost - pencil_case_cost\nans = money_left",
            "# Python code, return ans\ninitial_money = 10\ntoy_truck_cost = 3\npencil_case_cost = 2\nmoney_left = initial_money - toy_truck_cost - pencil_case_cost\nans = money_left",
            "# Python code, return ans\ninitial_money = 10\nspent_toy_truck = 3\nspent_pencil_case = 2\nmoney_left = initial_money - spent_toy_truck - spent_pencil_case\nans = money_left"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Mrs. Hilt reads 5 books a day. How many books does she read in 3 days?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\nbooks_per_day = 5\ndays = 3\ntotal_books = books_per_day * days\nans = total_books",
            "# Python code, return ans\nbooks_per_day = 5\ndays = 3\ntotal_books = books_per_day * days\nans = total_books",
            "# Python code, return ans\nbooks_per_day = 5\ndays = 3\ntotal_books = books_per_day * days\nans = total_books"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "Mrs. Hilt saw 2 dogs and 2 chickens. How many animal legs did she see?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\ndogs = 2\nchickens = 2\ndog_legs = dogs * 4\nchicken_legs = chickens * 2\ntotal_legs = dog_legs + chicken_legs\nans = total_legs",
            "# Python code, return ans\ndog_legs = 2 * 4\nchicken_legs = 2 * 2\ntotal_legs = dog_legs + chicken_legs\nans = total_legs",
            "# Python code, return ans\ndog_legs = 2 * 4\nchicken_legs = 2 * 2\ntotal_legs = dog_legs + chicken_legs\nans = total_legs"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Mrs. Hilt saw 3 bugs eat two flowers each. How many flowers total did the bugs eat?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nbugs = 3\nflowers_each = 2\ntotal_flowers_eaten = bugs * flowers_each\nans = total_flowers_eaten",
            "# Python code, return ans\nbugs = 3\nflowers_each = 2\ntotal_flowers_eaten = bugs * flowers_each\nans = total_flowers_eaten",
            "# Python code, return ans\nbugs = 3\nflowers_per_bug = 2\ntotal_flowers_eaten = bugs * flowers_per_bug\nans = total_flowers_eaten"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Mrs. Hilt has 15 friends. She can only take 8 of her friends to the movies. How many friends can't go to the movies?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ntotal_friends = 15\nfriends_going_to_movies = 8\nfriends_not_going = total_friends - friends_going_to_movies\nans = friends_not_going",
            "# Python code, return ans\ntotal_friends = 15\nfriends_going_to_movies = 8\nfriends_not_going = total_friends - friends_going_to_movies\nans = friends_not_going",
            "# Python code, return ans\ntotal_friends = 15\nfriends_going_to_movies = 8\nfriends_not_going_to_movies = total_friends - friends_going_to_movies\nans = friends_not_going_to_movies"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Mrs. Hilt ran 3 miles on Monday, 2 miles on Wednesday, and 7 miles on Friday. How many total miles did she run that week?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nmiles_Monday = 3\nmiles_Wednesday = 2\nmiles_Friday = 7\ntotal_miles = miles_Monday + miles_Wednesday + miles_Friday\nans = total_miles",
            "# Python code, return ans\nmiles_on_Monday = 3\nmiles_on_Wednesday = 2\nmiles_on_Friday = 7\ntotal_miles = miles_on_Monday + miles_on_Wednesday + miles_on_Friday\nans = total_miles",
            "# Python code, return ans\nmiles_Monday = 3\nmiles_Wednesday = 2\nmiles_Friday = 7\ntotal_miles = miles_Monday + miles_Wednesday + miles_Friday\nans = total_miles"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Mrs. Hilt picked up a book that has 17 pages in it. She read 11 of the pages. How many pages did she have left to read?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ntotal_pages = 17\npages_read = 11\npages_left = total_pages - pages_read\nans = pages_left",
            "# Python code, return ans\ntotal_pages = 17\npages_read = 11\npages_left = total_pages - pages_read\nans = pages_left",
            "# Python code, return ans\ntotal_pages = 17\npages_read = 11\npages_left = total_pages - pages_read\nans = pages_left"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Mrs. Hilt had 15 cents. She bought a pencil for 11 cents. How much money did she have left?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ninitial_money = 15\npencil_cost = 11\nmoney_left = initial_money - pencil_cost\nans = money_left",
            "# Python code, return ans\ninitial_money = 15\npencil_cost = 11\nmoney_left = initial_money - pencil_cost\nans = money_left",
            "# Python code, return ans\ninitial_money = 15\npencil_cost = 11\nmoney_left = initial_money - pencil_cost\nans = money_left"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Mrs. Hilt met 15 friends. Nine of the friends were carrying pears. The rest were carrying oranges. How many friends were carrying oranges?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ntotal_friends = 15\nfriends_with_pears = 9\nfriends_with_oranges = total_friends - friends_with_pears\nans = friends_with_oranges",
            "# Python code, return ans\ntotal_friends = 15\nfriends_with_pears = 9\nfriends_with_oranges = total_friends - friends_with_pears\nans = friends_with_oranges",
            "# Python code, return ans\ntotal_friends = 15\nfriends_with_pears = 9\nfriends_with_oranges = total_friends - friends_with_pears\nans = friends_with_oranges"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Mrs. Hilt spent 25 cents on one caramel apple and 15 cents on one ice cream cone. How much more did the apple cost?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\ncaramel_apple_cost = 25\nice_cream_cone_cost = 15\ncost_difference = caramel_apple_cost - ice_cream_cone_cost\nans = cost_difference",
            "# Python code, return ans\ncaramel_apple_cost = 25\nice_cream_cone_cost = 15\ncost_difference = caramel_apple_cost - ice_cream_cone_cost\nans = cost_difference",
            "# Python code, return ans\ncaramel_apple_cost = 25\nice_cream_cone_cost = 15\ncost_difference = caramel_apple_cost - ice_cream_cone_cost\nans = cost_difference"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "Mrs. Hilt bought 2 pizzas. Each pizza had 8 slices. How many total slices of pizza did she have?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\npizzas = 2\nslices_per_pizza = 8\ntotal_slices = pizzas * slices_per_pizza\nans = total_slices",
            "# Python code, return ans\npizza_num = 2\nslices_per_pizza = 8\ntotal_slices = pizza_num * slices_per_pizza\nans = total_slices",
            "# Python code, return ans\npizzas = 2\nslices_per_pizza = 8\ntotal_slices = pizzas * slices_per_pizza\nans = total_slices"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "Mrs. Hilt read 2 books per day. How many books did she read in one week?",
        "answer": 14,
        "generated": [
            "# Python code, return ans\nbooks_per_day = 2\ndays_in_week = 7\ntotal_books_read = books_per_day * days_in_week\nans = total_books_read",
            "# Python code, return ans\nbooks_per_day = 2\ndays_in_week = 7\ntotal_books = books_per_day * days_in_week\nans = total_books",
            "# Python code, return ans\nbooks_per_day = 2\ndays_in_week = 7\nbooks_in_week = books_per_day * days_in_week\nans = books_in_week"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "Mrs. Hilt ate 5 apples every hour. How many apples had she eaten at the end of 3 hours?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\napples_per_hour = 5\nhours = 3\ntotal_apples_eaten = apples_per_hour * hours\nans = total_apples_eaten",
            "# Python code, return ans\napples_per_hour = 5\nhours = 3\ntotal_apples_eaten = apples_per_hour * hours\nans = total_apples_eaten",
            "# Python code, return ans\napples_per_hour = 5\nhours = 3\ntotal_apples_eaten = apples_per_hour * hours\nans = total_apples_eaten"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "Mrs. Hilt gave 2 pieces of candy to each student in the group. The group had a total of 9 students in it. How many pieces of candy did Mrs. Hilt give away?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\ncandy_per_student = 2\nstudent_num = 9\ntotal_candy_given = candy_per_student * student_num\nans = total_candy_given",
            "# Python code, return ans\ncandy_per_student = 2\ntotal_students = 9\ntotal_candy_given = candy_per_student * total_students\nans = total_candy_given",
            "# Python code, return ans\ncandy_per_student = 2\nstudent_num = 9\ntotal_candy_given = candy_per_student * student_num\nans = total_candy_given"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "Mary's mom is getting ready for Mary's birthday party. She blew up 6 balloons this morning and 5 balloons this afternoon. How many balloons did she blow up in all?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\nballoons_morning = 6\nballoons_afternoon = 5\ntotal_balloons = balloons_morning + balloons_afternoon\nans = total_balloons",
            "# Python code, return ans\nballoons_morning = 6\nballoons_afternoon = 5\ntotal_balloons = balloons_morning + balloons_afternoon\nans = total_balloons",
            "# Python code, return ans\nballoons_morning = 6\nballoons_afternoon = 5\ntotal_balloons = balloons_morning + balloons_afternoon\nans = total_balloons"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "Shelby's teacher gives out gold stars for great math work. Yesterday, Shelby earned 4 gold stars. Today, she earned 3 more. How many gold stars did Shelby earn in all?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ngold_stars_yesterday = 4\ngold_stars_today = 3\ntotal_gold_stars = gold_stars_yesterday + gold_stars_today\nans = total_gold_stars",
            "# Python code, return ans\ngold_stars_yesterday = 4\ngold_stars_today = 3\ntotal_gold_stars = gold_stars_yesterday + gold_stars_today\nans = total_gold_stars",
            "# Python code, return ans\ngold_stars_yesterday = 4\ngold_stars_today = 3\ntotal_gold_stars = gold_stars_yesterday + gold_stars_today\nans = total_gold_stars"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "The Litter Patrol picked up 10 glass bottles and 8 aluminum cans on Saturday. How many pieces of litter did they pick up altogether?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\nglass_bottles = 10\naluminum_cans = 8\ntotal_litter = glass_bottles + aluminum_cans\nans = total_litter",
            "# Python code, return ans\nglass_bottles = 10\naluminum_cans = 8\ntotal_litter = glass_bottles + aluminum_cans\nans = total_litter",
            "# Python code, return ans\nglass_bottles = 10\naluminum_cans = 8\ntotal_litter = glass_bottles + aluminum_cans\nans = total_litter"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "Millie had 9 bracelets. She lost 2 of them. How many bracelets does Millie have left?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ninitial_bracelets = 9\nlost_bracelets = 2\nremaining_bracelets = initial_bracelets - lost_bracelets\nans = remaining_bracelets",
            "# Python code, return ans\ninitial_bracelets = 9\nlost_bracelets = 2\nremaining_bracelets = initial_bracelets - lost_bracelets\nans = remaining_bracelets",
            "# Python code, return ans\nbracelets_total = 9\nbracelets_lost = 2\nbracelets_left = bracelets_total - bracelets_lost\nans = bracelets_left"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Sammy has 9 math problems to do for homework. He has already finished 2 of them. How many math problems does Sammy have left?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ntotal_problems = 9\nfinished_problems = 2\nproblems_left = total_problems - finished_problems\nans = problems_left",
            "# Python code, return ans\ntotal_problems = 9\nfinished_problems = 2\nproblems_left = total_problems - finished_problems\nans = problems_left",
            "# Python code, return ans\ntotal_problems = 9\nfinished_problems = 2\nproblems_left = total_problems - finished_problems\nans = problems_left"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "There were 10 students riding on the school bus. At the first stop, 3 students got off of the bus. How many students are left on the bus?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nstudents_initial = 10\nstudents_got_off = 3\nstudents_left = students_initial - students_got_off\nans = students_left",
            "# Python code, return ans\nstudents_on_bus = 10\nstudents_off_bus = 3\nstudents_left_on_bus = students_on_bus - students_off_bus\nans = students_left_on_bus",
            "# Python code, return ans\nstudents_on_bus = 10\nstudents_got_off = 3\nstudents_left_on_bus = students_on_bus - students_got_off\nans = students_left_on_bus"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "There were 8 ducks swimming in the pond. 3 ducks flew away. How many ducks are still swimming in the pond?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nducks_initial = 8\nducks_flew_away = 3\nducks_remaining = ducks_initial - ducks_flew_away\nans = ducks_remaining",
            "# Python code, return ans\nducks_in_pond = 8\nducks_flew_away = 3\nducks_still_in_pond = ducks_in_pond - ducks_flew_away\nans = ducks_still_in_pond",
            "# Python code, return ans\nducks_initial = 8\nducks_flew_away = 3\nducks_remaining = ducks_initial - ducks_flew_away\nans = ducks_remaining"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Lucy went to the grocery store. She bought 12 packs of cookies and 16 packs of noodles. How many packs of groceries did she buy in all?",
        "answer": 28,
        "generated": [
            "# Python code, return ans\npacks_of_cookies = 12\npacks_of_noodles = 16\ntotal_packs = packs_of_cookies + packs_of_noodles\nans = total_packs",
            "# Python code, return ans\ncookie_packs = 12\nnoodle_packs = 16\ntotal_packs = cookie_packs + noodle_packs\nans = total_packs",
            "# Python code, return ans\npacks_of_cookies = 12\npacks_of_noodles = 16\ntotal_packs = packs_of_cookies + packs_of_noodles\nans = total_packs"
        ],
        "results": [
            28.0,
            28.0,
            28.0
        ],
        "result_counter": {
            "28.0": 3
        },
        "prediction": 28.0
    },
    {
        "question": "Roden went to a pet shop. He bought 15 gold fish and 7 blue fish. How many fish did he buy?",
        "answer": 22,
        "generated": [
            "# Python code, return ans\ngold_fish = 15\nblue_fish = 7\ntotal_fish = gold_fish + blue_fish\nans = total_fish",
            "# Python code, return ans\ngold_fish = 15\nblue_fish = 7\ntotal_fish = gold_fish + blue_fish\nans = total_fish",
            "# Python code, return ans\ngold_fish = 15\nblue_fish = 7\ntotal_fish = gold_fish + blue_fish\nans = total_fish"
        ],
        "results": [
            22.0,
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 3
        },
        "prediction": 22.0
    },
    {
        "question": "I read 21 pages of my English book yesterday. Today, I read 17 pages. What is the total number of pages did I read?",
        "answer": 38,
        "generated": [
            "# Python code, return ans\npages_read_yesterday = 21\npages_read_today = 17\ntotal_pages_read = pages_read_yesterday + pages_read_today\nans = total_pages_read",
            "# Python code, return ans\npages_read_yesterday = 21\npages_read_today = 17\ntotal_pages_read = pages_read_yesterday + pages_read_today\nans = total_pages_read",
            "# Python code, return ans\npages_read_yesterday = 21\npages_read_today = 17\ntotal_pages_read = pages_read_yesterday + pages_read_today\nans = total_pages_read"
        ],
        "results": [
            38.0,
            38.0,
            38.0
        ],
        "result_counter": {
            "38.0": 3
        },
        "prediction": 38.0
    },
    {
        "question": "In a school, there are 542 girls and 387 boys. How many pupils are there in that school?",
        "answer": 929,
        "generated": [
            "# Python code, return ans\ngirls = 542\nboys = 387\ntotal_pupils = girls + boys\nans = total_pupils",
            "# Python code, return ans\ngirls = 542\nboys = 387\ntotal_pupils = girls + boys\nans = total_pupils",
            "# Python code, return ans\ngirls = 542\nboys = 387\ntotal_pupils = girls + boys\nans = total_pupils"
        ],
        "results": [
            929.0,
            929.0,
            929.0
        ],
        "result_counter": {
            "929.0": 3
        },
        "prediction": 929.0
    },
    {
        "question": "Linda has 34 candies. Chloe has 28. How many candies do they have in all?",
        "answer": 62,
        "generated": [
            "# Python code, return ans\nLinda_candies = 34\nChloe_candies = 28\ntotal_candies = Linda_candies + Chloe_candies\nans = total_candies",
            "# Python code, return ans\nLinda_candies = 34\nChloe_candies = 28\ntotal_candies = Linda_candies + Chloe_candies\nans = total_candies",
            "# Python code, return ans\nLinda_candies = 34\nChloe_candies = 28\ntotal_candies = Linda_candies + Chloe_candies\nans = total_candies"
        ],
        "results": [
            62.0,
            62.0,
            62.0
        ],
        "result_counter": {
            "62.0": 3
        },
        "prediction": 62.0
    },
    {
        "question": "Jose has 28 chickens and 18 ducks. How many fowls does he have?",
        "answer": 46,
        "generated": [
            "# Python code, return ans\nchickens = 28\nducks = 18\ntotal_fowls = chickens + ducks\nans = total_fowls",
            "# Python code, return ans\nchickens = 28\nducks = 18\ntotal_fowls = chickens + ducks\nans = total_fowls",
            "# Python code, return ans\nchickens = 28\nducks = 18\ntotal_fowls = chickens + ducks\nans = total_fowls"
        ],
        "results": [
            46.0,
            46.0,
            46.0
        ],
        "result_counter": {
            "46.0": 3
        },
        "prediction": 46.0
    },
    {
        "question": "Gino has 63 popsicle sticks. I have 50 popsicle sticks. What is the sum of our popsicle sticks?",
        "answer": 113,
        "generated": [
            "# Python code, return ans\nGino_sticks = 63\nmy_sticks = 50\ntotal_sticks = Gino_sticks + my_sticks\nans = total_sticks",
            "# Python code, return ans\nGino_sticks = 63\nmy_sticks = 50\ntotal_sticks = Gino_sticks + my_sticks\nans = total_sticks",
            "# Python code, return ans\nGino_sticks = 63\nmy_sticks = 50\ntotal_sticks = Gino_sticks + my_sticks\nans = total_sticks"
        ],
        "results": [
            113.0,
            113.0,
            113.0
        ],
        "result_counter": {
            "113.0": 3
        },
        "prediction": 113.0
    },
    {
        "question": "Lino picked up 292 shells at the seashore in the morning and 324 shells in the afternoon. How many shells did he pick up in all?",
        "answer": 616,
        "generated": [
            "# Python code, return ans\nshell_morning = 292\nshell_afternoon = 324\ntotal_shell = shell_morning + shell_afternoon\nans = total_shell\nans",
            "# Python code, return ans\nshell_morning = 292\nshell_afternoon = 324\ntotal_shell = shell_morning + shell_afternoon\nans = total_shell\nans",
            "# Python code, return ans\nshell_morning = 292\nshell_afternoon = 324\ntotal_shell = shell_morning + shell_afternoon\nans = total_shell\nans"
        ],
        "results": [
            616.0,
            616.0,
            616.0
        ],
        "result_counter": {
            "616.0": 3
        },
        "prediction": 616.0
    },
    {
        "question": "There were 105 parents in the program and 698 pupils, too. How many people were present in the program?",
        "answer": 803,
        "generated": [
            "# Python code, return ans\nparents = 105\npupils = 698\ntotal_people = parents + pupils\nans = total_people",
            "# Python code, return ans\nparents = 105\npupils = 698\ntotal_people = parents + pupils\nans = total_people",
            "# Python code, return ans\nparents = 105\npupils = 698\ntotal_people = parents + pupils\nans = total_people"
        ],
        "results": [
            803.0,
            803.0,
            803.0
        ],
        "result_counter": {
            "803.0": 3
        },
        "prediction": 803.0
    },
    {
        "question": "Last Saturday, Marie sold 425 magazines and 275 newspapers. What is the total number of reading materials she sold?",
        "answer": 700,
        "generated": [
            "# Python code, return ans\nmagazines_sold = 425\nnewspapers_sold = 275\ntotal_reading_materials = magazines_sold + newspapers_sold\nans = total_reading_materials",
            "# Python code, return ans\nmagazines_sold = 425\nnewspapers_sold = 275\ntotal_reading_materials_sold = magazines_sold + newspapers_sold\nans = total_reading_materials_sold",
            "# Python code, return ans\nmagazines_sold = 425\nnewspapers_sold = 275\ntotal_reading_materials_sold = magazines_sold + newspapers_sold\nans = total_reading_materials_sold"
        ],
        "results": [
            700.0,
            700.0,
            700.0
        ],
        "result_counter": {
            "700.0": 3
        },
        "prediction": 700.0
    },
    {
        "question": "There are twelve birds on the fence. Eight more birds land on the fence. How many birds are on the fence?",
        "answer": 20,
        "generated": [
            "# Python code, return ans\nbirds_initial = 12\nbirds_landed = 8\ntotal_birds = birds_initial + birds_landed\nans = total_birds",
            "# Python code, return ans\nbirds_initial = 12\nbirds_landed = 8\ntotal_birds = birds_initial + birds_landed\nans = total_birds",
            "# Python code, return ans\nbirds_on_fence = 12\nbirds_landed = 8\ntotal_birds = birds_on_fence + birds_landed\nans = total_birds"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "Twenty-two boys went down the slide. Thirteen more boys went down the slide. How many boys went down the slide?",
        "answer": 35,
        "generated": [
            "# Python code, return ans\nboys_first_group = 22\nboys_second_group = 13\ntotal_boys = boys_first_group + boys_second_group\nans = total_boys",
            "# Python code, return ans\nboys_first = 22\nboys_second = 13\ntotal_boys = boys_first + boys_second\nans = total_boys",
            "# Python code, return ans\nboys_first = 22\nboys_second = 13\ntotal_boys = boys_first + boys_second\nans = total_boys"
        ],
        "results": [
            35.0,
            35.0,
            35.0
        ],
        "result_counter": {
            "35.0": 3
        },
        "prediction": 35.0
    },
    {
        "question": "Thirteen ducks are swimming in a lake. Twenty more ducks come to join them. How many ducks are swimming in the lake?",
        "answer": 33,
        "generated": [
            "# Python code, return ans\ninitial_ducks = 13\nnew_ducks = 20\ntotal_ducks = initial_ducks + new_ducks\nans = total_ducks",
            "# Python code, return ans\ninitial_ducks = 13\nnew_ducks = 20\ntotal_ducks = initial_ducks + new_ducks\nans = total_ducks",
            "# Python code, return ans\ninitial_ducks = 13\nadditional_ducks = 20\ntotal_ducks = initial_ducks + additional_ducks\nans = total_ducks"
        ],
        "results": [
            33.0,
            33.0,
            33.0
        ],
        "result_counter": {
            "33.0": 3
        },
        "prediction": 33.0
    },
    {
        "question": "Thirty dogs are barking. Ten more dogs start to bark. How many dogs are barking?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\ninitial_barking_dogs = 30\nadditional_barking_dogs = 10\ntotal_barking_dogs = initial_barking_dogs + additional_barking_dogs\nans = total_barking_dogs",
            "# Python code, return ans\ninitial_dogs_barking = 30\nadditional_dogs_barking = 10\ntotal_dogs_barking = initial_dogs_barking + additional_dogs_barking\nans = total_dogs_barking",
            "# Python code, return ans\ndogs_barking_initially = 30\nadditional_dogs_barking = 10\ntotal_dogs_barking = dogs_barking_initially + additional_dogs_barking\nans = total_dogs_barking"
        ],
        "results": [
            40.0,
            40.0,
            40.0
        ],
        "result_counter": {
            "40.0": 3
        },
        "prediction": 40.0
    },
    {
        "question": "Bobby ate twenty-six pieces of candy. Then, he ate seventeen more. How many pieces of candy did Bobby eat?",
        "answer": 43,
        "generated": [
            "# Python code, return ans\ncandy_eaten_first = 26\ncandy_eaten_second = 17\ntotal_candy_eaten = candy_eaten_first + candy_eaten_second\nans = total_candy_eaten",
            "# Python code, return ans\ncandy_first = 26\ncandy_second = 17\ntotal_candy = candy_first + candy_second\nans = total_candy",
            "# Python code, return ans\ncandy_eaten_first = 26\ncandy_eaten_second = 17\ntotal_candy_eaten = candy_eaten_first + candy_eaten_second\nans = total_candy_eaten"
        ],
        "results": [
            43.0,
            43.0,
            43.0
        ],
        "result_counter": {
            "43.0": 3
        },
        "prediction": 43.0
    },
    {
        "question": "Sandy had twenty-six pet fish. She bought six more fish. How many pet fish does Sandy have now?",
        "answer": 32,
        "generated": [
            "# Python code, return ans\ninitial_fish = 26\nbought_fish = 6\ntotal_fish = initial_fish + bought_fish\nans = total_fish",
            "# Python code, return ans\ninitial_fish = 26\nbought_fish = 6\ntotal_fish = initial_fish + bought_fish\nans = total_fish",
            "# Python code, return ans\ninitial_fish = 26\nfish_bought = 6\ntotal_fish = initial_fish + fish_bought\nans = total_fish"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "The clown blew up forty-seven balloons. Then he blew up thirteen more balloons. How many balloons does the clown have now?",
        "answer": 60,
        "generated": [
            "# Python code, return ans\nballoons_first = 47\nballoons_second = 13\ntotal_balloons = balloons_first + balloons_second\nans = total_balloons",
            "# Python code, return ans\nballoons_initial = 47\nballoons_additional = 13\ntotal_balloons = balloons_initial + balloons_additional\nans = total_balloons",
            "# Python code, return ans\nballoons_first = 47\nballoons_second = 13\ntotal_balloons = balloons_first + balloons_second\nans = total_balloons"
        ],
        "results": [
            60.0,
            60.0,
            60.0
        ],
        "result_counter": {
            "60.0": 3
        },
        "prediction": 60.0
    },
    {
        "question": "Our class got fifty-four books from the library. Then we got twenty-three more books from the library. How many books did our class get from the library?",
        "answer": 77,
        "generated": [
            "# Python code, return ans\ninitial_books = 54\nadditional_books = 23\ntotal_books = initial_books + additional_books\nans = total_books",
            "# Python code, return ans\ninitial_books = 54\nadditional_books = 23\ntotal_books = initial_books + additional_books\nans = total_books",
            "# Python code, return ans\ninitial_books = 54\nadditional_books = 23\ntotal_books = initial_books + additional_books\nans = total_books"
        ],
        "results": [
            77.0,
            77.0,
            77.0
        ],
        "result_counter": {
            "77.0": 3
        },
        "prediction": 77.0
    },
    {
        "question": "Julia played tag with 12 kids on Monday. She played tag with 7 kids on Tuesday. How many kids did she play with altogether?",
        "answer": 19,
        "generated": [
            "# Python code, return ans\nplayed_on_Monday = 12\nplayed_on_Tuesday = 7\ntotal_played = played_on_Monday + played_on_Tuesday\nans = total_played",
            "# Python code, return ans\nplayed_on_Monday = 12\nplayed_on_Tuesday = 7\ntotal_played = played_on_Monday + played_on_Tuesday\nans = total_played",
            "# Python code, return ans\nplayed_on_Monday = 12\nplayed_on_Tuesday = 7\ntotal_played = played_on_Monday + played_on_Tuesday\nans = total_played"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "Molly had 14 candles on her birthday cake. She grew older and got 6 more on her birthday cake. How old is Molly now?",
        "answer": 20,
        "generated": [
            "# Python code, return ans\ninitial_candles = 14\nadditional_candles = 6\ncurrent_candles = initial_candles + additional_candles\nans = current_candles",
            "# Python code, return ans\ninitial_candles = 14\nadditional_candles = 6\nMolly_age = initial_candles + additional_candles\nans = Molly_age",
            "# Python code, return ans\ninitial_candles = 14\nadditional_candles = 6\ncurrent_age = initial_candles + additional_candles\nans = current_age"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "James ate 22 carrot sticks before dinner and 15 more after dinner. How many carrot sticks did he eat?",
        "answer": 37,
        "generated": [
            "# Python code, return ans\ncarrot_before_dinner = 22\ncarrot_after_dinner = 15\ntotal_carrot = carrot_before_dinner + carrot_after_dinner\nans = total_carrot",
            "# Python code, return ans\ncarrot_before_dinner = 22\ncarrot_after_dinner = 15\ntotal_carrot = carrot_before_dinner + carrot_after_dinner\nans = total_carrot",
            "# Python code, return ans\ncarrot_before_dinner = 22\ncarrot_after_dinner = 15\ntotal_carrot = carrot_before_dinner + carrot_after_dinner\nans = total_carrot"
        ],
        "results": [
            37.0,
            37.0,
            37.0
        ],
        "result_counter": {
            "37.0": 3
        },
        "prediction": 37.0
    },
    {
        "question": "Charles found 6 pennies on his way to school. He also had 3 nickels already at home. How much money does he now have in all?",
        "answer": 21,
        "generated": [
            "# Python code, return ans\npennies = 6\nnickels = 3\npenny_value = 0.01\nnickel_value = 0.05\ntotal_money = (pennies * penny_value) + (nickels * nickel_value)\nans = total_money",
            "# Python code, return ans\npennies = 6\npennies_value = pennies * 0.01\nnickels = 3\nnickels_value = nickels * 0.05\ntotal_money = pennies_value + nickels_value\nans = total_money",
            "# Python code, return ans\npennies = 6\nnickels = 3\npenny_value = 0.01\nnickel_value = 0.05\ntotal_money = (pennies * penny_value) + (nickels * nickel_value)\nans = total_money"
        ],
        "results": [
            0.21000000000000002,
            0.21000000000000002,
            0.21000000000000002
        ],
        "result_counter": {
            "0.21000000000000002": 3
        },
        "prediction": 0.21000000000000002
    },
    {
        "question": "Jovana filled her bucket with 5 pounds of shells. If she adds 12 more pounds of shell to fill her bucket, how many pounds does she have?",
        "answer": 17,
        "generated": [
            "# Python code, return ans\ninitial_shells = 5\nadded_shells = 12\ntotal_shells = initial_shells + added_shells\nans = total_shells",
            "# Python code, return ans\ninitial_shells = 5\nadditional_shells = 12\ntotal_shells = initial_shells + additional_shells\nans = total_shells",
            "# Python code, return ans\ninitial_shells = 5\nadded_shells = 12\ntotal_shells = initial_shells + added_shells\nans = total_shells"
        ],
        "results": [
            17.0,
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 3
        },
        "prediction": 17.0
    },
    {
        "question": "Jovana filled her bucket with 5 pounds of shells. If a friend comes to add 15 pounds of shells, and another friend comes to add 17 pounds of shells, how many pounds does she have altogether?",
        "answer": 37,
        "generated": [
            "# Python code, return ans\ninitial_shells = 5\nfriend1_shells = 15\nfriend2_shells = 17\ntotal_shells = initial_shells + friend1_shells + friend2_shells\nans = total_shells",
            "# Python code, return ans\ninitial_shells = 5\nfriend1_shells = 15\nfriend2_shells = 17\ntotal_shells = initial_shells + friend1_shells + friend2_shells\nans = total_shells",
            "# Python code, return ans\ninitial_shells = 5\nfriend1_shells = 15\nfriend2_shells = 17\ntotal_shells = initial_shells + friend1_shells + friend2_shells\nans = total_shells"
        ],
        "results": [
            37.0,
            37.0,
            37.0
        ],
        "result_counter": {
            "37.0": 3
        },
        "prediction": 37.0
    },
    {
        "question": "Isha's pencil is 12 cubes long. If she gets another pencil that is 12 cubes long, how many cubes long are both pencils?",
        "answer": 24,
        "generated": [
            "# Python code, return ans\nIsha_pencil1 = 12\nIsha_pencil2 = 12\ntotal_length = Isha_pencil1 + Isha_pencil2\nans = total_length",
            "# Python code, return ans\nIsha_pencil1 = 12\nIsha_pencil2 = 12\ntotal_length = Isha_pencil1 + Isha_pencil2\nans = total_length",
            "# Python code, return ans\nIsha_pencil_1 = 12\nIsha_pencil_2 = 12\ntotal_cubes = Isha_pencil_1 + Isha_pencil_2\nans = total_cubes"
        ],
        "results": [
            24.0,
            24.0,
            24.0
        ],
        "result_counter": {
            "24.0": 3
        },
        "prediction": 24.0
    },
    {
        "question": "Isabella's hair is 18 cubes long. She gets hair extensions and it doubles her length. How much hair does she have now?",
        "answer": 36,
        "generated": [
            "# Python code, return ans\nIsabella_hair_length = 18\nhair_extensions = Isabella_hair_length * 2\nans = hair_extensions",
            "# Python code, return ans\nIsabella_hair_length = 18\nhair_extensions = Isabella_hair_length * 2\nans = hair_extensions",
            "# Python code, return ans\nIsabella_hair_length = 18\nhair_extensions = Isabella_hair_length * 2\nans = hair_extensions\n"
        ],
        "results": [
            36.0,
            36.0,
            36.0
        ],
        "result_counter": {
            "36.0": 3
        },
        "prediction": 36.0
    },
    {
        "question": "Isabella's hair is 18 cubes long. If her hair grows 4 more inches, how long will it be?",
        "answer": 22,
        "generated": [
            "# Python code, return ans\nIsabella_hair_current = 18\nhair_growth = 4\nIsabella_hair_new = Isabella_hair_current + hair_growth\nans = Isabella_hair_new",
            "# Python code, return ans\nIsabella_hair_length = 18\nhair_growth = 4\nnew_hair_length = Isabella_hair_length + hair_growth\nans = new_hair_length",
            "# Python code, return ans\nIsabella_hair_length = 18\nhair_growth = 4\nnew_hair_length = Isabella_hair_length + hair_growth\nans = new_hair_length"
        ],
        "results": [
            22.0,
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 3
        },
        "prediction": 22.0
    },
    {
        "question": "Mrs. Sheridan has 17 cats. Mr. Sheridan gave her 14 more cats. How many cats does Mrs. Sheridan have altogether?",
        "answer": 31,
        "generated": [
            "# Python code, return ans\ninitial_cats = 17\nadditional_cats = 14\ntotal_cats = initial_cats + additional_cats\nans = total_cats",
            "# Python code, return ans\ninitial_cats = 17\nadditional_cats = 14\ntotal_cats = initial_cats + additional_cats\nans = total_cats",
            "# Python code, return ans\ninitial_cats = 17\nadditional_cats = 14\ntotal_cats = initial_cats + additional_cats\nans = total_cats"
        ],
        "results": [
            31.0,
            31.0,
            31.0
        ],
        "result_counter": {
            "31.0": 3
        },
        "prediction": 31.0
    },
    {
        "question": "Mrs. Sheridan has 22 fish. Her sister gave her 47 more fish. How many fish does she have now?",
        "answer": 69,
        "generated": [
            "# Python code, return ans\ninitial_fish = 22\nadditional_fish = 47\ntotal_fish = initial_fish + additional_fish\nans = total_fish",
            "# Python code, return ans\ninitial_fish = 22\nfish_from_sister = 47\ntotal_fish = initial_fish + fish_from_sister\nans = total_fish",
            "# Python code, return ans\ninitial_fish = 22\nadditional_fish = 47\ntotal_fish = initial_fish + additional_fish\nans = total_fish"
        ],
        "results": [
            69.0,
            69.0,
            69.0
        ],
        "result_counter": {
            "69.0": 3
        },
        "prediction": 69.0
    },
    {
        "question": "Mrs. Heine is buying Valentine's Day treats for her 2 dogs. If she wants to buy them 3 heart biscuits each, how many biscuits does she need to buy?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ndogs = 2\nheart_biscuits_each = 3\ntotal_biscuits = dogs * heart_biscuits_each\nans = total_biscuits",
            "# Python code, return ans\ndogs = 2\nbiscuits_each = 3\ntotal_biscuits = dogs * biscuits_each\nans = total_biscuits",
            "# Python code, return ans\ndogs = 2\nheart_biscuits_each = 3\ntotal_biscuits = dogs * heart_biscuits_each\nans = total_biscuits"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Mrs. Heine is buying Valentine's Day treats for her 2 dogs. If she wants to buy them 5 heart biscuits each and a set of puppy boots each, how many items will she buy?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\ndogs = 2\nheart_biscuits_each = 5\npuppy_boots_each = 1\ntotal_items = (heart_biscuits_each + puppy_boots_each) * dogs\nans = total_items",
            "# Python code, return ans\ndogs = 2\nheart_biscuits_each = 5\npuppy_boots_each = 1\ntotal_items = (heart_biscuits_each + puppy_boots_each) * dogs\nans = total_items",
            "# Python code, return ans\ndogs = 2\nheart_biscuits_each = 5\npuppy_boots_each = 1\ntotal_items = (heart_biscuits_each + puppy_boots_each) * dogs\nans = total_items"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Cade had 87 marbles. He gave 8 to Dylan. How many does he have left?",
        "answer": 79,
        "generated": [
            "# Python code, return ans\ninitial_marbles = 87\nmarbles_given = 8\nremaining_marbles = initial_marbles - marbles_given\nans = remaining_marbles",
            "# Python code, return ans\nmarbles_initial = 87\nmarbles_given = 8\nmarbles_left = marbles_initial - marbles_given\nans = marbles_left",
            "# Python code, return ans\ninitial_marbles = 87\nmarbles_given = 8\nremaining_marbles = initial_marbles - marbles_given\nans = remaining_marbles"
        ],
        "results": [
            79.0,
            79.0,
            79.0
        ],
        "result_counter": {
            "79.0": 3
        },
        "prediction": 79.0
    },
    {
        "question": "Michael has some fish in his fish tank. Ben gave him 18 more fish. Now he has 49. How many fish did he have to begin with?",
        "answer": 31,
        "generated": [
            "# Python code, return ans\nfish_after_Ben_gave = 49\nfish_given_by_Ben = 18\ninitial_fish = fish_after_Ben_gave - fish_given_by_Ben\nans = initial_fish",
            "# Python code, return ans\nfish_after_given = 49\nfish_given = 18\ninitial_fish = fish_after_given - fish_given\nans = initial_fish",
            "# Python code, return ans\ntotal_fish = 49\nfish_given_by_Ben = 18\ninitial_fish = total_fish - fish_given_by_Ben\nans = initial_fish"
        ],
        "results": [
            31.0,
            31.0,
            31.0
        ],
        "result_counter": {
            "31.0": 3
        },
        "prediction": 31.0
    },
    {
        "question": "Daniel had some noodles. He gave 12 noodles to William. Now Daniel only has 54 noodles. How many noodles did Daniel have to begin with?",
        "answer": 66,
        "generated": [
            "# Python code, return ans\nnoodles_given = 12\nnoodles_left = 54\ninitial_noodles = noodles_given + noodles_left\nans = initial_noodles",
            "# Python code, return ans\nnoodles_given = 12\nnoodles_left = 54\ninitial_noodles = noodles_given + noodles_left\nans = initial_noodles",
            "# Python code, return ans\nnoodles_given = 12\nnoodles_left = 54\ninitial_noodles = noodles_given + noodles_left\nans = initial_noodles"
        ],
        "results": [
            66.0,
            66.0,
            66.0
        ],
        "result_counter": {
            "66.0": 3
        },
        "prediction": 66.0
    },
    {
        "question": "Hayley had 25 meatballs on her plate. Kirsten stole some of her meatballs. Now she has 11 meatballs on her plate. How many meatballs did Kirsten steal?",
        "answer": 14,
        "generated": [
            "# Python code, return ans\ninitial_meatballs = 25\nremaining_meatballs = 11\nstolen_meatballs = initial_meatballs - remaining_meatballs\nans = stolen_meatballs",
            "# Python code, return ans\ninitial_meatballs = 25\nremaining_meatballs = 11\nstolen_meatballs = initial_meatballs - remaining_meatballs\nans = stolen_meatballs",
            "# Python code, return ans\ninitial_meatballs = 25\nremaining_meatballs = 11\nmeatballs_stolen = initial_meatballs - remaining_meatballs\nans = meatballs_stolen"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "Isabella's hair is 18 inches long. If she gets a haircut and now her hair is 9 inches long, how much of Isabella's hair got cut off?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ninitial_length = 18\nfinal_length = 9\nhair_cut_off = initial_length - final_length\nans = hair_cut_off",
            "# Python code, return ans\ninitial_length = 18\nfinal_length = 9\nhair_cut = initial_length - final_length\nans = hair_cut",
            "# Python code, return ans\ninitial_hair_length = 18\nfinal_hair_length = 9\nhair_cut_off = initial_hair_length - final_hair_length\nans = hair_cut_off"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Isabella's hair is 18 inches long. By the end of the year her hair is 24 inches long. How much hair did she grow?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ninitial_length = 18\nfinal_length = 24\nhair_growth = final_length - initial_length\nans = hair_growth",
            "# Python code, return ans\ninitial_length = 18\nfinal_length = 24\nhair_growth = final_length - initial_length\nans = hair_growth",
            "# Python code, return ans\ninitial_length = 18\nfinal_length = 24\nhair_growth = final_length - initial_length\nans = hair_growth"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Jovana had 5 pounds of shells in her bucket. She added some shells and now has 28 pounds of shells. How many pounds did she add?",
        "answer": 23,
        "generated": [
            "# Python code, return ans\ninitial_shells = 5\nfinal_shells = 28\nshells_added = final_shells - initial_shells\nans = shells_added",
            "# Python code, return ans\ninitial_shells = 5\nfinal_shells = 28\nshells_added = final_shells - initial_shells\nans = shells_added",
            "# Python code, return ans\ninitial_shells = 5\nfinal_shells = 28\nadded_shells = final_shells - initial_shells\nans = added_shells"
        ],
        "results": [
            23.0,
            23.0,
            23.0
        ],
        "result_counter": {
            "23.0": 3
        },
        "prediction": 23.0
    },
    {
        "question": "Isha's pencil is 31 inches long. If she sharpens it, now her pencil is 14 inches long. How much did she sharpen off of her pencil?",
        "answer": 17,
        "generated": [
            "# Python code, return ans\npencil_before_sharpen = 31\npencil_after_sharpen = 14\nsharpened_amount = pencil_before_sharpen - pencil_after_sharpen\nans = sharpened_amount",
            "# Python code, return ans\npencil_original_length = 31\npencil_sharpened_length = 14\nsharpened_off = pencil_original_length - pencil_sharpened_length\nans = sharpened_off",
            "# Python code, return ans\npencil_before_sharpen = 31\npencil_after_sharpen = 14\nsharpened_amount = pencil_before_sharpen - pencil_after_sharpen\nans = sharpened_amount"
        ],
        "results": [
            17.0,
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 3
        },
        "prediction": 17.0
    },
    {
        "question": "Isha's pencil is 22 inches long. If she sharpens two inches off on Monday and two inches on Tuesday, how long will her pencil be then?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\npencil_length = 22\nsharpened_on_Monday = 2\nsharpened_on_Tuesday = 2\npencil_length_after_sharpening = pencil_length - (sharpened_on_Monday + sharpened_on_Tuesday)\nans = pencil_length_after_sharpening",
            "# Python code, return ans\npencil_length = 22\nsharpened_on_Monday = 2\nsharpened_on_Tuesday = 2\nremaining_length = pencil_length - sharpened_on_Monday - sharpened_on_Tuesday\nans = remaining_length",
            "# Python code, return ans\npencil_length = 22\nsharpened_on_Monday = 2\nsharpened_on_Tuesday = 2\npencil_length_after_sharpening = pencil_length - sharpened_on_Monday - sharpened_on_Tuesday\nans = pencil_length_after_sharpening"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "Mrs. Sheridan has 11 cats. How many more cats does Mrs. Sheridan need to have 43 cats?",
        "answer": 32,
        "generated": [
            "# Python code, return ans\ncurrent_cats = 11\ndesired_cats = 43\ncats_needed = desired_cats - current_cats\nans = cats_needed",
            "# Python code, return ans\ncurrent_cats = 11\ndesired_cats = 43\ncats_needed = desired_cats - current_cats\nans = cats_needed",
            "# Python code, return ans\ncurrent_cats = 11\ndesired_cats = 43\ncats_needed = desired_cats - current_cats\nans = cats_needed"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "Mrs. Wong had 30 Valentines. She gave 8 Valentines to her children. How many does she have left?",
        "answer": 22,
        "generated": [
            "# Python code, return ans\ninitial_valentines = 30\nvalentines_given = 8\nvalentines_left = initial_valentines - valentines_given\nans = valentines_left",
            "# Python code, return ans\nvalentines_total = 30\nvalentines_given = 8\nvalentines_left = valentines_total - valentines_given\nans = valentines_left",
            "# Python code, return ans\nMrs_Wong_valentines = 30\nvalentines_given = 8\nvalentines_left = Mrs_Wong_valentines - valentines_given\nans = valentines_left"
        ],
        "results": [
            22.0,
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 3
        },
        "prediction": 22.0
    },
    {
        "question": "Mrs. Franklin had 58 Valentines. Mrs. Franklin gave some to her students. Now she has 16. How many Valentines did Mrs. Franklin give to her students?",
        "answer": 42,
        "generated": [
            "# Python code, return ans\ninitial_valentines = 58\nremaining_valentines = 16\nvalentines_given = initial_valentines - remaining_valentines\nans = valentines_given",
            "# Python code, return ans\ninitial_valentines = 58\nremaining_valentines = 16\nvalentines_given = initial_valentines - remaining_valentines\nans = valentines_given",
            "# Python code, return ans\nMrs_Franklin_initial = 58\nMrs_Franklin_remaining = 16\nValentines_given = Mrs_Franklin_initial - Mrs_Franklin_remaining\nans = Valentines_given"
        ],
        "results": [
            42.0,
            42.0,
            42.0
        ],
        "result_counter": {
            "42.0": 3
        },
        "prediction": 42.0
    },
    {
        "question": "Mrs. Snyder made 86 heart cookies. She made 36 red cookies and the rest are pink. How many pink cookies did she make?",
        "answer": 50,
        "generated": [
            "# Python code, return ans\ntotal_cookies = 86\nred_cookies = 36\npink_cookies = total_cookies - red_cookies\nans = pink_cookies",
            "# Python code, return ans\ntotal_cookies = 86\nred_cookies = 36\npink_cookies = total_cookies - red_cookies\nans = pink_cookies",
            "# Python code, return ans\ntotal_cookies = 86\nred_cookies = 36\npink_cookies = total_cookies - red_cookies\nans = pink_cookies"
        ],
        "results": [
            50.0,
            50.0,
            50.0
        ],
        "result_counter": {
            "50.0": 3
        },
        "prediction": 50.0
    },
    {
        "question": "29 birds were sitting in a tree. Some more fly up to the tree. Then there were 42 birds in the tree. How many more flew up to the tree?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\ninitial_birds = 29\nfinal_birds = 42\nbirds_flew_up = final_birds - initial_birds\nans = birds_flew_up",
            "# Python code, return ans\ninitial_birds = 29\nfinal_birds = 42\nbirds_flew_up = final_birds - initial_birds\nans = birds_flew_up",
            "# Python code, return ans\nbirds_initial = 29\nbirds_final = 42\nbirds_flew_up = birds_final - birds_initial\nans = birds_flew_up"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "18 children were riding on the bus. At the bus stop, some more children got on the bus. Then there were 25 children altogether on the bus. How many children got on the bus at the bus stop?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ninitial_children = 18\ntotal_children = 25\nchildren_got_on = total_children - initial_children\nans = children_got_on",
            "# Python code, return ans\nchildren_on_bus = 18\ntotal_children = 25\nchildren_got_on_bus = total_children - children_on_bus\nans = children_got_on_bus",
            "# Python code, return ans\ninitial_children = 18\nfinal_children = 25\nchildren_got_on = final_children - initial_children\nans = children_got_on"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "There were 28 girls and 35 boys on the playground at recess. How many children were there in all?",
        "answer": 63,
        "generated": [
            "# Python code, return ans\ngirls = 28\nboys = 35\ntotal_children = girls + boys\nans = total_children",
            "# Python code, return ans\ngirls = 28\nboys = 35\ntotal_children = girls + boys\nans = total_children",
            "# Python code, return ans\ngirls = 28\nboys = 35\ntotal_children = girls + boys\nans = total_children"
        ],
        "results": [
            63.0,
            63.0,
            63.0
        ],
        "result_counter": {
            "63.0": 3
        },
        "prediction": 63.0
    },
    {
        "question": "The elephant had 407 peanuts. She ate 129 of them. How many peanuts did the elephant have left?",
        "answer": 278,
        "generated": [
            "# Python code, return ans\ntotal_peanuts = 407\npeanuts_eaten = 129\npeanuts_left = total_peanuts - peanuts_eaten\nans = peanuts_left",
            "# Python code, return ans\ninitial_peanuts = 407\npeanuts_eaten = 129\npeanuts_left = initial_peanuts - peanuts_eaten\nans = peanuts_left",
            "# Python code, return ans\ninitial_peanuts = 407\npeanuts_eaten = 129\npeanuts_left = initial_peanuts - peanuts_eaten\nans = peanuts_left"
        ],
        "results": [
            278.0,
            278.0,
            278.0
        ],
        "result_counter": {
            "278.0": 3
        },
        "prediction": 278.0
    },
    {
        "question": "There were 58 geese and 37 ducks in the marsh. How many birds were there in all?",
        "answer": 95,
        "generated": [
            "# Python code, return ans\ngeese = 58\nducks = 37\ntotal_birds = geese + ducks\nans = total_birds",
            "# Python code, return ans\ngeese = 58\nducks = 37\ntotal_birds = geese + ducks\nans = total_birds",
            "# Python code, return ans\ngeese = 58\nducks = 37\ntotal_birds = geese + ducks\nans = total_birds"
        ],
        "results": [
            95.0,
            95.0,
            95.0
        ],
        "result_counter": {
            "95.0": 3
        },
        "prediction": 95.0
    },
    {
        "question": "Robin had 18 pieces of gum. Her brother gave her some more pieces. Now Robin has 44 pieces in all. How many pieces of gum did Robin's brother give her?",
        "answer": 26,
        "generated": [
            "# Python code, return ans\ninitial_gum = 18\nfinal_gum = 44\ngum_from_brother = final_gum - initial_gum\nans = gum_from_brother",
            "# Python code, return ans\ninitial_gum = 18\nfinal_gum = 44\ngum_from_brother = final_gum - initial_gum\nans = gum_from_brother",
            "# Python code, return ans\ninitial_gum = 18\nfinal_gum = 44\ngum_from_brother = final_gum - initial_gum\nans = gum_from_brother"
        ],
        "results": [
            26.0,
            26.0,
            26.0
        ],
        "result_counter": {
            "26.0": 3
        },
        "prediction": 26.0
    },
    {
        "question": "Tommy had some balloons. His mom gave him 34 more balloons for his birthday. Then, Tommy had 60 balloons. How many balloons did Tommy have to start with?",
        "answer": 26,
        "generated": [
            "# Python code, return ans\ntotal_balloons = 60\nballoons_from_mom = 34\ninitial_balloons = total_balloons - balloons_from_mom\nans = initial_balloons",
            "# Python code, return ans\ntotal_balloons = 60\nballoons_from_mom = 34\ninitial_balloons = total_balloons - balloons_from_mom\nans = initial_balloons",
            "# Python code, return ans\ntotal_balloons = 60\nballoons_from_mom = 34\ninitial_balloons = total_balloons - balloons_from_mom\nans = initial_balloons"
        ],
        "results": [
            26.0,
            26.0,
            26.0
        ],
        "result_counter": {
            "26.0": 3
        },
        "prediction": 26.0
    },
    {
        "question": "Alex had some candles for his Jack O'Lanterns. He used 32 of them. Now he has 12 left. How many candles did Alex have to start with?",
        "answer": 44,
        "generated": [
            "# Python code, return ans\nused_candles = 32\nremaining_candles = 12\ninitial_candles = used_candles + remaining_candles\nans = initial_candles",
            "# Python code, return ans\nused_candles = 32\nremaining_candles = 12\ntotal_candles = used_candles + remaining_candles\nans = total_candles",
            "# Python code, return ans\ncandles_used = 32\ncandles_left = 12\ntotal_candles = candles_used + candles_left\nans = total_candles"
        ],
        "results": [
            44.0,
            44.0,
            44.0
        ],
        "result_counter": {
            "44.0": 3
        },
        "prediction": 44.0
    },
    {
        "question": "There were 14 kids on the soccer field. 22 kids decided to join in. Now how many kids are on the soccer field?",
        "answer": 36,
        "generated": [
            "# Python code, return ans\ninitial_kids = 14\njoined_kids = 22\ntotal_kids = initial_kids + joined_kids\nans = total_kids",
            "# Python code, return ans\ninitial_kids = 14\njoined_kids = 22\ntotal_kids = initial_kids + joined_kids\nans = total_kids",
            "# Python code, return ans\ninitial_kids = 14\njoined_kids = 22\ntotal_kids = initial_kids + joined_kids\nans = total_kids"
        ],
        "results": [
            36.0,
            36.0,
            36.0
        ],
        "result_counter": {
            "36.0": 3
        },
        "prediction": 36.0
    },
    {
        "question": "Finn has 89 goldfish. 32 of the goldfish die. How many goldfish are left?",
        "answer": 57,
        "generated": [
            "# Python code, return ans\ntotal_goldfish = 89\ndead_goldfish = 32\nremaining_goldfish = total_goldfish - dead_goldfish\nans = remaining_goldfish\n",
            "# Python code, return ans\ntotal_goldfish = 89\ndead_goldfish = 32\nremaining_goldfish = total_goldfish - dead_goldfish\nans = remaining_goldfish",
            "# Python code, return ans\ntotal_goldfish = 89\ndead_goldfish = 32\nremaining_goldfish = total_goldfish - dead_goldfish\nans = remaining_goldfish\n"
        ],
        "results": [
            57.0,
            57.0,
            57.0
        ],
        "result_counter": {
            "57.0": 3
        },
        "prediction": 57.0
    },
    {
        "question": "Jane has 28 old, brown sheets of drawing paper and 27 old, yellow sheets of drawing paper. How many pieces of drawing paper does she have?",
        "answer": 55,
        "generated": [
            "# Python code, return ans\nold_brown_sheets = 28\nold_yellow_sheets = 27\ntotal_sheets = old_brown_sheets + old_yellow_sheets\nans = total_sheets",
            "# Python code, return ans\nold_brown_sheets = 28\nold_yellow_sheets = 27\ntotal_sheets = old_brown_sheets + old_yellow_sheets\nans = total_sheets",
            "# Python code, return ans\nold_brown_sheets = 28\nold_yellow_sheets = 27\ntotal_sheets = old_brown_sheets + old_yellow_sheets\nans = total_sheets"
        ],
        "results": [
            55.0,
            55.0,
            55.0
        ],
        "result_counter": {
            "55.0": 3
        },
        "prediction": 55.0
    },
    {
        "question": "Mikey had 356 leaves. Some of her leaves blew away. Now she has 112 leaves left. How many of her leaves blew away?",
        "answer": 244,
        "generated": [
            "# Python code, return ans\ninitial_leaves = 356\nremaining_leaves = 112\nleaves_blew_away = initial_leaves - remaining_leaves\nans = leaves_blew_away",
            "# Python code, return ans\ninitial_leaves = 356\nremaining_leaves = 112\nleaves_blew_away = initial_leaves - remaining_leaves\nans = leaves_blew_away",
            "# Python code, return ans\ninitial_leaves = 356\nremaining_leaves = 112\nleaves_blew_away = initial_leaves - remaining_leaves\nans = leaves_blew_away"
        ],
        "results": [
            244.0,
            244.0,
            244.0
        ],
        "result_counter": {
            "244.0": 3
        },
        "prediction": 244.0
    },
    {
        "question": "Marcus has 210 baseball cards. He has 58 more than Carter. How many baseball cards does Carter have?",
        "answer": 152,
        "generated": [
            "# Python code, return ans\nMarcus_cards = 210\nCarter_cards = Marcus_cards - 58\nans = Carter_cards",
            "# Python code, return ans\nMarcus_cards = 210\nCarter_cards = Marcus_cards - 58\nans = Carter_cards",
            "# Python code, return ans\nMarcus_cards = 210\nCarter_cards = Marcus_cards - 58\nans = Carter_cards"
        ],
        "results": [
            152.0,
            152.0,
            152.0
        ],
        "result_counter": {
            "152.0": 3
        },
        "prediction": 152.0
    },
    {
        "question": "Gavin has 23 shirts. 6 are blue the rest are green. How many green shirts does Gavin have?",
        "answer": 17,
        "generated": [
            "# Python code, return ans\ntotal_shirts = 23\nblue_shirts = 6\ngreen_shirts = total_shirts - blue_shirts\nans = green_shirts",
            "# Python code, return ans\ntotal_shirts = 23\nblue_shirts = 6\ngreen_shirts = total_shirts - blue_shirts\nans = green_shirts",
            "# Python code, return ans\ntotal_shirts = 23\nblue_shirts = 6\ngreen_shirts = total_shirts - blue_shirts\nans = green_shirts"
        ],
        "results": [
            17.0,
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 3
        },
        "prediction": 17.0
    },
    {
        "question": "Ethan has 31 presents. Alissa has 22 more than Ethan. How many presents does Alissa have?",
        "answer": 53,
        "generated": [
            "# Python code, return ans\nEthan_presents = 31\nAlissa_presents = Ethan_presents + 22\nans = Alissa_presents",
            "# Python code, return ans\nEthan_presents = 31\nAlissa_presents = Ethan_presents + 22\nans = Alissa_presents",
            "# Python code, return ans\nEthan_presents = 31\nAlissa_presents = Ethan_presents + 22\nans = Alissa_presents"
        ],
        "results": [
            53.0,
            53.0,
            53.0
        ],
        "result_counter": {
            "53.0": 3
        },
        "prediction": 53.0
    },
    {
        "question": "Cindy had 41 pieces of candy. She ate six pieces in the morning, and twelve more pieces in the afternoon. How many pieces of candy does she have left?",
        "answer": 23,
        "generated": [
            "# Python code, return ans\ninitial_candy = 41\nmorning_candy = 6\nafternoon_candy = 12\nremaining_candy = initial_candy - (morning_candy + afternoon_candy)\nans = remaining_candy",
            "# Python code, return ans\ncandy_total = 41\ncandy_eaten_morning = 6\ncandy_eaten_afternoon = 12\ncandy_left = candy_total - (candy_eaten_morning + candy_eaten_afternoon)\nans = candy_left",
            "# Python code, return ans\ncandy_total = 41\ncandy_eaten_morning = 6\ncandy_eaten_afternoon = 12\ncandy_left = candy_total - candy_eaten_morning - candy_eaten_afternoon\nans = candy_left"
        ],
        "results": [
            23.0,
            23.0,
            23.0
        ],
        "result_counter": {
            "23.0": 3
        },
        "prediction": 23.0
    },
    {
        "question": "Robert wants to practice goal kicks for soccer. He decides to have 98 kicks before going home from the park. He takes 43 kicks before taking a break to get a drink of water. He then takes another 36 kicks. How many more kicks does he need to make before he goes home?",
        "answer": 19,
        "generated": [
            "# Python code, return ans\ntotal_kicks_goal = 98\nkicks_before_break = 43\nkicks_after_break = 36\nkicks_done = kicks_before_break + kicks_after_break\nkicks_needed = total_kicks_goal - kicks_done\nans = kicks_needed",
            "# Python code, return ans\ntotal_kicks_goal = 98\nkicks_before_break = 43\nkicks_after_break = 36\nkicks_remaining = total_kicks_goal - (kicks_before_break + kicks_after_break)\nans = kicks_remaining",
            "# Python code, return ans\ntotal_kicks = 98\nkicks_before_break = 43\nkicks_after_break = 36\nkicks_taken = kicks_before_break + kicks_after_break\nkicks_needed = total_kicks - kicks_taken\nans = kicks_needed"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "Cindy has 105 stickers. She uses 23 stickers. She buys 45 more stickers. How many stickers does Cindy have now?",
        "answer": 127,
        "generated": [
            "# Python code, return ans\ninitial_stickers = 105\nused_stickers = 23\nbought_stickers = 45\ncurrent_stickers = initial_stickers - used_stickers + bought_stickers\nans = current_stickers",
            "# Python code, return ans\ninitial_stickers = 105\nused_stickers = 23\nbought_stickers = 45\ncurrent_stickers = initial_stickers - used_stickers + bought_stickers\nans = current_stickers",
            "# Python code, return ans\ninitial_stickers = 105\nused_stickers = 23\nbought_stickers = 45\ncurrent_stickers = initial_stickers - used_stickers + bought_stickers\nans = current_stickers"
        ],
        "results": [
            127.0,
            127.0,
            127.0
        ],
        "result_counter": {
            "127.0": 3
        },
        "prediction": 127.0
    },
    {
        "question": "Brian has 39 pencils. He gives 18 pencils to a friend. He buys 22 more pencils. How many pencils does Brian have now?",
        "answer": 43,
        "generated": [
            "# Python code, return ans\ninitial_pencils = 39\npencils_given = 18\npencils_bought = 22\ncurrent_pencils = initial_pencils - pencils_given + pencils_bought\nans = current_pencils",
            "# Python code, return ans\ninitial_pencils = 39\ngiven_pencils = 18\nbought_pencils = 22\ncurrent_pencils = initial_pencils - given_pencils + bought_pencils\nans = current_pencils",
            "# Python code, return ans\ninitial_pencils = 39\npencils_given = 18\npencils_bought = 22\ncurrent_pencils = initial_pencils - pencils_given + pencils_bought\nans = current_pencils"
        ],
        "results": [
            43.0,
            43.0,
            43.0
        ],
        "result_counter": {
            "43.0": 3
        },
        "prediction": 43.0
    },
    {
        "question": "Karen has 252 markers. Her mother gives her 34 more markers. Karen loses 11 markers. How many markers does she have now?",
        "answer": 275,
        "generated": [
            "# Python code, return ans\nKaren_markers = 252\nmarkers_given = 34\nmarkers_lost = 11\ncurrent_markers = Karen_markers + markers_given - markers_lost\nans = current_markers",
            "# Python code, return ans\nKaren_markers = 252\nmarkers_given = 34\nmarkers_lost = 11\ncurrent_markers = Karen_markers + markers_given - markers_lost\nans = current_markers",
            "# Python code, return ans\nKaren_markers = 252\nmarkers_given = 34\nmarkers_lost = 11\ncurrent_markers = Karen_markers + markers_given - markers_lost\nans = current_markers"
        ],
        "results": [
            275.0,
            275.0,
            275.0
        ],
        "result_counter": {
            "275.0": 3
        },
        "prediction": 275.0
    },
    {
        "question": "On the first day of the week Pat had 39 stickers. Pat earned 22 more during the week. How many stickers did Pat have at the end of the week?",
        "answer": 61,
        "generated": [
            "# Python code, return ans\nstickers_first_day = 39\nstickers_earned = 22\nstickers_end_of_week = stickers_first_day + stickers_earned\nans = stickers_end_of_week",
            "# Python code, return ans\nstickers_first_day = 39\nstickers_earned = 22\nstickers_end_of_week = stickers_first_day + stickers_earned\nans = stickers_end_of_week",
            "# Python code, return ans\nstickers_first_day = 39\nstickers_earned = 22\nstickers_end_of_week = stickers_first_day + stickers_earned\nans = stickers_end_of_week"
        ],
        "results": [
            61.0,
            61.0,
            61.0
        ],
        "result_counter": {
            "61.0": 3
        },
        "prediction": 61.0
    },
    {
        "question": "Kelly had 56 apples. How many more apples does Kelly need to pick to have 105 apples altogether?",
        "answer": 49,
        "generated": [
            "# Python code, return ans\ncurrent_apples = 56\ndesired_apples = 105\napples_needed = desired_apples - current_apples\nans = apples_needed",
            "# Python code, return ans\ncurrent_apples = 56\ndesired_apples = 105\napples_to_pick = desired_apples - current_apples\nans = apples_to_pick",
            "# Python code, return ans\ncurrent_apples = 56\ndesired_apples = 105\napples_to_pick = desired_apples - current_apples\nans = apples_to_pick"
        ],
        "results": [
            49.0,
            49.0,
            49.0
        ],
        "result_counter": {
            "49.0": 3
        },
        "prediction": 49.0
    },
    {
        "question": "Todd has some gum. Steve gave him 16 more pieces of gum. Now Todd has 54 pieces of gum. How many pieces did Todd have to start with?",
        "answer": 38,
        "generated": [
            "# Python code, return ans\nTodd_gum_after = 54\nSteve_gave = 16\nTodd_gum_before = Todd_gum_after - Steve_gave\nans = Todd_gum_before",
            "# Python code, return ans\ngum_after_given = 54\ngum_given = 16\ngum_initial = gum_after_given - gum_given\nans = gum_initial",
            "# Python code, return ans\ngum_total = 54\ngum_given = 16\ngum_initial = gum_total - gum_given\nans = gum_initial"
        ],
        "results": [
            38.0,
            38.0,
            38.0
        ],
        "result_counter": {
            "38.0": 3
        },
        "prediction": 38.0
    },
    {
        "question": "Josh had 142 pencils. He gave 31 pencils to Dorothy. How many pencils does Josh have left?",
        "answer": 111,
        "generated": [
            "# Python code, return ans\npencils_initial = 142\npencils_given = 31\npencils_left = pencils_initial - pencils_given\nans = pencils_left",
            "# Python code, return ans\nJosh_pencils = 142\nDorothy_pencils = 31\nJosh_pencils_left = Josh_pencils - Dorothy_pencils\nans = Josh_pencils_left",
            "# Python code, return ans\nJosh_pencils = 142\npencils_given = 31\npencils_left = Josh_pencils - pencils_given\nans = pencils_left"
        ],
        "results": [
            111.0,
            111.0,
            111.0
        ],
        "result_counter": {
            "111.0": 3
        },
        "prediction": 111.0
    },
    {
        "question": "Nell collects baseball cards. She had 304 cards. She gave some of her cards to Jeff and now has 276 cards left. How many cards did Nell give to Jeff?",
        "answer": 28,
        "generated": [
            "# Python code, return ans\ninitial_cards = 304\nremaining_cards = 276\ncards_given = initial_cards - remaining_cards\nans = cards_given",
            "# Python code, return ans\ninitial_cards = 304\nremaining_cards = 276\ncards_given_to_Jeff = initial_cards - remaining_cards\nans = cards_given_to_Jeff",
            "# Python code, return ans\ninitial_cards = 304\nremaining_cards = 276\ncards_given_to_Jeff = initial_cards - remaining_cards\nans = cards_given_to_Jeff"
        ],
        "results": [
            28.0,
            28.0,
            28.0
        ],
        "result_counter": {
            "28.0": 3
        },
        "prediction": 28.0
    },
    {
        "question": "Sarah had some trucks. She gave 13 to Jeff, and now she has 38 trucks left. How many trucks did Sarah have to start with?",
        "answer": 51,
        "generated": [
            "# Python code, return ans\ntrucks_left = 38\ntrucks_given = 13\ninitial_trucks = trucks_left + trucks_given\nans = initial_trucks",
            "# Python code, return ans\ntrucks_left = 38\ntrucks_given = 13\ninitial_trucks = trucks_left + trucks_given\nans = initial_trucks",
            "# Python code, return ans\ntrucks_left = 38\ntrucks_given = 13\ninitial_trucks = trucks_left + trucks_given\nans = initial_trucks"
        ],
        "results": [
            51.0,
            51.0,
            51.0
        ],
        "result_counter": {
            "51.0": 3
        },
        "prediction": 51.0
    },
    {
        "question": "There are 40 boys and some girls on the playground. There are 117 children altogether. How many girls are on the playground?",
        "answer": 77,
        "generated": [
            "# Python code, return ans\nboys = 40\ntotal_children = 117\ngirls = total_children - boys\nans = girls",
            "# Python code, return ans\nboys = 40\ntotal_children = 117\ngirls = total_children - boys\nans = girls",
            "# Python code, return ans\nboys = 40\ntotal_children = 117\ngirls = total_children - boys\nans = girls"
        ],
        "results": [
            77.0,
            77.0,
            77.0
        ],
        "result_counter": {
            "77.0": 3
        },
        "prediction": 77.0
    },
    {
        "question": "Each CD rack holds 8 CDs. A shelf can hold four racks. How many total CDs can fit on the shelf?",
        "answer": 32,
        "generated": [
            "# Python code, return ans\nCDs_per_rack = 8\nracks_per_shelf = 4\ntotal_CDs_on_shelf = CDs_per_rack * racks_per_shelf\nans = total_CDs_on_shelf",
            "# Python code, return ans\nCDs_per_rack = 8\nracks_per_shelf = 4\ntotal_CDs_on_shelf = CDs_per_rack * racks_per_shelf\nans = total_CDs_on_shelf",
            "# Python code, return ans\nCDs_per_rack = 8\nracks_per_shelf = 4\ntotal_CDs_on_shelf = CDs_per_rack * racks_per_shelf\nans = total_CDs_on_shelf"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "Carla has some marbles. She bought 134 marbles. Now she has 187 marbles. How many did she start with?",
        "answer": 53,
        "generated": [
            "# Python code, return ans\ntotal_marbles = 187\nbought_marbles = 134\ninitial_marbles = total_marbles - bought_marbles\nans = initial_marbles",
            "# Python code, return ans\nmarbles_after_purchase = 187\nmarbles_purchased = 134\nmarbles_initial = marbles_after_purchase - marbles_purchased\nans = marbles_initial",
            "# Python code, return ans\nmarbles_after_purchase = 187\nmarbles_purchased = 134\nmarbles_initial = marbles_after_purchase - marbles_purchased\nans = marbles_initial"
        ],
        "results": [
            53.0,
            53.0,
            53.0
        ],
        "result_counter": {
            "53.0": 3
        },
        "prediction": 53.0
    },
    {
        "question": "Paco had 35 cookies. He ate 6 of them. How many cookies did Paco have left?",
        "answer": 29,
        "generated": [
            "# Python code, return ans\ninitial_cookies = 35\ncookies_eaten = 6\nremaining_cookies = initial_cookies - cookies_eaten\nans = remaining_cookies",
            "# Python code, return ans\ninitial_cookies = 35\ncookies_eaten = 6\nremaining_cookies = initial_cookies - cookies_eaten\nans = remaining_cookies",
            "# Python code, return ans\ninitial_cookies = 35\ncookies_eaten = 6\nremaining_cookies = initial_cookies - cookies_eaten\nans = remaining_cookies"
        ],
        "results": [
            29.0,
            29.0,
            29.0
        ],
        "result_counter": {
            "29.0": 3
        },
        "prediction": 29.0
    },
    {
        "question": "Connie has 41 red markers and 64 blue markers. How many markers does she have altogether?",
        "answer": 105,
        "generated": [
            "# Python code, return ans\nred_markers = 41\nblue_markers = 64\ntotal_markers = red_markers + blue_markers\nans = total_markers",
            "# Python code, return ans\nred_markers = 41\nblue_markers = 64\ntotal_markers = red_markers + blue_markers\nans = total_markers",
            "# Python code, return ans\nred_markers = 41\nblue_markers = 64\ntotal_markers = red_markers + blue_markers\nans = total_markers"
        ],
        "results": [
            105.0,
            105.0,
            105.0
        ],
        "result_counter": {
            "105.0": 3
        },
        "prediction": 105.0
    },
    {
        "question": "Joe had fifty toy cars. If he gets twelve more cars, how many cars will he have then?",
        "answer": 62,
        "generated": [
            "# Python code, return ans\nJoe_cars = 50\nnew_cars = 12\ntotal_cars = Joe_cars + new_cars\nans = total_cars",
            "# Python code, return ans\nJoe_cars = 50\nnew_cars = 12\ntotal_cars = Joe_cars + new_cars\nans = total_cars",
            "# Python code, return ans\nJoe_cars = 50\nnew_cars = 12\ntotal_cars = Joe_cars + new_cars\nans = total_cars"
        ],
        "results": [
            62.0,
            62.0,
            62.0
        ],
        "result_counter": {
            "62.0": 3
        },
        "prediction": 62.0
    },
    {
        "question": "Maria had twenty-five pieces of gum. Tommy gave her sixteen more pieces. Luis gave her twenty more pieces. How many pieces of gum does Maria have now?",
        "answer": 61,
        "generated": [
            "# Python code, return ans\nMaria_gum = 25\nTommy_gum = 16\nLuis_gum = 20\ntotal_gum = Maria_gum + Tommy_gum + Luis_gum\nans = total_gum",
            "# Python code, return ans\nMaria_gum = 25\nTommy_gum = 16\nLuis_gum = 20\ntotal_gum = Maria_gum + Tommy_gum + Luis_gum\nans = total_gum",
            "# Python code, return ans\nMaria_gum = 25\nTommy_gum = 16\nLuis_gum = 20\ntotal_gum = Maria_gum + Tommy_gum + Luis_gum\nans = total_gum"
        ],
        "results": [
            61.0,
            61.0,
            61.0
        ],
        "result_counter": {
            "61.0": 3
        },
        "prediction": 61.0
    },
    {
        "question": "There are sixty-four pigs in the barn. Some more come to join them. Now there are eighty-six pigs. How many pigs came to join them?",
        "answer": 22,
        "generated": [
            "# Python code, return ans\ninitial_pigs = 64\nfinal_pigs = 86\npigs_joined = final_pigs - initial_pigs\nans = pigs_joined",
            "# Python code, return ans\ninitial_pigs = 64\nfinal_pigs = 86\npigs_joined = final_pigs - initial_pigs\nans = pigs_joined",
            "# Python code, return ans\ninitial_pigs = 64\nfinal_pigs = 86\npigs_joined = final_pigs - initial_pigs\nans = pigs_joined"
        ],
        "results": [
            22.0,
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 3
        },
        "prediction": 22.0
    },
    {
        "question": "Rosa had sixty-seven flowers. Andre gave her some more flowers. Now, Rosa has ninety flowers. How many flowers did Andre give to Rosa?",
        "answer": 23,
        "generated": [
            "# Python code, return ans\nRosa_initial_flowers = 67\nRosa_final_flowers = 90\nflowers_given_by_Andre = Rosa_final_flowers - Rosa_initial_flowers\nans = flowers_given_by_Andre",
            "# Python code, return ans\nRosa_initial_flowers = 67\nRosa_final_flowers = 90\nAndre_given_flowers = Rosa_final_flowers - Rosa_initial_flowers\nans = Andre_given_flowers",
            "# Python code, return ans\nRosa_initial_flowers = 67\nRosa_final_flowers = 90\nAndre_flowers = Rosa_final_flowers - Rosa_initial_flowers\nans = Andre_flowers"
        ],
        "results": [
            23.0,
            23.0,
            23.0
        ],
        "result_counter": {
            "23.0": 3
        },
        "prediction": 23.0
    },
    {
        "question": "Adolfo made a tower with thirty-five blocks. He added some more blocks and now he has sixty-five blocks. How many did he have to add?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\ninitial_blocks = 35\nfinal_blocks = 65\nblocks_added = final_blocks - initial_blocks\nans = blocks_added",
            "# Python code, return ans\ninitial_blocks = 35\nfinal_blocks = 65\nblocks_added = final_blocks - initial_blocks\nans = blocks_added",
            "# Python code, return ans\ninitial_blocks = 35\nfinal_blocks = 65\nblocks_added = final_blocks - initial_blocks\nans = blocks_added"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "Lucy put sixty-eight shells in her bucket. She found some more shells and now she has eighty-nine shells. How many more did she find?",
        "answer": 21,
        "generated": [
            "# Python code, return ans\ninitial_shells = 68\nfinal_shells = 89\nshells_found = final_shells - initial_shells\nans = shells_found",
            "# Python code, return ans\ninitial_shells = 68\nfinal_shells = 89\nshells_found = final_shells - initial_shells\nans = shells_found",
            "# Python code, return ans\ninitial_shells = 68\nfinal_shells = 89\nfound_shells = final_shells - initial_shells\nans = found_shells"
        ],
        "results": [
            21.0,
            21.0,
            21.0
        ],
        "result_counter": {
            "21.0": 3
        },
        "prediction": 21.0
    },
    {
        "question": "Hugo had seventy-nine stickers in his sticker book. He got some more to add to his book and now he has one hundred-twenty stickers. How many did he add to his book?",
        "answer": 41,
        "generated": [
            "# Python code, return ans\ninitial_stickers = 79\nfinal_stickers = 120\nstickers_added = final_stickers - initial_stickers\nans = stickers_added",
            "# Python code, return ans\ninitial_stickers = 79\nfinal_stickers = 120\nstickers_added = final_stickers - initial_stickers\nans = stickers_added",
            "# Python code, return ans\ninitial_stickers = 79\nfinal_stickers = 120\nstickers_added = final_stickers - initial_stickers\nans = stickers_added"
        ],
        "results": [
            41.0,
            41.0,
            41.0
        ],
        "result_counter": {
            "41.0": 3
        },
        "prediction": 41.0
    },
    {
        "question": "Josh had 16 marbles in his collection. He lost 7 marbles. How many marbles does he have now?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ninitial_marbles = 16\nlost_marbles = 7\ncurrent_marbles = initial_marbles - lost_marbles\nans = current_marbles",
            "# Python code, return ans\nmarbles_initial = 16\nmarbles_lost = 7\nmarbles_remaining = marbles_initial - marbles_lost\nans = marbles_remaining",
            "# Python code, return ans\ninitial_marbles = 16\nlost_marbles = 7\ncurrent_marbles = initial_marbles - lost_marbles\nans = current_marbles"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Megan has 19 seashells. How many more seashells does she need to find to have 25 seashells in her collection?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ncurrent_seashells = 19\ndesired_seashells = 25\nneeded_seashells = desired_seashells - current_seashells\nans = needed_seashells",
            "# Python code, return ans\ncurrent_seashells = 19\ndesired_seashells = 25\nmore_seashells_needed = desired_seashells - current_seashells\nans = more_seashells_needed",
            "# Python code, return ans\ncurrent_seashells = 19\ndesired_seashells = 25\nneeded_seashells = desired_seashells - current_seashells\nans = needed_seashells"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Brad has 17 balloons. 8 balloons are red and the rest are green. How many green balloons does Brad have?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ntotal_balloons = 17\nred_balloons = 8\ngreen_balloons = total_balloons - red_balloons\nans = green_balloons",
            "# Python code, return ans\ntotal_balloons = 17\nred_balloons = 8\ngreen_balloons = total_balloons - red_balloons\nans = green_balloons",
            "# Python code, return ans\ntotal_balloons = 17\nred_balloons = 8\ngreen_balloons = total_balloons - red_balloons\nans = green_balloons"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "There are 38 books on the shelf. Marta put 10 more books on the shelf. How many books are on the shelf now?",
        "answer": 48,
        "generated": [
            "# Python code, return ans\nbooks_on_shelf = 38\nbooks_added = 10\ntotal_books = books_on_shelf + books_added\nans = total_books",
            "# Python code, return ans\ninitial_books = 38\nadded_books = 10\ntotal_books = initial_books + added_books\nans = total_books",
            "# Python code, return ans\nbooks_on_shelf = 38\nbooks_added = 10\ntotal_books = books_on_shelf + books_added\nans = total_books"
        ],
        "results": [
            48.0,
            48.0,
            48.0
        ],
        "result_counter": {
            "48.0": 3
        },
        "prediction": 48.0
    },
    {
        "question": "A bee has 6 legs. How many legs do 8 bees have?",
        "answer": 48,
        "generated": [
            "# Python code, return ans\nbee_legs = 6\nbee_num = 8\ntotal_legs = bee_legs * bee_num\nans = total_legs",
            "# Python code, return ans\nbee_legs = 6\nbee_count = 8\ntotal_legs = bee_legs * bee_count\nans = total_legs",
            "# Python code, return ans\nlegs_per_bee = 6\nnum_bees = 8\ntotal_legs = legs_per_bee * num_bees\nans = total_legs"
        ],
        "results": [
            48.0,
            48.0,
            48.0
        ],
        "result_counter": {
            "48.0": 3
        },
        "prediction": 48.0
    },
    {
        "question": "Mrs. Hilt bought an ice cream cone for 99 cents. How much would 2 ice cream cones cost?",
        "answer": 198,
        "generated": [
            "# Python code, return ans\nice_cream_cost = 0.99\ntotal_cost = ice_cream_cost * 2\nans = total_cost",
            "# Python code, return ans\nice_cream_cost = 0.99\ntwo_ice_cream_cost = ice_cream_cost * 2\nans = two_ice_cream_cost",
            "# Python code, return ans\nice_cream_cost = 0.99\ntotal_cost = ice_cream_cost * 2\nans = total_cost"
        ],
        "results": [
            1.98,
            1.98,
            1.98
        ],
        "result_counter": {
            "1.98": 3
        },
        "prediction": 1.98
    },
    {
        "question": "Mrs. Hilt wants to make a border around her garden. She needs 125 rocks to complete the border. She has 64 rocks. How many more rocks does she need to complete the border?",
        "answer": 61,
        "generated": [
            "# Python code, return ans\nrocks_needed = 125\nrocks_have = 64\nrocks_to_buy = rocks_needed - rocks_have\nans = rocks_to_buy",
            "# Python code, return ans\nrocks_needed = 125\nrocks_have = 64\nrocks_to_buy = rocks_needed - rocks_have\nans = rocks_to_buy",
            "# Python code, return ans\ntotal_rocks_needed = 125\nrocks_have = 64\nmore_rocks_needed = total_rocks_needed - rocks_have\nans = more_rocks_needed"
        ],
        "results": [
            61.0,
            61.0,
            61.0
        ],
        "result_counter": {
            "61.0": 3
        },
        "prediction": 61.0
    },
    {
        "question": "Mrs. Hilt had 38 marbles. She lost 15 of them. How many marbles does she have left?",
        "answer": 23,
        "generated": [
            "# Python code, return ans\ninitial_marbles = 38\nlost_marbles = 15\nremaining_marbles = initial_marbles - lost_marbles\nans = remaining_marbles",
            "# Python code, return ans\nmarbles_initial = 38\nmarbles_lost = 15\nmarbles_left = marbles_initial - marbles_lost\nans = marbles_left",
            "# Python code, return ans\nmarbles_total = 38\nmarbles_lost = 15\nmarbles_left = marbles_total - marbles_lost\nans = marbles_left"
        ],
        "results": [
            23.0,
            23.0,
            23.0
        ],
        "result_counter": {
            "23.0": 3
        },
        "prediction": 23.0
    },
    {
        "question": "Mrs. Hilt and her sister drove to a concert 78 miles away. They drove 32 miles and then stopped for gas. Her sister put 28 gallons of gas in the car. How many miles did they have left to drive?",
        "answer": 46,
        "generated": [
            "# Python code, return ans\ntotal_distance = 78\ndistance_driven = 32\ndistance_left = total_distance - distance_driven\nans = distance_left",
            "# Python code, return ans\ntotal_distance = 78\ndistance_driven = 32\ndistance_left = total_distance - distance_driven\nans = distance_left",
            "# Python code, return ans\ntotal_distance = 78\ndistance_driven = 32\nremaining_distance = total_distance - distance_driven\nans = remaining_distance"
        ],
        "results": [
            46.0,
            46.0,
            46.0
        ],
        "result_counter": {
            "46.0": 3
        },
        "prediction": 46.0
    },
    {
        "question": "Mrs. Hilt spent 1 hour and 30 minutes shoveling snow on Saturday morning and 45 minutes shoveling snow on Saturday afternoon. How much total time did she spend shoveling snow?",
        "answer": 135,
        "generated": [
            "# Python code, return ans\nshoveling_morning = 90  # 1 hour and 30 minutes in minutes\nshoveling_afternoon = 45\ntotal_shoveling_time = shoveling_morning + shoveling_afternoon\nans = total_shoveling_time",
            "# Python code, return ans\nshoveling_morning = 90  # 1 hour and 30 minutes = 90 minutes\nshoveling_afternoon = 45\ntotal_shoveling_time = shoveling_morning + shoveling_afternoon\nans = total_shoveling_time",
            "# Python code, return ans\nshoveling_morning = 90  # 1 hour and 30 minutes in minutes\nshoveling_afternoon = 45\ntotal_shoveling_time = shoveling_morning + shoveling_afternoon\nans = total_shoveling_time"
        ],
        "results": [
            135.0,
            135.0,
            135.0
        ],
        "result_counter": {
            "135.0": 3
        },
        "prediction": 135.0
    },
    {
        "question": "Mrs. Hilt bought 6 hot dogs. Each hot dog cost 50 cents. How much money did she pay for all of the hot dogs?",
        "answer": 300,
        "generated": [
            "# Python code, return ans\nhot_dog_num = 6\nhot_dog_cost = 0.50\ntotal_cost = hot_dog_num * hot_dog_cost\nans = total_cost",
            "# Python code, return ans\nhot_dogs = 6\ncost_per_hot_dog = 0.50\ntotal_cost = hot_dogs * cost_per_hot_dog\nans = total_cost",
            "# Python code, return ans\nhot_dog_num = 6\nhot_dog_cost = 0.50\ntotal_cost = hot_dog_num * hot_dog_cost\nans = total_cost"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Mrs. Hilt reads 13 books on every day that starts with the letters T and S. How many books does she read in one week?",
        "answer": 52,
        "generated": [
            "# Python code, return ans\nbooks_per_day = 13\ndays_starting_with_T_and_S = 3  # Tuesday, Thursday, and Saturday\nbooks_per_week = books_per_day * days_starting_with_T_and_S\nans = books_per_week",
            "# Python code, return ans\nbooks_per_day_TS = 13\ndays_in_week_TS = 4  # Tuesday, Thursday, Saturday, Sunday\ntotal_books_read = books_per_day_TS * days_in_week_TS\nans = total_books_read",
            "# Python code, return ans\nbooks_per_day_TS = 13\ndays_in_week_TS = 4  # Tuesday, Thursday, Saturday, Sunday\ntotal_books_read = books_per_day_TS * days_in_week_TS\nans = total_books_read"
        ],
        "results": [
            39.0,
            52.0,
            52.0
        ],
        "result_counter": {
            "39.0": 1,
            "52.0": 2
        },
        "prediction": 52.0
    },
    {
        "question": "Mrs. Hilt has 50 cents. A pencil costs 5 cents. How many pencils can she buy with the money she has?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\nMrs_Hilt_money = 50\npencil_cost = 5\npencils_to_buy = Mrs_Hilt_money // pencil_cost\nans = pencils_to_buy",
            "# Python code, return ans\ntotal_money = 50\npencil_cost = 5\npencils_can_buy = total_money // pencil_cost\nans = pencils_can_buy",
            "# Python code, return ans\nMrs_Hilt_money = 50\npencil_cost = 5\npencils_to_buy = Mrs_Hilt_money // pencil_cost\nans = pencils_to_buy"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "Mrs. Hilt saw 33 butterflies. Some of the butterflies were red and others were orange. If 20 of the butterflies were orange, how many of them were red?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\ntotal_butterflies = 33\norange_butterflies = 20\nred_butterflies = total_butterflies - orange_butterflies\nans = red_butterflies",
            "# Python code, return ans\ntotal_butterflies = 33\norange_butterflies = 20\nred_butterflies = total_butterflies - orange_butterflies\nans = red_butterflies",
            "# Python code, return ans\ntotal_butterflies = 33\norange_butterflies = 20\nred_butterflies = total_butterflies - orange_butterflies\nans = red_butterflies"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "Mrs. Hilt bought a pencil for 17 cents. She used exactly minimized coins to buy the pencil. How many coins did she use?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\npencil_cost = 17\nquarters = pencil_cost // 25\nremaining_cost = pencil_cost % 25\ndimes = remaining_cost // 10\nremaining_cost %= 10\nnickels = remaining_cost // 5\nremaining_cost %= 5\npennies = remaining_cost\ntotal_coins = quarters + dimes + nickels + pennies\nans = total_coins",
            "# Python code, return ans\npencil_cost = 17\nquarters = pencil_cost // 25\nremaining_cost = pencil_cost % 25\ndimes = remaining_cost // 10\nremaining_cost = remaining_cost % 10\nnickels = remaining_cost // 5\nremaining_cost = remaining_cost % 5\npennies = remaining_cost\ntotal_coins = quarters + dimes + nickels + pennies\nans = total_coins",
            "# Python code, return ans\npencil_cost = 17\nquarters = pencil_cost // 25\nremaining_cost = pencil_cost % 25\ndimes = remaining_cost // 10\nremaining_cost = remaining_cost % 10\nnickels = remaining_cost // 5\nremaining_cost = remaining_cost % 5\npennies = remaining_cost\ntotal_coins = quarters + dimes + nickels + pennies\nans = total_coins"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Mrs. Hilt had 43 cents. She bought a pencil for 20 cents and a piece of candy for 5 cents. How much money did she have left?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\ninitial_money = 43\npencil_cost = 20\ncandy_cost = 5\nmoney_left = initial_money - (pencil_cost + candy_cost)\nans = money_left",
            "# Python code, return ans\ninitial_money = 43\npencil_cost = 20\ncandy_cost = 5\nmoney_left = initial_money - (pencil_cost + candy_cost)\nans = money_left",
            "# Python code, return ans\ninitial_money = 43\npencil_cost = 20\ncandy_cost = 5\nmoney_left = initial_money - (pencil_cost + candy_cost)\nans = money_left"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "On Tuesday, Mrs. Hilt saw 88 raisins on a tray in the cafeteria. That was 8 more raisins than she saw the day before. How many raisins were on the table on Monday?",
        "answer": 80,
        "generated": [
            "# Python code, return ans\nraisins_on_Tuesday = 88\nraisins_on_Monday = raisins_on_Tuesday - 8\nans = raisins_on_Monday\n",
            "# Python code, return ans\nraisins_on_Tuesday = 88\nraisins_more_than_Monday = 8\nraisins_on_Monday = raisins_on_Tuesday - raisins_more_than_Monday\nans = raisins_on_Monday",
            "# Python code, return ans\nraisins_on_Tuesday = 88\nraisins_difference = 8\nraisins_on_Monday = raisins_on_Tuesday - raisins_difference\nans = raisins_on_Monday"
        ],
        "results": [
            80.0,
            80.0,
            80.0
        ],
        "result_counter": {
            "80.0": 3
        },
        "prediction": 80.0
    },
    {
        "question": "Mrs. Hilt bought carnival tickets. The tickets cost $1 for 4 tickets. If Mrs. Hilt bought 12 tickets, how much did she pay?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\ntickets_bought = 12\ntickets_per_dollar = 4\ncost = tickets_bought / tickets_per_dollar\nans = cost",
            "# Python code, return ans\ntickets_bought = 12\ntickets_per_dollar = 4\ntotal_cost = tickets_bought / tickets_per_dollar\nans = total_cost",
            "# Python code, return ans\ntickets_bought = 12\ntickets_per_dollar = 4\ncost = tickets_bought / tickets_per_dollar\nans = cost"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Mrs. Hilt bought 3 pizzas for $8 each. What was the total amount she paid for the three pizzas?",
        "answer": 24,
        "generated": [
            "# Python code, return ans\npizza_cost = 8\npizza_num = 3\ntotal_cost = pizza_cost * pizza_num\nans = total_cost",
            "# Python code, return ans\npizza_cost = 8\npizza_quantity = 3\ntotal_cost = pizza_cost * pizza_quantity\nans = total_cost",
            "# Python code, return ans\npizza_cost = 8\npizza_quantity = 3\ntotal_amount = pizza_cost * pizza_quantity\nans = total_amount"
        ],
        "results": [
            24.0,
            24.0,
            24.0
        ],
        "result_counter": {
            "24.0": 3
        },
        "prediction": 24.0
    },
    {
        "question": "Mrs. Hilt saw 21 snakes, 11 alligators, 36 frogs, and 57 bears. How many reptiles did Mrs. Hilt see?",
        "answer": 32,
        "generated": [
            "# Python code, return ans\nsnakes = 21\nalligators = 11\nreptiles = snakes + alligators\nans = reptiles",
            "# Python code, return ans\nsnakes = 21\nalligators = 11\nreptiles = snakes + alligators\nans = reptiles",
            "# Python code, return ans\nsnakes = 21\nalligators = 11\nreptiles = snakes + alligators\nans = reptiles"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "The Hawks scored three touchdowns worth 7 points each. How many points do they have?",
        "answer": 21,
        "generated": [
            "# Python code, return ans\ntouchdowns = 3\npoints_per_touchdown = 7\ntotal_points = touchdowns * points_per_touchdown\nans = total_points",
            "# Python code, return ans\ntouchdowns = 3\npoints_per_touchdown = 7\ntotal_points = touchdowns * points_per_touchdown\nans = total_points",
            "# Python code, return ans\ntouchdowns = 3\npoints_per_touchdown = 7\ntotal_points = touchdowns * points_per_touchdown\nans = total_points"
        ],
        "results": [
            21.0,
            21.0,
            21.0
        ],
        "result_counter": {
            "21.0": 3
        },
        "prediction": 21.0
    },
    {
        "question": "I have 28 cents in my pocket. How coins could I have on minimization?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ntotal_cents = 28\nquarters = total_cents // 25\nremaining_cents = total_cents % 25\ndimes = remaining_cents // 10\nremaining_cents = remaining_cents % 10\nnickels = remaining_cents // 5\nremaining_cents = remaining_cents % 5\npennies = remaining_cents\nans = quarters + dimes + nickels + pennies",
            "# Python code, return ans\ntotal_cents = 28\nquarters = total_cents // 25\nremaining_cents = total_cents % 25\ndimes = remaining_cents // 10\nremaining_cents %= 10\nnickels = remaining_cents // 5\nremaining_cents %= 5\npennies = remaining_cents\nans = quarters + dimes + nickels + pennies",
            "# Python code, return ans\ncents = 28\nquarters = cents // 25\nremaining_cents = cents % 25\ndimes = remaining_cents // 10\nremaining_cents = remaining_cents % 10\nnickels = remaining_cents // 5\nremaining_cents = remaining_cents % 5\npennies = remaining_cents\n\ntotal_coins = quarters + dimes + nickels + pennies\nans = total_coins"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Zach scored 42 points in the football game. Ben scored 21 points. How many more points did Zach score?",
        "answer": 21,
        "generated": [
            "# Python code, return ans\nZach_points = 42\nBen_points = 21\nmore_points = Zach_points - Ben_points\nans = more_points",
            "# Python code, return ans\nZach_points = 42\nBen_points = 21\nmore_points = Zach_points - Ben_points\nans = more_points",
            "# Python code, return ans\nZach_points = 42\nBen_points = 21\nmore_points = Zach_points - Ben_points\nans = more_points"
        ],
        "results": [
            21.0,
            21.0,
            21.0
        ],
        "result_counter": {
            "21.0": 3
        },
        "prediction": 21.0
    },
    {
        "question": "I have 3 hundreds, 8 tens, and 3 ones. What number am I?",
        "answer": 383,
        "generated": [
            "# Python code, return ans\nhundreds = 3\ntens = 8\nones = 3\nnumber = hundreds * 100 + tens * 10 + ones\nans = number",
            "# Python code, return ans\nhundreds = 3\ntens = 8\nones = 3\nnumber = hundreds * 100 + tens * 10 + ones\nans = number",
            "# Python code, return ans\nhundreds = 3\ntens = 8\nones = 3\nnumber = hundreds * 100 + tens * 10 + ones\nans = number"
        ],
        "results": [
            383.0,
            383.0,
            383.0
        ],
        "result_counter": {
            "383.0": 3
        },
        "prediction": 383.0
    },
    {
        "question": "A quarter equals $0.25. How many quarters equal $2.25?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ntotal_amount = 2.25\nquarter_value = 0.25\nnum_quarters = total_amount / quarter_value\nans = num_quarters",
            "# Python code, return ans\ntotal_amount = 2.25\nquarter_value = 0.25\nquarters_needed = total_amount / quarter_value\nans = quarters_needed",
            "# Python code, return ans\nquarter_value = 0.25\ntotal_value = 2.25\nnum_quarters = total_value / quarter_value\nans = num_quarters"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Kate has 223 pennies. John has 388 pennies. How many more pennies does John have?",
        "answer": 165,
        "generated": [
            "# Python code, return ans\nKate_pennies = 223\nJohn_pennies = 388\nmore_pennies = John_pennies - Kate_pennies\nans = more_pennies",
            "# Python code, return ans\nKate_pennies = 223\nJohn_pennies = 388\nmore_pennies = John_pennies - Kate_pennies\nans = more_pennies",
            "# Python code, return ans\nKate_pennies = 223\nJohn_pennies = 388\nmore_pennies = John_pennies - Kate_pennies\nans = more_pennies"
        ],
        "results": [
            165.0,
            165.0,
            165.0
        ],
        "result_counter": {
            "165.0": 3
        },
        "prediction": 165.0
    },
    {
        "question": "There are 5 birds in a tree. How many bird legs do you see?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\nbird_num = 5\nlegs_per_bird = 2\ntotal_bird_legs = bird_num * legs_per_bird\nans = total_bird_legs",
            "# Python code, return ans\nbird_num = 5\nlegs_per_bird = 2\ntotal_bird_legs = bird_num * legs_per_bird\nans = total_bird_legs",
            "# Python code, return ans\nbirds = 5\nlegs_per_bird = 2\ntotal_legs = birds * legs_per_bird\nans = total_legs"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "There are 3 spiders. How many spider legs are there?",
        "answer": 24,
        "generated": [
            "# Python code, return ans\nspider_num = 3\nlegs_per_spider = 8\ntotal_spider_legs = spider_num * legs_per_spider\nans = total_spider_legs",
            "# Python code, return ans\nspider_num = 3\nlegs_per_spider = 8\ntotal_spider_legs = spider_num * legs_per_spider\nans = total_spider_legs",
            "# Python code, return ans\nspider_num = 3\nlegs_per_spider = 8\ntotal_spider_legs = spider_num * legs_per_spider\nans = total_spider_legs"
        ],
        "results": [
            24.0,
            24.0,
            24.0
        ],
        "result_counter": {
            "24.0": 3
        },
        "prediction": 24.0
    },
    {
        "question": "Jeff has twice as many crayons as Joan. Joan has 12 crayons. How many does Jeff have?",
        "answer": 24,
        "generated": [
            "# Python code, return ans\nJoan_crayons = 12\nJeff_crayons = Joan_crayons * 2\nans = Jeff_crayons",
            "# Python code, return ans\nJoan_crayons = 12\nJeff_crayons = Joan_crayons * 2\nans = Jeff_crayons",
            "# Python code, return ans\nJoan_crayons = 12\nJeff_crayons = Joan_crayons * 2\nans = Jeff_crayons"
        ],
        "results": [
            24.0,
            24.0,
            24.0
        ],
        "result_counter": {
            "24.0": 3
        },
        "prediction": 24.0
    },
    {
        "question": "Mark has 13 trees in his backyard. If he plants 12 more, how many trees will he have?",
        "answer": 25,
        "generated": [
            "# Python code, return ans\ncurrent_trees = 13\ntrees_to_plant = 12\ntotal_trees = current_trees + trees_to_plant\nans = total_trees",
            "# Python code, return ans\ncurrent_trees = 13\ntrees_to_plant = 12\ntotal_trees = current_trees + trees_to_plant\nans = total_trees",
            "# Python code, return ans\ncurrent_trees = 13\nnew_trees = 12\ntotal_trees = current_trees + new_trees\nans = total_trees"
        ],
        "results": [
            25.0,
            25.0,
            25.0
        ],
        "result_counter": {
            "25.0": 3
        },
        "prediction": 25.0
    },
    {
        "question": "Joy will see her grandma in two days. How many hours until she sees her?",
        "answer": 48,
        "generated": [
            "# Python code, return ans\ndays_until_see_grandma = 2\nhours_until_see_grandma = days_until_see_grandma * 24\nans = hours_until_see_grandma",
            "# Python code, return ans\ndays_until_seeing_grandma = 2\nhours_in_a_day = 24\nhours_until_seeing_grandma = days_until_seeing_grandma * hours_in_a_day\nans = hours_until_seeing_grandma",
            "# Python code, return ans\ndays_until_seeing_grandma = 2\nhours_in_a_day = 24\nans = days_until_seeing_grandma * hours_in_a_day\nans"
        ],
        "results": [
            48.0,
            48.0,
            48.0
        ],
        "result_counter": {
            "48.0": 3
        },
        "prediction": 48.0
    },
    {
        "question": "Kim has 4 cousins. She wants to give each one 5 pieces of gum. How much gum will she need?",
        "answer": 20,
        "generated": [
            "# Python code, return ans\ncousins = 4\ngum_per_cousin = 5\ntotal_gum_needed = cousins * gum_per_cousin\nans = total_gum_needed",
            "# Python code, return ans\ncousins = 4\ngum_per_cousin = 5\ntotal_gum_needed = cousins * gum_per_cousin\nans = total_gum_needed",
            "# Python code, return ans\ncousins = 4\ngum_per_cousin = 5\ntotal_gum_needed = cousins * gum_per_cousin\nans = total_gum_needed"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "Dan has $3.00. He bought a candy bar for $1.00. How much money is left?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\nDan_money = 3.00\ncandy_bar_cost = 1.00\nmoney_left = Dan_money - candy_bar_cost\nans = money_left",
            "# Python code, return ans\nDan_money = 3.00\ncandy_bar_cost = 1.00\nmoney_left = Dan_money - candy_bar_cost\nans = money_left",
            "# Python code, return ans\nDan_money = 3.00\ncandy_bar_cost = 1.00\nmoney_left = Dan_money - candy_bar_cost\nans = money_left"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "5 boats are in the lake. Each boat has 3 people. How many people are on boats in the lake?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\nboats = 5\npeople_per_boat = 3\ntotal_people = boats * people_per_boat\nans = total_people",
            "# Python code, return ans\nboats = 5\npeople_per_boat = 3\ntotal_people = boats * people_per_boat\nans = total_people",
            "# Python code, return ans\nboats = 5\npeople_per_boat = 3\ntotal_people = boats * people_per_boat\nans = total_people"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "There are 43 dogs, 72 fish, and 34 cats at my farm. How many pets do I have at my farm?",
        "answer": 149,
        "generated": [
            "# Python code, return ans\ndogs = 43\nfish = 72\ncats = 34\ntotal_pets = dogs + fish + cats\nans = total_pets",
            "# Python code, return ans\ndogs = 43\nfish = 72\ncats = 34\ntotal_pets = dogs + fish + cats\nans = total_pets",
            "# Python code, return ans\ndogs = 43\nfish = 72\ncats = 34\ntotal_pets = dogs + fish + cats\nans = total_pets"
        ],
        "results": [
            149.0,
            149.0,
            149.0
        ],
        "result_counter": {
            "149.0": 3
        },
        "prediction": 149.0
    },
    {
        "question": "Charlie has 31 more snowballs than Lucy. She has 19 snowballs. How many does Charlie have?",
        "answer": 50,
        "generated": [
            "# Python code, return ans\nLucy_snowballs = 19\nCharlie_snowballs = Lucy_snowballs + 31\nans = Charlie_snowballs",
            "# Python code, return ans\nLucy_snowballs = 19\nCharlie_snowballs = Lucy_snowballs + 31\nans = Charlie_snowballs",
            "# Python code, return ans\nLucy_snowballs = 19\nCharlie_snowballs = Lucy_snowballs + 31\nans = Charlie_snowballs"
        ],
        "results": [
            50.0,
            50.0,
            50.0
        ],
        "result_counter": {
            "50.0": 3
        },
        "prediction": 50.0
    },
    {
        "question": "Randy has 78 blocks. He uses 19 blocks to build a tower. How many blocks are left?",
        "answer": 59,
        "generated": [
            "# Python code, return ans\ntotal_blocks = 78\nblocks_used = 19\nblocks_left = total_blocks - blocks_used\nans = blocks_left",
            "# Python code, return ans\ntotal_blocks = 78\nused_blocks = 19\nremaining_blocks = total_blocks - used_blocks\nans = remaining_blocks",
            "# Python code, return ans\ntotal_blocks = 78\nblocks_used = 19\nblocks_left = total_blocks - blocks_used\nans = blocks_left"
        ],
        "results": [
            59.0,
            59.0,
            59.0
        ],
        "result_counter": {
            "59.0": 3
        },
        "prediction": 59.0
    },
    {
        "question": "Gino has 15 brown bears, 24 white bears, and 27 black bears. How many bears does Gino have?",
        "answer": 66,
        "generated": [
            "# Python code, return ans\nbrown_bears = 15\nwhite_bears = 24\nblack_bears = 27\ntotal_bears = brown_bears + white_bears + black_bears\nans = total_bears",
            "# Python code, return ans\nbrown_bears = 15\nwhite_bears = 24\nblack_bears = 27\ntotal_bears = brown_bears + white_bears + black_bears\nans = total_bears",
            "# Python code, return ans\nbrown_bears = 15\nwhite_bears = 24\nblack_bears = 27\ntotal_bears = brown_bears + white_bears + black_bears\nans = total_bears"
        ],
        "results": [
            66.0,
            66.0,
            66.0
        ],
        "result_counter": {
            "66.0": 3
        },
        "prediction": 66.0
    },
    {
        "question": "Morgan has 65 red pens, 45 blue pens, and 58 black pens. How many pens does she have?",
        "answer": 168,
        "generated": [
            "# Python code, return ans\nred_pens = 65\nblue_pens = 45\nblack_pens = 58\ntotal_pens = red_pens + blue_pens + black_pens\nans = total_pens",
            "# Python code, return ans\nred_pens = 65\nblue_pens = 45\nblack_pens = 58\ntotal_pens = red_pens + blue_pens + black_pens\nans = total_pens",
            "# Python code, return ans\nred_pens = 65\nblue_pens = 45\nblack_pens = 58\ntotal_pens = red_pens + blue_pens + black_pens\nans = total_pens"
        ],
        "results": [
            168.0,
            168.0,
            168.0
        ],
        "result_counter": {
            "168.0": 3
        },
        "prediction": 168.0
    },
    {
        "question": "Adi bought a pencil for 35 cents. He paid with a one-dollar bill. How much change will he get?",
        "answer": 65,
        "generated": [
            "# Python code, return ans\npencil_cost = 35\none_dollar = 100\nchange = one_dollar - pencil_cost\nans = change",
            "# Python code, return ans\npencil_cost = 35\none_dollar = 100\nchange = one_dollar - pencil_cost\nans = change",
            "# Python code, return ans\npencil_cost = 35\none_dollar = 100\nchange = one_dollar - pencil_cost\nans = change"
        ],
        "results": [
            65.0,
            65.0,
            65.0
        ],
        "result_counter": {
            "65.0": 3
        },
        "prediction": 65.0
    },
    {
        "question": "Bryan has 50 skittles. Ben has 20 M&M's. How many more does Brian have?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\nBryan_skittles = 50\nBen_MnMs = 20\ndifference = Bryan_skittles - Ben_MnMs\nans = difference",
            "# Python code, return ans\nBryan_skittles = 50\nBen_MnMs = 20\ndifference = Bryan_skittles - Ben_MnMs\nans = difference",
            "# Python code, return ans\nBryan_skittles = 50\nBen_MnMs = 20\ndifference = Bryan_skittles - Ben_MnMs\nans = difference"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "The train left for the station at 9:45 and arrived at 10:00. How long did it take?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\ndeparture_time = 9 * 60 + 45\narrival_time = 10 * 60\ntravel_time = arrival_time - departure_time\nans = travel_time",
            "# Python code, return ans\ndeparture_time = 9 * 60 + 45  # Convert to minutes\narrival_time = 10 * 60  # Convert to minutes\ntravel_time = arrival_time - departure_time\nans = travel_time",
            "# Python code, return ans\ndeparture_time = 9 * 60 + 45  # Convert to minutes\narrival_time = 10 * 60  # Convert to minutes\ntravel_time = arrival_time - departure_time\nans = travel_time"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "Charlie and his father, an engineer, decided to build a treehouse in their backyard. In order to start constructing the house, Charlie and his father needed to gather some wood from the forest. If they initially have 15 extra planks of wood in the house and Charlie and his father got 10 planks of wood each, how many pieces of wood do they have in total?",
        "answer": 35,
        "generated": [
            "# Python code, return ans\nextra_planks = 15\nCharlie_planks = 10\nfather_planks = 10\ntotal_planks = extra_planks + Charlie_planks + father_planks\nans = total_planks",
            "# Python code, return ans\ninitial_wood = 15\nCharlie_wood = 10\nfather_wood = 10\ntotal_wood = initial_wood + Charlie_wood + father_wood\nans = total_wood",
            "# Python code, return ans\nextra_planks = 15\nCharlie_planks = 10\nfather_planks = 10\ntotal_planks = extra_planks + Charlie_planks + father_planks\nans = total_planks"
        ],
        "results": [
            35.0,
            35.0,
            35.0
        ],
        "result_counter": {
            "35.0": 3
        },
        "prediction": 35.0
    },
    {
        "question": "While building the house, Charlie noticed that they were running out of nails so he told his father he's going to buy some. If they still have 9 nails left and Charlie bought 2 boxes of nails, the big one containing 55 nails and the small one containing 31, how many nails will they have?",
        "answer": 95,
        "generated": [
            "# Python code, return ans\nnails_left = 9\nbig_box_nails = 55\nsmall_box_nails = 31\ntotal_nails = nails_left + big_box_nails + small_box_nails\nans = total_nails",
            "# Python code, return ans\nnails_left = 9\nbig_box_nails = 55\nsmall_box_nails = 31\ntotal_nails = nails_left + big_box_nails + small_box_nails\nans = total_nails",
            "# Python code, return ans\nnails_left = 9\nbig_box_nails = 55\nsmall_box_nails = 31\ntotal_nails = nails_left + big_box_nails + small_box_nails\nans = total_nails"
        ],
        "results": [
            95.0,
            95.0,
            95.0
        ],
        "result_counter": {
            "95.0": 3
        },
        "prediction": 95.0
    },
    {
        "question": "To have a more stable treehouse, Charlie's father decided to tie the corner posts of the house to the tree itself. He used 24 inches of rope for the first post, 20 inches on the second, 14 inches on the third and 12 inches on the fourth. How many inches of rope were used?",
        "answer": 70,
        "generated": [
            "# Python code, return ans\nrope_first_post = 24\nrope_second_post = 20\nrope_third_post = 14\nrope_fourth_post = 12\ntotal_rope = rope_first_post + rope_second_post + rope_third_post + rope_fourth_post\nans = total_rope",
            "# Python code, return ans\nrope_first = 24\nrope_second = 20\nrope_third = 14\nrope_fourth = 12\ntotal_rope = rope_first + rope_second + rope_third + rope_fourth\nans = total_rope",
            "# Python code, return ans\nrope_first_post = 24\nrope_second_post = 20\nrope_third_post = 14\nrope_fourth_post = 12\ntotal_rope = rope_first_post + rope_second_post + rope_third_post + rope_fourth_post\nans = total_rope"
        ],
        "results": [
            70.0,
            70.0,
            70.0
        ],
        "result_counter": {
            "70.0": 3
        },
        "prediction": 70.0
    },
    {
        "question": "The treehouse is almost done; all they need is to paint it. His father estimated that they will use 20 ounces of white paint, 15 ounces of green paint and 34 ounces of brown paint. How many ounces of paint would they buy in total?",
        "answer": 69,
        "generated": [
            "# Python code, return ans\nwhite_paint = 20\ngreen_paint = 15\nbrown_paint = 34\ntotal_paint = white_paint + green_paint + brown_paint\nans = total_paint",
            "# Python code, return ans\nwhite_paint = 20\ngreen_paint = 15\nbrown_paint = 34\ntotal_paint = white_paint + green_paint + brown_paint\nans = total_paint",
            "# Python code, return ans\nwhite_paint = 20\ngreen_paint = 15\nbrown_paint = 34\ntotal_paint = white_paint + green_paint + brown_paint\nans = total_paint"
        ],
        "results": [
            69.0,
            69.0,
            69.0
        ],
        "result_counter": {
            "69.0": 3
        },
        "prediction": 69.0
    },
    {
        "question": "Upon finishing the treehouse, Charlie's mother served them freshly baked cookies. If Charlie ate 15 cookies, his father ate 10 and his mother only ate 5, how many cookies were eaten in total?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\nCharlie_cookies = 15\nfather_cookies = 10\nmother_cookies = 5\ntotal_cookies_eaten = Charlie_cookies + father_cookies + mother_cookies\nans = total_cookies_eaten",
            "# Python code, return ans\nCharlie_cookies = 15\nfather_cookies = 10\nmother_cookies = 5\ntotal_cookies_eaten = Charlie_cookies + father_cookies + mother_cookies\nans = total_cookies_eaten",
            "# Python code, return ans\nCharlie_cookies = 15\nFather_cookies = 10\nMother_cookies = 5\ntotal_cookies = Charlie_cookies + Father_cookies + Mother_cookies\nans = total_cookies"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "Annie is about to celebrate her birthday next week so her friends decided to throw her a surprise birthday party. Jessica, Annie's best friend, is hosting the party. She plans on making pizza for everyone. If she bought 15 pieces of pepperoni, 10 pieces of salami and 30 pieces of bacon as meat ingredients, how many pieces of meat did she buy in total?",
        "answer": 55,
        "generated": [
            "# Python code, return ans\npepperoni = 15\nsalami = 10\nbacon = 30\ntotal_meat = pepperoni + salami + bacon\nans = total_meat",
            "# Python code, return ans\npepperoni = 15\nsalami = 10\nbacon = 30\ntotal_meat = pepperoni + salami + bacon\nans = total_meat",
            "# Python code, return ans\npepperoni = 15\nsalami = 10\nbacon = 30\ntotal_meat = pepperoni + salami + bacon\nans = total_meat"
        ],
        "results": [
            55.0,
            55.0,
            55.0
        ],
        "result_counter": {
            "55.0": 3
        },
        "prediction": 55.0
    },
    {
        "question": "Andrew, Annie's other friend, was assigned with the preparation of appetizers. He decided to bring 30 hotdogs on sticks, 20 pieces of bite-sized cheese pops and 40 pieces of chicken nuggets. How many portions of appetizers did Andrew bring in all?",
        "answer": 90,
        "generated": [
            "# Python code, return ans\nhotdogs = 30\ncheese_pops = 20\nchicken_nuggets = 40\ntotal_appetizers = hotdogs + cheese_pops + chicken_nuggets\nans = total_appetizers",
            "# Python code, return ans\nhotdogs = 30\ncheese_pops = 20\nchicken_nuggets = 40\ntotal_appetizers = hotdogs + cheese_pops + chicken_nuggets\nans = total_appetizers",
            "# Python code, return ans\nhotdogs = 30\ncheese_pops = 20\nchicken_nuggets = 40\ntotal_appetizers = hotdogs + cheese_pops + chicken_nuggets\nans = total_appetizers"
        ],
        "results": [
            90.0,
            90.0,
            90.0
        ],
        "result_counter": {
            "90.0": 3
        },
        "prediction": 90.0
    },
    {
        "question": "Annie's mother has also been asked to be a part of the surprise. She was tasked to be in charge of drinks. She made 25 glasses of orange juice, 15 glasses of grape juice and 5 glasses of apple juice. How many glasses of juice would there be?",
        "answer": 45,
        "generated": [
            "# Python code, return ans\norange_juice = 25\ngrape_juice = 15\napple_juice = 5\ntotal_juice = orange_juice + grape_juice + apple_juice\nans = total_juice",
            "# Python code, return ans\norange_juice = 25\ngrape_juice = 15\napple_juice = 5\ntotal_juice = orange_juice + grape_juice + apple_juice\nans = total_juice",
            "# Python code, return ans\norange_juice = 25\ngrape_juice = 15\napple_juice = 5\ntotal_juice = orange_juice + grape_juice + apple_juice\nans = total_juice"
        ],
        "results": [
            45.0,
            45.0,
            45.0
        ],
        "result_counter": {
            "45.0": 3
        },
        "prediction": 45.0
    },
    {
        "question": "Annie's friends wanted to make sure that there will be enough utensils to go around. If they already have 10 spoons and 10 forks and they bought 30 more for forks and 20 more spoons, how many utensils do they have available for the party?",
        "answer": 70,
        "generated": [
            "# Python code, return ans\nspoons_initial = 10\nforks_initial = 10\nspoons_bought = 20\nforks_bought = 30\ntotal_utensils = spoons_initial + forks_initial + spoons_bought + forks_bought\nans = total_utensils",
            "# Python code, return ans\ninitial_spoons = 10\ninitial_forks = 10\nadditional_spoons = 20\nadditional_forks = 30\ntotal_spoons = initial_spoons + additional_spoons\ntotal_forks = initial_forks + additional_forks\ntotal_utensils = total_spoons + total_forks\nans = total_utensils",
            "# Python code, return ans\ninitial_spoons = 10\ninitial_forks = 10\nadditional_spoons = 20\nadditional_forks = 30\ntotal_spoons = initial_spoons + additional_spoons\ntotal_forks = initial_forks + additional_forks\ntotal_utensils = total_spoons + total_forks\nans = total_utensils"
        ],
        "results": [
            70.0,
            70.0,
            70.0
        ],
        "result_counter": {
            "70.0": 3
        },
        "prediction": 70.0
    },
    {
        "question": "On the actual day of Annie's birthday, almost everyone in her class came to surprise her. If Annie has 15 girl classmates, 20 boy classmates and 3 teachers in her class, how many people attended her birthday party?",
        "answer": 38,
        "generated": [
            "# Python code, return ans\ngirl_classmates = 15\nboy_classmates = 20\nteachers = 3\ntotal_attendees = girl_classmates + boy_classmates + teachers\nans = total_attendees",
            "# Python code, return ans\ngirl_classmates = 15\nboy_classmates = 20\nteachers = 3\ntotal_attendees = girl_classmates + boy_classmates + teachers\nans = total_attendees",
            "# Python code, return ans\ngirl_classmates = 15\nboy_classmates = 20\nteachers = 3\ntotal_attendance = girl_classmates + boy_classmates + teachers\nans = total_attendance"
        ],
        "results": [
            38.0,
            38.0,
            38.0
        ],
        "result_counter": {
            "38.0": 3
        },
        "prediction": 38.0
    },
    {
        "question": "It's Halloween in Chicago. Bob, Mary, John, Sue and Sam dressed as superheroes and went out to do some trick or treating. After passing through the houses on Main Street, the five friends counted how much candy they have. If Bob has 10 candies, Mary has 5, Sue has 20, John has 5 as well and Sam has also 10 candies. How many candies did they have together?",
        "answer": 50,
        "generated": [
            "# Python code, return ans\nBob_candies = 10\nMary_candies = 5\nSue_candies = 20\nJohn_candies = 5\nSam_candies = 10\ntotal_candies = Bob_candies + Mary_candies + Sue_candies + John_candies + Sam_candies\nans = total_candies",
            "# Python code, return ans\nBob_candies = 10\nMary_candies = 5\nSue_candies = 20\nJohn_candies = 5\nSam_candies = 10\ntotal_candies = Bob_candies + Mary_candies + Sue_candies + John_candies + Sam_candies\nans = total_candies",
            "# Python code, return ans\nBob_candies = 10\nMary_candies = 5\nSue_candies = 20\nJohn_candies = 5\nSam_candies = 10\ntotal_candies = Bob_candies + Mary_candies + Sue_candies + John_candies + Sam_candies\nans = total_candies"
        ],
        "results": [
            50.0,
            50.0,
            50.0
        ],
        "result_counter": {
            "50.0": 3
        },
        "prediction": 50.0
    },
    {
        "question": "The group then went on to check out the houses along Broadway Street and the scary Werewolf Avenue. After the long walk, they decided to count their candy again. If Mary has 5 chewing gums, Sam has 10 chewing gums and Sue has 15 chewing gums, how many chewing gums did the three have in all?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\nMary_chewing_gums = 5\nSam_chewing_gums = 10\nSue_chewing_gums = 15\ntotal_chewing_gums = Mary_chewing_gums + Sam_chewing_gums + Sue_chewing_gums\nans = total_chewing_gums",
            "# Python code, return ans\nMary_gums = 5\nSam_gums = 10\nSue_gums = 15\ntotal_gums = Mary_gums + Sam_gums + Sue_gums\nans = total_gums",
            "# Python code, return ans\nMary_chewing_gums = 5\nSam_chewing_gums = 10\nSue_chewing_gums = 15\ntotal_chewing_gums = Mary_chewing_gums + Sam_chewing_gums + Sue_chewing_gums\nans = total_chewing_gums"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "The friends then proceeded to the rest of the houses in their village. However, Sam had to go home earlier. She got her share of candies which are composed of 10 chewing gums, 15 chocolate bars, and 20 assorted fruit candies. How many candies did she get in total?",
        "answer": 45,
        "generated": [
            "# Python code, return ans\nchewing_gums = 10\nchocolate_bars = 15\nassorted_fruit_candies = 20\ntotal_candies = chewing_gums + chocolate_bars + assorted_fruit_candies\nans = total_candies",
            "# Python code, return ans\nchewing_gums = 10\nchocolate_bars = 15\nfruit_candies = 20\ntotal_candies = chewing_gums + chocolate_bars + fruit_candies\nans = total_candies",
            "# Python code, return ans\nchewing_gums = 10\nchocolate_bars = 15\nassorted_fruit_candies = 20\ntotal_candies = chewing_gums + chocolate_bars + assorted_fruit_candies\nans = total_candies"
        ],
        "results": [
            45.0,
            45.0,
            45.0
        ],
        "result_counter": {
            "45.0": 3
        },
        "prediction": 45.0
    },
    {
        "question": "Bob who is Sam's next door neighbor decided that he will accompany Sam home. He also took his share which consists of 15 chewing gums, 20 chocolate bars and 15 assorted candies. How many candies did he get?",
        "answer": 50,
        "generated": [
            "# Python code, return ans\nchewing_gums = 15\nchocolate_bars = 20\nassorted_candies = 15\ntotal_candies = chewing_gums + chocolate_bars + assorted_candies\nans = total_candies",
            "# Python code, return ans\nchewing_gums = 15\nchocolate_bars = 20\nassorted_candies = 15\ntotal_candies = chewing_gums + chocolate_bars + assorted_candies\nans = total_candies",
            "# Python code, return ans\nchewing_gums = 15\nchocolate_bars = 20\nassorted_candies = 15\ntotal_candies = chewing_gums + chocolate_bars + assorted_candies\nans = total_candies"
        ],
        "results": [
            50.0,
            50.0,
            50.0
        ],
        "result_counter": {
            "50.0": 3
        },
        "prediction": 50.0
    },
    {
        "question": "After Sam and Bob left, Mary, John and Sue decided to go home as well. They counted the total amount of treats that the three of them got. They were able to sort out 60 chewing gums, 55 chocolate bars and another 40 candies of different flavors. How many treats did Mary, John and Sue have in total?",
        "answer": 155,
        "generated": [
            "# Python code, return ans\nchewing_gums = 60\nchocolate_bars = 55\ncandies = 40\ntotal_treats = chewing_gums + chocolate_bars + candies\nans = total_treats",
            "# Python code, return ans\nchewing_gums = 60\nchocolate_bars = 55\ncandies = 40\ntotal_treats = chewing_gums + chocolate_bars + candies\nans = total_treats",
            "# Python code, return ans\nchewing_gums = 60\nchocolate_bars = 55\ncandies = 40\ntotal_treats = chewing_gums + chocolate_bars + candies\nans = total_treats"
        ],
        "results": [
            155.0,
            155.0,
            155.0
        ],
        "result_counter": {
            "155.0": 3
        },
        "prediction": 155.0
    },
    {
        "question": "It is Easter time and the kids in the neighborhood of Easterville are very excited about the annual Easter egg hunt. The parents have decided to hide the eggs in a lot of different places. They hid 55 eggs around the club house, 33 eggs around the village park and 22 eggs in the town hall garden. How many eggs were hidden in total?",
        "answer": 110,
        "generated": [
            "# Python code, return ans\neggs_club_house = 55\neggs_village_park = 33\neggs_town_hall_garden = 22\ntotal_eggs_hidden = eggs_club_house + eggs_village_park + eggs_town_hall_garden\nans = total_eggs_hidden",
            "# Python code, return ans\neggs_club_house = 55\neggs_village_park = 33\neggs_town_hall_garden = 22\ntotal_eggs = eggs_club_house + eggs_village_park + eggs_town_hall_garden\nans = total_eggs",
            "# Python code, return ans\neggs_club_house = 55\neggs_village_park = 33\neggs_town_hall_garden = 22\ntotal_eggs_hidden = eggs_club_house + eggs_village_park + eggs_town_hall_garden\nans = total_eggs_hidden"
        ],
        "results": [
            110.0,
            110.0,
            110.0
        ],
        "result_counter": {
            "110.0": 3
        },
        "prediction": 110.0
    },
    {
        "question": "Joe, one of the best Easter egg hunters, found 12 eggs around the club house, 5 eggs around the park and 3 eggs in the town hall garden. How many eggs did Joe find?",
        "answer": 20,
        "generated": [
            "# Python code, return ans\neggs_club_house = 12\neggs_park = 5\neggs_town_hall_garden = 3\ntotal_eggs = eggs_club_house + eggs_park + eggs_town_hall_garden\nans = total_eggs",
            "# Python code, return ans\neggs_club_house = 12\neggs_park = 5\neggs_town_hall_garden = 3\ntotal_eggs = eggs_club_house + eggs_park + eggs_town_hall_garden\nans = total_eggs",
            "# Python code, return ans\neggs_club_house = 12\neggs_park = 5\neggs_town_hall_garden = 3\ntotal_eggs = eggs_club_house + eggs_park + eggs_town_hall_garden\nans = total_eggs"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "The twins Ellie and Amy were able to locate 10 eggs around the club house, 4 eggs in the town hall garden and 6 more around the park. How many eggs do they have in total?",
        "answer": 20,
        "generated": [
            "# Python code, return ans\neggs_club_house = 10\neggs_town_hall_garden = 4\neggs_park = 6\ntotal_eggs = eggs_club_house + eggs_town_hall_garden + eggs_park\nans = total_eggs",
            "# Python code, return ans\neggs_club_house = 10\neggs_town_hall_garden = 4\neggs_park = 6\ntotal_eggs = eggs_club_house + eggs_town_hall_garden + eggs_park\nans = total_eggs",
            "# Python code, return ans\neggs_club_house = 10\neggs_town_hall_garden = 4\neggs_park = 6\ntotal_eggs = eggs_club_house + eggs_town_hall_garden + eggs_park\nans = total_eggs"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "The rest of the kids around town got 13 more eggs around the club house, 9 eggs around the park and 8 eggs in the town hall garden. If we add all the eggs that they got, how many eggs would that be?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\neggs_club_house = 13\neggs_park = 9\neggs_town_hall_garden = 8\ntotal_eggs = eggs_club_house + eggs_park + eggs_town_hall_garden\nans = total_eggs",
            "# Python code, return ans\neggs_club_house = 13\neggs_park = 9\neggs_town_hall_garden = 8\ntotal_eggs = eggs_club_house + eggs_park + eggs_town_hall_garden\nans = total_eggs",
            "# Python code, return ans\neggs_club_house = 13\neggs_park = 9\neggs_town_hall_garden = 8\ntotal_eggs = eggs_club_house + eggs_park + eggs_town_hall_garden\nans = total_eggs"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "If the all the participants found a total 40 eggs from the club house, 25 eggs from the park and 15 eggs from the town hall, how many Easter eggs were found that day?",
        "answer": 80,
        "generated": [
            "# Python code, return ans\neggs_club_house = 40\neggs_park = 25\neggs_town_hall = 15\ntotal_eggs = eggs_club_house + eggs_park + eggs_town_hall\nans = total_eggs",
            "# Python code, return ans\neggs_club_house = 40\neggs_park = 25\neggs_town_hall = 15\ntotal_eggs = eggs_club_house + eggs_park + eggs_town_hall\nans = total_eggs",
            "# Python code, return ans\neggs_club_house = 40\neggs_park = 25\neggs_town_hall = 15\ntotal_eggs = eggs_club_house + eggs_park + eggs_town_hall\nans = total_eggs"
        ],
        "results": [
            80.0,
            80.0,
            80.0
        ],
        "result_counter": {
            "80.0": 3
        },
        "prediction": 80.0
    },
    {
        "question": "Penny's class is going to Animaland, the largest zoo on earth, for their science field trip. The zoo has a variety of wild animals in captivity. Their first destination was the aviary. The aviary has 3 species of eagles on show that day. They have 20 Bald Eagles, 15 Harpy Eagles, and 30 Crowned Eagles. How many eagles are on display that day?",
        "answer": 65,
        "generated": [
            "# Python code, return ans\nBald_Eagles = 20\nHarpy_Eagles = 15\nCrowned_Eagles = 30\ntotal_eagles = Bald_Eagles + Harpy_Eagles + Crowned_Eagles\nans = total_eagles",
            "# Python code, return ans\nBald_Eagles = 20\nHarpy_Eagles = 15\nCrowned_Eagles = 30\ntotal_eagles = Bald_Eagles + Harpy_Eagles + Crowned_Eagles\nans = total_eagles",
            "# Python code, return ans\nBald_eagles = 20\nHarpy_eagles = 15\nCrowned_eagles = 30\ntotal_eagles = Bald_eagles + Harpy_eagles + Crowned_eagles\nans = total_eagles"
        ],
        "results": [
            65.0,
            65.0,
            65.0
        ],
        "result_counter": {
            "65.0": 3
        },
        "prediction": 65.0
    },
    {
        "question": "After the aviary was the zoo's swamp area. Penny counted a total of 55 tree frogs, 10 poison frogs and 13 wood frogs. How many frogs was Penny able to count?",
        "answer": 78,
        "generated": [
            "# Python code, return ans\ntree_frogs = 55\npoison_frogs = 10\nwood_frogs = 13\ntotal_frogs = tree_frogs + poison_frogs + wood_frogs\nans = total_frogs",
            "# Python code, return ans\ntree_frogs = 55\npoison_frogs = 10\nwood_frogs = 13\ntotal_frogs = tree_frogs + poison_frogs + wood_frogs\nans = total_frogs",
            "# Python code, return ans\ntree_frogs = 55\npoison_frogs = 10\nwood_frogs = 13\ntotal_frogs = tree_frogs + poison_frogs + wood_frogs\nans = total_frogs"
        ],
        "results": [
            78.0,
            78.0,
            78.0
        ],
        "result_counter": {
            "78.0": 3
        },
        "prediction": 78.0
    },
    {
        "question": "Aside from frogs, the swamp area is also home to a few dangerous animals. Penny's teacher pointed out 22 crocodiles, 23 alligators and 5 vipers. How many dangerous animals did the teacher point out in total?",
        "answer": 50,
        "generated": [
            "# Python code, return ans\ncrocodiles = 22\nalligators = 23\nvipers = 5\ntotal_dangerous_animals = crocodiles + alligators + vipers\nans = total_dangerous_animals",
            "# Python code, return ans\ncrocodiles = 22\nalligators = 23\nvipers = 5\ntotal_dangerous_animals = crocodiles + alligators + vipers\nans = total_dangerous_animals",
            "# Python code, return ans\ncrocodiles = 22\nalligators = 23\nvipers = 5\ntotal_dangerous_animals = crocodiles + alligators + vipers\nans = total_dangerous_animals"
        ],
        "results": [
            50.0,
            50.0,
            50.0
        ],
        "result_counter": {
            "50.0": 3
        },
        "prediction": 50.0
    },
    {
        "question": "Next in their itinerary was the insectarium, home to hundreds of insect species. Penny, who likes butterflies and ants, took pictures of the different species. She was able to capture 60 species of butterflies, 15 species of ants and 20 species of other insects. How many species of insects did Penny capture?",
        "answer": 95,
        "generated": [
            "# Python code, return ans\nbutterflies = 60\nants = 15\nother_insects = 20\ntotal_species = butterflies + ants + other_insects\nans = total_species",
            "# Python code, return ans\nbutterfly_species = 60\nant_species = 15\nother_species = 20\ntotal_species = butterfly_species + ant_species + other_species\nans = total_species",
            "# Python code, return ans\nbutterfly_species = 60\nant_species = 15\nother_insects_species = 20\ntotal_species = butterfly_species + ant_species + other_insects_species\nans = total_species"
        ],
        "results": [
            95.0,
            95.0,
            95.0
        ],
        "result_counter": {
            "95.0": 3
        },
        "prediction": 95.0
    },
    {
        "question": "Last stop in their field trip was the aquarium. Penny identified 35 species of sharks, 15 species of eels and 5 different species of whales. How many species was Penny able to identify?",
        "answer": 55,
        "generated": [
            "# Python code, return ans\nshark_species = 35\neel_species = 15\nwhale_species = 5\ntotal_species = shark_species + eel_species + whale_species\nans = total_species",
            "# Python code, return ans\nshark_species = 35\neel_species = 15\nwhale_species = 5\ntotal_species = shark_species + eel_species + whale_species\nans = total_species",
            "# Python code, return ans\nshark_species = 35\neel_species = 15\nwhale_species = 5\ntotal_species = shark_species + eel_species + whale_species\nans = total_species"
        ],
        "results": [
            55.0,
            55.0,
            55.0
        ],
        "result_counter": {
            "55.0": 3
        },
        "prediction": 55.0
    },
    {
        "question": "Marcus and his friends are starting a recycling project to help the school raise some money for charity. They were tasked to collect different materials and create useful things from those. If Marcus was able to gather 25 milk bottles, and John was able to gather 20 milk bottles, how many milk bottles do they have available for recycling?",
        "answer": 45,
        "generated": [
            "# Python code, return ans\nMarcus_milk_bottles = 25\nJohn_milk_bottles = 20\ntotal_milk_bottles = Marcus_milk_bottles + John_milk_bottles\nans = total_milk_bottles",
            "# Python code, return ans\nMarcus_bottles = 25\nJohn_bottles = 20\ntotal_bottles = Marcus_bottles + John_bottles\nans = total_bottles",
            "# Python code, return ans\nMarcus_bottles = 25\nJohn_bottles = 20\ntotal_bottles = Marcus_bottles + John_bottles\nans = total_bottles"
        ],
        "results": [
            45.0,
            45.0,
            45.0
        ],
        "result_counter": {
            "45.0": 3
        },
        "prediction": 45.0
    },
    {
        "question": "Chris, tasked to lead the newspaper collection, was able to obtain 42 newspapers from their neighborhood. If his sister Lily helped him and was able to get 23 more newspapers from another block, how many newspapers were they able to collect together?",
        "answer": 65,
        "generated": [
            "# Python code, return ans\nChris_newspapers = 42\nLily_newspapers = 23\ntotal_newspapers = Chris_newspapers + Lily_newspapers\nans = total_newspapers",
            "# Python code, return ans\nChris_newspapers = 42\nLily_newspapers = 23\ntotal_newspapers = Chris_newspapers + Lily_newspapers\nans = total_newspapers",
            "# Python code, return ans\nChris_newspapers = 42\nLily_newspapers = 23\ntotal_newspapers = Chris_newspapers + Lily_newspapers\nans = total_newspapers"
        ],
        "results": [
            65.0,
            65.0,
            65.0
        ],
        "result_counter": {
            "65.0": 3
        },
        "prediction": 65.0
    },
    {
        "question": "Andy, another part of the recycling team decided he would gather tin foil wrappers. If he was able to pick up 34 wrappers around the village dumpster and his best friend Max was able to collect 15, how many wrappers were gathered in total?",
        "answer": 49,
        "generated": [
            "# Python code, return ans\nAndy_wrappers = 34\nMax_wrappers = 15\ntotal_wrappers = Andy_wrappers + Max_wrappers\nans = total_wrappers",
            "# Python code, return ans\nAndy_wrappers = 34\nMax_wrappers = 15\ntotal_wrappers = Andy_wrappers + Max_wrappers\nans = total_wrappers",
            "# Python code, return ans\nAndy_wrappers = 34\nMax_wrappers = 15\ntotal_wrappers = Andy_wrappers + Max_wrappers\nans = total_wrappers"
        ],
        "results": [
            49.0,
            49.0,
            49.0
        ],
        "result_counter": {
            "49.0": 3
        },
        "prediction": 49.0
    },
    {
        "question": "After collecting materials, they started making recycled products to sell during the school's recycling fair. If Marcus made 26 pen holders from the milk bottles and Annie was able to make 37, how many pen holders were made?",
        "answer": 63,
        "generated": [
            "# Python code, return ans\nMarcus_pen_holders = 26\nAnnie_pen_holders = 37\ntotal_pen_holders = Marcus_pen_holders + Annie_pen_holders\nans = total_pen_holders",
            "# Python code, return ans\nMarcus_pen_holders = 26\nAnnie_pen_holders = 37\ntotal_pen_holders = Marcus_pen_holders + Annie_pen_holders\nans = total_pen_holders",
            "# Python code, return ans\nMarcus_pen_holders = 26\nAnnie_pen_holders = 37\ntotal_pen_holders = Marcus_pen_holders + Annie_pen_holders\nans = total_pen_holders"
        ],
        "results": [
            63.0,
            63.0,
            63.0
        ],
        "result_counter": {
            "63.0": 3
        },
        "prediction": 63.0
    },
    {
        "question": "If the group was able to make 65 recycled materials from what they gathered and the teachers were able to make 28, how many recycled products will they be able to sell at the fair?",
        "answer": 93,
        "generated": [
            "# Python code, return ans\ngroup_recycled = 65\nteacher_recycled = 28\ntotal_recycled = group_recycled + teacher_recycled\nans = total_recycled",
            "# Python code, return ans\ngroup_recycled_materials = 65\nteachers_recycled_materials = 28\ntotal_recycled_products = group_recycled_materials + teachers_recycled_materials\nans = total_recycled_products",
            "# Python code, return ans\ngroup_recycled = 65\nteacher_recycled = 28\ntotal_recycled = group_recycled + teacher_recycled\nans = total_recycled"
        ],
        "results": [
            93.0,
            93.0,
            93.0
        ],
        "result_counter": {
            "93.0": 3
        },
        "prediction": 93.0
    },
    {
        "question": "Robyn and Lucy are members of their village's Girl Scout troop. During weekends and some weekdays, they go around selling cookies in the neighborhood. They have a week before the month ends and they are doing their best to get a badge from selling cookies. Working overtime, Robyn sold 47 packs of cookies while Lucy sold 29. How many packs of cookies were they able to sell that day?",
        "answer": 76,
        "generated": [
            "# Python code, return ans\nRobyn_sold = 47\nLucy_sold = 29\ntotal_sold = Robyn_sold + Lucy_sold\nans = total_sold",
            "# Python code, return ans\nRobyn_cookies = 47\nLucy_cookies = 29\ntotal_cookies_sold = Robyn_cookies + Lucy_cookies\nans = total_cookies_sold",
            "# Python code, return ans\nRobyn_cookies = 47\nLucy_cookies = 29\ntotal_cookies = Robyn_cookies + Lucy_cookies\nans = total_cookies"
        ],
        "results": [
            76.0,
            76.0,
            76.0
        ],
        "result_counter": {
            "76.0": 3
        },
        "prediction": 76.0
    },
    {
        "question": "Because of an upcoming exam, Robyn will not be able to sell cookies on Tuesday. To make up for it, Lucy decided to do double the work to catch up. She sold 34 cookies on her first round and 27 on her second round. How many cookies were sold by Lucy?",
        "answer": 61,
        "generated": [
            "# Python code, return ans\nfirst_round_cookies = 34\nsecond_round_cookies = 27\ntotal_cookies_sold = first_round_cookies + second_round_cookies\nans = total_cookies_sold",
            "# Python code, return ans\nfirst_round = 34\nsecond_round = 27\ntotal_cookies = first_round + second_round\nans = total_cookies",
            "# Python code, return ans\nfirst_round_cookies = 34\nsecond_round_cookies = 27\ntotal_cookies_sold = first_round_cookies + second_round_cookies\nans = total_cookies_sold"
        ],
        "results": [
            61.0,
            61.0,
            61.0
        ],
        "result_counter": {
            "61.0": 3
        },
        "prediction": 61.0
    },
    {
        "question": "Still a little behind, Robyn asked her mother to drive them around town on Wednesday to cover more houses. That day Robyn sold 55 packs of cookies while Lucy sold 43. How many packs were they able to sell that day?",
        "answer": 98,
        "generated": [
            "# Python code, return ans\nRobyn_sold = 55\nLucy_sold = 43\ntotal_sold = Robyn_sold + Lucy_sold\nans = total_sold",
            "# Python code, return ans\nRobyn_cookies = 55\nLucy_cookies = 43\ntotal_cookies = Robyn_cookies + Lucy_cookies\nans = total_cookies",
            "# Python code, return ans\nRobyn_sold = 55\nLucy_sold = 43\ntotal_sold = Robyn_sold + Lucy_sold\nans = total_sold"
        ],
        "results": [
            98.0,
            98.0,
            98.0
        ],
        "result_counter": {
            "98.0": 3
        },
        "prediction": 98.0
    },
    {
        "question": "With the end of the month coming in two days, they decided to sell cookies to the neighboring villages as well. If they sold 23 packs on one village and 28 on the other, how many cookies were they able to sell in the other villages?",
        "answer": 51,
        "generated": [
            "# Python code, return ans\npacks_sold_village1 = 23\npacks_sold_village2 = 28\ntotal_packs_sold_other_villages = packs_sold_village1 + packs_sold_village2\nans = total_packs_sold_other_villages",
            "# Python code, return ans\nsold_village1 = 23\nsold_village2 = 28\ntotal_sold_other_villages = sold_village1 + sold_village2\nans = total_sold_other_villages",
            "# Python code, return ans\ncookies_sold_village1 = 23\ncookies_sold_village2 = 28\ntotal_cookies_sold = cookies_sold_village1 + cookies_sold_village2\nans = total_cookies_sold"
        ],
        "results": [
            51.0,
            51.0,
            51.0
        ],
        "result_counter": {
            "51.0": 3
        },
        "prediction": 51.0
    },
    {
        "question": "On the day of the awarding ceremony, Robyn and Lucy decided to sell more cookies during the morning to make sure they get the badge. Lucy sold 19 packs and Robyn sold 16. How many packs did they sell on their last day?",
        "answer": 35,
        "generated": [
            "# Python code, return ans\nLucy_sold = 19\nRobyn_sold = 16\ntotal_sold = Lucy_sold + Robyn_sold\nans = total_sold",
            "# Python code, return ans\nLucy_packs = 19\nRobyn_packs = 16\ntotal_packs = Lucy_packs + Robyn_packs\nans = total_packs",
            "# Python code, return ans\nLucy_sold = 19\nRobyn_sold = 16\ntotal_sold = Lucy_sold + Robyn_sold\nans = total_sold"
        ],
        "results": [
            35.0,
            35.0,
            35.0
        ],
        "result_counter": {
            "35.0": 3
        },
        "prediction": 35.0
    },
    {
        "question": "It's Earth Awareness Day and the town of Flora is celebrating by planting trees in areas where the forest has been damaged. Mayor Fauna, leader of the town of Flora, donated 27 oak tree seedlings and 16 seedlings of holly. How many seedlings did he donate altogether?",
        "answer": 43,
        "generated": [
            "# Python code, return ans\noak_tree_seedlings = 27\nholly_seedlings = 16\ntotal_seedlings = oak_tree_seedlings + holly_seedlings\nans = total_seedlings",
            "# Python code, return ans\noak_tree_seedlings = 27\nholly_seedlings = 16\ntotal_seedlings = oak_tree_seedlings + holly_seedlings\nans = total_seedlings",
            "# Python code, return ans\noak_tree_seedlings = 27\nholly_seedlings = 16\ntotal_seedlings = oak_tree_seedlings + holly_seedlings\nans = total_seedlings"
        ],
        "results": [
            43.0,
            43.0,
            43.0
        ],
        "result_counter": {
            "43.0": 3
        },
        "prediction": 43.0
    },
    {
        "question": "Mr. Fortree, a businessman also gave seedlings for the tree planting activity. If he gave 14 seedlings of cedar and 38 seedlings of pine, how many seedlings did he give in total?",
        "answer": 52,
        "generated": [
            "# Python code, return ans\ncedar_seedlings = 14\npine_seedlings = 38\ntotal_seedlings = cedar_seedlings + pine_seedlings\nans = total_seedlings",
            "# Python code, return ans\ncedar_seedlings = 14\npine_seedlings = 38\ntotal_seedlings = cedar_seedlings + pine_seedlings\nans = total_seedlings",
            "# Python code, return ans\ncedar_seedlings = 14\npine_seedlings = 38\ntotal_seedlings = cedar_seedlings + pine_seedlings\nans = total_seedlings"
        ],
        "results": [
            52.0,
            52.0,
            52.0
        ],
        "result_counter": {
            "52.0": 3
        },
        "prediction": 52.0
    },
    {
        "question": "Students from Flora Middle School were asked to participate in the event. They planted 47 apple trees and 27 orange trees in the forest near their school. How many trees in total did the students plant?",
        "answer": 74,
        "generated": [
            "# Python code, return ans\napple_trees = 47\norange_trees = 27\ntotal_trees = apple_trees + orange_trees\nans = total_trees",
            "# Python code, return ans\napple_trees = 47\norange_trees = 27\ntotal_trees = apple_trees + orange_trees\nans = total_trees",
            "# Python code, return ans\napple_trees = 47\norange_trees = 27\ntotal_trees = apple_trees + orange_trees\nans = total_trees"
        ],
        "results": [
            74.0,
            74.0,
            74.0
        ],
        "result_counter": {
            "74.0": 3
        },
        "prediction": 74.0
    },
    {
        "question": "Rangers from Flora Natural Park and Wildlife Reserve also joined the activities on that day. They planted 75 redwood trees and 25 cypress trees to replace the trees that were destroyed during a recent forest fire. How many trees did the rangers plant?",
        "answer": 100,
        "generated": [
            "# Python code, return ans\nredwood_trees = 75\ncypress_trees = 25\ntotal_trees_planted = redwood_trees + cypress_trees\nans = total_trees_planted",
            "# Python code, return ans\nredwood_trees = 75\ncypress_trees = 25\ntotal_trees_planted = redwood_trees + cypress_trees\nans = total_trees_planted",
            "# Python code, return ans\nredwood_trees = 75\ncypress_trees = 25\ntotal_trees_planted = redwood_trees + cypress_trees\nans = total_trees_planted"
        ],
        "results": [
            100.0,
            100.0,
            100.0
        ],
        "result_counter": {
            "100.0": 3
        },
        "prediction": 100.0
    },
    {
        "question": "Professor Treehead of the Flora University requested his students to participate. He said that they planted 15 species of trees in the natural park, 20 species of trees in the neighboring forest and 10 species of trees all around different locations in town. How many species of trees were planted by the students?",
        "answer": 45,
        "generated": [
            "# Python code, return ans\ntrees_natural_park = 15\ntrees_neighboring_forest = 20\ntrees_town = 10\ntotal_trees = trees_natural_park + trees_neighboring_forest + trees_town\nans = total_trees",
            "# Python code, return ans\ntrees_natural_park = 15\ntrees_neighboring_forest = 20\ntrees_town = 10\ntotal_species = trees_natural_park + trees_neighboring_forest + trees_town\nans = total_species",
            "# Python code, return ans\ntrees_natural_park = 15\ntrees_forest = 20\ntrees_town = 10\ntotal_trees = trees_natural_park + trees_forest + trees_town\nans = total_trees"
        ],
        "results": [
            45.0,
            45.0,
            45.0
        ],
        "result_counter": {
            "45.0": 3
        },
        "prediction": 45.0
    },
    {
        "question": "Hazel and her father both love going on fishing trips. This year, they planned to go around the Great Lakes for a unique fishing experience. Their first stop is Lake Ontario. Hazel and her father decided to have a contest between them. If Hazel caught 24 salmons and her dad caught 27, how many salmons did they catch in total?",
        "answer": 51,
        "generated": [
            "# Python code, return ans\nHazel_salmons = 24\nDad_salmons = 27\ntotal_salmons = Hazel_salmons + Dad_salmons\nans = total_salmons",
            "# Python code, return ans\nHazel_salmons = 24\nDad_salmons = 27\ntotal_salmons = Hazel_salmons + Dad_salmons\nans = total_salmons",
            "# Python code, return ans\nHazel_salmons = 24\nDad_salmons = 27\ntotal_salmons = Hazel_salmons + Dad_salmons\nans = total_salmons"
        ],
        "results": [
            51.0,
            51.0,
            51.0
        ],
        "result_counter": {
            "51.0": 3
        },
        "prediction": 51.0
    },
    {
        "question": "Their next destination is Lake Erie. Still in a contest, Hazel caught 48 different fishes while her father caught 46. How many fishes did they catch in Lake Erie?",
        "answer": 94,
        "generated": [
            "# Python code, return ans\nHazel_fishes = 48\nfather_fishes = 46\ntotal_fishes = Hazel_fishes + father_fishes\nans = total_fishes",
            "# Python code, return ans\nHazel_fishes = 48\nfather_fishes = 46\ntotal_fishes = Hazel_fishes + father_fishes\nans = total_fishes",
            "# Python code, return ans\nHazel_fishes = 48\nFather_fishes = 46\ntotal_fishes = Hazel_fishes + Father_fishes\nans = total_fishes"
        ],
        "results": [
            94.0,
            94.0,
            94.0
        ],
        "result_counter": {
            "94.0": 3
        },
        "prediction": 94.0
    },
    {
        "question": "The following week, they decided to go to Lake Huron and Lake Michigan. During their stay there, they caught a total of 30 pikes, 40 sturgeons and 75 herrings. How many fishes did they catch from the two lakes?",
        "answer": 145,
        "generated": [
            "# Python code, return ans\npike_num = 30\nsturgeon_num = 40\nherring_num = 75\ntotal_fish = pike_num + sturgeon_num + herring_num\nans = total_fish",
            "# Python code, return ans\npike_num = 30\nsturgeon_num = 40\nherring_num = 75\ntotal_fish = pike_num + sturgeon_num + herring_num\nans = total_fish",
            "# Python code, return ans\npike_num = 30\nsturgeon_num = 40\nherring_num = 75\ntotal_fish = pike_num + sturgeon_num + herring_num\nans = total_fish"
        ],
        "results": [
            145.0,
            145.0,
            145.0
        ],
        "result_counter": {
            "145.0": 3
        },
        "prediction": 145.0
    },
    {
        "question": "Their last stop was the largest of them all, Lake Superior. Tired with their travels, they decided to do less fishing and enjoy the lake's beauty instead. They were able to catch 15 catfishes, 20 sturgeons, 25 pikes and 10 eels. How many fishes were caught from Lake Superior?",
        "answer": 70,
        "generated": [
            "# Python code, return ans\ncatfishes = 15\nsturgeons = 20\npikes = 25\neels = 10\ntotal_fishes = catfishes + sturgeons + pikes + eels\nans = total_fishes",
            "# Python code, return ans\ncatfishes = 15\nsturgeons = 20\npikes = 25\neels = 10\ntotal_fishes = catfishes + sturgeons + pikes + eels\nans = total_fishes",
            "# Python code, return ans\ncatfish = 15\nsturgeon = 20\npike = 25\neel = 10\ntotal_fish = catfish + sturgeon + pike + eel\nans = total_fish"
        ],
        "results": [
            70.0,
            70.0,
            70.0
        ],
        "result_counter": {
            "70.0": 3
        },
        "prediction": 70.0
    },
    {
        "question": "Being concerned with the ecology of lakes, Hazel and her dad returned the youngling fishes they caught. If they took 23 fishes from Lake Ontario and Erie, 30 fishes from Lake Huron and Michigan and 44 from Lake Superior, how many fishes will they bring home with them?",
        "answer": 97,
        "generated": [
            "# Python code, return ans\nfishes_Ontario_Erie = 23\nfishes_Huron_Michigan = 30\nfishes_Superior = 44\ntotal_fishes = fishes_Ontario_Erie + fishes_Huron_Michigan + fishes_Superior\nans = total_fishes",
            "# Python code, return ans\nLake_Ontario_Erie = 23\nLake_Huron_Michigan = 30\nLake_Superior = 44\ntotal_fishes = Lake_Ontario_Erie + Lake_Huron_Michigan + Lake_Superior\nans = total_fishes",
            "# Python code, return ans\nLake_Ontario_Erie = 23\nLake_Huron_Michigan = 30\nLake_Superior = 44\ntotal_fishes = Lake_Ontario_Erie + Lake_Huron_Michigan + Lake_Superior\nans = total_fishes"
        ],
        "results": [
            97.0,
            97.0,
            97.0
        ],
        "result_counter": {
            "97.0": 3
        },
        "prediction": 97.0
    },
    {
        "question": "It is Buddy's first day at a new school and he is feeling very nervous. His day begins with some bacon and egg prepared by his mother. After eating and preparing, Buddy headed out to catch the school bus from the nearest bus stop. Including Buddy, there were 39 students that got on the bus during the first stop. If 29 more students got on the bus at the second stop, how many students are riding the bus?",
        "answer": 68,
        "generated": [
            "# Python code, return ans\nstudents_first_stop = 39\nstudents_second_stop = 29\ntotal_students = students_first_stop + students_second_stop\nans = total_students",
            "# Python code, return ans\nstudents_first_stop = 39\nstudents_second_stop = 29\ntotal_students = students_first_stop + students_second_stop\nans = total_students",
            "# Python code, return ans\nfirst_stop_students = 39\nsecond_stop_students = 29\ntotal_students = first_stop_students + second_stop_students\nans = total_students"
        ],
        "results": [
            68.0,
            68.0,
            68.0
        ],
        "result_counter": {
            "68.0": 3
        },
        "prediction": 68.0
    },
    {
        "question": "Upon arriving at the school, Buddy immediately went to his teacher where he was introduced to all the third grade students in the school. There were 57 girl students and 66 boy students. How many third graders did Buddy meet in the school?",
        "answer": 123,
        "generated": [
            "# Python code, return ans\ngirl_students = 57\nboy_students = 66\ntotal_students = girl_students + boy_students\nans = total_students",
            "# Python code, return ans\ngirl_students = 57\nboy_students = 66\ntotal_students = girl_students + boy_students\nans = total_students",
            "# Python code, return ans\ngirl_students = 57\nboy_students = 66\ntotal_students = girl_students + boy_students\nans = total_students"
        ],
        "results": [
            123.0,
            123.0,
            123.0
        ],
        "result_counter": {
            "123.0": 3
        },
        "prediction": 123.0
    },
    {
        "question": "During recess, Buddy went to the cafeteria where he met other students from different grades. If he met 14 second grade students, 10 fourth grade students and 16 fifth grade students, how many more students did Buddy meet during recess?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\nsecond_grade_students = 14\nfourth_grade_students = 10\nfifth_grade_students = 16\ntotal_students_met = second_grade_students + fourth_grade_students + fifth_grade_students\nans = total_students_met",
            "# Python code, return ans\nsecond_grade_students = 14\nfourth_grade_students = 10\nfifth_grade_students = 16\ntotal_students_met = second_grade_students + fourth_grade_students + fifth_grade_students\nans = total_students_met",
            "# Python code, return ans\nsecond_grade_students = 14\nfourth_grade_students = 10\nfifth_grade_students = 16\ntotal_students_met = second_grade_students + fourth_grade_students + fifth_grade_students\nans = total_students_met"
        ],
        "results": [
            40.0,
            40.0,
            40.0
        ],
        "result_counter": {
            "40.0": 3
        },
        "prediction": 40.0
    },
    {
        "question": "After recess, Buddy changed clothes for gym class. Down at the gym, all the students were divided into two groups. If one group has 34 members and the other has 37, how many students are in Buddy's gym class?",
        "answer": 71,
        "generated": [
            "# Python code, return ans\ngroup1 = 34\ngroup2 = 37\ntotal_students = group1 + group2\nans = total_students",
            "# Python code, return ans\ngroup1_members = 34\ngroup2_members = 37\ntotal_members = group1_members + group2_members\nans = total_members",
            "# Python code, return ans\ngroup1_members = 34\ngroup2_members = 37\ntotal_members = group1_members + group2_members\nans = total_members"
        ],
        "results": [
            71.0,
            71.0,
            71.0
        ],
        "result_counter": {
            "71.0": 3
        },
        "prediction": 71.0
    },
    {
        "question": "After the final bell rang, Buddy ran to the school bus with his new friends. On his ride home, he counted 36 students sitting on the left side of the bus and 27 sitting on the right. How many students are on the bus ride home?",
        "answer": 63,
        "generated": [
            "# Python code, return ans\nstudents_left_side = 36\nstudents_right_side = 27\ntotal_students = students_left_side + students_right_side\nans = total_students",
            "# Python code, return ans\nleft_side_students = 36\nright_side_students = 27\ntotal_students = left_side_students + right_side_students\nans = total_students",
            "# Python code, return ans\nleft_side_students = 36\nright_side_students = 27\ntotal_students = left_side_students + right_side_students\nans = total_students"
        ],
        "results": [
            63.0,
            63.0,
            63.0
        ],
        "result_counter": {
            "63.0": 3
        },
        "prediction": 63.0
    },
    {
        "question": "Helen the Hippo and her friends are preparing for Thanksgiving at Helen's house. Helen baked 435 chocolate chip cookies yesterday and 139 cookies this morning. How many cookies did Helen bake?",
        "answer": 574,
        "generated": [
            "# Python code, return ans\ncookies_yesterday = 435\ncookies_today = 139\ntotal_cookies = cookies_yesterday + cookies_today\nans = total_cookies",
            "# Python code, return ans\ncookies_yesterday = 435\ncookies_today = 139\ntotal_cookies = cookies_yesterday + cookies_today\nans = total_cookies",
            "# Python code, return ans\ncookies_yesterday = 435\ncookies_today = 139\ntotal_cookies = cookies_yesterday + cookies_today\nans = total_cookies"
        ],
        "results": [
            574.0,
            574.0,
            574.0
        ],
        "result_counter": {
            "574.0": 3
        },
        "prediction": 574.0
    },
    {
        "question": "Pinky the Pig bought 36 apples while Danny the Duck bought 73. How many apples do they have altogether?",
        "answer": 109,
        "generated": [
            "# Python code, return ans\nPinky_apples = 36\nDanny_apples = 73\ntotal_apples = Pinky_apples + Danny_apples\nans = total_apples",
            "# Python code, return ans\nPinky_apples = 36\nDanny_apples = 73\ntotal_apples = Pinky_apples + Danny_apples\nans = total_apples",
            "# Python code, return ans\nPinky_apples = 36\nDanny_apples = 73\ntotal_apples = Pinky_apples + Danny_apples\nans = total_apples"
        ],
        "results": [
            109.0,
            109.0,
            109.0
        ],
        "result_counter": {
            "109.0": 3
        },
        "prediction": 109.0
    },
    {
        "question": "Dylan the Dog prepared 241 hotdog sticks in a brown bag. His father placed 426 more hotdog sticks in the same brown bag. How many hotdog sticks did Dylan and his father place in the brown bag?",
        "answer": 667,
        "generated": [
            "# Python code, return ans\nDylan_hotdog_sticks = 241\nfather_hotdog_sticks = 426\ntotal_hotdog_sticks = Dylan_hotdog_sticks + father_hotdog_sticks\nans = total_hotdog_sticks",
            "# Python code, return ans\nDylan_hotdog_sticks = 241\nfather_hotdog_sticks = 426\ntotal_hotdog_sticks = Dylan_hotdog_sticks + father_hotdog_sticks\nans = total_hotdog_sticks",
            "# Python code, return ans\nDylan_hotdog_sticks = 241\nFather_hotdog_sticks = 426\ntotal_hotdog_sticks = Dylan_hotdog_sticks + Father_hotdog_sticks\nans = total_hotdog_sticks"
        ],
        "results": [
            667.0,
            667.0,
            667.0
        ],
        "result_counter": {
            "667.0": 3
        },
        "prediction": 667.0
    },
    {
        "question": "Helen's mother brought 101 hotdogs. After a few hours, Dylan's mother arrived with 379 hotdogs. How many hotdogs do they have altogether?",
        "answer": 480,
        "generated": [
            "# Python code, return ans\nHelen_hotdogs = 101\nDylan_hotdogs = 379\ntotal_hotdogs = Helen_hotdogs + Dylan_hotdogs\nans = total_hotdogs",
            "# Python code, return ans\nHelen_hotdogs = 101\nDylan_hotdogs = 379\ntotal_hotdogs = Helen_hotdogs + Dylan_hotdogs\nans = total_hotdogs",
            "# Python code, return ans\nHelen_mother_hotdogs = 101\nDylan_mother_hotdogs = 379\ntotal_hotdogs = Helen_mother_hotdogs + Dylan_mother_hotdogs\nans = total_hotdogs"
        ],
        "results": [
            480.0,
            480.0,
            480.0
        ],
        "result_counter": {
            "480.0": 3
        },
        "prediction": 480.0
    },
    {
        "question": "Pinky made 147 miniature pumpkin pies for everyone and Helen made 56. How many miniature pies do they have in total?",
        "answer": 203,
        "generated": [
            "# Python code, return ans\nPinky_pies = 147\nHelen_pies = 56\ntotal_pies = Pinky_pies + Helen_pies\nans = total_pies",
            "# Python code, return ans\nPinky_pies = 147\nHelen_pies = 56\ntotal_pies = Pinky_pies + Helen_pies\nans = total_pies",
            "# Python code, return ans\nPinky_pies = 147\nHelen_pies = 56\ntotal_pies = Pinky_pies + Helen_pies\nans = total_pies"
        ],
        "results": [
            203.0,
            203.0,
            203.0
        ],
        "result_counter": {
            "203.0": 3
        },
        "prediction": 203.0
    },
    {
        "question": "It's spring break at Rosewood High so Rachel and her family decided to take a trip across Europe. Since Rachel has always been fascinated by the French people, they began their tour with a visit to France. During their stay there, Rachel went to the famous Eiffel Tower. If she climbed 567 flights of stairs going up and 325 going down, what is the total number of steps that she took?",
        "answer": 892,
        "generated": [
            "# Python code, return ans\nsteps_up = 567\nsteps_down = 325\ntotal_steps = steps_up + steps_down\nans = total_steps",
            "# Python code, return ans\nsteps_up = 567\nsteps_down = 325\ntotal_steps = steps_up + steps_down\nans = total_steps",
            "# Python code, return ans\nstairs_up = 567\nstairs_down = 325\ntotal_stairs = stairs_up + stairs_down\nans = total_stairs"
        ],
        "results": [
            892.0,
            892.0,
            892.0
        ],
        "result_counter": {
            "892.0": 3
        },
        "prediction": 892.0
    },
    {
        "question": "After visiting France, Rachel's sister Bella, requested that they see the Buckingham Palace in London. If they travelled 451 miles by land and 150 miles by sea across the English Channel, what is the total distance that they travelled?",
        "answer": 601,
        "generated": [
            "# Python code, return ans\ndistance_land = 451\ndistance_sea = 150\ntotal_distance = distance_land + distance_sea\nans = total_distance",
            "# Python code, return ans\nland_distance = 451\nsea_distance = 150\ntotal_distance = land_distance + sea_distance\nans = total_distance",
            "# Python code, return ans\nland_distance = 451\nsea_distance = 150\ntotal_distance = land_distance + sea_distance\nans = total_distance"
        ],
        "results": [
            601.0,
            601.0,
            601.0
        ],
        "result_counter": {
            "601.0": 3
        },
        "prediction": 601.0
    },
    {
        "question": "The very first thing that Rachel tried when they reached England was the food. If she ate 276 grams of bacon and 147 grams of sausages, how much food did she eat in total?",
        "answer": 423,
        "generated": [
            "# Python code, return ans\nbacon_weight = 276\nsausages_weight = 147\ntotal_food = bacon_weight + sausages_weight\nans = total_food",
            "# Python code, return ans\nbacon_weight = 276\nsausage_weight = 147\ntotal_food_weight = bacon_weight + sausage_weight\nans = total_food_weight",
            "# Python code, return ans\nbacon = 276\nsausages = 147\ntotal_food = bacon + sausages\nans = total_food"
        ],
        "results": [
            423.0,
            423.0,
            423.0
        ],
        "result_counter": {
            "423.0": 3
        },
        "prediction": 423.0
    },
    {
        "question": "After eating a hearty meal, they went to see the Buckingham Palace. There, Rachel learned that 583 visitors came to the palace that day. If there were 246 visitors the previous day, how many visited the palace within 2 days?",
        "answer": 829,
        "generated": [
            "# Python code, return ans\nvisitors_today = 583\nvisitors_yesterday = 246\ntotal_visitors = visitors_today + visitors_yesterday\nans = total_visitors",
            "# Python code, return ans\nvisitors_today = 583\nvisitors_yesterday = 246\ntotal_visitors = visitors_today + visitors_yesterday\nans = total_visitors",
            "# Python code, return ans\nvisitors_today = 583\nvisitors_yesterday = 246\ntotal_visitors = visitors_today + visitors_yesterday\nans = total_visitors"
        ],
        "results": [
            829.0,
            829.0,
            829.0
        ],
        "result_counter": {
            "829.0": 3
        },
        "prediction": 829.0
    },
    {
        "question": "The last stop of their tour was Italy; there they visited Naples, the place where modern pizza was invented. During their stay there, she ate 598 grams of pizza and her sister ate 354. How many grams of pizza did Rachel and Bella ate there?",
        "answer": 952,
        "generated": [
            "# Python code, return ans\nRachel_pizza = 598\nBella_pizza = 354\ntotal_pizza = Rachel_pizza + Bella_pizza\nans = total_pizza",
            "# Python code, return ans\nRachel_pizza = 598\nBella_pizza = 354\ntotal_pizza = Rachel_pizza + Bella_pizza\nans = total_pizza",
            "# Python code, return ans\nRachel_pizza = 598\nBella_pizza = 354\ntotal_pizza = Rachel_pizza + Bella_pizza\nans = total_pizza"
        ],
        "results": [
            952.0,
            952.0,
            952.0
        ],
        "result_counter": {
            "952.0": 3
        },
        "prediction": 952.0
    },
    {
        "question": "Christmas is near. Mr. Anderson, president of Nice People Inc. organized a charity event to share happiness to the less fortunate people. The first thing that he did is to visit an orphanage. There he dressed up as Santa and gave toys to the children. If he gave 134 toy cars to the boys and 269 dolls to the girls, how many toys did he give to all?",
        "answer": 403,
        "generated": [
            "# Python code, return ans\ntoy_cars = 134\ndolls = 269\ntotal_toys = toy_cars + dolls\nans = total_toys",
            "# Python code, return ans\ntoy_cars = 134\ndolls = 269\ntotal_toys = toy_cars + dolls\nans = total_toys",
            "# Python code, return ans\ntoy_cars = 134\ndolls = 269\ntotal_toys = toy_cars + dolls\nans = total_toys"
        ],
        "results": [
            403.0,
            403.0,
            403.0
        ],
        "result_counter": {
            "403.0": 3
        },
        "prediction": 403.0
    },
    {
        "question": "Next on his list is the nursing home near his office. There he 472 boxes of vitamins and 288 boxes of supplements. How many boxes of medicine did the nursing home receive from Mr. Anderson?",
        "answer": 760,
        "generated": [
            "# Python code, return ans\nvitamin_boxes = 472\nsupplement_boxes = 288\ntotal_boxes = vitamin_boxes + supplement_boxes\nans = total_boxes",
            "# Python code, return ans\nvitamin_boxes = 472\nsupplement_boxes = 288\ntotal_boxes = vitamin_boxes + supplement_boxes\nans = total_boxes",
            "# Python code, return ans\nvitamin_boxes = 472\nsupplement_boxes = 288\ntotal_boxes = vitamin_boxes + supplement_boxes\nans = total_boxes"
        ],
        "results": [
            760.0,
            760.0,
            760.0
        ],
        "result_counter": {
            "760.0": 3
        },
        "prediction": 760.0
    },
    {
        "question": "Feeling good about what he did, Mr. Anderson decided to continue giving to others. He went around the city and gave clothes to homeless people. If he gave 589 shirts and 345 trousers, how many pieces of clothing did he gave out in total?",
        "answer": 934,
        "generated": [
            "# Python code, return ans\nshirts = 589\ntrousers = 345\ntotal_clothing = shirts + trousers\nans = total_clothing",
            "# Python code, return ans\nshirts_given = 589\ntrousers_given = 345\ntotal_clothing_given = shirts_given + trousers_given\nans = total_clothing_given",
            "# Python code, return ans\nshirts = 589\ntrousers = 345\ntotal_clothing = shirts + trousers\nans = total_clothing"
        ],
        "results": [
            934.0,
            934.0,
            934.0
        ],
        "result_counter": {
            "934.0": 3
        },
        "prediction": 934.0
    },
    {
        "question": "After giving out clothes, he invited the homeless to the nearest soup kitchen to give them a proper meal. If he fed 219 men and 328 women, how many homeless people was he able to feed?",
        "answer": 547,
        "generated": [
            "# Python code, return ans\nmen = 219\nwomen = 328\ntotal_homeless_people = men + women\nans = total_homeless_people",
            "# Python code, return ans\nmen = 219\nwomen = 328\ntotal_homeless_people = men + women\nans = total_homeless_people",
            "# Python code, return ans\nmen = 219\nwomen = 328\ntotal_homeless = men + women\nans = total_homeless"
        ],
        "results": [
            547.0,
            547.0,
            547.0
        ],
        "result_counter": {
            "547.0": 3
        },
        "prediction": 547.0
    },
    {
        "question": "The last place that he went to was the city animal shelter. There he donated some money to make sure the dogs and cats there are being taken care of. If there are 645 cats and 567 dogs there, how many animals are there in the shelter?",
        "answer": 1212,
        "generated": [
            "# Python code, return ans\ncats = 645\ndogs = 567\ntotal_animals = cats + dogs\nans = total_animals",
            "# Python code, return ans\ncats = 645\ndogs = 567\ntotal_animals = cats + dogs\nans = total_animals",
            "# Python code, return ans\ncats = 645\ndogs = 567\ntotal_animals = cats + dogs\nans = total_animals"
        ],
        "results": [
            1212.0,
            1212.0,
            1212.0
        ],
        "result_counter": {
            "1212.0": 3
        },
        "prediction": 1212.0
    },
    {
        "question": "Denver the Dog is a famous architect in the city of Animapolis. Together with his engineer friend Wally the Wolf, they decided to build the tallest building ever, the Animus Tower. To make sure the framework of the tower is strongly built, they hired the best builders in town. If they hired 318 beavers and 544 spiders, how many workers in total did they hire to make the framework?",
        "answer": 862,
        "generated": [
            "# Python code, return ans\nbeavers = 318\nspiders = 544\ntotal_workers = beavers + spiders\nans = total_workers",
            "# Python code, return ans\nbeavers = 318\nspiders = 544\ntotal_workers = beavers + spiders\nans = total_workers",
            "# Python code, return ans\nbeaver_workers = 318\nspider_workers = 544\ntotal_workers = beaver_workers + spider_workers\nans = total_workers"
        ],
        "results": [
            862.0,
            862.0,
            862.0
        ],
        "result_counter": {
            "862.0": 3
        },
        "prediction": 862.0
    },
    {
        "question": "To carry heavy construction materials, they employed 413 red ants and 487 black ants. How many ants did they employ in total?",
        "answer": 900,
        "generated": [
            "# Python code, return ans\nred_ants = 413\nblack_ants = 487\ntotal_ants = red_ants + black_ants\nans = total_ants",
            "# Python code, return ans\nred_ants = 413\nblack_ants = 487\ntotal_ants = red_ants + black_ants\nans = total_ants",
            "# Python code, return ans\nred_ants = 413\nblack_ants = 487\ntotal_ants = red_ants + black_ants\nans = total_ants"
        ],
        "results": [
            900.0,
            900.0,
            900.0
        ],
        "result_counter": {
            "900.0": 3
        },
        "prediction": 900.0
    },
    {
        "question": "After the framework was finished, they asked 239 monkeys and 622 termites to finish the rest of the building. How many workers finished the rest of the construction?",
        "answer": 861,
        "generated": [
            "# Python code, return ans\nmonkeys = 239\ntermites = 622\ntotal_workers = monkeys + termites\nans = total_workers",
            "# Python code, return ans\nmonkey_workers = 239\ntermite_workers = 622\ntotal_workers = monkey_workers + termite_workers\nans = total_workers",
            "# Python code, return ans\nmonkeys = 239\ntermites = 622\ntotal_workers = monkeys + termites\nans = total_workers"
        ],
        "results": [
            861.0,
            861.0,
            861.0
        ],
        "result_counter": {
            "861.0": 3
        },
        "prediction": 861.0
    },
    {
        "question": "When the building is done, they wanted to make it shine brightly in the night. To fix that, they commissioned 432 fireflies and 297 glow worms. How many animals worked in the lights?",
        "answer": 729,
        "generated": [
            "# Python code, return ans\nfireflies = 432\nglow_worms = 297\ntotal_animals = fireflies + glow_worms\nans = total_animals",
            "# Python code, return ans\nfireflies = 432\nglow_worms = 297\ntotal_animals = fireflies + glow_worms\nans = total_animals",
            "# Python code, return ans\nfireflies = 432\nglow_worms = 297\ntotal_animals = fireflies + glow_worms\nans = total_animals"
        ],
        "results": [
            729.0,
            729.0,
            729.0
        ],
        "result_counter": {
            "729.0": 3
        },
        "prediction": 729.0
    },
    {
        "question": "It took all of the workers one year to finish the Animus Tower and it was indeed the brightest and tallest structure that can be seen at Animapolis' skyline. If the first half of the building has 145 stories and the second half has 255 stories. How many stories do the Animus Tower has?",
        "answer": 400,
        "generated": [
            "# Python code, return ans\nfirst_half_stories = 145\nsecond_half_stories = 255\ntotal_stories = first_half_stories + second_half_stories\nans = total_stories",
            "# Python code, return ans\nfirst_half_stories = 145\nsecond_half_stories = 255\ntotal_stories = first_half_stories + second_half_stories\nans = total_stories",
            "# Python code, return ans\nfirst_half_stories = 145\nsecond_half_stories = 255\ntotal_stories = first_half_stories + second_half_stories\nans = total_stories"
        ],
        "results": [
            400.0,
            400.0,
            400.0
        ],
        "result_counter": {
            "400.0": 3
        },
        "prediction": 400.0
    },
    {
        "question": "It's New Year's Eve. Benjamin and his family went to New York City to take part in the celebration that is going to take place later that night. Before the evening celebrations, Benjamin wanted to see some of the famous places in NYC first. From the hotel, he walked 234 steps to the nearest restaurant then another 378 steps to Central Park. How many steps did he take to get to Central Park from the hotel?",
        "answer": 612,
        "generated": [
            "# Python code, return ans\nsteps_to_restaurant = 234\nsteps_to_Central_Park = 378\ntotal_steps = steps_to_restaurant + steps_to_Central_Park\nans = total_steps",
            "# Python code, return ans\nsteps_to_restaurant = 234\nsteps_to_Central_Park = 378\ntotal_steps = steps_to_restaurant + steps_to_Central_Park\nans = total_steps",
            "# Python code, return ans\nsteps_to_restaurant = 234\nsteps_to_Central_Park = 378\ntotal_steps = steps_to_restaurant + steps_to_Central_Park\nans = total_steps"
        ],
        "results": [
            612.0,
            612.0,
            612.0
        ],
        "result_counter": {
            "612.0": 3
        },
        "prediction": 612.0
    },
    {
        "question": "Next on his list is the famous Empire State Building. There he learned that the building stands 1250 feet to the top floor and the antenna spire is 204 feet. How tall is the Empire State Building?",
        "answer": 1454,
        "generated": [
            "# Python code, return ans\ntop_floor_height = 1250\nantenna_spire_height = 204\ntotal_height = top_floor_height + antenna_spire_height\nans = total_height",
            "# Python code, return ans\ntop_floor_height = 1250\nantenna_spire_height = 204\ntotal_height = top_floor_height + antenna_spire_height\nans = total_height",
            "# Python code, return ans\ntop_floor_height = 1250\nantenna_spire_height = 204\ntotal_height = top_floor_height + antenna_spire_height\nans = total_height"
        ],
        "results": [
            1454.0,
            1454.0,
            1454.0
        ],
        "result_counter": {
            "1454.0": 3
        },
        "prediction": 1454.0
    },
    {
        "question": "At the top of the Empire State Building, he saw the Madison Square Garden so he decided to go there as well. It took him 676 steps to get down the building and 315 steps from the building to Madison Square Garden. How many steps did he take to get to Madison Square?",
        "answer": 991,
        "generated": [
            "# Python code, return ans\nsteps_down_building = 676\nsteps_to_Madison_Square = 315\ntotal_steps = steps_down_building + steps_to_Madison_Square\nans = total_steps",
            "# Python code, return ans\nsteps_down_building = 676\nsteps_to_Madison_Square = 315\ntotal_steps = steps_down_building + steps_to_Madison_Square\nans = total_steps",
            "# Python code, return ans\nsteps_down_building = 676\nsteps_to_Madison_Square = 315\ntotal_steps = steps_down_building + steps_to_Madison_Square\nans = total_steps"
        ],
        "results": [
            991.0,
            991.0,
            991.0
        ],
        "result_counter": {
            "991.0": 3
        },
        "prediction": 991.0
    },
    {
        "question": "It's getting dark so he decided to take one last stop. He took a cab to the Metropolitan Museum of Art. If he saw 465 pieces of Asian art and 527 pieces of Egyptian art, how many pieces of art did he see?",
        "answer": 992,
        "generated": [
            "# Python code, return ans\nAsian_art = 465\nEgyptian_art = 527\ntotal_art = Asian_art + Egyptian_art\nans = total_art",
            "# Python code, return ans\nAsian_art = 465\nEgyptian_art = 527\ntotal_art = Asian_art + Egyptian_art\nans = total_art",
            "# Python code, return ans\nAsian_art = 465\nEgyptian_art = 527\ntotal_art = Asian_art + Egyptian_art\nans = total_art"
        ],
        "results": [
            992.0,
            992.0,
            992.0
        ],
        "result_counter": {
            "992.0": 3
        },
        "prediction": 992.0
    },
    {
        "question": "After visiting the museum, Benjamin went back to the hotel where he prepared for New Year's Eve at the annual Times Square Ball Drop. To get there, he took 354 steps to the Rockefeller Center then 228 steps to Times Square itself. How many steps did he take before reaching Times Square?",
        "answer": 582,
        "generated": [
            "# Python code, return ans\nsteps_to_Rockefeller = 354\nsteps_to_Times_Square = 228\ntotal_steps = steps_to_Rockefeller + steps_to_Times_Square\nans = total_steps",
            "# Python code, return ans\nsteps_to_Rockefeller = 354\nsteps_to_Times_Square = 228\ntotal_steps = steps_to_Rockefeller + steps_to_Times_Square\nans = total_steps",
            "# Python code, return ans\nsteps_to_Rockefeller = 354\nsteps_to_Times_Square = 228\ntotal_steps = steps_to_Rockefeller + steps_to_Times_Square\nans = total_steps"
        ],
        "results": [
            582.0,
            582.0,
            582.0
        ],
        "result_counter": {
            "582.0": 3
        },
        "prediction": 582.0
    },
    {
        "question": "Sofia, president of the school student organization, held a meeting to talk about the food being served at the school cafeteria. The first order of business is to discuss whether the students like the food being served at the school. If 383 students said that they like the food and 431 students said they didn't, how many students participated in the discussion?",
        "answer": 814,
        "generated": [
            "# Python code, return ans\nstudents_like_food = 383\nstudents_dislike_food = 431\ntotal_students = students_like_food + students_dislike_food\nans = total_students",
            "# Python code, return ans\nstudents_like_food = 383\nstudents_dislike_food = 431\ntotal_students = students_like_food + students_dislike_food\nans = total_students",
            "# Python code, return ans\nstudents_like_food = 383\nstudents_dislike_food = 431\ntotal_students = students_like_food + students_dislike_food\nans = total_students"
        ],
        "results": [
            814.0,
            814.0,
            814.0
        ],
        "result_counter": {
            "814.0": 3
        },
        "prediction": 814.0
    },
    {
        "question": "After agreeing that the school menu needs to be changed, they had a vote for food suggestions. If 337 voted to add more veggies to the menu and 335 voted to add more meat, how many students voted?",
        "answer": 672,
        "generated": [
            "# Python code, return ans\nvote_veggies = 337\nvote_meat = 335\ntotal_votes = vote_veggies + vote_meat\nans = total_votes",
            "# Python code, return ans\nvote_veggies = 337\nvote_meat = 335\ntotal_votes = vote_veggies + vote_meat\nans = total_votes",
            "# Python code, return ans\nvote_veggies = 337\nvote_meat = 335\ntotal_votes = vote_veggies + vote_meat\nans = total_votes"
        ],
        "results": [
            672.0,
            672.0,
            672.0
        ],
        "result_counter": {
            "672.0": 3
        },
        "prediction": 672.0
    },
    {
        "question": "Since the result of the vote was close, it was decided that they will balance the menu with both meat and vegetables. This decision was agreed upon by 154 third grade students and 237 fourth grade students. How many students agreed with the decision?",
        "answer": 391,
        "generated": [
            "# Python code, return ans\nthird_grade_students = 154\nfourth_grade_students = 237\ntotal_students_agreed = third_grade_students + fourth_grade_students\nans = total_students_agreed",
            "# Python code, return ans\nthird_grade_students = 154\nfourth_grade_students = 237\ntotal_students_agreed = third_grade_students + fourth_grade_students\nans = total_students_agreed",
            "# Python code, return ans\nthird_grade_students = 154\nfourth_grade_students = 237\ntotal_students_agreed = third_grade_students + fourth_grade_students\nans = total_students_agreed"
        ],
        "results": [
            391.0,
            391.0,
            391.0
        ],
        "result_counter": {
            "391.0": 3
        },
        "prediction": 391.0
    },
    {
        "question": "Because of the decision, Sofia asked the students to suggest specific types of food. If 279 students suggested adding mashed potatoes while 234 suggested adding bacon to the menu, how many students participated in the suggestion of new food items?",
        "answer": 513,
        "generated": [
            "# Python code, return ans\nmashed_potatoes_students = 279\nbacon_students = 234\ntotal_students = mashed_potatoes_students + bacon_students\nans = total_students",
            "# Python code, return ans\nmashed_potatoes_suggestion = 279\nbacon_suggestion = 234\ntotal_students = mashed_potatoes_suggestion + bacon_suggestion\nans = total_students",
            "# Python code, return ans\nmashed_potatoes_suggestions = 279\nbacon_suggestions = 234\ntotal_students = mashed_potatoes_suggestions + bacon_suggestions\nans = total_students"
        ],
        "results": [
            513.0,
            513.0,
            513.0
        ],
        "result_counter": {
            "513.0": 3
        },
        "prediction": 513.0
    },
    {
        "question": "After a week, Sofia did a survey to ask if the students liked the new menu. She found out that 235 students liked the new menu while 165 didn't. How many students took part in Sofia's survey?",
        "answer": 400,
        "generated": [
            "# Python code, return ans\nstudents_liked = 235\nstudents_disliked = 165\ntotal_students = students_liked + students_disliked\nans = total_students",
            "# Python code, return ans\nstudents_liked = 235\nstudents_disliked = 165\ntotal_students = students_liked + students_disliked\nans = total_students",
            "# Python code, return ans\nstudents_liked = 235\nstudents_disliked = 165\ntotal_students = students_liked + students_disliked\nans = total_students"
        ],
        "results": [
            400.0,
            400.0,
            400.0
        ],
        "result_counter": {
            "400.0": 3
        },
        "prediction": 400.0
    },
    {
        "question": "Winter is almost here and most animals are migrating to warmer countries. There are 67 bird families living near the mountain. If 32 bird families flew away for winter, how many bird families were left near the mountain?",
        "answer": 35,
        "generated": [
            "# Python code, return ans\ntotal_bird_families = 67\nflew_away = 32\nbird_families_left = total_bird_families - flew_away\nans = bird_families_left",
            "# Python code, return ans\ntotal_bird_families = 67\nbird_families_flew_away = 32\nbird_families_left = total_bird_families - bird_families_flew_away\nans = bird_families_left",
            "# Python code, return ans\ntotal_bird_families = 67\nbird_families_flew_away = 32\nbird_families_left = total_bird_families - bird_families_flew_away\nans = bird_families_left"
        ],
        "results": [
            35.0,
            35.0,
            35.0
        ],
        "result_counter": {
            "35.0": 3
        },
        "prediction": 35.0
    },
    {
        "question": "At the river, 25 out of 55 salmon families went to warmer waters to avoid being frozen. How many salmon families were left in the river?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\ntotal_salmon_families = 55\nsalmon_families_moved = 25\nsalmon_families_left = total_salmon_families - salmon_families_moved\nans = salmon_families_left",
            "# Python code, return ans\ntotal_salmon_families = 55\nsalmon_families_left = total_salmon_families - 25\nans = salmon_families_left",
            "# Python code, return ans\ntotal_salmon_families = 55\nsalmon_families_moved = 25\nsalmon_families_left = total_salmon_families - salmon_families_moved\nans = salmon_families_left"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "The wolves, though accustomed to cold weather, also wanted to move away from the incoming winter. If there are 43 packs of wolves living in the forest and 31 packs went away, how many wolf packs were left in the forest?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\ntotal_wolf_packs = 43\nwolf_packs_moved = 31\nwolf_packs_left = total_wolf_packs - wolf_packs_moved\nans = wolf_packs_left",
            "# Python code, return ans\ntotal_wolf_packs = 43\nwolf_packs_moved = 31\nwolf_packs_left = total_wolf_packs - wolf_packs_moved\nans = wolf_packs_left",
            "# Python code, return ans\ntotal_packs = 43\npacks_moved_away = 31\npacks_left = total_packs - packs_moved_away\nans = packs_left"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Some deer families are also moving out to avoid the shortage of grass that will result from occasional blizzards. If there are 79 deer families in the area and around 45 of them stayed, how many deer families moved out?",
        "answer": 34,
        "generated": [
            "# Python code, return ans\ntotal_deer_families = 79\ndeer_families_stayed = 45\ndeer_families_moved_out = total_deer_families - deer_families_stayed\nans = deer_families_moved_out",
            "# Python code, return ans\ntotal_deer_families = 79\ndeer_families_stayed = 45\ndeer_families_moved_out = total_deer_families - deer_families_stayed\nans = deer_families_moved_out",
            "# Python code, return ans\ntotal_deer_families = 79\ndeer_families_stayed = 45\ndeer_families_moved_out = total_deer_families - deer_families_stayed\nans = deer_families_moved_out"
        ],
        "results": [
            34.0,
            34.0,
            34.0
        ],
        "result_counter": {
            "34.0": 3
        },
        "prediction": 34.0
    },
    {
        "question": "Even the chipmunks are trying to get away to find other warmer places to stay. If 21 chipmunk families were left from the original 86 families, how many chipmunk families went away?",
        "answer": 65,
        "generated": [
            "# Python code, return ans\noriginal_families = 86\nleft_families = 21\nfamilies_went_away = original_families - left_families\nans = families_went_away",
            "# Python code, return ans\noriginal_families = 86\nremaining_families = 21\nfamilies_went_away = original_families - remaining_families\nans = families_went_away",
            "# Python code, return ans\noriginal_families = 86\nleft_families = 21\nfamilies_went_away = original_families - left_families\nans = families_went_away"
        ],
        "results": [
            65.0,
            65.0,
            65.0
        ],
        "result_counter": {
            "65.0": 3
        },
        "prediction": 65.0
    },
    {
        "question": "Wendy is a very generous kid. Every time her parents buy her some stuff, she always gives some of it to her friends. For her birthday this year, she received a new set of shoes. She now has a total of 33 pairs of shoes. If she gave away 14 pairs of shoes to her friends, how many pairs of shoes were left to her?",
        "answer": 19,
        "generated": [
            "# Python code, return ans\ntotal_shoes = 33\nshoes_given_away = 14\nshoes_left = total_shoes - shoes_given_away\nans = shoes_left",
            "# Python code, return ans\ntotal_shoes = 33\nshoes_given_away = 14\nshoes_left = total_shoes - shoes_given_away\nans = shoes_left",
            "# Python code, return ans\ntotal_shoes = 33\nshoes_given_away = 14\nshoes_left = total_shoes - shoes_given_away\nans = shoes_left"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "At the first day back in school, her parents bought her different colored pens. If her parents bought her 56 pens and she gave 22 of those to her friends, how many pens were left for her to use?",
        "answer": 34,
        "generated": [
            "# Python code, return ans\ntotal_pens = 56\ngiven_to_friends = 22\npens_left = total_pens - given_to_friends\nans = pens_left",
            "# Python code, return ans\ntotal_pens = 56\npens_given_away = 22\npens_left = total_pens - pens_given_away\nans = pens_left",
            "# Python code, return ans\ntotal_pens = 56\ngiven_to_friends = 22\npens_left = total_pens - given_to_friends\nans = pens_left"
        ],
        "results": [
            34.0,
            34.0,
            34.0
        ],
        "result_counter": {
            "34.0": 3
        },
        "prediction": 34.0
    },
    {
        "question": "During Halloween, she was able to get a lot of candies from trick or treating. She decided to give away some of them to the homeless kids nearby. If she has 60 candies and gave away 40, how many does she have left?",
        "answer": 20,
        "generated": [
            "# Python code, return ans\ncandies_total = 60\ncandies_given_away = 40\ncandies_left = candies_total - candies_given_away\nans = candies_left",
            "# Python code, return ans\ncandies_total = 60\ncandies_given = 40\ncandies_left = candies_total - candies_given\nans = candies_left",
            "# Python code, return ans\ncandies_total = 60\ncandies_given_away = 40\ncandies_left = candies_total - candies_given_away\nans = candies_left"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "Thanksgiving came and their family hosted their building's Thanksgiving dinner. They prepared a lot of food so she asked her parents if they could donate some to the soup kitchen next bock. If they prepared 36 turkeys and gave 18 of it to the soup kitchen, how many were left for them to eat?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\ntotal_turkeys = 36\nturkeys_donated = 18\nturkeys_left = total_turkeys - turkeys_donated\nans = turkeys_left",
            "# Python code, return ans\ntotal_turkeys = 36\nturkeys_donated = 18\nturkeys_left = total_turkeys - turkeys_donated\nans = turkeys_left",
            "# Python code, return ans\ntotal_turkeys = 36\nturkeys_donated = 18\nturkeys_left = total_turkeys - turkeys_donated\nans = turkeys_left"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "Christmas came and as usual she received 77 gifts to put under the Christmas tree. She wanted to make other kids happy so she sent 66 of her gifts to the orphanage downtown. How many gifts were left under their Christmas tree?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\ntotal_gifts = 77\ngifts_sent = 66\ngifts_left = total_gifts - gifts_sent\nans = gifts_left",
            "# Python code, return ans\ntotal_gifts = 77\ngifts_sent = 66\ngifts_left = total_gifts - gifts_sent\nans = gifts_left",
            "# Python code, return ans\ntotal_gifts = 77\ngifts_sent = 66\ngifts_left = total_gifts - gifts_sent\nans = gifts_left"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "Alicia loves collecting art. She has a whole house filled with all the art she obtained since she was a little kid. When she decided to move away, she started donating some of her art to different museums. First museum she went to was the Metropolitan museum in New York. She donated 46 medieval art pieces from the 70 she originally has. How many medieval art pieces were left with her?",
        "answer": 24,
        "generated": [
            "# Python code, return ans\ntotal_medieval_art = 70\ndonated_medieval_art = 46\nremaining_medieval_art = total_medieval_art - donated_medieval_art\nans = remaining_medieval_art",
            "# Python code, return ans\ntotal_medieval_art = 70\ndonated_art = 46\nremaining_art = total_medieval_art - donated_art\nans = remaining_art",
            "# Python code, return ans\ntotal_medieval_art = 70\ndonated_art = 46\nremaining_art = total_medieval_art - donated_art\nans = remaining_art"
        ],
        "results": [
            24.0,
            24.0,
            24.0
        ],
        "result_counter": {
            "24.0": 3
        },
        "prediction": 24.0
    },
    {
        "question": "The next museum on her list is the Guggenheim in New York as well. There she gave 51 sets of Egyptian mask from her collection of 90. How many sets of masks were left in Alicia's collection?",
        "answer": 39,
        "generated": [
            "# Python code, return ans\ntotal_sets = 90\ngiven_sets = 51\nleft_sets = total_sets - given_sets\nans = left_sets",
            "# Python code, return ans\ntotal_masks = 90\ngiven_masks = 51\nremaining_masks = total_masks - given_masks\nans = remaining_masks",
            "# Python code, return ans\ntotal_masks = 90\ngiven_masks = 51\nremaining_masks = total_masks - given_masks\nans = remaining_masks"
        ],
        "results": [
            39.0,
            39.0,
            39.0
        ],
        "result_counter": {
            "39.0": 3
        },
        "prediction": 39.0
    },
    {
        "question": "After New York, she decided to visit the Smithsonian in Washington DC. If she has 63 miniature aircrafts and she gave away 49 to the National Air and Space Museum, how many are left with her?",
        "answer": 14,
        "generated": [
            "# Python code, return ans\ntotal_aircrafts = 63\ngiven_aircrafts = 49\nremaining_aircrafts = total_aircrafts - given_aircrafts\nans = remaining_aircrafts",
            "# Python code, return ans\ntotal_aircrafts = 63\ngiven_away = 49\nleft_aircrafts = total_aircrafts - given_away\nans = left_aircrafts",
            "# Python code, return ans\ntotal_miniature_aircrafts = 63\ngiven_away = 49\nleft_with_her = total_miniature_aircrafts - given_away\nans = left_with_her"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "She also decided to contribute to the collection of the Museum of Natural History. After donating some of her bug collection, she was left with 39 bug species. If she originally has 98 bug species, how many did she donate?",
        "answer": 59,
        "generated": [
            "# Python code, return ans\noriginal_bug_species = 98\nremaining_bug_species = 39\ndonated_bug_species = original_bug_species - remaining_bug_species\nans = donated_bug_species",
            "# Python code, return ans\noriginal_species = 98\nremaining_species = 39\ndonated_species = original_species - remaining_species\nans = donated_species",
            "# Python code, return ans\noriginal_species = 98\nremaining_species = 39\ndonated_species = original_species - remaining_species\nans = donated_species"
        ],
        "results": [
            59.0,
            59.0,
            59.0
        ],
        "result_counter": {
            "59.0": 3
        },
        "prediction": 59.0
    },
    {
        "question": "Her last stop was the post office. There she sent her rock collection to the Geological Museum in London. She was left with her 15 favorite stones after sending away a part of her collection. If she originally has 78 stones in her collection, how many did she send away?",
        "answer": 63,
        "generated": [
            "# Python code, return ans\noriginal_stones = 78\nleft_stones = 15\nsent_stones = original_stones - left_stones\nans = sent_stones",
            "# Python code, return ans\noriginal_stones = 78\nremaining_stones = 15\nsent_stones = original_stones - remaining_stones\nans = sent_stones",
            "# Python code, return ans\noriginal_stones = 78\nfavorite_stones = 15\nsent_stones = original_stones - favorite_stones\nans = sent_stones"
        ],
        "results": [
            63.0,
            63.0,
            63.0
        ],
        "result_counter": {
            "63.0": 3
        },
        "prediction": 63.0
    },
    {
        "question": "Jasmine and her mom went to the grocery to buy some food. Her mom gave her $100.00 to spend. Since she loves fruits, she went to the fruits section first. There she bought apples and oranges worth $15.00. From the original $100.00 given by her mom, how much money was left for her to spend?",
        "answer": 85,
        "generated": [
            "# Python code, return ans\ntotal_money = 100\nspent_on_fruits = 15\nmoney_left = total_money - spent_on_fruits\nans = money_left",
            "# Python code, return ans\ntotal_money = 100\nspent_on_fruits = 15\nmoney_left = total_money - spent_on_fruits\nans = money_left",
            "# Python code, return ans\ntotal_money = 100\nspent_on_fruits = 15\nmoney_left = total_money - spent_on_fruits\nans = money_left"
        ],
        "results": [
            85.0,
            85.0,
            85.0
        ],
        "result_counter": {
            "85.0": 3
        },
        "prediction": 85.0
    },
    {
        "question": "Using $85.00 left buying fruits, she decided to buy some cookies. If she spent $16.00 on cookies, how much money was left with her?",
        "answer": 69,
        "generated": [
            "# Python code, return ans\nmoney_left = 85\nspent_on_cookies = 16\nmoney_left_after_cookies = money_left - spent_on_cookies\nans = money_left_after_cookies",
            "# Python code, return ans\nmoney_left = 85\nspent_on_cookies = 16\nmoney_left_after_cookies = money_left - spent_on_cookies\nans = money_left_after_cookies",
            "# Python code, return ans\nmoney_left = 85\nspent_on_cookies = 16\nmoney_left_after_cookies = money_left - spent_on_cookies\nans = money_left_after_cookies"
        ],
        "results": [
            69.0,
            69.0,
            69.0
        ],
        "result_counter": {
            "69.0": 3
        },
        "prediction": 69.0
    },
    {
        "question": "Her friends are coming over the next day so she also bought some refreshments. If she has $50.00 left from the money she had after buying cookies, and she has $69.00 before, how much did she spend on juice?",
        "answer": 19,
        "generated": [
            "# Python code, return ans\nmoney_before = 69\nmoney_left = 50\nmoney_spent_on_juice = money_before - money_left\nans = money_spent_on_juice",
            "# Python code, return ans\nmoney_before = 69\nmoney_left = 50\nmoney_spent_on_juice = money_before - money_left\nans = money_spent_on_juice",
            "# Python code, return ans\nmoney_before = 69\nmoney_left = 50\nmoney_spent_on_juice = money_before - money_left\nans = money_spent_on_juice"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "Jasmine also bought some chips for her friends in which she got for a discount of $17.00. If the chips originally cost $35.00, how much did she actually spend on chips?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\noriginal_cost = 35\ndiscount = 17\nactual_cost = original_cost - discount\nans = actual_cost",
            "# Python code, return ans\noriginal_cost = 35\ndiscount = 17\nactual_cost = original_cost - discount\nans = actual_cost",
            "# Python code, return ans\noriginal_cost = 35\ndiscount = 17\nactual_cost = original_cost - discount\nans = actual_cost"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "When she came back to her mother, she returned $27.00 worth of change. From the initial $100.00 that her mom gave her, how much money in total did she spend on buying groceries?",
        "answer": 73,
        "generated": [
            "# Python code, return ans\ninitial_money = 100\nreturned_change = 27\ntotal_spent = initial_money - returned_change\nans = total_spent",
            "# Python code, return ans\ninitial_money = 100\nreturned_change = 27\nmoney_spent = initial_money - returned_change\nans = money_spent",
            "# Python code, return ans\ninitial_money = 100\nreturned_change = 27\ntotal_spent = initial_money - returned_change\nans = total_spent"
        ],
        "results": [
            73.0,
            73.0,
            73.0
        ],
        "result_counter": {
            "73.0": 3
        },
        "prediction": 73.0
    },
    {
        "question": "It's basketball season in Ashford Elementary School. Chuck, the team captain of the Blue Team is feeling nervous about it. Their first opponent is the Red Team, composed of other 3rd graders, gave them a hard time. If they lost by 13 points and the Red Team scored 61 points, what is their team's final score?",
        "answer": 48,
        "generated": [
            "# Python code, return ans\nRed_team_score = 61\nlost_by_points = 13\nBlue_team_score = Red_team_score - lost_by_points\nans = Blue_team_score",
            "# Python code, return ans\nRed_team_score = 61\nlost_by_points = 13\nBlue_team_score = Red_team_score - lost_by_points\nans = Blue_team_score",
            "# Python code, return ans\nRed_Team_score = 61\nlost_by_points = 13\nBlue_Team_score = Red_Team_score - lost_by_points\nans = Blue_Team_score"
        ],
        "results": [
            48.0,
            48.0,
            48.0
        ],
        "result_counter": {
            "48.0": 3
        },
        "prediction": 48.0
    },
    {
        "question": "Feeling sad about their loss on their first game, Chuck and his teammates were determined to win on their next match against the Yellow Team. They scored 72 points and the Yellow Team scored 55, how large was their lead?",
        "answer": 17,
        "generated": [
            "# Python code, return ans\nteam_score = 72\nyellow_team_score = 55\nlead = team_score - yellow_team_score\nans = lead",
            "# Python code, return ans\nteam_score = 72\nyellow_team_score = 55\nlead = team_score - yellow_team_score\nans = lead",
            "# Python code, return ans\nteam_score = 72\nyellow_team_score = 55\nlead = team_score - yellow_team_score\nans = lead"
        ],
        "results": [
            17.0,
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 3
        },
        "prediction": 17.0
    },
    {
        "question": "Their next opponent was the Green Team. If their final score is 68 points and they led by 29 points, what is Green Team's final score?",
        "answer": 39,
        "generated": [
            "# Python code, return ans\nfinal_score = 68\nlead_points = 29\ngreen_team_score = final_score - lead_points\nans = green_team_score",
            "# Python code, return ans\nfinal_score = 68\nlead_points = 29\ngreen_team_score = final_score - lead_points\nans = green_team_score",
            "# Python code, return ans\nfinal_score = 68\nlead_points = 29\ngreen_team_score = final_score - lead_points\nans = green_team_score"
        ],
        "results": [
            39.0,
            39.0,
            39.0
        ],
        "result_counter": {
            "39.0": 3
        },
        "prediction": 39.0
    },
    {
        "question": "With the win streak that they have, Chuck's team was able to get into the playoffs. They reached the semi-finals where they played against the Black Team. If they finished the game with 83 points and won it by 18 points, what is the Black Team's final score?",
        "answer": 65,
        "generated": [
            "# Python code, return ans\nChuck_team_score = 83\nwin_margin = 18\nBlack_team_score = Chuck_team_score - win_margin\nans = Black_team_score",
            "# Python code, return ans\nChuck_team_score = 83\nwin_margin = 18\nBlack_team_score = Chuck_team_score - win_margin\nans = Black_team_score",
            "# Python code, return ans\nChuck_team_score = 83\nwin_margin = 18\nBlack_team_score = Chuck_team_score - win_margin\nans = Black_team_score\n"
        ],
        "results": [
            65.0,
            65.0,
            65.0
        ],
        "result_counter": {
            "65.0": 3
        },
        "prediction": 65.0
    },
    {
        "question": "For the championship game, they faced the powerful Red Team. Wanting redemption, Chuck and his teammates did their best and gave everything that they've got. In the end, they won the game with the final score of 95. If the Red Team scored 76 points, how large was the difference of their scores?",
        "answer": 19,
        "generated": [
            "# Python code, return ans\nChuck_team_score = 95\nRed_team_score = 76\nscore_difference = Chuck_team_score - Red_team_score\nans = score_difference",
            "# Python code, return ans\nChuck_team_score = 95\nRed_team_score = 76\nscore_difference = Chuck_team_score - Red_team_score\nans = score_difference",
            "# Python code, return ans\nChuck_team_score = 95\nRed_team_score = 76\nscore_difference = Chuck_team_score - Red_team_score\nans = score_difference"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "Simon, Mark, Kevin, and Carl love collecting stamps. They meet up every month to compare and share their collections with each other. During the previous month, Kevin was able to collect 45 stamps while Simon was only able to collect 27. How many more stamps does Kevin have more than Simon?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\nKevin_stamps = 45\nSimon_stamps = 27\nmore_stamps = Kevin_stamps - Simon_stamps\nans = more_stamps",
            "# Python code, return ans\nKevin_stamps = 45\nSimon_stamps = 27\nmore_stamps = Kevin_stamps - Simon_stamps\nans = more_stamps",
            "# Python code, return ans\nKevin_stamps = 45\nSimon_stamps = 27\nmore_stamps = Kevin_stamps - Simon_stamps\nans = more_stamps"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "Carl, on the other hand, was able to collect 74 stamps which are 36 more than what Mark was able to collect. How many stamps was Mark able to collect?",
        "answer": 38,
        "generated": [
            "# Python code, return ans\nCarl_stamps = 74\nMark_stamps = Carl_stamps - 36\nans = Mark_stamps",
            "# Python code, return ans\nCarl_stamps = 74\nmore_stamps = 36\nMark_stamps = Carl_stamps - more_stamps\nans = Mark_stamps",
            "# Python code, return ans\nCarl_stamps = 74\nMark_stamps = Carl_stamps - 36\nans = Mark_stamps"
        ],
        "results": [
            38.0,
            38.0,
            38.0
        ],
        "result_counter": {
            "38.0": 3
        },
        "prediction": 38.0
    },
    {
        "question": "If Carl has a total of 89 stamps and Kevin has 57, how many more stamps does Carl have more than Kevin?",
        "answer": 32,
        "generated": [
            "# Python code, return ans\nCarl_stamps = 89\nKevin_stamps = 57\nmore_stamps = Carl_stamps - Kevin_stamps\nans = more_stamps",
            "# Python code, return ans\nCarl_stamps = 89\nKevin_stamps = 57\nmore_stamps = Carl_stamps - Kevin_stamps\nans = more_stamps",
            "# Python code, return ans\nCarl_stamps = 89\nKevin_stamps = 57\nmore_stamps = Carl_stamps - Kevin_stamps\nans = more_stamps"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "The following month, the four friends met again to share their collections. Carl, having the most number of stamps among all of them decided to give away some of his collections. If he has 96 stamps during that month, and he gave away 48, how many stamps were left with him?",
        "answer": 48,
        "generated": [
            "# Python code, return ans\nCarl_stamps = 96\nCarl_gave_away = 48\nCarl_left_stamps = Carl_stamps - Carl_gave_away\nans = Carl_left_stamps",
            "# Python code, return ans\nCarl_stamps = 96\nCarl_gave_away = 48\nCarl_left_stamps = Carl_stamps - Carl_gave_away\nans = Carl_left_stamps",
            "# Python code, return ans\nCarl_stamps = 96\nCarl_gave_away = 48\nCarl_left_stamps = Carl_stamps - Carl_gave_away\nans = Carl_left_stamps"
        ],
        "results": [
            48.0,
            48.0,
            48.0
        ],
        "result_counter": {
            "48.0": 3
        },
        "prediction": 48.0
    },
    {
        "question": "Before his friends gave him more stamps, Simon initially had 34 stamps. If he now has 61 stamps, how many stamps did he receive from his friends?",
        "answer": 27,
        "generated": [
            "# Python code, return ans\ninitial_stamps = 34\ncurrent_stamps = 61\nstamps_received = current_stamps - initial_stamps\nans = stamps_received",
            "# Python code, return ans\ninitial_stamps = 34\ncurrent_stamps = 61\nstamps_received = current_stamps - initial_stamps\nans = stamps_received",
            "# Python code, return ans\ninitial_stamps = 34\ncurrent_stamps = 61\nstamps_received = current_stamps - initial_stamps\nans = stamps_received"
        ],
        "results": [
            27.0,
            27.0,
            27.0
        ],
        "result_counter": {
            "27.0": 3
        },
        "prediction": 27.0
    },
    {
        "question": "Rob is very fond of tall structures. He likes collecting pictures and comparing them. Two of his favorite buildings are Chicago's Sears Tower and Dubai's Burj Khalifa. If Burj Khalifa stands at 830 meters high and Sears stands at 527 meters high, how much higher is Burj Khalifa than Sears?",
        "answer": 303,
        "generated": [
            "# Python code, return ans\nBurj_Khalifa_height = 830\nSears_Tower_height = 527\nheight_difference = Burj_Khalifa_height - Sears_Tower_height\nans = height_difference",
            "# Python code, return ans\nBurj_Khalifa_height = 830\nSears_height = 527\nheight_difference = Burj_Khalifa_height - Sears_height\nans = height_difference",
            "# Python code, return ans\nBurj_Khalifa_height = 830\nSears_Tower_height = 527\nheight_difference = Burj_Khalifa_height - Sears_Tower_height\nans = height_difference"
        ],
        "results": [
            303.0,
            303.0,
            303.0
        ],
        "result_counter": {
            "303.0": 3
        },
        "prediction": 303.0
    },
    {
        "question": "Rob also compared the Empire State Building and the Petronas Towers. What is the height difference between the two if the Empire State Building is 443 m tall and the Petronas Towers is 452 m tall?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nEmpire_State_Building_height = 443\nPetronas_Towers_height = 452\nheight_difference = Petronas_Towers_height - Empire_State_Building_height\nans = height_difference",
            "# Python code, return ans\nEmpire_State_Building_height = 443\nPetronas_Towers_height = 452\nheight_difference = Petronas_Towers_height - Empire_State_Building_height\nans = height_difference",
            "# Python code, return ans\nEmpire_State_Building_height = 443\nPetronas_Towers_height = 452\nheight_difference = Petronas_Towers_height - Empire_State_Building_height\nans = height_difference"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Having been to Paris, Rob also remembered the Eiffel Tower which was the tallest structure in the world at the time it was built. If the height of Eiffel Tower is 324 m, how much lower is it compared to 830m height, today\u2019s tallest man-made structure, the Burj Khalifa?",
        "answer": 506,
        "generated": [
            "# Python code, return ans\neiffel_tower_height = 324\nburj_khalifa_height = 830\nheight_difference = burj_khalifa_height - eiffel_tower_height\nans = height_difference",
            "# Python code, return ans\nEiffel_Tower_height = 324\nBurj_Khalifa_height = 830\nheight_difference = Burj_Khalifa_height - Eiffel_Tower_height\nans = height_difference",
            "# Python code, return ans\nEiffel_Tower_height = 324\nBurj_Khalifa_height = 830\nheight_difference = Burj_Khalifa_height - Eiffel_Tower_height\nans = height_difference"
        ],
        "results": [
            506.0,
            506.0,
            506.0
        ],
        "result_counter": {
            "506.0": 3
        },
        "prediction": 506.0
    },
    {
        "question": "Rob also matched the London Eye which stands at 443 ft and Las Vegas' High Roller standing at 550 ft. Being the tallest Ferris wheel in the world, how much taller is High Roller than the London Eye?",
        "answer": 107,
        "generated": [
            "# Python code, return ans\nLondon_Eye_height = 443\nHigh_Roller_height = 550\nheight_difference = High_Roller_height - London_Eye_height\nans = height_difference",
            "# Python code, return ans\nLondon_Eye_height = 443\nHigh_Roller_height = 550\nheight_difference = High_Roller_height - London_Eye_height\nans = height_difference",
            "# Python code, return ans\nLondon_Eye_height = 443\nHigh_Roller_height = 550\nheight_difference = High_Roller_height - London_Eye_height\nans = height_difference"
        ],
        "results": [
            107.0,
            107.0,
            107.0
        ],
        "result_counter": {
            "107.0": 3
        },
        "prediction": 107.0
    },
    {
        "question": "Lastly, Rob compared Canada's CN Tower and Seattle's Space Needle. How tall is the Space Needle if the CN Tower stands at 553 m high and it is taller than the Space Needle by 369 m?",
        "answer": 184,
        "generated": [
            "# Python code, return ans\nCN_Tower_height = 553\nheight_difference = 369\nSpace_Needle_height = CN_Tower_height - height_difference\nans = Space_Needle_height",
            "# Python code, return ans\nCN_Tower_height = 553\nheight_difference = 369\nSpace_Needle_height = CN_Tower_height - height_difference\nans = Space_Needle_height",
            "# Python code, return ans\nCN_Tower_height = 553\nheight_difference = 369\nSpace_Needle_height = CN_Tower_height - height_difference\nans = Space_Needle_height"
        ],
        "results": [
            184.0,
            184.0,
            184.0
        ],
        "result_counter": {
            "184.0": 3
        },
        "prediction": 184.0
    },
    {
        "question": "Mike and his brother Joe found a map leading to a buried treasure in an unknown island so they decided to go on a treasure hunt. After decoding the clues on the map, they found out that they need to go to the Island of Mysteries. To get there, they could either take a plane for $600.00 or a boat for $254.00. How much money can they save if they took a boat to the island?",
        "answer": 346,
        "generated": [
            "# Python code, return ans\nplane_cost = 600\nboat_cost = 254\nmoney_saved = plane_cost - boat_cost\nans = money_saved",
            "# Python code, return ans\nplane_cost = 600\nboat_cost = 254\nmoney_saved = plane_cost - boat_cost\nans = money_saved",
            "# Python code, return ans\nplane_cost = 600\nboat_cost = 254\nmoney_saved = plane_cost - boat_cost\nans = money_saved"
        ],
        "results": [
            346.0,
            346.0,
            346.0
        ],
        "result_counter": {
            "346.0": 3
        },
        "prediction": 346.0
    },
    {
        "question": "When they arrived at the island's starting point, they looked at the clues and found out that the number of steps they need to take to get to the next clue is the difference between 537 and 369. How many steps do they have to take to get to the next clue?",
        "answer": 168,
        "generated": [
            "# Python code, return ans\nsteps_difference = 537 - 369\nans = steps_difference",
            "# Python code, return ans\nsteps_difference = 537 - 369\nans = steps_difference\nans",
            "# Python code, return ans\nsteps_difference = 537 - 369\nans = steps_difference\nans"
        ],
        "results": [
            168.0,
            168.0,
            168.0
        ],
        "result_counter": {
            "168.0": 3
        },
        "prediction": 168.0
    },
    {
        "question": "The map led them through the forest and into a cave. To open the cave doors, they need to put weights on the switch. If the switch already has 234 lbs. of weights and the total needed is 712 lbs., how much more weight to they need to add?",
        "answer": 478,
        "generated": [
            "# Python code, return ans\ncurrent_weight = 234\ntotal_needed_weight = 712\nadditional_weight_needed = total_needed_weight - current_weight\nans = additional_weight_needed",
            "# Python code, return ans\ncurrent_weight = 234\ntotal_weight_needed = 712\nadditional_weight_needed = total_weight_needed - current_weight\nans = additional_weight_needed",
            "# Python code, return ans\ncurrent_weight = 234\ntotal_weight_needed = 712\nadditional_weight_needed = total_weight_needed - current_weight\nans = additional_weight_needed"
        ],
        "results": [
            478.0,
            478.0,
            478.0
        ],
        "result_counter": {
            "478.0": 3
        },
        "prediction": 478.0
    },
    {
        "question": "If the cave is 974 feet deep and they are already at 588 feet, how much farther until they reach the end of the cave?",
        "answer": 386,
        "generated": [
            "# Python code, return ans\ncave_depth = 974\ncurrent_depth = 588\ndistance_to_end = cave_depth - current_depth\nans = distance_to_end",
            "# Python code, return ans\ncave_depth = 974\ncurrent_depth = 588\ndistance_remaining = cave_depth - current_depth\nans = distance_remaining",
            "# Python code, return ans\ncave_depth = 974\ncurrent_depth = 588\ndistance_to_end = cave_depth - current_depth\nans = distance_to_end"
        ],
        "results": [
            386.0,
            386.0,
            386.0
        ],
        "result_counter": {
            "386.0": 3
        },
        "prediction": 386.0
    },
    {
        "question": "At the end of the cave, they found a golden chest. If the chest contains 421 diamonds and 377 rubies, how many more diamonds are there than rubies?",
        "answer": 44,
        "generated": [
            "# Python code, return ans\ndiamonds = 421\nrubies = 377\nmore_diamonds = diamonds - rubies\nans = more_diamonds",
            "# Python code, return ans\ndiamonds = 421\nrubies = 377\nmore_diamonds = diamonds - rubies\nans = more_diamonds",
            "# Python code, return ans\ndiamonds = 421\nrubies = 377\nmore_diamonds = diamonds - rubies\nans = more_diamonds"
        ],
        "results": [
            44.0,
            44.0,
            44.0
        ],
        "result_counter": {
            "44.0": 3
        },
        "prediction": 44.0
    },
    {
        "question": "Simon, an adventurer, got trapped in the magical Blackwood Forest. In order to find the way out, he needs to solve a series of puzzles. The first puzzle involved two giant trees. To open the path, he needs to find the height difference between the two trees. If the first tree is 465 ft high and the second is 399 ft, what is the height difference?",
        "answer": 66,
        "generated": [
            "# Python code, return ans\nfirst_tree_height = 465\nsecond_tree_height = 399\nheight_difference = first_tree_height - second_tree_height\nans = height_difference",
            "# Python code, return ans\nfirst_tree_height = 465\nsecond_tree_height = 399\nheight_difference = first_tree_height - second_tree_height\nans = height_difference",
            "# Python code, return ans\nfirst_tree_height = 465\nsecond_tree_height = 399\nheight_difference = first_tree_height - second_tree_height\nans = height_difference"
        ],
        "results": [
            66.0,
            66.0,
            66.0
        ],
        "result_counter": {
            "66.0": 3
        },
        "prediction": 66.0
    },
    {
        "question": "The path opened to a beautiful garden enclosed by a wall. The exit door will open when the number of white flowers is the same as the number of red flowers. If there are 555 white flowers and 347 red flowers, how many more red flowers are needed?",
        "answer": 208,
        "generated": [
            "# Python code, return ans\nwhite_flowers = 555\nred_flowers = 347\nmore_red_flowers_needed = white_flowers - red_flowers\nans = more_red_flowers_needed",
            "# Python code, return ans\nwhite_flowers = 555\nred_flowers = 347\nred_flowers_needed = white_flowers - red_flowers\nans = red_flowers_needed",
            "# Python code, return ans\nwhite_flowers = 555\nred_flowers = 347\nadditional_red_flowers_needed = white_flowers - red_flowers\nans = additional_red_flowers_needed"
        ],
        "results": [
            208.0,
            208.0,
            208.0
        ],
        "result_counter": {
            "208.0": 3
        },
        "prediction": 208.0
    },
    {
        "question": "The exit door leads to a river 487 inches across, if the bridge he needs to cross is only 295 inches, how much longer does he need to build if he wants to cross the river using the bridge?",
        "answer": 192,
        "generated": [
            "# Python code, return ans\nriver_width = 487\nbridge_length = 295\nextra_length_needed = river_width - bridge_length\nans = extra_length_needed",
            "# Python code, return ans\nriver_width = 487\nbridge_length = 295\nextra_length_needed = river_width - bridge_length\nans = extra_length_needed",
            "# Python code, return ans\nriver_width = 487\nbridge_length = 295\nadditional_length_needed = river_width - bridge_length\nans = additional_length_needed"
        ],
        "results": [
            192.0,
            192.0,
            192.0
        ],
        "result_counter": {
            "192.0": 3
        },
        "prediction": 192.0
    },
    {
        "question": "Across the river, he fell into a hole. To get out, he needs to fill it with 823 gallons of water. If the hole initially has 676 gallons, how much water does he need to fill it?",
        "answer": 147,
        "generated": [
            "# Python code, return ans\ninitial_water = 676\ntotal_water_needed = 823\nwater_to_fill = total_water_needed - initial_water\nans = water_to_fill",
            "# Python code, return ans\ninitial_water = 676\ntotal_water_needed = 823\nwater_to_fill = total_water_needed - initial_water\nans = water_to_fill",
            "# Python code, return ans\ninitial_water = 676\ntotal_water_needed = 823\nwater_to_fill = total_water_needed - initial_water\nans = water_to_fill"
        ],
        "results": [
            147.0,
            147.0,
            147.0
        ],
        "result_counter": {
            "147.0": 3
        },
        "prediction": 147.0
    },
    {
        "question": "At the edge of the forest, an anthill is blocking the way out. In order to pass through, he needs to help the ants gather food. If the ants need 911 grains of food and they already have 762, how many more grains are needed to be gathered?",
        "answer": 149,
        "generated": [
            "# Python code, return ans\ntotal_needed = 911\nalready_have = 762\nmore_grains_needed = total_needed - already_have\nans = more_grains_needed",
            "# Python code, return ans\ntotal_grains_needed = 911\ngrains_already_have = 762\ngrains_needed = total_grains_needed - grains_already_have\nans = grains_needed",
            "# Python code, return ans\nfood_needed = 911\nfood_collected = 762\nfood_to_gather = food_needed - food_collected\nans = food_to_gather"
        ],
        "results": [
            149.0,
            149.0,
            149.0
        ],
        "result_counter": {
            "149.0": 3
        },
        "prediction": 149.0
    },
    {
        "question": "Charlie, an aspiring inventor, is planning to make some wings to fulfill his dream to fly around the world. He started by collecting feathers. He needs 900 feathers and he already has 387. How many more feathers does he need to collect?",
        "answer": 513,
        "generated": [
            "# Python code, return ans\ntotal_feathers_needed = 900\nfeathers_collected = 387\nfeathers_needed = total_feathers_needed - feathers_collected\nans = feathers_needed",
            "# Python code, return ans\ntotal_feathers_needed = 900\nfeathers_collected = 387\nfeathers_to_collect = total_feathers_needed - feathers_collected\nans = feathers_to_collect",
            "# Python code, return ans\nneeded_feathers = 900\ncollected_feathers = 387\nfeathers_to_collect = needed_feathers - collected_feathers\nans = feathers_to_collect"
        ],
        "results": [
            513.0,
            513.0,
            513.0
        ],
        "result_counter": {
            "513.0": 3
        },
        "prediction": 513.0
    },
    {
        "question": "Next on his checklist are wax glues to stick the feathers together. If the feathers require 469 g of wax and right now he just needs 257 g, how many grams of wax glue does he already have?",
        "answer": 212,
        "generated": [
            "# Python code, return ans\nrequired_wax = 469\nneeded_wax = 257\nalready_have_wax = required_wax - needed_wax\nans = already_have_wax",
            "# Python code, return ans\nrequired_wax = 469\nneeded_wax = 257\nalready_have_wax = required_wax - needed_wax\nans = already_have_wax",
            "# Python code, return ans\nrequired_wax = 469\nneeded_wax = 257\nalready_have_wax = required_wax - needed_wax\nans = already_have_wax"
        ],
        "results": [
            212.0,
            212.0,
            212.0
        ],
        "result_counter": {
            "212.0": 3
        },
        "prediction": 212.0
    },
    {
        "question": "The wings now need to be heated. If the oven is at 150 degrees and the required temperature is 546 degrees, how many more degrees does the oven temperature need to increase?",
        "answer": 396,
        "generated": [
            "# Python code, return ans\ncurrent_temperature = 150\nrequired_temperature = 546\ntemperature_increase = required_temperature - current_temperature\nans = temperature_increase",
            "# Python code, return ans\ncurrent_temperature = 150\nrequired_temperature = 546\ntemperature_increase = required_temperature - current_temperature\nans = temperature_increase",
            "# Python code, return ans\ncurrent_temperature = 150\nrequired_temperature = 546\ntemperature_increase = required_temperature - current_temperature\nans = temperature_increase"
        ],
        "results": [
            396.0,
            396.0,
            396.0
        ],
        "result_counter": {
            "396.0": 3
        },
        "prediction": 396.0
    },
    {
        "question": "While heating the wings, Charlie decided to make metal supports for the wings. If he needs 635 lbs of metal and he has 276 lbs in storage, how much additional metal does he need to buy?",
        "answer": 359,
        "generated": [
            "# Python code, return ans\nmetal_needed = 635\nmetal_in_storage = 276\nadditional_metal = metal_needed - metal_in_storage\nans = additional_metal",
            "# Python code, return ans\nmetal_needed = 635\nmetal_in_storage = 276\nadditional_metal = metal_needed - metal_in_storage\nans = additional_metal",
            "# Python code, return ans\nmetal_needed = 635\nmetal_in_storage = 276\nadditional_metal_needed = metal_needed - metal_in_storage\nans = additional_metal_needed"
        ],
        "results": [
            359.0,
            359.0,
            359.0
        ],
        "result_counter": {
            "359.0": 3
        },
        "prediction": 359.0
    },
    {
        "question": "Finally, he wanted to add color to the wings so he decided to paint it like a rainbow. If he wanted to use 333 liters of paint and he still have 157 liters left from his last project, how much more paint does he need to buy?",
        "answer": 176,
        "generated": [
            "# Python code, return ans\npaint_needed = 333\npaint_left = 157\npaint_to_buy = paint_needed - paint_left\nans = paint_to_buy",
            "# Python code, return ans\npaint_needed = 333\npaint_left = 157\npaint_to_buy = paint_needed - paint_left\nans = paint_to_buy",
            "# Python code, return ans\npaint_needed = 333\npaint_left = 157\npaint_to_buy = paint_needed - paint_left\nans = paint_to_buy"
        ],
        "results": [
            176.0,
            176.0,
            176.0
        ],
        "result_counter": {
            "176.0": 3
        },
        "prediction": 176.0
    },
    {
        "question": "Willie, the town baker, wanted to make the biggest cake their town has ever seen. First, he prepared the flour. He is planning to use 501 lbs. of flour. If he has 294 lbs. of flour stored in his bakery, how much more flour does he need to buy?",
        "answer": 207,
        "generated": [
            "# Python code, return ans\nflour_needed = 501\nflour_stored = 294\nflour_to_buy = flour_needed - flour_stored\nans = flour_to_buy",
            "# Python code, return ans\nflour_needed = 501\nflour_stored = 294\nflour_to_buy = flour_needed - flour_stored\nans = flour_to_buy",
            "# Python code, return ans\nflour_needed = 501\nflour_stored = 294\nflour_to_buy = flour_needed - flour_stored\nans = flour_to_buy"
        ],
        "results": [
            207.0,
            207.0,
            207.0
        ],
        "result_counter": {
            "207.0": 3
        },
        "prediction": 207.0
    },
    {
        "question": "Next on his shopping list are the eggs. If he needs 222 eggs for his cake and his friend Andrew gave him 155, how many more eggs should he buy?",
        "answer": 67,
        "generated": [
            "# Python code, return ans\neggs_needed = 222\neggs_from_Andrew = 155\neggs_to_buy = eggs_needed - eggs_from_Andrew\nans = eggs_to_buy",
            "# Python code, return ans\neggs_needed = 222\neggs_from_Andrew = 155\neggs_to_buy = eggs_needed - eggs_from_Andrew\nans = eggs_to_buy",
            "# Python code, return ans\nneeded_eggs = 222\neggs_from_Andrew = 155\neggs_to_buy = needed_eggs - eggs_from_Andrew\nans = eggs_to_buy"
        ],
        "results": [
            67.0,
            67.0,
            67.0
        ],
        "result_counter": {
            "67.0": 3
        },
        "prediction": 67.0
    },
    {
        "question": "To make sure that the cake is sweet, he needs 450 lbs. of sugar. If he has 287 lbs. of sugar stored in his house, how much additional sugar will he need?",
        "answer": 163,
        "generated": [
            "# Python code, return ans\nrequired_sugar = 450\nstored_sugar = 287\nadditional_sugar = required_sugar - stored_sugar\nans = additional_sugar",
            "# Python code, return ans\nsugar_needed = 450\nsugar_stored = 287\nadditional_sugar = sugar_needed - sugar_stored\nans = additional_sugar",
            "# Python code, return ans\nsugar_needed = 450\nsugar_stored = 287\nadditional_sugar = sugar_needed - sugar_stored\nans = additional_sugar"
        ],
        "results": [
            163.0,
            163.0,
            163.0
        ],
        "result_counter": {
            "163.0": 3
        },
        "prediction": 163.0
    },
    {
        "question": "Since the townspeople requested that he makes a chocolate cake, he will need 306 lbs. of cocoa powder. If the mayor already gave him 259 lbs., how much cocoa powder does he still need?",
        "answer": 47,
        "generated": [
            "# Python code, return ans\ncocoa_needed = 306\ncocoa_given = 259\ncocoa_remaining = cocoa_needed - cocoa_given\nans = cocoa_remaining",
            "# Python code, return ans\ncocoa_needed = 306\ncocoa_given = 259\ncocoa_still_needed = cocoa_needed - cocoa_given\nans = cocoa_still_needed",
            "# Python code, return ans\ncocoa_needed = 306\ncocoa_given = 259\ncocoa_still_needed = cocoa_needed - cocoa_given\nans = cocoa_still_needed"
        ],
        "results": [
            47.0,
            47.0,
            47.0
        ],
        "result_counter": {
            "47.0": 3
        },
        "prediction": 47.0
    },
    {
        "question": "For the frosting and final touches, Willie will need to have 300 lbs. of whipped cream. If he got 149 lbs. of cream from his farm, how much more cream is needed to be bought?",
        "answer": 151,
        "generated": [
            "# Python code, return ans\ntotal_cream_needed = 300\ncream_from_farm = 149\ncream_to_buy = total_cream_needed - cream_from_farm\nans = cream_to_buy",
            "# Python code, return ans\ntotal_cream_needed = 300\ncream_from_farm = 149\ncream_to_buy = total_cream_needed - cream_from_farm\nans = cream_to_buy",
            "# Python code, return ans\ncream_needed = 300\ncream_from_farm = 149\ncream_to_buy = cream_needed - cream_from_farm\nans = cream_to_buy"
        ],
        "results": [
            151.0,
            151.0,
            151.0
        ],
        "result_counter": {
            "151.0": 3
        },
        "prediction": 151.0
    },
    {
        "question": "There's only a week left before Christmas. John went out to buy gifts for his family. Having $999.00 for his budget, he went to a sports store and bought his brother a new pair of shoes for $165.00. How much money does he have left?",
        "answer": 834,
        "generated": [
            "# Python code, return ans\nbudget = 999\nshoes_cost = 165\nmoney_left = budget - shoes_cost\nans = money_left",
            "# Python code, return ans\nbudget = 999\nshoe_cost = 165\nmoney_left = budget - shoe_cost\nans = money_left",
            "# Python code, return ans\nbudget = 999\nshoes_cost = 165\nmoney_left = budget - shoes_cost\nans = money_left"
        ],
        "results": [
            834.0,
            834.0,
            834.0
        ],
        "result_counter": {
            "834.0": 3
        },
        "prediction": 834.0
    },
    {
        "question": "Using the $834.00 left from buying the shoes, he went to a fashion store to buy a dress for his sister. If the dress costs $129.00, how much money does he have left with him?",
        "answer": 705,
        "generated": [
            "# Python code, return ans\nmoney_left = 834\ndress_cost = 129\nmoney_left_after_dress = money_left - dress_cost\nans = money_left_after_dress",
            "# Python code, return ans\nmoney_left = 834\ndress_cost = 129\nmoney_left_after_dress = money_left - dress_cost\nans = money_left_after_dress",
            "# Python code, return ans\nmoney_left = 834\ndress_cost = 129\nmoney_left_after_dress = money_left - dress_cost\nans = money_left_after_dress"
        ],
        "results": [
            705.0,
            705.0,
            705.0
        ],
        "result_counter": {
            "705.0": 3
        },
        "prediction": 705.0
    },
    {
        "question": "After buying a dress, he went to a gardening store and bought his mom some ornamental plants. If the plants originally cost $467.00 and he was able to get a $399.00 discount, how much did he actually spend on buying the plants?",
        "answer": 68,
        "generated": [
            "# Python code, return ans\noriginal_cost = 467\ndiscount = 399\nactual_cost = original_cost - discount\nans = actual_cost",
            "# Python code, return ans\noriginal_cost = 467\ndiscount = 399\nactual_cost = original_cost - discount\nans = actual_cost",
            "# Python code, return ans\noriginal_cost = 467\ndiscount = 399\nactual_cost = original_cost - discount\nans = actual_cost"
        ],
        "results": [
            68.0,
            68.0,
            68.0
        ],
        "result_counter": {
            "68.0": 3
        },
        "prediction": 68.0
    },
    {
        "question": "Lastly, he went to a music store and bought a new set of speakers for his dad's entertainment system. If the initial price of the speakers is $475.00 he got it for $199.00, how much money was he able to save from having a discount?",
        "answer": 276,
        "generated": [
            "# Python code, return ans\ninitial_price = 475\ndiscounted_price = 199\nmoney_saved = initial_price - discounted_price\nans = money_saved",
            "# Python code, return ans\ninitial_price = 475\ndiscounted_price = 199\nmoney_saved = initial_price - discounted_price\nans = money_saved",
            "# Python code, return ans\ninitial_price = 475\ndiscounted_price = 199\nmoney_saved = initial_price - discounted_price\nans = money_saved"
        ],
        "results": [
            276.0,
            276.0,
            276.0
        ],
        "result_counter": {
            "276.0": 3
        },
        "prediction": 276.0
    },
    {
        "question": "If he spent a total of $700.00 and all the gifts cost a total of $561.00, how much money did he spend on giftwrapping and other expenses?",
        "answer": 139,
        "generated": [
            "# Python code, return ans\ntotal_spent = 700\ngifts_cost = 561\nother_expenses = total_spent - gifts_cost\nans = other_expenses",
            "# Python code, return ans\ntotal_spent = 700\ngift_cost = 561\nother_expenses = total_spent - gift_cost\nans = other_expenses",
            "# Python code, return ans\ntotal_spent = 700\ngift_cost = 561\nother_expenses = total_spent - gift_cost\nans = other_expenses"
        ],
        "results": [
            139.0,
            139.0,
            139.0
        ],
        "result_counter": {
            "139.0": 3
        },
        "prediction": 139.0
    },
    {
        "question": "Janine owns a catering service company. She was hired to cater for the mayor's 50th birthday. For the appetizers, she needs to make 750 mini meat pies. She divided her crew into 3 teams. If the first team made 235, and the second made 275, how many pies should the third team make?",
        "answer": 240,
        "generated": [
            "# Python code, return ans\nteam1_pies = 235\nteam2_pies = 275\ntotal_pies_needed = 750\nteam3_pies = total_pies_needed - (team1_pies + team2_pies)\nans = team3_pies",
            "# Python code, return ans\nteam1_pies = 235\nteam2_pies = 275\ntotal_pies_needed = 750\nteam3_pies = total_pies_needed - (team1_pies + team2_pies)\nans = team3_pies",
            "# Python code, return ans\ntotal_pies_needed = 750\nfirst_team_pies = 235\nsecond_team_pies = 275\npies_made = first_team_pies + second_team_pies\nthird_team_pies = total_pies_needed - pies_made\nans = third_team_pies"
        ],
        "results": [
            240.0,
            240.0,
            240.0
        ],
        "result_counter": {
            "240.0": 3
        },
        "prediction": 240.0
    },
    {
        "question": "Next food item she has to prepare is soup. She needs 280 cups of mushroom soup. If the first team made 90 cups, and the third team made 70 cups, how any cups should the second team prepare in order to meet the required amount of soup?",
        "answer": 120,
        "generated": [
            "# Python code, return ans\ntotal_soup_needed = 280\nfirst_team_cups = 90\nthird_team_cups = 70\nsecond_team_cups = total_soup_needed - (first_team_cups + third_team_cups)\nans = second_team_cups",
            "# Python code, return ans\ntotal_soup_needed = 280\nfirst_team_cups = 90\nthird_team_cups = 70\nsecond_team_cups = total_soup_needed - (first_team_cups + third_team_cups)\nans = second_team_cups",
            "# Python code, return ans\ntotal_soup_needed = 280\nfirst_team_cups = 90\nthird_team_cups = 70\nsecond_team_cups = total_soup_needed - (first_team_cups + third_team_cups)\nans = second_team_cups"
        ],
        "results": [
            120.0,
            120.0,
            120.0
        ],
        "result_counter": {
            "120.0": 3
        },
        "prediction": 120.0
    },
    {
        "question": "For the first main dish, they were asked to cook steak. If the third and second team cooked 240 plates of steak. And the first team cooked 75 plates less than what the second and third team made, how many steaks did they cook altogether?",
        "answer": 405,
        "generated": [
            "# Python code, return ans\nsteak_second_third_team = 240\nsteak_first_team = steak_second_third_team - 75\ntotal_steak = steak_first_team + steak_second_third_team\nans = total_steak",
            "# Python code, return ans\nsecond_third_team_steak = 240\nfirst_team_steak = second_third_team_steak - 75\ntotal_steak = first_team_steak + second_third_team_steak\nans = total_steak",
            "# Python code, return ans\nsecond_third_team_steak = 240\nfirst_team_steak = second_third_team_steak - 75\ntotal_steak = first_team_steak + second_third_team_steak\nans = total_steak"
        ],
        "results": [
            405.0,
            405.0,
            405.0
        ],
        "result_counter": {
            "405.0": 3
        },
        "prediction": 405.0
    },
    {
        "question": "For the second main course, they were asked to make 500 pieces of fish fillets. If the first team made 189 pieces and the second team made 131 pieces, how many pieces should the third team make?",
        "answer": 180,
        "generated": [
            "# Python code, return ans\nfirst_team = 189\nsecond_team = 131\ntotal_needed = 500\nthird_team = total_needed - (first_team + second_team)\nans = third_team",
            "# Python code, return ans\nfirst_team_pieces = 189\nsecond_team_pieces = 131\ntotal_pieces_needed = 500\nthird_team_pieces = total_pieces_needed - (first_team_pieces + second_team_pieces)\nans = third_team_pieces",
            "# Python code, return ans\nfirst_team = 189\nsecond_team = 131\ntotal_pieces_needed = 500\nthird_team = total_pieces_needed - (first_team + second_team)\nans = third_team"
        ],
        "results": [
            180.0,
            180.0,
            180.0
        ],
        "result_counter": {
            "180.0": 3
        },
        "prediction": 180.0
    },
    {
        "question": "They served a total of 179 adults and 141 children, if 156 of all the people they served are male, how many are female?",
        "answer": 164,
        "generated": [
            "# Python code, return ans\nadults = 179\nchildren = 141\ntotal_people = adults + children\nmale = 156\nfemale = total_people - male\nans = female",
            "# Python code, return ans\nadults = 179\nchildren = 141\ntotal_people = adults + children\nmales = 156\nfemales = total_people - males\nans = females",
            "# Python code, return ans\nadults = 179\nchildren = 141\ntotal_people = adults + children\nmales = 156\nfemales = total_people - males\nans = females"
        ],
        "results": [
            164.0,
            164.0,
            164.0
        ],
        "result_counter": {
            "164.0": 3
        },
        "prediction": 164.0
    },
    {
        "question": "Alvin is trying to build a small house in the forest so that he has a place to stay whenever he goes hunting. He started by gathering some wood. According to his blueprint, he will need 376 pieces of wood. If his friend gave him 123 pieces and his brother gave him 136 pieces, how many more wood does he need to gather?",
        "answer": 117,
        "generated": [
            "# Python code, return ans\nwood_needed = 376\nwood_from_friend = 123\nwood_from_brother = 136\nwood_collected = wood_from_friend + wood_from_brother\nwood_to_gather = wood_needed - wood_collected\nans = wood_to_gather",
            "# Python code, return ans\nwood_needed = 376\nwood_from_friend = 123\nwood_from_brother = 136\nwood_collected = wood_from_friend + wood_from_brother\nwood_to_gather = wood_needed - wood_collected\nans = wood_to_gather",
            "# Python code, return ans\nwood_needed = 376\nwood_from_friend = 123\nwood_from_brother = 136\nwood_collected = wood_from_friend + wood_from_brother\nwood_remaining = wood_needed - wood_collected\nans = wood_remaining"
        ],
        "results": [
            117.0,
            117.0,
            117.0
        ],
        "result_counter": {
            "117.0": 3
        },
        "prediction": 117.0
    },
    {
        "question": "He also needed some nails. If he already has 247 nails with him and he found another 144 in his toolshed, how many more nails does he need to buy if he needs a total of 500 nails?",
        "answer": 109,
        "generated": [
            "# Python code, return ans\nnails_with_him = 247\nnails_found = 144\ntotal_nails_needed = 500\nnails_to_buy = total_nails_needed - (nails_with_him + nails_found)\nans = nails_to_buy",
            "# Python code, return ans\nnails_current = 247\nnails_found = 144\nnails_needed = 500\nnails_total = nails_current + nails_found\nnails_to_buy = nails_needed - nails_total\nans = nails_to_buy",
            "# Python code, return ans\nnails_current = 247\nnails_found = 144\nnails_needed = 500\nnails_total = nails_current + nails_found\nnails_to_buy = nails_needed - nails_total\nans = nails_to_buy"
        ],
        "results": [
            109.0,
            109.0,
            109.0
        ],
        "result_counter": {
            "109.0": 3
        },
        "prediction": 109.0
    },
    {
        "question": "To add support on the house's connections, he decided to tie the wood joints with rope. He needs 185 feet of rope. If he has 46 feet of rope with him and at the moment he only needed 57 feet, how many feet of rope did his friends give to him?",
        "answer": 82,
        "generated": [
            "# Python code, return ans\nneeded_rope = 185\nrope_with_him = 46\nrope_needed_now = 57\nfriends_rope = needed_rope - rope_with_him - rope_needed_now\nans = friends_rope",
            "# Python code, return ans\nneeded_rope = 185\nrope_with_him = 46\nrope_needed_now = 57\nfriend_rope = rope_needed_now - (needed_rope - rope_with_him)\nans = friend_rope",
            "# Python code, return ans\nneeded_rope = 185\nrope_with_him = 46\nneeded_now = 57\nrope_from_friends = needed_now - (rope_with_him - (needed_rope - needed_now))\nans = rope_from_friends"
        ],
        "results": [
            82.0,
            -82.0,
            139.0
        ],
        "result_counter": {
            "82.0": 1,
            "-82.0": 1,
            "139.0": 1
        },
        "prediction": 82.0
    },
    {
        "question": "He wanted to make sure that he is protected from the cold evenings in the forest so he decided to build a fireplace made of cement. If he bought 215 lbs of cement and his son brought another 137 lbs, how much cement did he have originally if he now has 450 lbs?",
        "answer": 98,
        "generated": [
            "# Python code, return ans\ncement_bought = 215\ncement_son_brought = 137\ncement_total = cement_bought + cement_son_brought\nans = cement_total",
            "# Python code, return ans\ncement_bought = 215\ncement_son = 137\ncement_total = cement_bought + cement_son\noriginal_cement = 450 - cement_total\nans = original_cement",
            "# Python code, return ans\ncement_bought = 215\ncement_son_brought = 137\ncement_total = cement_bought + cement_son_brought\ncement_now = 450\ncement_originally = cement_now - cement_total\nans = cement_originally"
        ],
        "results": [
            352.0,
            98.0,
            98.0
        ],
        "result_counter": {
            "352.0": 1,
            "98.0": 2
        },
        "prediction": 98.0
    },
    {
        "question": "For finishing touches, he needed 70 gallons of paint. If he bought 23 gallons to add to his existing 36 gallons of paint, how much more paint will he need?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\nexisting_paint = 36\nbought_paint = 23\ntotal_paint = existing_paint + bought_paint\nneeded_paint = 70\nmore_paint_needed = needed_paint - total_paint\nans = more_paint_needed",
            "# Python code, return ans\nexisting_paint = 36\nbought_paint = 23\ntotal_paint = existing_paint + bought_paint\nneeded_paint = 70\nmore_paint_needed = needed_paint - total_paint\nans = more_paint_needed",
            "# Python code, return ans\nexisting_paint = 36\nbought_paint = 23\ntotal_paint = existing_paint + bought_paint\nneeded_paint = 70\nmore_paint_needed = needed_paint - total_paint\nans = more_paint_needed"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "Lizzie lives in a very big and polluted city. Being an advocate for the environment, she organized a cleanup drive to help reduce the pollution. They started by cleaning the rivers that flow through and around the city. If her group was able to collect 387 pounds of garbage and another group gathered 39 pounds less than Lizzie's group, how much garbage were the two groups able to gather?",
        "answer": 735,
        "generated": [
            "# Python code, return ans\nLizzie_group_garbage = 387\nother_group_garbage = Lizzie_group_garbage - 39\ntotal_garbage = Lizzie_group_garbage + other_group_garbage\nans = total_garbage",
            "# Python code, return ans\nLizzie_group_garbage = 387\nanother_group_garbage = Lizzie_group_garbage - 39\ntotal_garbage = Lizzie_group_garbage + another_group_garbage\nans = total_garbage",
            "# Python code, return ans\nLizzie_group_garbage = 387\nanother_group_garbage = Lizzie_group_garbage - 39\ntotal_garbage = Lizzie_group_garbage + another_group_garbage\nans = total_garbage"
        ],
        "results": [
            735.0,
            735.0,
            735.0
        ],
        "result_counter": {
            "735.0": 3
        },
        "prediction": 735.0
    },
    {
        "question": "After the cleaning the rivers they went on to tidy up the farmlands. If Lizzie's group covered 250 square feet of land and the other group covered 265, how many more square feet of land remains to be cleaned if there is total of 900 square feet of land?",
        "answer": 385,
        "generated": [
            "# Python code, return ans\nLizzie_group_area = 250\nother_group_area = 265\ntotal_area = 900\ncleaned_area = Lizzie_group_area + other_group_area\nremaining_area = total_area - cleaned_area\nans = remaining_area",
            "# Python code, return ans\nLizzie_group = 250\nother_group = 265\ntotal_land = 900\nland_covered = Lizzie_group + other_group\nland_remaining = total_land - land_covered\nans = land_remaining",
            "# Python code, return ans\nLizzie_group = 250\nother_group = 265\ntotal_land = 900\ncleaned_land = Lizzie_group + other_group\nremaining_land = total_land - cleaned_land\nans = remaining_land"
        ],
        "results": [
            385.0,
            385.0,
            385.0
        ],
        "result_counter": {
            "385.0": 3
        },
        "prediction": 385.0
    },
    {
        "question": "The two groups will also collect garbage from all the 453 houses in the city. If Lizzie's group covered 238 houses while the other group covered 190, how many more houses remain?",
        "answer": 25,
        "generated": [
            "# Python code, return ans\ntotal_houses = 453\nLizzie_group = 238\nother_group = 190\nhouses_covered = Lizzie_group + other_group\nhouses_remaining = total_houses - houses_covered\nans = houses_remaining",
            "# Python code, return ans\ntotal_houses = 453\nLizzie_group_houses = 238\nother_group_houses = 190\nhouses_covered = Lizzie_group_houses + other_group_houses\nremaining_houses = total_houses - houses_covered\nans = remaining_houses",
            "# Python code, return ans\ntotal_houses = 453\nLizzie_group = 238\nother_group = 190\nhouses_covered = Lizzie_group + other_group\nhouses_remaining = total_houses - houses_covered\nans = houses_remaining"
        ],
        "results": [
            25.0,
            25.0,
            25.0
        ],
        "result_counter": {
            "25.0": 3
        },
        "prediction": 25.0
    },
    {
        "question": "If Lizzie's group is composed of 54 people and they have 17 more members than the other group, how many people are working together to clean the city?",
        "answer": 91,
        "generated": [
            "# Python code, return ans\nLizzie_group = 54\nother_group = Lizzie_group - 17\ntotal_people = Lizzie_group + other_group\nans = total_people",
            "# Python code, return ans\nLizzie_group = 54\nother_group = Lizzie_group - 17\ntotal_people = Lizzie_group + other_group\nans = total_people",
            "# Python code, return ans\nLizzie_group = 54\nother_group = Lizzie_group - 17\ntotal_people = Lizzie_group + other_group\nans = total_people"
        ],
        "results": [
            91.0,
            91.0,
            91.0
        ],
        "result_counter": {
            "91.0": 3
        },
        "prediction": 91.0
    },
    {
        "question": "Finally, they had to roam around 169 factories to make sure they are throwing their wastes properly. If their group went to 69 factories and the second went to 52, how many factories remain unchecked?",
        "answer": 48,
        "generated": [
            "# Python code, return ans\ntotal_factories = 169\nfirst_group_factories = 69\nsecond_group_factories = 52\nunchecked_factories = total_factories - (first_group_factories + second_group_factories)\nans = unchecked_factories",
            "# Python code, return ans\ntotal_factories = 169\ngroup1_factories = 69\ngroup2_factories = 52\nunchecked_factories = total_factories - (group1_factories + group2_factories)\nans = unchecked_factories",
            "# Python code, return ans\ntotal_factories = 169\ngroup1_factories = 69\ngroup2_factories = 52\nunchecked_factories = total_factories - (group1_factories + group2_factories)\nans = unchecked_factories"
        ],
        "results": [
            48.0,
            48.0,
            48.0
        ],
        "result_counter": {
            "48.0": 3
        },
        "prediction": 48.0
    },
    {
        "question": "Kevin and his family just moved to a new neighborhood so they are holding a party to be able to meet their new neighbors. For the party, they prepared a few snacks for everyone. If his sister prepared 25 mini cupcakes and his mother prepared 30, how many did his grandmother prepare if they have a total of 100 cupcakes?",
        "answer": 45,
        "generated": [
            "# Python code, return ans\nsister_cupcakes = 25\nmother_cupcakes = 30\ntotal_cupcakes = 100\ngrandmother_cupcakes = total_cupcakes - (sister_cupcakes + mother_cupcakes)\nans = grandmother_cupcakes",
            "# Python code, return ans\nsister_cupcakes = 25\nmother_cupcakes = 30\ntotal_cupcakes = 100\ngrandmother_cupcakes = total_cupcakes - (sister_cupcakes + mother_cupcakes)\nans = grandmother_cupcakes",
            "# Python code, return ans\nsister_cupcakes = 25\nmother_cupcakes = 30\ntotal_cupcakes = 100\ngrandmother_cupcakes = total_cupcakes - (sister_cupcakes + mother_cupcakes)\nans = grandmother_cupcakes"
        ],
        "results": [
            45.0,
            45.0,
            45.0
        ],
        "result_counter": {
            "45.0": 3
        },
        "prediction": 45.0
    },
    {
        "question": "They also prepared some chips. If he prepared 350 grams of chips and his father prepared 268 grams, how much chips should his brother prepare if they are to have 800 grams of chips?",
        "answer": 182,
        "generated": [
            "# Python code, return ans\nprepared_chips = 350 + 268\ntarget_chips = 800\nbrother_chips = target_chips - prepared_chips\nans = brother_chips",
            "# Python code, return ans\nprepared_chips = 350 + 268\ntarget_chips = 800\nbrother_chips = target_chips - prepared_chips\nans = brother_chips",
            "# Python code, return ans\nprepared_chips = 350 + 268\ntarget_chips = 800\nbrother_chips = target_chips - prepared_chips\nans = brother_chips"
        ],
        "results": [
            182.0,
            182.0,
            182.0
        ],
        "result_counter": {
            "182.0": 3
        },
        "prediction": 182.0
    },
    {
        "question": "Since pizza is a favorite in Kevin's family, they also bought some. His sister bought 48 slices of pizza and his brother bought 48 as well. How many slices of pizza do they have for their neighbors if the family already ate 27 slices?",
        "answer": 69,
        "generated": [
            "# Python code, return ans\nsister_pizza = 48\nbrother_pizza = 48\ntotal_pizza = sister_pizza + brother_pizza\nfamily_ate = 27\npizza_for_neighbors = total_pizza - family_ate\nans = pizza_for_neighbors",
            "# Python code, return ans\nsister_pizza = 48\nbrother_pizza = 48\ntotal_pizza = sister_pizza + brother_pizza\nfamily_ate = 27\npizza_for_neighbors = total_pizza - family_ate\nans = pizza_for_neighbors",
            "# Python code, return ans\nsister_pizza = 48\nbrother_pizza = 48\ntotal_pizza = sister_pizza + brother_pizza\nfamily_ate = 27\npizza_for_neighbors = total_pizza - family_ate\nans = pizza_for_neighbors"
        ],
        "results": [
            69.0,
            69.0,
            69.0
        ],
        "result_counter": {
            "69.0": 3
        },
        "prediction": 69.0
    },
    {
        "question": "Their neighbors, wanting to welcome them, also brought in some food. If one neighbor brought 75 hotdogs and another neighbor brought 25 less hotdogs than the first one, how many hotdogs were brought by the neighbors in total?",
        "answer": 125,
        "generated": [
            "# Python code, return ans\nfirst_neighbor_hotdogs = 75\nsecond_neighbor_hotdogs = first_neighbor_hotdogs - 25\ntotal_hotdogs = first_neighbor_hotdogs + second_neighbor_hotdogs\nans = total_hotdogs",
            "# Python code, return ans\nfirst_neighbor_hotdogs = 75\nsecond_neighbor_hotdogs = first_neighbor_hotdogs - 25\ntotal_hotdogs = first_neighbor_hotdogs + second_neighbor_hotdogs\nans = total_hotdogs",
            "# Python code, return ans\nfirst_neighbor_hotdogs = 75\nsecond_neighbor_hotdogs = first_neighbor_hotdogs - 25\ntotal_hotdogs = first_neighbor_hotdogs + second_neighbor_hotdogs\nans = total_hotdogs"
        ],
        "results": [
            125.0,
            125.0,
            125.0
        ],
        "result_counter": {
            "125.0": 3
        },
        "prediction": 125.0
    },
    {
        "question": "After the party, Kevin estimated that the total money they spent on food, drinks, and utensils sums up to $560.00. If they spent $268.00 on food and $118.00 on utensils and other stuff, how much did they spend on drinks?",
        "answer": 174,
        "generated": [
            "# Python code, return ans\ntotal_spent = 560\nfood_spent = 268\nutensils_spent = 118\ndrinks_spent = total_spent - (food_spent + utensils_spent)\nans = drinks_spent",
            "# Python code, return ans\ntotal_spent = 560\nspent_on_food = 268\nspent_on_utensils = 118\nspent_on_drinks = total_spent - (spent_on_food + spent_on_utensils)\nans = spent_on_drinks",
            "# Python code, return ans\ntotal_spent = 560\nspent_on_food = 268\nspent_on_utensils = 118\nspent_on_drinks = total_spent - (spent_on_food + spent_on_utensils)\nans = spent_on_drinks"
        ],
        "results": [
            174.0,
            174.0,
            174.0
        ],
        "result_counter": {
            "174.0": 3
        },
        "prediction": 174.0
    },
    {
        "question": "Katie loves to travel. On her birthday, she decided to go on a trip on a mysterious continent. Her first destination was in an island of statues which is 436 miles from her place. She took a plane that made two stopovers, the 1st stopover after covering 132 miles and the 2nd stopover after another 236 miles. How much farther is the island from the 2nd stopover?",
        "answer": 68,
        "generated": [
            "# Python code, return ans\ntotal_distance = 436\nfirst_stopover = 132\nsecond_stopover = 236\ndistance_covered = first_stopover + second_stopover\nremaining_distance = total_distance - distance_covered\nans = remaining_distance",
            "# Python code, return ans\ntotal_distance = 436\nfirst_stopover = 132\nsecond_stopover = 236\ndistance_covered = first_stopover + second_stopover\nremaining_distance = total_distance - distance_covered\nans = remaining_distance",
            "# Python code, return ans\ntotal_distance = 436\nfirst_stopover = 132\nsecond_stopover = 236\ndistance_covered = first_stopover + second_stopover\nremaining_distance = total_distance - distance_covered\nans = remaining_distance"
        ],
        "results": [
            68.0,
            68.0,
            68.0
        ],
        "result_counter": {
            "68.0": 3
        },
        "prediction": 68.0
    },
    {
        "question": "Katie spent a total $350.00 on her whole stay in the island. If she spent $125.00 on food and $135.00 on hotel rooms, how much did she spend on buying other stuff?",
        "answer": 90,
        "generated": [
            "# Python code, return ans\ntotal_spent = 350\nspent_on_food = 125\nspent_on_hotel = 135\nspent_on_other_stuff = total_spent - (spent_on_food + spent_on_hotel)\nans = spent_on_other_stuff",
            "# Python code, return ans\ntotal_spent = 350\nfood_spent = 125\nhotel_spent = 135\nother_spent = total_spent - (food_spent + hotel_spent)\nans = other_spent",
            "# Python code, return ans\ntotal_spent = 350\nfood_spent = 125\nhotel_spent = 135\nother_spent = total_spent - (food_spent + hotel_spent)\nans = other_spent"
        ],
        "results": [
            90.0,
            90.0,
            90.0
        ],
        "result_counter": {
            "90.0": 3
        },
        "prediction": 90.0
    },
    {
        "question": "Next, she went to a country full of mountains. There she saw 532 species of insects, reptiles and birds. If she saw 253 insect species and 143 bird species, how many reptile species did she see?",
        "answer": 136,
        "generated": [
            "# Python code, return ans\ninsect_species = 253\nbird_species = 143\ntotal_species = 532\nreptile_species = total_species - (insect_species + bird_species)\nans = reptile_species",
            "# Python code, return ans\ninsect_species = 253\nbird_species = 143\ntotal_species = 532\nreptile_species = total_species - insect_species - bird_species\nans = reptile_species",
            "# Python code, return ans\ninsect_species = 253\nbird_species = 143\ntotal_species = 532\nreptile_species = total_species - insect_species - bird_species\nans = reptile_species"
        ],
        "results": [
            136.0,
            136.0,
            136.0
        ],
        "result_counter": {
            "136.0": 3
        },
        "prediction": 136.0
    },
    {
        "question": "After the mountain country, she went to the famous beach on the continent. There, she collected 291 seashells of different colors. If she has 76 red shells and 49 green shells, how many shells are not red or green?",
        "answer": 166,
        "generated": [
            "# Python code, return ans\ntotal_seashells = 291\nred_shells = 76\ngreen_shells = 49\nother_shells = total_seashells - (red_shells + green_shells)\nans = other_shells",
            "# Python code, return ans\ntotal_seashells = 291\nred_shells = 76\ngreen_shells = 49\nother_shells = total_seashells - (red_shells + green_shells)\nans = other_shells",
            "# Python code, return ans\ntotal_seashells = 291\nred_shells = 76\ngreen_shells = 49\nother_shells = total_seashells - (red_shells + green_shells)\nans = other_shells"
        ],
        "results": [
            166.0,
            166.0,
            166.0
        ],
        "result_counter": {
            "166.0": 3
        },
        "prediction": 166.0
    },
    {
        "question": "Before she went home, she bought t-shirts, key chains and handmade bracelets as souvenirs. She spent $347.00 on key chains and bracelets which is $146.00 more than she spent on t-shirts. How much money did she spend on all the souvenirs?",
        "answer": 548,
        "generated": [
            "# Python code, return ans\nkey_chains_bracelets_cost = 347\nt_shirts_cost = key_chains_bracelets_cost - 146\ntotal_cost = key_chains_bracelets_cost + t_shirts_cost\nans = total_cost",
            "# Python code, return ans\nkey_chains_bracelets_cost = 347\nmore_spent = 146\nt_shirts_cost = key_chains_bracelets_cost - more_spent\ntotal_cost = key_chains_bracelets_cost + t_shirts_cost\nans = total_cost",
            "# Python code, return ans\nkey_chains_bracelets_cost = 347\nmore_than_tshirts_cost = 146\ntshirt_cost = key_chains_bracelets_cost - more_than_tshirts_cost\ntotal_cost = key_chains_bracelets_cost + tshirt_cost\nans = total_cost"
        ],
        "results": [
            548.0,
            548.0,
            548.0
        ],
        "result_counter": {
            "548.0": 3
        },
        "prediction": 548.0
    },
    {
        "question": "Thanksgiving is coming and Dr. Mary wants to celebrate it by sharing her blessing to different charities. She first went to Oldtown where she donated $700.00 in total to three different nursing homes. If she gave $245.00 to the first home and $225.00 to the second, how much did she give to the third home?",
        "answer": 230,
        "generated": [
            "# Python code, return ans\ntotal_donation = 700\nfirst_home_donation = 245\nsecond_home_donation = 225\nthird_home_donation = total_donation - (first_home_donation + second_home_donation)\nans = third_home_donation",
            "# Python code, return ans\ntotal_donation = 700\nfirst_home_donation = 245\nsecond_home_donation = 225\nthird_home_donation = total_donation - (first_home_donation + second_home_donation)\nans = third_home_donation",
            "# Python code, return ans\ntotal_donation = 700\nfirst_home_donation = 245\nsecond_home_donation = 225\nthird_home_donation = total_donation - (first_home_donation + second_home_donation)\nans = third_home_donation"
        ],
        "results": [
            230.0,
            230.0,
            230.0
        ],
        "result_counter": {
            "230.0": 3
        },
        "prediction": 230.0
    },
    {
        "question": "She then went to three orphanages and donated a total of $650.00. If she gave $175.00 to the first orphanage and $250.00 to the third, how much did she donate to the second orphanage?",
        "answer": 225,
        "generated": [
            "# Python code, return ans\ntotal_donation = 650\nfirst_orphanage_donation = 175\nthird_orphanage_donation = 250\nsecond_orphanage_donation = total_donation - (first_orphanage_donation + third_orphanage_donation)\nans = second_orphanage_donation",
            "# Python code, return ans\ntotal_donation = 650\nfirst_orphanage = 175\nthird_orphanage = 250\nsecond_orphanage = total_donation - (first_orphanage + third_orphanage)\nans = second_orphanage",
            "# Python code, return ans\ntotal_donation = 650\nfirst_orphanage_donation = 175\nthird_orphanage_donation = 250\nsecond_orphanage_donation = total_donation - (first_orphanage_donation + third_orphanage_donation)\nans = second_orphanage_donation"
        ],
        "results": [
            225.0,
            225.0,
            225.0
        ],
        "result_counter": {
            "225.0": 3
        },
        "prediction": 225.0
    },
    {
        "question": "Next on her list are the homeless people where she spent a total of $900.00. If she gave $325.00 to the first set of homeless families and $260.00 to the second set of families, how much did she give to the last set of homeless families?",
        "answer": 315,
        "generated": [
            "# Python code, return ans\ntotal_spent = 900\nfirst_set = 325\nsecond_set = 260\nlast_set = total_spent - (first_set + second_set)\nans = last_set",
            "# Python code, return ans\ntotal_spent = 900\nfirst_set = 325\nsecond_set = 260\nlast_set = total_spent - (first_set + second_set)\nans = last_set",
            "# Python code, return ans\ntotal_spent = 900\nfirst_set = 325\nsecond_set = 260\nlast_set = total_spent - (first_set + second_set)\nans = last_set"
        ],
        "results": [
            315.0,
            315.0,
            315.0
        ],
        "result_counter": {
            "315.0": 3
        },
        "prediction": 315.0
    },
    {
        "question": "Being a nature lover, she also gave some money to three forest reserves. If she donated $570.00 to Treetown National Park and The Forest Reserve which is $140.00 more than what she gave to Animal Preservation Park, how much did she donate to all three parks?",
        "answer": 1000,
        "generated": [
            "# Python code, return ans\nTreetown_National_Park = 570\nThe_Forest_Reserve = 140\nAnimal_Preservation_Park = Treetown_National_Park - The_Forest_Reserve\ntotal_donation = Treetown_National_Park + The_Forest_Reserve + Animal_Preservation_Park\nans = total_donation",
            "# Python code, return ans\ndonation_treetown = 570\ndonation_forest_reserve_more = 140\ndonation_animal_preservation = donation_treetown - donation_forest_reserve_more\ndonation_forest_reserve = donation_animal_preservation + donation_forest_reserve_more\ntotal_donation = donation_treetown + donation_forest_reserve + donation_animal_preservation\nans = total_donation",
            "# Python code, return ans\ndonation_Treetown = 570\ndonation_Forest_Reserve_more_than_Animal = 140\ndonation_Animal_Preservation = donation_Treetown - donation_Forest_Reserve_more_than_Animal\ndonation_Forest_Reserve = donation_Animal_Preservation + donation_Forest_Reserve_more_than_Animal\ntotal_donation = donation_Treetown + donation_Forest_Reserve + donation_Animal_Preservation\nans = total_donation"
        ],
        "results": [
            1140.0,
            1570.0,
            1570.0
        ],
        "result_counter": {
            "1140.0": 1,
            "1570.0": 2
        },
        "prediction": 1570.0
    },
    {
        "question": "Lastly, she donated $800.00 to three different soup kitchens in her town. If she gave $300.00 to the first soup kitchen and $238.00 to the second, how much did she donate to the third?",
        "answer": 262,
        "generated": [
            "# Python code, return ans\ntotal_donation = 800\nfirst_donation = 300\nsecond_donation = 238\nthird_donation = total_donation - (first_donation + second_donation)\nans = third_donation",
            "# Python code, return ans\ntotal_donation = 800\nfirst_donation = 300\nsecond_donation = 238\nthird_donation = total_donation - (first_donation + second_donation)\nans = third_donation",
            "# Python code, return ans\ntotal_donation = 800\nfirst_soup_kitchen = 300\nsecond_soup_kitchen = 238\nthird_soup_kitchen = total_donation - (first_soup_kitchen + second_soup_kitchen)\nans = third_soup_kitchen"
        ],
        "results": [
            262.0,
            262.0,
            262.0
        ],
        "result_counter": {
            "262.0": 3
        },
        "prediction": 262.0
    },
    {
        "question": "Andrew is having his friends over for game night. So he decided to prepare the snacks and the games. He started by making mini sandwiches. If he has 4 friends coming over and he made 3 sandwiches for each one of them, how many sandwiches did he make in total?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nfriends = 4\nsandwiches_per_friend = 3\ntotal_sandwiches = friends * sandwiches_per_friend\nans = total_sandwiches",
            "# Python code, return ans\nfriends = 4\nsandwiches_per_friend = 3\ntotal_sandwiches = friends * sandwiches_per_friend\nans = total_sandwiches",
            "# Python code, return ans\nfriends = 4\nsandwiches_per_friend = 3\ntotal_sandwiches = friends * sandwiches_per_friend\nans = total_sandwiches"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "He also made some juice from fresh oranges. If he used 2 oranges per glass of juice and he made 6 glasses of juice, how many oranges did he use?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\noranges_per_glass = 2\nglasses_of_juice = 6\ntotal_oranges = oranges_per_glass * glasses_of_juice\nans = total_oranges",
            "# Python code, return ans\noranges_per_glass = 2\nglasses_of_juice = 6\ntotal_oranges = oranges_per_glass * glasses_of_juice\nans = total_oranges",
            "# Python code, return ans\noranges_per_glass = 2\nglasses_of_juice = 6\ntotal_oranges_used = oranges_per_glass * glasses_of_juice\nans = total_oranges_used"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Then he started to prepare the games. If each game takes 5 minutes to prepare and he prepared a total of 5 games, how many minutes did it take for Andrew to prepare all the games?",
        "answer": 25,
        "generated": [
            "# Python code, return ans\ngame_prepare_time = 5\ntotal_games = 5\ntotal_minutes = game_prepare_time * total_games\nans = total_minutes",
            "# Python code, return ans\ngame_preparation_time = 5\ntotal_games = 5\ntotal_minutes = game_preparation_time * total_games\nans = total_minutes",
            "# Python code, return ans\ngame_prepare_time = 5\ntotal_games = 5\ntotal_minutes = game_prepare_time * total_games\nans = total_minutes"
        ],
        "results": [
            25.0,
            25.0,
            25.0
        ],
        "result_counter": {
            "25.0": 3
        },
        "prediction": 25.0
    },
    {
        "question": "Andrew's 4 friends decided to bring food as well. If each of them brought 4 slices of pizza, how many slices of pizza do they have in total?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\nAndrew_friends = 4\nslices_per_friend = 4\ntotal_slices = Andrew_friends * slices_per_friend\nans = total_slices",
            "# Python code, return ans\nAndrew_friends = 4\nslices_per_friend = 4\ntotal_slices = Andrew_friends * slices_per_friend\nans = total_slices",
            "# Python code, return ans\nAndrew_friends = 4\nslices_per_friend = 4\ntotal_slices = Andrew_friends * slices_per_friend\nans = total_slices"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "Lastly, Andrew tried to compute his expenses for the game night. If he spent $9.00 for each game they played and they played a total of 5 games, how much money did he spend that night?",
        "answer": 45,
        "generated": [
            "# Python code, return ans\ncost_per_game = 9\ntotal_games_played = 5\ntotal_expense = cost_per_game * total_games_played\nans = total_expense",
            "# Python code, return ans\ncost_per_game = 9\ntotal_games = 5\ntotal_expense = cost_per_game * total_games\nans = total_expense",
            "# Python code, return ans\ncost_per_game = 9\ntotal_games = 5\ntotal_expense = cost_per_game * total_games\nans = total_expense"
        ],
        "results": [
            45.0,
            45.0,
            45.0
        ],
        "result_counter": {
            "45.0": 3
        },
        "prediction": 45.0
    },
    {
        "question": "Mona is having a party at her house to celebrate her birthday. She invited some friends and family. Mona prepared rainbow colored cupcakes for dessert. If she made 7 sets for each of the 7 colors of the rainbow and each set has 6 cupcakes, how many cupcakes did Mona prepare in total?",
        "answer": 42,
        "generated": [
            "# Python code, return ans\nsets_per_color = 7\ncupcakes_per_set = 6\ntotal_cupcakes = sets_per_color * cupcakes_per_set * 7\nans = total_cupcakes",
            "# Python code, return ans\nsets_per_color = 7\ncolors = 7\ncupcakes_per_set = 6\ntotal_cupcakes = sets_per_color * colors * cupcakes_per_set\nans = total_cupcakes",
            "# Python code, return ans\nsets_per_color = 7\ncolors = 7\ncupcakes_per_set = 6\ntotal_cupcakes = sets_per_color * colors * cupcakes_per_set\nans = total_cupcakes"
        ],
        "results": [
            294.0,
            294.0,
            294.0
        ],
        "result_counter": {
            "294.0": 3
        },
        "prediction": 294.0
    },
    {
        "question": "Her mom also baked some cookies. If she baked 5 pans of cookies and there are 8 cookies per pan, how many cookies did her mom bake for her birthday?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\npans_of_cookies = 5\ncookies_per_pan = 8\ntotal_cookies = pans_of_cookies * cookies_per_pan\nans = total_cookies",
            "# Python code, return ans\npans_of_cookies = 5\ncookies_per_pan = 8\ntotal_cookies = pans_of_cookies * cookies_per_pan\nans = total_cookies",
            "# Python code, return ans\npans_of_cookies = 5\ncookies_per_pan = 8\ntotal_cookies = pans_of_cookies * cookies_per_pan\nans = total_cookies"
        ],
        "results": [
            40.0,
            40.0,
            40.0
        ],
        "result_counter": {
            "40.0": 3
        },
        "prediction": 40.0
    },
    {
        "question": "They planned to serve some cold drinks as well. If they plan to make 9 pitchers of drinks and each pitcher can fill 6 glasses, how many glasses of drinks are they planning to prepare in total?",
        "answer": 54,
        "generated": [
            "# Python code, return ans\npitchers = 9\nglasses_per_pitcher = 6\ntotal_glasses = pitchers * glasses_per_pitcher\nans = total_glasses",
            "# Python code, return ans\npitchers = 9\nglasses_per_pitcher = 6\ntotal_glasses = pitchers * glasses_per_pitcher\nans = total_glasses",
            "# Python code, return ans\npitchers = 9\nglasses_per_pitcher = 6\ntotal_glasses = pitchers * glasses_per_pitcher\nans = total_glasses"
        ],
        "results": [
            54.0,
            54.0,
            54.0
        ],
        "result_counter": {
            "54.0": 3
        },
        "prediction": 54.0
    },
    {
        "question": "They decided to hold the party in their backyard. If they have 8 sets of tables and each set has 7 chairs, how many chairs do they have for the guests?",
        "answer": 56,
        "generated": [
            "# Python code, return ans\ntable_sets = 8\nchairs_per_set = 7\ntotal_chairs = table_sets * chairs_per_set\nans = total_chairs",
            "# Python code, return ans\ntable_sets = 8\nchairs_per_set = 7\ntotal_chairs = table_sets * chairs_per_set\nans = total_chairs",
            "# Python code, return ans\ntable_sets = 8\nchairs_per_set = 7\ntotal_chairs = table_sets * chairs_per_set\nans = total_chairs"
        ],
        "results": [
            56.0,
            56.0,
            56.0
        ],
        "result_counter": {
            "56.0": 3
        },
        "prediction": 56.0
    },
    {
        "question": "At the end of the party, Mona gave away some souvenirs to her 6 closest friends. If each of them received 2 souvenir items, how many souvenirs did Mona give away?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nfriend_num = 6\nsouvenir_per_friend = 2\ntotal_souvenirs_given = friend_num * souvenir_per_friend\nans = total_souvenirs_given",
            "# Python code, return ans\nfriend_count = 6\nsouvenirs_each = 2\ntotal_souvenirs_given = friend_count * souvenirs_each\nans = total_souvenirs_given",
            "# Python code, return ans\nfriend_num = 6\nsouvenir_each = 2\ntotal_souvenirs = friend_num * souvenir_each\nans = total_souvenirs"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "John is building a tree house to serve as his hideout whenever he wanted to spend some time alone with himself. The first thing he did is to gather some materials. For the pillars, he needs two sets of wood with different lengths. If the first set of wood is 4 feet long and the second set is 5 times longer than the first set, how long is the second set of wood?",
        "answer": 20,
        "generated": [
            "# Python code, return ans\nfirst_set_length = 4\nsecond_set_length = first_set_length * 5\nans = second_set_length",
            "# Python code, return ans\nfirst_set_length = 4\nsecond_set_length = first_set_length * 5\nans = second_set_length",
            "# Python code, return ans\nfirst_set_length = 4\nsecond_set_length = first_set_length * 5\nans = second_set_length"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "Another material that he needs is rope. If he already has 6 feet of rope and he needs additional ropes having 5 times the length of what he already have, how long should be the additional rope?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\ncurrent_rope = 6\nadditional_rope_needed = 5 * current_rope\nans = additional_rope_needed",
            "# Python code, return ans\ncurrent_rope_length = 6\nadditional_rope_length = current_rope_length * 5\nans = additional_rope_length",
            "# Python code, return ans\ncurrent_rope = 6\nadditional_rope_needed = 5 * current_rope\nans = additional_rope_needed"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "For the walls of the house, he would use 9 large planks of wood. If each plank of wood needs 8 pieces of nails to be secured, how many nails does John need for the house wall?",
        "answer": 72,
        "generated": [
            "# Python code, return ans\nlarge_planks = 9\nnails_per_plank = 8\ntotal_nails = large_planks * nails_per_plank\nans = total_nails",
            "# Python code, return ans\nlarge_planks = 9\nnails_per_plank = 8\ntotal_nails = large_planks * nails_per_plank\nans = total_nails",
            "# Python code, return ans\nlarge_planks = 9\nnails_per_plank = 8\ntotal_nails = large_planks * nails_per_plank\nans = total_nails"
        ],
        "results": [
            72.0,
            72.0,
            72.0
        ],
        "result_counter": {
            "72.0": 3
        },
        "prediction": 72.0
    },
    {
        "question": "For the roof, John would need 2 sets of metal bars for support. If each set has 7 metal bars, how many metal bars are there in all?",
        "answer": 14,
        "generated": [
            "# Python code, return ans\nsets_needed = 2\nbars_per_set = 7\ntotal_bars = sets_needed * bars_per_set\nans = total_bars",
            "# Python code, return ans\nsets_of_metal_bars = 2\nmetal_bars_per_set = 7\ntotal_metal_bars = sets_of_metal_bars * metal_bars_per_set\nans = total_metal_bars",
            "# Python code, return ans\nset_of_metal_bars = 2\nmetal_bars_per_set = 7\ntotal_metal_bars = set_of_metal_bars * metal_bars_per_set\nans = total_metal_bars"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "For the final touches, John wanted to paint the house using the 3 primary colors. If he has 5 liters of paint for each color, how many liters of paint does he have in all?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\nprimary_colors = 3\npaint_per_color = 5\ntotal_paint = primary_colors * paint_per_color\nans = total_paint",
            "# Python code, return ans\nprimary_colors = 3\npaint_per_color = 5\ntotal_paint = primary_colors * paint_per_color\nans = total_paint",
            "# Python code, return ans\nprimary_colors = 3\npaint_per_color = 5\ntotal_paint = primary_colors * paint_per_color\nans = total_paint"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "The kids from Oakwood Elementary School are visiting a bird zoo for their field trip. To get to the bird zoo from the school, the kids have to ride some buses. If there are 7 buses and each bus has 3 adult supervisors to guide the children, how many supervisors are there in total?",
        "answer": 21,
        "generated": [
            "# Python code, return ans\nbus_num = 7\nsupervisor_per_bus = 3\ntotal_supervisors = bus_num * supervisor_per_bus\nans = total_supervisors",
            "# Python code, return ans\nbus_num = 7\nsupervisors_per_bus = 3\ntotal_supervisors = bus_num * supervisors_per_bus\nans = total_supervisors",
            "# Python code, return ans\nbus_num = 7\nsupervisors_per_bus = 3\ntotal_supervisors = bus_num * supervisors_per_bus\nans = total_supervisors"
        ],
        "results": [
            21.0,
            21.0,
            21.0
        ],
        "result_counter": {
            "21.0": 3
        },
        "prediction": 21.0
    },
    {
        "question": "If each bus have nine rows of seats and each row of seats can accommodate 4 children, how many children can each bus accommodate?",
        "answer": 36,
        "generated": [
            "# Python code, return ans\nrows = 9\nseats_per_row = 4\nchildren_per_bus = rows * seats_per_row\nans = children_per_bus",
            "# Python code, return ans\nrows = 9\nseats_per_row = 4\nchildren_per_bus = rows * seats_per_row\nans = children_per_bus",
            "# Python code, return ans\nrows = 9\nseats_per_row = 4\nchildren_per_bus = rows * seats_per_row\nans = children_per_bus"
        ],
        "results": [
            36.0,
            36.0,
            36.0
        ],
        "result_counter": {
            "36.0": 3
        },
        "prediction": 36.0
    },
    {
        "question": "At the bird zoo, the kids were able to visit 5 different bird cages, each containing 8 different kinds of birds. How many different kinds of birds did the children see from the bird cages?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\nbird_cages = 5\nbirds_per_cage = 8\ntotal_birds = bird_cages * birds_per_cage\nans = total_birds",
            "# Python code, return ans\nbird_cages = 5\nbirds_per_cage = 8\ntotal_birds = bird_cages * birds_per_cage\nans = total_birds",
            "# Python code, return ans\nbird_cages = 5\nbirds_per_cage = 8\ntotal_birds = bird_cages * birds_per_cage\nans = total_birds"
        ],
        "results": [
            40.0,
            40.0,
            40.0
        ],
        "result_counter": {
            "40.0": 3
        },
        "prediction": 40.0
    },
    {
        "question": "At the back of the zoo is a mountain where the birds can roam free in a natural habitat. The children saw 6 types of eagles living on each section of the mountain. If the mountain has 3 sections, how many types of eagles did the children see in total?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\neagle_types_per_section = 6\nmountain_sections = 3\ntotal_eagle_types = eagle_types_per_section * mountain_sections\nans = total_eagle_types",
            "# Python code, return ans\neagle_types_per_section = 6\nmountain_sections = 3\ntotal_eagle_types = eagle_types_per_section * mountain_sections\nans = total_eagle_types",
            "# Python code, return ans\neagle_types_per_section = 6\nmountain_sections = 3\ntotal_eagle_types = eagle_types_per_section * mountain_sections\nans = total_eagle_types"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "Their last stop before leaving the zoo is the bird museum. There, they went through 7 bird exhibits, spending 9 minutes going around each exhibit. How much time did they spend going through the museum?",
        "answer": 63,
        "generated": [
            "# Python code, return ans\nbird_exhibits = 7\ntime_per_exhibit = 9\ntotal_time = bird_exhibits * time_per_exhibit\nans = total_time",
            "# Python code, return ans\nbird_exhibits = 7\ntime_per_exhibit = 9\ntotal_time = bird_exhibits * time_per_exhibit\nans = total_time",
            "# Python code, return ans\nbird_exhibits = 7\ntime_per_exhibit = 9\ntotal_time = bird_exhibits * time_per_exhibit\nans = total_time"
        ],
        "results": [
            63.0,
            63.0,
            63.0
        ],
        "result_counter": {
            "63.0": 3
        },
        "prediction": 63.0
    },
    {
        "question": "Annie takes trick or treating seriously. So, days before Halloween, she makes sure that the details of her trick or treating are well planned. First, she wanted to find out the number of houses in her village. If the village has 5 houses per block and has a total of 9 blocks, how many houses are there in her village?",
        "answer": 45,
        "generated": [
            "# Python code, return ans\nhouses_per_block = 5\ntotal_blocks = 9\ntotal_houses = houses_per_block * total_blocks\nans = total_houses",
            "# Python code, return ans\nhouses_per_block = 5\ntotal_blocks = 9\ntotal_houses = houses_per_block * total_blocks\nans = total_houses",
            "# Python code, return ans\nhouses_per_block = 5\ntotal_blocks = 9\ntotal_houses = houses_per_block * total_blocks\nans = total_houses"
        ],
        "results": [
            45.0,
            45.0,
            45.0
        ],
        "result_counter": {
            "45.0": 3
        },
        "prediction": 45.0
    },
    {
        "question": "She also estimated the number of candies that she will receive from each block. If she will receive around 7 pieces of candies from every house, and there are 5 houses in a block, how many candies will she receive from each block?",
        "answer": 35,
        "generated": [
            "# Python code, return ans\ncandies_per_house = 7\nhouses_per_block = 5\ncandies_per_block = candies_per_house * houses_per_block\nans = candies_per_block",
            "# Python code, return ans\ncandies_per_house = 7\nhouses_per_block = 5\ncandies_per_block = candies_per_house * houses_per_block\nans = candies_per_block",
            "# Python code, return ans\ncandies_per_house = 7\nhouses_per_block = 5\ncandies_per_block = candies_per_house * houses_per_block\nans = candies_per_block"
        ],
        "results": [
            35.0,
            35.0,
            35.0
        ],
        "result_counter": {
            "35.0": 3
        },
        "prediction": 35.0
    },
    {
        "question": "She wants to know how many children will go trick or treating in their village. If there are 6 children on each of the 9 blocks, how many children will go trick or treating in Annie's village?",
        "answer": 54,
        "generated": [
            "# Python code, return ans\nchildren_per_block = 6\ntotal_blocks = 9\ntotal_children = children_per_block * total_blocks\nans = total_children",
            "# Python code, return ans\nchildren_per_block = 6\ntotal_blocks = 9\ntotal_children = children_per_block * total_blocks\nans = total_children",
            "# Python code, return ans\nchildren_per_block = 6\ntotal_blocks = 9\ntotal_children = children_per_block * total_blocks\nans = total_children"
        ],
        "results": [
            54.0,
            54.0,
            54.0
        ],
        "result_counter": {
            "54.0": 3
        },
        "prediction": 54.0
    },
    {
        "question": "Annie also planned the time she would spend going around the 9 blocks in her village. If she plans on spending just 8 minutes on each block, how much time would it take for her to finish trick or treating?",
        "answer": 72,
        "generated": [
            "# Python code, return ans\nblocks = 9\ntime_per_block = 8\ntotal_time = blocks * time_per_block\nans = total_time",
            "# Python code, return ans\nblocks = 9\ntime_per_block = 8\ntotal_time = blocks * time_per_block\nans = total_time",
            "# Python code, return ans\nblocks = 9\ntime_per_block = 8\ntotal_time = blocks * time_per_block\nans = total_time"
        ],
        "results": [
            72.0,
            72.0,
            72.0
        ],
        "result_counter": {
            "72.0": 3
        },
        "prediction": 72.0
    },
    {
        "question": "Finally, she planned on going to the Halloween party in the village club house. She wanted to make sure that she will have the perfect costume so she rented 4 different costumes from the Halloween store. If each costume rent costs $2.00, how much did she spend on all the costumes?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ncostume_count = 4\ncostume_rent_cost = 2.00\ntotal_cost = costume_count * costume_rent_cost\nans = total_cost",
            "# Python code, return ans\ncostume_num = 4\ncostume_cost = 2.00\ntotal_cost = costume_num * costume_cost\nans = total_cost",
            "# Python code, return ans\ncostume_num = 4\ncostume_cost = 2.00\ntotal_cost = costume_num * costume_cost\nans = total_cost"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Michael and Tom both love collecting robots. They meet up every month so that they can check out and compare their collections. On their latest meeting, they found out that Tom has twice as many animal robots than Michael. If Michael has 8 animal robots, how many animal robots does Tom have?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\nMichael_animal_robots = 8\nTom_animal_robots = Michael_animal_robots * 2\nans = Tom_animal_robots",
            "# Python code, return ans\nMichael_animal_robots = 8\nTom_animal_robots = Michael_animal_robots * 2\nans = Tom_animal_robots",
            "# Python code, return ans\nMichael_animal_robots = 8\nTom_animal_robots = Michael_animal_robots * 2\nans = Tom_animal_robots"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "Being his favorite, Michael has 4 times more flying robots than Tom. If Tom has 3 flying robots, how many flying robots does Michael have?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nTom_flying_robots = 3\nMichael_flying_robots = 4 * Tom_flying_robots\nans = Michael_flying_robots",
            "# Python code, return ans\nTom_flying_robots = 3\nMichael_flying_robots = 4 * Tom_flying_robots\nans = Michael_flying_robots",
            "# Python code, return ans\nTom_robots = 3\nMichael_robots = 4 * Tom_robots\nans = Michael_robots"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "While comparing the other robots that they have, Tom and Michael talked about Bob who has a large collection of car robots. If Tom and Michael have 9 car robots and Bob has 9 times more than that, how many car robots does Bob have in total?",
        "answer": 81,
        "generated": [
            "# Python code, return ans\nTom_Michael_car_robots = 9\nBob_car_robots = Tom_Michael_car_robots * 9\nans = Bob_car_robots\n",
            "# Python code, return ans\nTom_and_Michael_car_robots = 9\nBob_car_robots = Tom_and_Michael_car_robots * 9\nans = Bob_car_robots",
            "# Python code, return ans\nTom_Michael_robots = 9\nBob_robots = Tom_Michael_robots * 9\nans = Bob_robots"
        ],
        "results": [
            81.0,
            81.0,
            81.0
        ],
        "result_counter": {
            "81.0": 3
        },
        "prediction": 81.0
    },
    {
        "question": "Tom saw that Michael has the rare robot that would complete one of his robot sets. Michael offered to sell it but he said that Tom will need to pay 3 times the original price. If the rare robot has an original price of $3.00, how much should Tom pay?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\noriginal_price = 3\nTom_pay = original_price * 3\nans = Tom_pay",
            "# Python code, return ans\noriginal_price = 3\nprice_to_pay = original_price * 3\nans = price_to_pay",
            "# Python code, return ans\noriginal_price = 3\nTom_pay = original_price * 3\nans = Tom_pay"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Before they end the meeting, Tom counted the total number of robots in his collection. He has 6 sets of robots and each set is composed of 7 robots. How many robots does Tom have in his collection?",
        "answer": 42,
        "generated": [
            "# Python code, return ans\nrobots_per_set = 7\nsets = 6\ntotal_robots = robots_per_set * sets\nans = total_robots",
            "# Python code, return ans\nrobots_per_set = 7\nsets = 6\ntotal_robots = robots_per_set * sets\nans = total_robots",
            "# Python code, return ans\nrobot_sets = 6\nrobots_per_set = 7\ntotal_robots = robot_sets * robots_per_set\nans = total_robots"
        ],
        "results": [
            42.0,
            42.0,
            42.0
        ],
        "result_counter": {
            "42.0": 3
        },
        "prediction": 42.0
    },
    {
        "question": "Michelle likes to save money every now and then so that she has money to buy the things that she wants. One day, she decided to count her savings. She opened her piggy bank and sorted out the different coins and dollar bills. If she counted a total of 20 nickels (a nickel is equivalent to 5 cents), what is the total value of money does she have in nickels?",
        "answer": 100,
        "generated": [
            "# Python code, return ans\nnickel_count = 20\nnickel_value = 5\ntotal_value_nickels = nickel_count * nickel_value\nans = total_value_nickels",
            "# Python code, return ans\nnickel_count = 20\nnickel_value = 5\ntotal_nickel_value = nickel_count * nickel_value\nans = total_nickel_value",
            "# Python code, return ans\nnickel_count = 20\nnickel_value = 5\ntotal_value_nickels = nickel_count * nickel_value\nans = total_value_nickels"
        ],
        "results": [
            100.0,
            100.0,
            100.0
        ],
        "result_counter": {
            "100.0": 3
        },
        "prediction": 100.0
    },
    {
        "question": "She also found out that she has 10 pieces of $5 bills. What is the total value of money does she have in $5 bills?",
        "answer": 50,
        "generated": [
            "# Python code, return ans\nnum_of_5_dollar_bills = 10\ntotal_value_of_5_dollar_bills = num_of_5_dollar_bills * 5\nans = total_value_of_5_dollar_bills",
            "# Python code, return ans\nnum_of_5_bills = 10\ntotal_value = num_of_5_bills * 5\nans = total_value",
            "# Python code, return ans\nnum_of_5_bills = 10\nvalue_of_5_bills = num_of_5_bills * 5\nans = value_of_5_bills"
        ],
        "results": [
            50.0,
            50.0,
            50.0
        ],
        "result_counter": {
            "50.0": 3
        },
        "prediction": 50.0
    },
    {
        "question": "When she was finished sorting all her savings, she counted the number of her $10 bills. If she counted a total of 9 pieces of $10 bills, what is the total value of all her $10 bills combined?",
        "answer": 90,
        "generated": [
            "# Python code, return ans\nten_dollar_bills = 9\ntotal_value = ten_dollar_bills * 10\nans = total_value",
            "# Python code, return ans\nten_dollar_bills = 9\ntotal_value = ten_dollar_bills * 10\nans = total_value",
            "# Python code, return ans\nten_dollar_bills = 9\ntotal_value = ten_dollar_bills * 10\nans = total_value"
        ],
        "results": [
            90.0,
            90.0,
            90.0
        ],
        "result_counter": {
            "90.0": 3
        },
        "prediction": 90.0
    },
    {
        "question": "Michelle also noticed that she was able to save a few $50 dollar bills. If she has a total of 7 pieces of $50 dollar bills, what is the total value of all her $50 bills combined?",
        "answer": 350,
        "generated": [
            "# Python code, return ans\nnum_of_50_dollar_bills = 7\ntotal_value = num_of_50_dollar_bills * 50\nans = total_value",
            "# Python code, return ans\nnum_fifty_dollar_bills = 7\ntotal_value = num_fifty_dollar_bills * 50\nans = total_value",
            "# Python code, return ans\nfifty_dollar_bills = 7\ntotal_value = fifty_dollar_bills * 50\nans = total_value"
        ],
        "results": [
            350.0,
            350.0,
            350.0
        ],
        "result_counter": {
            "350.0": 3
        },
        "prediction": 350.0
    },
    {
        "question": "After counting all her money, she went to her mom and had all her savings exchanged into whole $100 bills. After the exchange, she has 8 pieces of $100 bills. How much was total amount of Michelle's savings?",
        "answer": 800,
        "generated": [
            "# Python code, return ans\nhundred_dollar_bills = 8\ntotal_savings = hundred_dollar_bills * 100\nans = total_savings",
            "# Python code, return ans\nhundred_dollar_bills = 8\ntotal_savings = hundred_dollar_bills * 100\nans = total_savings",
            "# Python code, return ans\nhundred_dollar_bills = 8\ntotal_savings = hundred_dollar_bills * 100\nans = total_savings"
        ],
        "results": [
            800.0,
            800.0,
            800.0
        ],
        "result_counter": {
            "800.0": 3
        },
        "prediction": 800.0
    },
    {
        "question": "Daniel and his brother Ben went to their grandfather's farm for a few weeks of vacation. During their stay at the farm, they were asked to take care of the animals. One day, his grandfather asked if he could count the total number of sheep that they have. If there are 3 herds of sheep and each herd has 20 sheep, how many sheep do they have in total?",
        "answer": 60,
        "generated": [
            "# Python code, return ans\nherd_num = 3\nsheep_per_herd = 20\ntotal_sheep = herd_num * sheep_per_herd\nans = total_sheep",
            "# Python code, return ans\nherds = 3\nsheep_per_herd = 20\ntotal_sheep = herds * sheep_per_herd\nans = total_sheep",
            "# Python code, return ans\nherd_num = 3\nsheep_per_herd = 20\ntotal_sheep = herd_num * sheep_per_herd\nans = total_sheep"
        ],
        "results": [
            60.0,
            60.0,
            60.0
        ],
        "result_counter": {
            "60.0": 3
        },
        "prediction": 60.0
    },
    {
        "question": "Ben on the other hand, was asked to count the number of cows that they have. He saw that there are a total of 40 cows for every cow herd. How many cows do they have in total if there are 8 cow herds in the farm?",
        "answer": 320,
        "generated": [
            "# Python code, return ans\ncow_per_herd = 40\ntotal_herds = 8\ntotal_cows = cow_per_herd * total_herds\nans = total_cows",
            "# Python code, return ans\ncow_per_herd = 40\nherd_num = 8\ntotal_cows = cow_per_herd * herd_num\nans = total_cows",
            "# Python code, return ans\ncow_per_herd = 40\ntotal_herds = 8\ntotal_cows = cow_per_herd * total_herds\nans = total_cows"
        ],
        "results": [
            320.0,
            320.0,
            320.0
        ],
        "result_counter": {
            "320.0": 3
        },
        "prediction": 320.0
    },
    {
        "question": "Both of them were also asked to take note of the total number of chicken in the farm. Ben counted a total of 9 chicken coops and Daniel said that there are 60 chickens in one coop. How many chickens do they have in total?",
        "answer": 540,
        "generated": [
            "# Python code, return ans\ncoop_num = 9\nchicken_per_coop = 60\ntotal_chickens = coop_num * chicken_per_coop\nans = total_chickens",
            "# Python code, return ans\ncoops = 9\nchickens_in_one_coop = 60\ntotal_chickens = coops * chickens_in_one_coop\nans = total_chickens",
            "# Python code, return ans\ncoops = 9\nchickens_per_coop = 60\ntotal_chickens = coops * chickens_per_coop\nans = total_chickens"
        ],
        "results": [
            540.0,
            540.0,
            540.0
        ],
        "result_counter": {
            "540.0": 3
        },
        "prediction": 540.0
    },
    {
        "question": "Ben was also given 7 trays of eggs to examine. If each tray has 10 eggs, how many eggs did Ben examine in total?",
        "answer": 70,
        "generated": [
            "# Python code, return ans\ntrays = 7\neggs_per_tray = 10\ntotal_eggs = trays * eggs_per_tray\nans = total_eggs",
            "# Python code, return ans\ntrays = 7\neggs_per_tray = 10\ntotal_eggs = trays * eggs_per_tray\nans = total_eggs",
            "# Python code, return ans\ntrays = 7\neggs_per_tray = 10\ntotal_eggs = trays * eggs_per_tray\nans = total_eggs"
        ],
        "results": [
            70.0,
            70.0,
            70.0
        ],
        "result_counter": {
            "70.0": 3
        },
        "prediction": 70.0
    },
    {
        "question": "After they vacation, they figured out that the farm was divided into 5 sections and each section has a land area of 60 acres. What is the total area of the farm?",
        "answer": 300,
        "generated": [
            "# Python code, return ans\nsection_num = 5\nsection_area = 60\ntotal_area = section_num * section_area\nans = total_area",
            "# Python code, return ans\nsection_num = 5\nsection_area = 60\ntotal_area = section_num * section_area\nans = total_area",
            "# Python code, return ans\nsection_num = 5\nsection_area = 60\ntotal_area = section_num * section_area\nans = total_area"
        ],
        "results": [
            300.0,
            300.0,
            300.0
        ],
        "result_counter": {
            "300.0": 3
        },
        "prediction": 300.0
    },
    {
        "question": "Jenny and her family just moved into a new city and today would be her first day on a new school. She wanted to make sure that she is well rested so she made sure that she had 8 hours of sleep. If an hour is composed of 60 minutes, how many minutes of sleep did she have?",
        "answer": 480,
        "generated": [
            "# Python code, return ans\nhour_of_sleep = 8\nminute_per_hour = 60\ntotal_minutes_of_sleep = hour_of_sleep * minute_per_hour\nans = total_minutes_of_sleep",
            "# Python code, return ans\nhours_of_sleep = 8\nminutes_per_hour = 60\ntotal_sleep_minutes = hours_of_sleep * minutes_per_hour\nans = total_sleep_minutes",
            "# Python code, return ans\nhour_of_sleep = 8\nminute_per_hour = 60\ntotal_minutes_of_sleep = hour_of_sleep * minute_per_hour\nans = total_minutes_of_sleep"
        ],
        "results": [
            480.0,
            480.0,
            480.0
        ],
        "result_counter": {
            "480.0": 3
        },
        "prediction": 480.0
    },
    {
        "question": "She also ate a hearty breakfast so that she would have enough energy. She bought 5 pieces of her favorite bread. If each piece of bread costs 30 cents, how much did Jenny spend for her breakfast?",
        "answer": 150,
        "generated": [
            "# Python code, return ans\nbread_pieces = 5\nbread_cost_per_piece = 30\ntotal_cost = bread_pieces * bread_cost_per_piece\nans = total_cost",
            "# Python code, return ans\nbread_pieces = 5\ncost_per_bread = 30\ntotal_cost = bread_pieces * cost_per_bread\nans = total_cost",
            "# Python code, return ans\nbread_pieces = 5\nbread_cost_per_piece = 30\ntotal_cost = bread_pieces * bread_cost_per_piece\nans = total_cost"
        ],
        "results": [
            150.0,
            150.0,
            150.0
        ],
        "result_counter": {
            "150.0": 3
        },
        "prediction": 150.0
    },
    {
        "question": "To get to school, Jenny decided to ride the school's double decker bus. The bus has a total of 20 rows of seats and each row has a capacity of 4 kids. How many kids in total can ride the school bus?",
        "answer": 80,
        "generated": [
            "# Python code, return ans\nrows = 20\nseats_per_row = 4\ntotal_seats = rows * seats_per_row\nans = total_seats",
            "# Python code, return ans\nrows = 20\nseats_per_row = 4\ntotal_seats = rows * seats_per_row\nans = total_seats",
            "# Python code, return ans\nrows = 20\nseats_per_row = 4\ntotal_seats = rows * seats_per_row\nans = total_seats"
        ],
        "results": [
            80.0,
            80.0,
            80.0
        ],
        "result_counter": {
            "80.0": 3
        },
        "prediction": 80.0
    },
    {
        "question": "When she got to school, she saw that the school is composed of 9 buildings, each having 30 classrooms. How many classrooms does the school have?",
        "answer": 270,
        "generated": [
            "# Python code, return ans\nbuildings = 9\nclassrooms_per_building = 30\ntotal_classrooms = buildings * classrooms_per_building\nans = total_classrooms",
            "# Python code, return ans\nbuildings = 9\nclassrooms_per_building = 30\ntotal_classrooms = buildings * classrooms_per_building\nans = total_classrooms",
            "# Python code, return ans\nbuildings = 9\nclassrooms_per_building = 30\ntotal_classrooms = buildings * classrooms_per_building\nans = total_classrooms"
        ],
        "results": [
            270.0,
            270.0,
            270.0
        ],
        "result_counter": {
            "270.0": 3
        },
        "prediction": 270.0
    },
    {
        "question": "She also tried to get to know the teachers in the school. She found out that there are 7 departments in the school and each department has 20 teachers. How many teachers are there in total?",
        "answer": 140,
        "generated": [
            "# Python code, return ans\ndepartments = 7\nteachers_per_department = 20\ntotal_teachers = departments * teachers_per_department\nans = total_teachers",
            "# Python code, return ans\ndepartments = 7\nteachers_per_department = 20\ntotal_teachers = departments * teachers_per_department\nans = total_teachers",
            "# Python code, return ans\ndepartments = 7\nteachers_per_department = 20\ntotal_teachers = departments * teachers_per_department\nans = total_teachers"
        ],
        "results": [
            140.0,
            140.0,
            140.0
        ],
        "result_counter": {
            "140.0": 3
        },
        "prediction": 140.0
    },
    {
        "question": "Stanley, a car enthusiast, loves to drive across different places as a hobby. So for his vacation, he decided to go around his favorite places. His first destination is the famous Sky Falls, one of the tallest waterfalls in his country. It is said to be 20 times as tall as the tallest building in their city. If the building is 9 feet tall, how tall is Sky Falls?",
        "answer": 180,
        "generated": [
            "# Python code, return ans\ntallest_building = 9\nSky_Falls_multiplier = 20\nSky_Falls_height = tallest_building * Sky_Falls_multiplier\nans = Sky_Falls_height",
            "# Python code, return ans\ntallest_building = 9\nSky_Falls_multiplier = 20\nSky_Falls_height = tallest_building * Sky_Falls_multiplier\nans = Sky_Falls_height",
            "# Python code, return ans\ntallest_building = 9\nSky_Falls_multiplier = 20\nSky_Falls_height = tallest_building * Sky_Falls_multiplier\nans = Sky_Falls_height"
        ],
        "results": [
            180.0,
            180.0,
            180.0
        ],
        "result_counter": {
            "180.0": 3
        },
        "prediction": 180.0
    },
    {
        "question": "When he arrived there, he went on to climb to the top of the falls. It usually takes 30 minutes for someone to get to the top. Stanley took time to see the view so his climb took 7 times longer than the usual. How many minutes did it take Stanley to get to the top?",
        "answer": 210,
        "generated": [
            "# Python code, return ans\nusual_climb_time = 30\nStanley_climb_time = usual_climb_time * 7\nans = Stanley_climb_time",
            "# Python code, return ans\nusual_climb_time = 30\nStanley_climb_time = usual_climb_time * 7\nans = Stanley_climb_time",
            "# Python code, return ans\nusual_climb_time = 30\nStanley_climb_time = usual_climb_time * 7\nans = Stanley_climb_time"
        ],
        "results": [
            210.0,
            210.0,
            210.0
        ],
        "result_counter": {
            "210.0": 3
        },
        "prediction": 210.0
    },
    {
        "question": "After going down the falls, he then went to Rock Mist Mountains. If the mountain is 50 times farther from the city than Sky Falls and Sky Falls is 8 miles from the city, how far is the Rocky Mist from the city?",
        "answer": 400,
        "generated": [
            "# Python code, return ans\nSky_Falls_distance = 8\nRock_Mist_Mountains_distance = 50 * Sky_Falls_distance\nans = Rock_Mist_Mountains_distance",
            "# Python code, return ans\nSky_Falls_distance = 8\nRock_Mist_Mountains_distance = 50 * Sky_Falls_distance\nans = Rock_Mist_Mountains_distance",
            "# Python code, return ans\nSky_Falls_distance = 8\nRock_Mist_Mountains_distance = Sky_Falls_distance * 50\nans = Rock_Mist_Mountains_distance"
        ],
        "results": [
            400.0,
            400.0,
            400.0
        ],
        "result_counter": {
            "400.0": 3
        },
        "prediction": 400.0
    },
    {
        "question": "Before reaching the mountains, Stanley stopped over a car shop to buy new tires for the road. If he bought four tires each for $60.00, how much did he spend for tires in total?",
        "answer": 240,
        "generated": [
            "# Python code, return ans\ntire_price = 60\ntire_quantity = 4\ntotal_spent = tire_price * tire_quantity\nans = total_spent",
            "# Python code, return ans\ntire_cost = 60\ntire_quantity = 4\ntotal_cost = tire_cost * tire_quantity\nans = total_cost",
            "# Python code, return ans\ntire_cost = 60\ntire_quantity = 4\ntotal_cost = tire_cost * tire_quantity\nans = total_cost"
        ],
        "results": [
            240.0,
            240.0,
            240.0
        ],
        "result_counter": {
            "240.0": 3
        },
        "prediction": 240.0
    },
    {
        "question": "It usually takes Stanley 10 hours to go around his two favorite places. If he took 10 times longer than the usual, how many hours did it take him to go around the places this time?",
        "answer": 100,
        "generated": [
            "# Python code, return ans\nusual_time = 10\ntime_taken_this_time = usual_time * 10\nans = time_taken_this_time",
            "# Python code, return ans\nusual_time = 10\ntime_taken_this_time = usual_time * 10\nans = time_taken_this_time",
            "# Python code, return ans\nusual_time = 10\ntime_taken_this_time = usual_time * 10\nans = time_taken_this_time"
        ],
        "results": [
            100.0,
            100.0,
            100.0
        ],
        "result_counter": {
            "100.0": 3
        },
        "prediction": 100.0
    },
    {
        "question": "It's Valentine's Day in the city and Mayor Harvey wants to celebrate by giving the institutions for women some flowers. His first beneficiary was the nursing home for old women. He bought 3 sets of flowers, 90 pieces each. How many flowers did he buy for the nursing home?",
        "answer": 270,
        "generated": [
            "# Python code, return ans\nflower_sets = 3\nflowers_per_set = 90\ntotal_flowers = flower_sets * flowers_per_set\nans = total_flowers",
            "# Python code, return ans\nflower_sets = 3\nflowers_per_set = 90\ntotal_flowers = flower_sets * flowers_per_set\nans = total_flowers",
            "# Python code, return ans\nflowers_per_set = 90\nsets = 3\ntotal_flowers = flowers_per_set * sets\nans = total_flowers"
        ],
        "results": [
            270.0,
            270.0,
            270.0
        ],
        "result_counter": {
            "270.0": 3
        },
        "prediction": 270.0
    },
    {
        "question": "Next on his list is the city's Orphanage for Young Girls. He bought roses, lilies, sunflowers and daisies. If he bought 40 pieces of each flower, how many flowers did the orphanage receive?",
        "answer": 160,
        "generated": [
            "# Python code, return ans\nroses = 40\nlilies = 40\nsunflowers = 40\ndaisies = 40\ntotal_flowers = roses + lilies + sunflowers + daisies\nans = total_flowers",
            "# Python code, return ans\nroses = 40\nlilies = 40\nsunflowers = 40\ndaisies = 40\ntotal_flowers = roses + lilies + sunflowers + daisies\nans = total_flowers",
            "# Python code, return ans\nroses = 40\nlilies = 40\nsunflowers = 40\ndaisies = 40\ntotal_flowers = roses + lilies + sunflowers + daisies\nans = total_flowers"
        ],
        "results": [
            160.0,
            160.0,
            160.0
        ],
        "result_counter": {
            "160.0": 3
        },
        "prediction": 160.0
    },
    {
        "question": "Vice-mayor Alexander wanted to join in with the mayor's advocacy. He organized a party and invited the whole city to attend. If he hired 5 caterers having 50 employees each, how many people are working for the party?",
        "answer": 250,
        "generated": [
            "# Python code, return ans\ncaterers = 5\nemployees_each = 50\ntotal_employees = caterers * employees_each\nans = total_employees",
            "# Python code, return ans\ncaterers = 5\nemployees_per_caterer = 50\ntotal_employees = caterers * employees_per_caterer\nans = total_employees",
            "# Python code, return ans\ncaterers = 5\nemployees_per_caterer = 50\ntotal_employees = caterers * employees_per_caterer\nans = total_employees"
        ],
        "results": [
            250.0,
            250.0,
            250.0
        ],
        "result_counter": {
            "250.0": 3
        },
        "prediction": 250.0
    },
    {
        "question": "Mayor Harvey wanted to add color to the party. He bought 7 flowers each representing the 7 colors of the rainbow. If he had 70 bouquets of flowers for each color, how many bouquets are there in all?",
        "answer": 490,
        "generated": [
            "# Python code, return ans\nflowers_per_color = 7\ncolors = 7\ntotal_bouquets = flowers_per_color * colors\nans = total_bouquets",
            "# Python code, return ans\nflowers_per_color = 7\ncolors = 7\ntotal_bouquets = flowers_per_color * colors\nans = total_bouquets",
            "# Python code, return ans\nflowers_per_color = 7\ncolors = 7\ntotal_bouquets = flowers_per_color * colors\nans = total_bouquets"
        ],
        "results": [
            49.0,
            49.0,
            49.0
        ],
        "result_counter": {
            "49.0": 3
        },
        "prediction": 49.0
    },
    {
        "question": "After the day, they were able to make 6 institutions happy. If each institution has 80 people. How many people were made happy by the mayor and vice-mayor?",
        "answer": 480,
        "generated": [
            "# Python code, return ans\ninstitutions = 6\npeople_per_institution = 80\ntotal_people_made_happy = institutions * people_per_institution\nans = total_people_made_happy",
            "# Python code, return ans\ninstitutions = 6\npeople_per_institution = 80\ntotal_people_made_happy = institutions * people_per_institution\nans = total_people_made_happy",
            "# Python code, return ans\ninstitutions = 6\npeople_per_institution = 80\ntotal_people_made_happy = institutions * people_per_institution\nans = total_people_made_happy"
        ],
        "results": [
            480.0,
            480.0,
            480.0
        ],
        "result_counter": {
            "480.0": 3
        },
        "prediction": 480.0
    },
    {
        "question": "Dean went to the beach with his friends to enjoy the last weeks of summer. When they got to the beach, they rented a house for them to stay in for a couple of weeks. If there are seven of them including Dean, and each paid $70.00 for the rent, how much did they pay in total?",
        "answer": 490,
        "generated": [
            "# Python code, return ans\nnum_friends = 7\nrent_per_person = 70\ntotal_rent = num_friends * rent_per_person\nans = total_rent",
            "# Python code, return ans\nnumber_of_friends = 7\nrent_per_person = 70\ntotal_rent = number_of_friends * rent_per_person\nans = total_rent",
            "# Python code, return ans\nnumber_of_friends = 7\nrent_per_person = 70\ntotal_rent = number_of_friends * rent_per_person\nans = total_rent"
        ],
        "results": [
            490.0,
            490.0,
            490.0
        ],
        "result_counter": {
            "490.0": 3
        },
        "prediction": 490.0
    },
    {
        "question": "Dean knew that they are going to stay at the beach for a while, so he brought 30 sets of clothes for every week of their stay. If Dean is staying for 4 weeks there, how many sets of clothes did he bring?",
        "answer": 120,
        "generated": [
            "# Python code, return ans\nsets_per_week = 30\nweeks = 4\ntotal_sets = sets_per_week * weeks\nans = total_sets",
            "# Python code, return ans\nsets_per_week = 30\nweeks_staying = 4\ntotal_sets = sets_per_week * weeks_staying\nans = total_sets",
            "# Python code, return ans\nsets_per_week = 30\nweeks_stay = 4\ntotal_sets = sets_per_week * weeks_stay\nans = total_sets"
        ],
        "results": [
            120.0,
            120.0,
            120.0
        ],
        "result_counter": {
            "120.0": 3
        },
        "prediction": 120.0
    },
    {
        "question": "After resting, they decided to go for a swim. If the depth of the water is 10 times Dean's height and he stands at 6 feet, how deep was the water?",
        "answer": 60,
        "generated": [
            "# Python code, return ans\nDean_height = 6\nwater_depth = 10 * Dean_height\nans = water_depth",
            "# Python code, return ans\nDean_height = 6\nwater_depth = Dean_height * 10\nans = water_depth",
            "# Python code, return ans\nDean_height = 6\nwater_depth = Dean_height * 10\nans = water_depth"
        ],
        "results": [
            60.0,
            60.0,
            60.0
        ],
        "result_counter": {
            "60.0": 3
        },
        "prediction": 60.0
    },
    {
        "question": "Mark, Dean's friend, decided to go for a boat ride. If the ride costs $8.00 for every mile and they travelled for 40 miles, how much would the ride cost Mark?",
        "answer": 320,
        "generated": [
            "# Python code, return ans\ncost_per_mile = 8\nmiles_traveled = 40\ntotal_cost = cost_per_mile * miles_traveled\nans = total_cost",
            "# Python code, return ans\ncost_per_mile = 8\nmiles_travelled = 40\ntotal_cost = cost_per_mile * miles_travelled\nans = total_cost",
            "# Python code, return ans\ncost_per_mile = 8\nmiles_travelled = 40\ntotal_cost = cost_per_mile * miles_travelled\nans = total_cost"
        ],
        "results": [
            320.0,
            320.0,
            320.0
        ],
        "result_counter": {
            "320.0": 3
        },
        "prediction": 320.0
    },
    {
        "question": "Four weeks has passed. It's time for Dean to go home. Before they left, seven of them bought some souvenirs. Each of them spent $90.00 buying gifts. How much did all of them spend altogether?",
        "answer": 630,
        "generated": [
            "# Python code, return ans\nnum_people = 7\nspent_per_person = 90\ntotal_spent = num_people * spent_per_person\nans = total_spent",
            "# Python code, return ans\nnum_friends = 7\nspent_each = 90\ntotal_spent = num_friends * spent_each\nans = total_spent",
            "# Python code, return ans\nnumber_of_people = 7\nspent_per_person = 90\ntotal_spent = number_of_people * spent_per_person\nans = total_spent"
        ],
        "results": [
            630.0,
            630.0,
            630.0
        ],
        "result_counter": {
            "630.0": 3
        },
        "prediction": 630.0
    },
    {
        "question": "Bryan has always been fond of studying rocks and minerals. He has a room full of books about and samples of the different types of rocks. One particular day, he went in the room to take a look at his mineral samples. If he has 65 samples of minerals per shelf, and he has a total of 7 shelves, how many mineral samples does he have?",
        "answer": 455,
        "generated": [
            "# Python code, return ans\nsamples_per_shelf = 65\ntotal_shelves = 7\ntotal_samples = samples_per_shelf * total_shelves\nans = total_samples",
            "# Python code, return ans\nsamples_per_shelf = 65\ntotal_shelves = 7\ntotal_samples = samples_per_shelf * total_shelves\nans = total_samples",
            "# Python code, return ans\nsamples_per_shelf = 65\ntotal_shelves = 7\ntotal_samples = samples_per_shelf * total_shelves\nans = total_samples"
        ],
        "results": [
            455.0,
            455.0,
            455.0
        ],
        "result_counter": {
            "455.0": 3
        },
        "prediction": 455.0
    },
    {
        "question": "He then classified some of the rocks into igneous, metamorphic and sedimentary. If each classification has 246 samples each, how many rocks does he have in all?",
        "answer": 738,
        "generated": [
            "# Python code, return ans\nigneous_samples = 246\nmetamorphic_samples = 246\nsedimentary_samples = 246\ntotal_rocks = igneous_samples + metamorphic_samples + sedimentary_samples\nans = total_rocks",
            "# Python code, return ans\nigneous_samples = 246\nmetamorphic_samples = 246\nsedimentary_samples = 246\ntotal_samples = igneous_samples + metamorphic_samples + sedimentary_samples\nans = total_samples",
            "# Python code, return ans\nigneous_samples = 246\nmetamorphic_samples = 246\nsedimentary_samples = 246\ntotal_rocks = igneous_samples + metamorphic_samples + sedimentary_samples\nans = total_rocks"
        ],
        "results": [
            738.0,
            738.0,
            738.0
        ],
        "result_counter": {
            "738.0": 3
        },
        "prediction": 738.0
    },
    {
        "question": "Bryan took a look at his books as well. If he has 56 books in each of his 9 bookshelves, how many books does he have in total?",
        "answer": 504,
        "generated": [
            "# Python code, return ans\nbooks_per_shelf = 56\nnum_of_shelves = 9\ntotal_books = books_per_shelf * num_of_shelves\nans = total_books",
            "# Python code, return ans\nbooks_per_shelf = 56\nnumber_of_shelves = 9\ntotal_books = books_per_shelf * number_of_shelves\nans = total_books",
            "# Python code, return ans\nbooks_per_shelf = 56\ntotal_shelves = 9\ntotal_books = books_per_shelf * total_shelves\nans = total_books"
        ],
        "results": [
            504.0,
            504.0,
            504.0
        ],
        "result_counter": {
            "504.0": 3
        },
        "prediction": 504.0
    },
    {
        "question": "If books came from all the 4 continents that Bryan had been into and he collected 122 books per continent, how many books does he have from all 4 continents combined?",
        "answer": 488,
        "generated": [
            "# Python code, return ans\nbooks_per_continent = 122\ncontinents = 4\ntotal_books = books_per_continent * continents\nans = total_books",
            "# Python code, return ans\nbooks_per_continent = 122\ncontinents = 4\ntotal_books = books_per_continent * continents\nans = total_books",
            "# Python code, return ans\nbooks_per_continent = 122\ncontinent_num = 4\ntotal_books = books_per_continent * continent_num\nans = total_books"
        ],
        "results": [
            488.0,
            488.0,
            488.0
        ],
        "result_counter": {
            "488.0": 3
        },
        "prediction": 488.0
    },
    {
        "question": "Bryan had 8 precious stones in his collection which he sold to his friend from the jewelry store. If the stones were sold at $1785.00 each, how much money did Bryan get in total?",
        "answer": 14280,
        "generated": [
            "# Python code, return ans\nstones = 8\nprice_per_stone = 1785\ntotal_money = stones * price_per_stone\nans = total_money",
            "# Python code, return ans\nstones = 8\nprice_per_stone = 1785\ntotal_money = stones * price_per_stone\nans = total_money",
            "# Python code, return ans\nstones = 8\nprice_per_stone = 1785\ntotal_money = stones * price_per_stone\nans = total_money"
        ],
        "results": [
            14280.0,
            14280.0,
            14280.0
        ],
        "result_counter": {
            "14280.0": 3
        },
        "prediction": 14280.0
    },
    {
        "question": "It is harvest season in the country. Lewis, whose family owns a fruit farm, is busy overseeing their farmers while they are harvesting the fruits. His day starts by going to the apple orchard. The farmers reported that they harvest 45 sacks of apples from each of the 8 sections of the orchard daily. How many apples are harvested every day?",
        "answer": 360,
        "generated": [
            "# Python code, return ans\nsacks_per_section = 45\nsections = 8\ntotal_sacks = sacks_per_section * sections\nans = total_sacks",
            "# Python code, return ans\nsacks_per_section = 45\nsections = 8\ntotal_apples = sacks_per_section * sections\nans = total_apples",
            "# Python code, return ans\nsacks_per_section = 45\nsections = 8\ntotal_sacks = sacks_per_section * sections\nans = total_sacks"
        ],
        "results": [
            360.0,
            360.0,
            360.0
        ],
        "result_counter": {
            "360.0": 3
        },
        "prediction": 360.0
    },
    {
        "question": "Next on his checklist are the strawberry fields. There he found out that they can get 268 kg of fruit for every row of strawberry plants. If there are 7 rows of strawberry plants, how many kilograms of strawberries can they harvest?",
        "answer": 1876,
        "generated": [
            "# Python code, return ans\nstrawberry_per_row = 268\nrows = 7\ntotal_strawberries = strawberry_per_row * rows\nans = total_strawberries",
            "# Python code, return ans\nstrawberry_per_row = 268\nrows = 7\ntotal_strawberries = strawberry_per_row * rows\nans = total_strawberries",
            "# Python code, return ans\nstrawberry_per_row = 268\nrows = 7\ntotal_strawberries = strawberry_per_row * rows\nans = total_strawberries"
        ],
        "results": [
            1876.0,
            1876.0,
            1876.0
        ],
        "result_counter": {
            "1876.0": 3
        },
        "prediction": 1876.0
    },
    {
        "question": "He then went to see the oranges being harvested. He found out that they harvest 83 sacks per day. How many sacks of oranges will they have after 6 days of harvest?",
        "answer": 498,
        "generated": [
            "# Python code, return ans\nsacks_per_day = 83\ndays_of_harvest = 6\ntotal_sacks = sacks_per_day * days_of_harvest\nans = total_sacks",
            "# Python code, return ans\nsacks_per_day = 83\ndays = 6\ntotal_sacks = sacks_per_day * days\nans = total_sacks",
            "# Python code, return ans\nsacks_per_day = 83\ndays = 6\ntotal_sacks = sacks_per_day * days\nans = total_sacks"
        ],
        "results": [
            498.0,
            498.0,
            498.0
        ],
        "result_counter": {
            "498.0": 3
        },
        "prediction": 498.0
    },
    {
        "question": "Being his favorite, he saved checking on the grapevines for his last stop. He was told by one the pickers that they fill 324 drums of grapes per day. How many drums of grapes would be filled in 9 days?",
        "answer": 2916,
        "generated": [
            "# Python code, return ans\ndrums_per_day = 324\ndays = 9\ntotal_drums = drums_per_day * days\nans = total_drums",
            "# Python code, return ans\ndrums_per_day = 324\ndays = 9\ntotal_drums = drums_per_day * days\nans = total_drums",
            "# Python code, return ans\ndrums_per_day = 324\ndays = 9\ntotal_drums = drums_per_day * days\nans = total_drums"
        ],
        "results": [
            2916.0,
            2916.0,
            2916.0
        ],
        "result_counter": {
            "2916.0": 3
        },
        "prediction": 2916.0
    },
    {
        "question": "If Lewis earns $1367.00 every week during the 5 weeks of harvest. How much money does he earn during harvest season?",
        "answer": 6835,
        "generated": [
            "# Python code, return ans\nweekly_earning = 1367\nweeks = 5\ntotal_earning = weekly_earning * weeks\nans = total_earning",
            "# Python code, return ans\nweekly_earning = 1367\nweeks = 5\ntotal_earning = weekly_earning * weeks\nans = total_earning",
            "# Python code, return ans\nweekly_earning = 1367\nweeks = 5\ntotal_earning = weekly_earning * weeks\nans = total_earning"
        ],
        "results": [
            6835.0,
            6835.0,
            6835.0
        ],
        "result_counter": {
            "6835.0": 3
        },
        "prediction": 6835.0
    },
    {
        "question": "Tyler, an animal rights advocate, decided to build his own animal sanctuary to protect different animals from poachers. The sanctuary was divided into different regions. The first region to be built was a bird sanctuary. Initially, he had 29 endangered bird species on that region. If each species has 7 pairs of birds, how many pairs does he have in total?",
        "answer": 203,
        "generated": [
            "# Python code, return ans\nbird_species = 29\npairs_per_species = 7\ntotal_pairs = bird_species * pairs_per_species\nans = total_pairs",
            "# Python code, return ans\nbird_species = 29\npairs_per_species = 7\ntotal_pairs = bird_species * pairs_per_species\nans = total_pairs",
            "# Python code, return ans\nbird_species = 29\npairs_per_species = 7\ntotal_pairs = bird_species * pairs_per_species\nans = total_pairs"
        ],
        "results": [
            203.0,
            203.0,
            203.0
        ],
        "result_counter": {
            "203.0": 3
        },
        "prediction": 203.0
    },
    {
        "question": "Another region was the aquatic reserve for freshwater organisms. If there are 6 bodies of water in the region, each having 175 different fishes, how many fishes does he have in total?",
        "answer": 1050,
        "generated": [
            "# Python code, return ans\nbodies_of_water = 6\nfishes_per_body = 175\ntotal_fishes = bodies_of_water * fishes_per_body\nans = total_fishes",
            "# Python code, return ans\nbodies_of_water = 6\nfishes_per_body = 175\ntotal_fishes = bodies_of_water * fishes_per_body\nans = total_fishes",
            "# Python code, return ans\nbodies_of_water = 6\nfishes_per_body = 175\ntotal_fishes = bodies_of_water * fishes_per_body\nans = total_fishes"
        ],
        "results": [
            1050.0,
            1050.0,
            1050.0
        ],
        "result_counter": {
            "1050.0": 3
        },
        "prediction": 1050.0
    },
    {
        "question": "He also had 8 aquariums for saltwater animals. Each aquarium has 64 animals in it. How many saltwater animals does Tyler have?",
        "answer": 512,
        "generated": [
            "# Python code, return ans\naquarium_num = 8\nanimals_per_aquarium = 64\ntotal_saltwater_animals = aquarium_num * animals_per_aquarium\nans = total_saltwater_animals",
            "# Python code, return ans\naquarium_num = 8\nanimals_per_aquarium = 64\ntotal_saltwater_animals = aquarium_num * animals_per_aquarium\nans = total_saltwater_animals",
            "# Python code, return ans\naquariums = 8\nanimals_per_aquarium = 64\ntotal_saltwater_animals = aquariums * animals_per_aquarium\nans = total_saltwater_animals"
        ],
        "results": [
            512.0,
            512.0,
            512.0
        ],
        "result_counter": {
            "512.0": 3
        },
        "prediction": 512.0
    },
    {
        "question": "The sanctuary also includes several swamp areas where most of the reptiles usually reside. If there are 4 swamps, each having 356 different reptiles, how many reptiles are living in the swamp areas?",
        "answer": 1424,
        "generated": [
            "# Python code, return ans\nswamps = 4\nreptiles_per_swamp = 356\ntotal_reptiles = swamps * reptiles_per_swamp\nans = total_reptiles",
            "# Python code, return ans\nswamp_num = 4\nreptiles_per_swamp = 356\ntotal_reptiles = swamp_num * reptiles_per_swamp\nans = total_reptiles",
            "# Python code, return ans\nswamps = 4\nreptiles_per_swamp = 356\ntotal_reptiles = swamps * reptiles_per_swamp\nans = total_reptiles"
        ],
        "results": [
            1424.0,
            1424.0,
            1424.0
        ],
        "result_counter": {
            "1424.0": 3
        },
        "prediction": 1424.0
    },
    {
        "question": "There are 3 more sections that are undeveloped. Each of the remaining sections has a land area of 2435 square feet. What is the total area of the undeveloped land?",
        "answer": 7305,
        "generated": [
            "# Python code, return ans\nundeveloped_sections = 3\nsection_area = 2435\ntotal_undeveloped_area = undeveloped_sections * section_area\nans = total_undeveloped_area",
            "# Python code, return ans\nundeveloped_sections = 3\narea_per_section = 2435\ntotal_undeveloped_area = undeveloped_sections * area_per_section\nans = total_undeveloped_area",
            "# Python code, return ans\nundeveloped_sections = 3\narea_per_section = 2435\ntotal_area = undeveloped_sections * area_per_section\nans = total_area"
        ],
        "results": [
            7305.0,
            7305.0,
            7305.0
        ],
        "result_counter": {
            "7305.0": 3
        },
        "prediction": 7305.0
    },
    {
        "question": "It's Rachel's birthday. Her parents wanted her to have fun so they went to the circus that happened to be in town that day. Upon arriving at the circus, they went to the ticket booth and asked how much each ticket cost. If each ticket costs $44.00 and they bought 7 tickets, how much money did they spend on tickets?",
        "answer": 308,
        "generated": [
            "# Python code, return ans\nticket_cost = 44\nticket_quantity = 7\ntotal_cost = ticket_cost * ticket_quantity\nans = total_cost",
            "# Python code, return ans\nticket_cost = 44\nticket_quantity = 7\ntotal_cost = ticket_cost * ticket_quantity\nans = total_cost",
            "# Python code, return ans\nticket_cost = 44\nticket_quantity = 7\ntotal_cost = ticket_cost * ticket_quantity\nans = total_cost"
        ],
        "results": [
            308.0,
            308.0,
            308.0
        ],
        "result_counter": {
            "308.0": 3
        },
        "prediction": 308.0
    },
    {
        "question": "They entered the circus tent and saw that there are four seating sections for the audience. If each section can accommodate 246 people, how many people can the tent accommodate in total?",
        "answer": 984,
        "generated": [
            "# Python code, return ans\nseating_sections = 4\nseats_per_section = 246\ntotal_seats = seating_sections * seats_per_section\nans = total_seats",
            "# Python code, return ans\nseating_sections = 4\nseats_per_section = 246\ntotal_seats = seating_sections * seats_per_section\nans = total_seats",
            "# Python code, return ans\nsection_num = 4\nsection_capacity = 246\ntotal_capacity = section_num * section_capacity\nans = total_capacity"
        ],
        "results": [
            984.0,
            984.0,
            984.0
        ],
        "result_counter": {
            "984.0": 3
        },
        "prediction": 984.0
    },
    {
        "question": "The first act included 5 clown mobiles, each stuffed with 28 clowns. How many clowns are inside all the clown mobiles combined?",
        "answer": 140,
        "generated": [
            "# Python code, return ans\nclown_mobiles = 5\nclowns_per_mobile = 28\ntotal_clowns = clown_mobiles * clowns_per_mobile\nans = total_clowns",
            "# Python code, return ans\nclown_mobiles = 5\nclowns_per_mobile = 28\ntotal_clowns = clown_mobiles * clowns_per_mobile\nans = total_clowns",
            "# Python code, return ans\nclown_mobiles = 5\nclowns_per_mobile = 28\ntotal_clowns = clown_mobiles * clowns_per_mobile\nans = total_clowns"
        ],
        "results": [
            140.0,
            140.0,
            140.0
        ],
        "result_counter": {
            "140.0": 3
        },
        "prediction": 140.0
    },
    {
        "question": "The next act involved several jugglers. If each juggler is juggling 6 balls at a time, how many balls are needed if there are 378 jugglers putting a show at the same time?",
        "answer": 2268,
        "generated": [
            "# Python code, return ans\njuggler_num = 378\nballs_per_juggler = 6\ntotal_balls_needed = juggler_num * balls_per_juggler\nans = total_balls_needed",
            "# Python code, return ans\njuggler_num = 378\nballs_per_juggler = 6\ntotal_balls_needed = juggler_num * balls_per_juggler\nans = total_balls_needed",
            "# Python code, return ans\njuggler_num = 378\nballs_per_juggler = 6\ntotal_balls_needed = juggler_num * balls_per_juggler\nans = total_balls_needed"
        ],
        "results": [
            2268.0,
            2268.0,
            2268.0
        ],
        "result_counter": {
            "2268.0": 3
        },
        "prediction": 2268.0
    },
    {
        "question": "For the final act, the circus brought out dancing animals wearing crowns. If each crown is made with 7 different colored feathers, how many feathers are needed for 934 crowns?",
        "answer": 6538,
        "generated": [
            "# Python code, return ans\nfeathers_per_crown = 7\ncrowns = 934\ntotal_feathers = feathers_per_crown * crowns\nans = total_feathers",
            "# Python code, return ans\nfeathers_per_crown = 7\ntotal_crowns = 934\ntotal_feathers = feathers_per_crown * total_crowns\nans = total_feathers",
            "# Python code, return ans\nfeathers_per_crown = 7\ntotal_crowns = 934\ntotal_feathers = feathers_per_crown * total_crowns\nans = total_feathers"
        ],
        "results": [
            6538.0,
            6538.0,
            6538.0
        ],
        "result_counter": {
            "6538.0": 3
        },
        "prediction": 6538.0
    },
    {
        "question": "Amanda and her friends decided to go to an amusement park for the weekend. The nearest amusement park from their city is Super Fun-tastic Land. If they cover a distance of 27 miles for every hour of travel and they travelled for 3 hours, how far is SFL from the city?",
        "answer": 81,
        "generated": [
            "# Python code, return ans\ndistance_per_hour = 27\ntravel_time = 3\ntotal_distance = distance_per_hour * travel_time\nans = total_distance",
            "# Python code, return ans\ndistance_per_hour = 27\ntravel_time = 3\ntotal_distance = distance_per_hour * travel_time\nans = total_distance",
            "# Python code, return ans\ndistance_per_hour = 27\ntravel_hours = 3\ntotal_distance = distance_per_hour * travel_hours\nans = total_distance"
        ],
        "results": [
            81.0,
            81.0,
            81.0
        ],
        "result_counter": {
            "81.0": 3
        },
        "prediction": 81.0
    },
    {
        "question": "When they got there, they saw that SFL is already filled with people. Every entrance has a long line, with 283 people waiting to get in. If SFL has 5 entrances, how many people in total are waiting to get in?",
        "answer": 1415,
        "generated": [
            "# Python code, return ans\npeople_per_entrance = 283\nentrance_num = 5\ntotal_people_waiting = people_per_entrance * entrance_num\nans = total_people_waiting",
            "# Python code, return ans\npeople_per_entrance = 283\nentrances = 5\ntotal_people_waiting = people_per_entrance * entrances\nans = total_people_waiting",
            "# Python code, return ans\npeople_per_entrance = 283\nentrances = 5\ntotal_people_waiting = people_per_entrance * entrances\nans = total_people_waiting"
        ],
        "results": [
            1415.0,
            1415.0,
            1415.0
        ],
        "result_counter": {
            "1415.0": 3
        },
        "prediction": 1415.0
    },
    {
        "question": "Determined to have fun, they travelled to the next amusement park, HappyLand. If they cover a distance of 328 feet for every minute of travel and they travelled for 9 minutes, how far is HappyLand from SFL?",
        "answer": 2952,
        "generated": [
            "# Python code, return ans\ndistance_per_minute = 328\ntravel_time = 9\ntotal_distance = distance_per_minute * travel_time\nans = total_distance",
            "# Python code, return ans\ndistance_per_minute = 328\ntravel_time = 9\ntotal_distance = distance_per_minute * travel_time\nans = total_distance",
            "# Python code, return ans\ndistance_per_minute = 328\ntravel_time = 9\ntotal_distance = distance_per_minute * travel_time\nans = total_distance"
        ],
        "results": [
            2952.0,
            2952.0,
            2952.0
        ],
        "result_counter": {
            "2952.0": 3
        },
        "prediction": 2952.0
    },
    {
        "question": "When they arrived at HappyLand, they immediately went in and bought their tickets. If each ticket cost $17.00 and they bought 8 tickets, how much did they spend on tickets?",
        "answer": 136,
        "generated": [
            "# Python code, return ans\nticket_cost = 17\ntickets_bought = 8\ntotal_spent = ticket_cost * tickets_bought\nans = total_spent",
            "# Python code, return ans\nticket_cost = 17\nticket_quantity = 8\ntotal_cost = ticket_cost * ticket_quantity\nans = total_cost",
            "# Python code, return ans\nticket_cost = 17\nticket_quantity = 8\ntotal_cost = ticket_cost * ticket_quantity\nans = total_cost"
        ],
        "results": [
            136.0,
            136.0,
            136.0
        ],
        "result_counter": {
            "136.0": 3
        },
        "prediction": 136.0
    },
    {
        "question": "HappyLand has twice the land area of Super Fun-tastic Land. If Super Fun-tastic Land has a land area of 4897 square feet, what would be the total land area of HappyLand?",
        "answer": 9794,
        "generated": [
            "# Python code, return ans\nSuper_Funtastic_Land_area = 4897\nHappyLand_area = Super_Funtastic_Land_area * 2\nans = HappyLand_area",
            "# Python code, return ans\nSuper_Funtastic_Land_area = 4897\nHappyLand_area = Super_Funtastic_Land_area * 2\nans = HappyLand_area",
            "# Python code, return ans\nSuper_Funtastic_Land_area = 4897\nHappyLand_area = Super_Funtastic_Land_area * 2\nans = HappyLand_area"
        ],
        "results": [
            9794.0,
            9794.0,
            9794.0
        ],
        "result_counter": {
            "9794.0": 3
        },
        "prediction": 9794.0
    },
    {
        "question": "Jack loves to collect and read books. In fact, he has a mini-library in their house and he usually spends most of his time in it. The library is divided into different sections for different type of books. The science fiction section has 8 books. If each book has 478 pages, how many pages do all the 8 books have in total?",
        "answer": 3824,
        "generated": [
            "# Python code, return ans\nscience_fiction_books = 8\npages_per_book = 478\ntotal_pages = science_fiction_books * pages_per_book\nans = total_pages",
            "# Python code, return ans\nscience_fiction_books = 8\npages_per_book = 478\ntotal_pages = science_fiction_books * pages_per_book\nans = total_pages",
            "# Python code, return ans\nscience_fiction_books = 8\npages_per_book = 478\ntotal_pages = science_fiction_books * pages_per_book\nans = total_pages"
        ],
        "results": [
            3824.0,
            3824.0,
            3824.0
        ],
        "result_counter": {
            "3824.0": 3
        },
        "prediction": 3824.0
    },
    {
        "question": "He also has a section filled with short story booklets. If each booklet has 9 pages and there are 49 booklets in the short story section, how many pages will Jack need to go through if he plans to read them all?",
        "answer": 441,
        "generated": [
            "# Python code, return ans\nbooklet_pages = 9\nbooklet_num = 49\ntotal_pages = booklet_pages * booklet_num\nans = total_pages",
            "# Python code, return ans\nbooklet_pages = 9\nbooklet_num = 49\ntotal_pages = booklet_pages * booklet_num\nans = total_pages",
            "# Python code, return ans\nbooklet_pages = 9\nbooklet_num = 49\ntotal_pages = booklet_pages * booklet_num\nans = total_pages"
        ],
        "results": [
            441.0,
            441.0,
            441.0
        ],
        "result_counter": {
            "441.0": 3
        },
        "prediction": 441.0
    },
    {
        "question": "One of his favorites is a book called Encyclopedia of Life and Everything Else. The book has 7 large chapters, each having 566 pages. How many pages does the encyclopedia have in total?",
        "answer": 3962,
        "generated": [
            "# Python code, return ans\nchapter_num = 7\npages_per_chapter = 566\ntotal_pages = chapter_num * pages_per_chapter\nans = total_pages",
            "# Python code, return ans\nchapter_num = 7\npages_per_chapter = 566\ntotal_pages = chapter_num * pages_per_chapter\nans = total_pages",
            "# Python code, return ans\nchapter_num = 7\npages_per_chapter = 566\ntotal_pages = chapter_num * pages_per_chapter\nans = total_pages"
        ],
        "results": [
            3962.0,
            3962.0,
            3962.0
        ],
        "result_counter": {
            "3962.0": 3
        },
        "prediction": 3962.0
    },
    {
        "question": "The mini library also has a section for the classics. If Jack has a collection of 6 classic authors, with each author having 33 books, how many books does he have in the classics section?",
        "answer": 198,
        "generated": [
            "# Python code, return ans\nclassic_authors = 6\nbooks_per_author = 33\ntotal_classic_books = classic_authors * books_per_author\nans = total_classic_books",
            "# Python code, return ans\nclassic_authors = 6\nbooks_per_author = 33\ntotal_classic_books = classic_authors * books_per_author\nans = total_classic_books",
            "# Python code, return ans\nclassic_authors = 6\nbooks_per_author = 33\ntotal_classic_books = classic_authors * books_per_author\nans = total_classic_books"
        ],
        "results": [
            198.0,
            198.0,
            198.0
        ],
        "result_counter": {
            "198.0": 3
        },
        "prediction": 198.0
    },
    {
        "question": "Having this kind of collection made Jack a fast reader. If he can read 9 books in a day, how many books can he read in a year (a year = 365 days)?",
        "answer": 3285,
        "generated": [
            "# Python code, return ans\nbooks_per_day = 9\ndays_per_year = 365\nbooks_per_year = books_per_day * days_per_year\nans = books_per_year",
            "# Python code, return ans\nbooks_per_day = 9\ndays_in_year = 365\nbooks_per_year = books_per_day * days_in_year\nans = books_per_year",
            "# Python code, return ans\nbooks_per_day = 9\ndays_per_year = 365\ntotal_books = books_per_day * days_per_year\nans = total_books"
        ],
        "results": [
            3285.0,
            3285.0,
            3285.0
        ],
        "result_counter": {
            "3285.0": 3
        },
        "prediction": 3285.0
    },
    {
        "question": "Lexie has a lot of art materials. She needs to organize all these materials into containers. She counted her crayons and found out that she has 80 crayons which she will place in crayon boxes. Every crayon box can contain 8 crayons. How many crayon boxes does she need?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\ntotal_crayons = 80\ncrayons_per_box = 8\nnum_boxes = total_crayons // crayons_per_box\nif total_crayons % crayons_per_box != 0:\n    num_boxes += 1\nans = num_boxes",
            "# Python code, return ans\ntotal_crayons = 80\ncrayons_per_box = 8\nnum_boxes_needed = total_crayons // crayons_per_box\nif total_crayons % crayons_per_box != 0:\n    num_boxes_needed += 1\nans = num_boxes_needed",
            "# Python code, return ans\ntotal_crayons = 80\ncrayons_per_box = 8\nboxes_needed = total_crayons // crayons_per_box\nif total_crayons % crayons_per_box != 0:\n    boxes_needed += 1\nans = boxes_needed"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "A pile of clean white paper was stacked in the corner of her room. She decided to place these papers in paper envelopes which can contain 10 white papers. How many paper envelopes does she need if she has 120 clean white papers?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nwhite_papers = 120\npapers_per_envelope = 10\ntotal_envelopes = white_papers / papers_per_envelope\nans = total_envelopes",
            "# Python code, return ans\nwhite_papers = 120\npapers_per_envelope = 10\nenvelopes_needed = white_papers / papers_per_envelope\nans = envelopes_needed",
            "# Python code, return ans\nwhite_papers = 120\npapers_per_envelope = 10\nenvelopes_needed = white_papers / papers_per_envelope\nans = envelopes_needed"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Beside the pile of clean white paper was a stack of 700 sheets of used paper. She wants to place it in boxes for recycling. If every box can contain 100 sheets, how many boxes does she need?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nused_paper = 700\nsheets_per_box = 100\nboxes_needed = used_paper // sheets_per_box + (1 if used_paper % sheets_per_box > 0 else 0)\nans = boxes_needed",
            "# Python code, return ans\nused_paper = 700\nsheets_per_box = 100\nboxes_needed = used_paper // sheets_per_box\nif used_paper % sheets_per_box != 0:\n    boxes_needed += 1\nans = boxes_needed",
            "# Python code, return ans\nused_paper = 700\nsheets_per_box = 100\nboxes_needed = used_paper // sheets_per_box + (1 if used_paper % sheets_per_box > 0 else 0)\nans = boxes_needed"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Lexie's mom gathered all her watercolor paintings and thought of placing an equal number of paintings in four of the rooms in the house. If Lexie has 32 watercolor paintings, how many paintings will be placed in each of the four rooms?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ntotal_paintings = 32\nrooms = 4\npaintings_per_room = total_paintings / rooms\nans = paintings_per_room",
            "# Python code, return ans\ntotal_paintings = 32\nroom_num = 4\npaintings_per_room = total_paintings / room_num\nans = paintings_per_room",
            "# Python code, return ans\ntotal_paintings = 32\nrooms = 4\npaintings_per_room = total_paintings / rooms\nans = paintings_per_room"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Lexie's younger brother helped pick up all the paper clips in Lexie's room. He was able to collect 81 paper clips. If he wants to distribute the paper clips in 9 boxes, how many paper clips will each box contain?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ntotal_paper_clips = 81\nnum_boxes = 9\npaper_clips_per_box = total_paper_clips // num_boxes\nans = paper_clips_per_box",
            "# Python code, return ans\ntotal_paper_clips = 81\nnum_boxes = 9\npaper_clips_per_box = total_paper_clips / num_boxes\nans = paper_clips_per_box",
            "# Python code, return ans\ntotal_paper_clips = 81\nnum_boxes = 9\npaper_clips_per_box = total_paper_clips // num_boxes\nans = paper_clips_per_box"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Christian and his parents went to Mt. Falton National Park for the weekend. They were welcomed warmly by the rangers who invite volunteers and call them \"earth keepers\". The junior ranger asked Christian to help him place 420 seedlings in packets. If every packet needs to contain 7 seeds, how many packets do they need?",
        "answer": 60,
        "generated": [
            "# Python code, return ans\nseedlings = 420\nseeds_per_packet = 7\npackets_needed = seedlings / seeds_per_packet\nans = packets_needed",
            "# Python code, return ans\nseedlings = 420\nseeds_per_packet = 7\npackets_needed = seedlings // seeds_per_packet\nans = packets_needed",
            "# Python code, return ans\nseedlings = 420\nseeds_per_packet = 7\npackets_needed = seedlings / seeds_per_packet\nans = packets_needed"
        ],
        "results": [
            60.0,
            60.0,
            60.0
        ],
        "result_counter": {
            "60.0": 3
        },
        "prediction": 60.0
    },
    {
        "question": "Christian's mother prepared lemonade. Every pitcher of lemonade can serve 5 glasses. If she was able to serve 30 glasses of lemonade, how many pitchers of lemonade did she prepare?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nglasses_served = 30\nglasses_per_pitcher = 5\npitchers_prepared = glasses_served / glasses_per_pitcher\nans = pitchers_prepared",
            "# Python code, return ans\nglasses_served = 30\nglasses_per_pitcher = 5\npitchers_prepared = glasses_served / glasses_per_pitcher\nans = pitchers_prepared",
            "# Python code, return ans\nglasses_served = 30\nglasses_per_pitcher = 5\npitchers_prepared = glasses_served / glasses_per_pitcher\nans = pitchers_prepared"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Christian's father and the senior ranger gathered firewood as they walked towards the lake in the park and brought with them sacks. If every sack can contain around 20 pieces of wood, how many sacks were they able to fill if they gathered 80 pieces of wood?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nwood_pieces = 80\nwood_per_sack = 20\nfilled_sacks = wood_pieces / wood_per_sack\nans = filled_sacks",
            "# Python code, return ans\ntotal_wood = 80\nwood_per_sack = 20\nfilled_sacks = total_wood / wood_per_sack\nans = filled_sacks",
            "# Python code, return ans\nwood_pieces = 80\nwood_per_sack = 20\nsacks_filled = wood_pieces / wood_per_sack\nans = sacks_filled"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Christian and the junior ranger brought a bag of 140 nails as they visited every station assigned to the junior ranger. If they left exactly 7 nails in every station they visited, how many stations did Joline and the junior ranger visit?",
        "answer": 20,
        "generated": [
            "# Python code, return ans\ntotal_nails = 140\nnails_per_station = 7\nstations_visited = total_nails / nails_per_station\nans = stations_visited",
            "# Python code, return ans\ntotal_nails = 140\nnails_per_station = 7\nstations_visited = total_nails / nails_per_station\nans = stations_visited",
            "# Python code, return ans\ntotal_nails = 140\nnails_per_station = 7\nstations_visited = total_nails // nails_per_station\nans = stations_visited"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "Sunday morning was spent for making wood carvings which can be sold as souvenir for tourists. They were placed in shelves that can contain 8 wood carvings at a time. If 56 wood carvings were displayed, how many shelves were filled with carvings?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nwood_carvings = 56\ncarvings_per_shelf = 8\nshelves_filled = wood_carvings / carvings_per_shelf\nans = shelves_filled",
            "# Python code, return ans\nwood_carvings = 56\ncarvings_per_shelf = 8\nshelves_filled = wood_carvings / carvings_per_shelf\nans = shelves_filled",
            "# Python code, return ans\nwood_carvings = 56\nshelf_capacity = 8\nfilled_shelves = wood_carvings / shelf_capacity\nans = filled_shelves"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Shiela has started writing a list of gifts that she plans to give to her family and friends this Christmas. For her classmates, she made colorful paper stars which will be placed in small clear bottles. She was able to prepare 45 paper stars. How many stars will be placed in each bottle if Shiela has 9 classmates?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\npaper_stars = 45\nclassmates = 9\nstars_per_bottle = paper_stars / classmates\nans = stars_per_bottle",
            "# Python code, return ans\npaper_stars = 45\nclassmates = 9\nstars_per_bottle = paper_stars / classmates\nans = stars_per_bottle",
            "# Python code, return ans\npaper_stars = 45\nclassmates = 9\nstars_per_bottle = paper_stars / classmates\nans = stars_per_bottle"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Shiela has 6 neighbors who like to collect animal drawings. Shiela has a talent for drawing and so she drew 54 animals on small pieces of paper. If she plans to give the same number of animal drawings to her neighbors, how many will each of them receive?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ntotal_drawings = 54\nneighbor_num = 6\ndrawings_per_neighbor = total_drawings / neighbor_num\nans = drawings_per_neighbor",
            "# Python code, return ans\ntotal_drawings = 54\nneighbor_num = 6\ndrawings_per_neighbor = total_drawings / neighbor_num\nans = drawings_per_neighbor",
            "# Python code, return ans\ntotal_drawings = 54\nnumber_of_neighbors = 6\ndrawings_per_neighbor = total_drawings // number_of_neighbors\nans = drawings_per_neighbor"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Allen, Shiela's brother, likes to play with blocks. Shiela repainted Allen's old blocks in different colors. If Allen has 49 identical blocks and there are 7 blocks for every color of paint used, how many colors did Shiela use?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ntotal_blocks = 49\nblocks_per_color = 7\ncolors_used = total_blocks / blocks_per_color\nans = colors_used",
            "# Python code, return ans\ntotal_blocks = 49\nblocks_per_color = 7\ncolors_used = total_blocks / blocks_per_color\nans = colors_used",
            "# Python code, return ans\ntotal_blocks = 49\nblocks_per_color = 7\ncolors_used = total_blocks / blocks_per_color\nans = colors_used"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Aside from drawing animals, Shiela is fond of painting flowers. If she has 18 paintings of flowers, how many paintings can she give to each of her two grandmothers?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ntotal_paintings = 18\nnum_grandmothers = 2\npaintings_per_grandmother = total_paintings // num_grandmothers\nans = paintings_per_grandmother",
            "# Python code, return ans\ntotal_paintings = 18\ngrandmothers = 2\npaintings_per_grandmother = total_paintings // grandmothers\nans = paintings_per_grandmother",
            "# Python code, return ans\ntotal_paintings = 18\ngrandmothers = 2\npaintings_per_grandmother = total_paintings // grandmothers\nans = paintings_per_grandmother"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "It has been tradition in Shiela's home to hang a sock above the fireplace for each member of the family. This year, she placed a cinnamon ball every day in the socks for 5 of her family members. How long can she do this if she bought 50 cinnamon balls?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\ncinnamon_balls = 50\nfamily_members = 5\ndays = cinnamon_balls // family_members\nans = days",
            "# Python code, return ans\ncinnamon_balls = 50\nfamily_members = 5\ndays = cinnamon_balls // family_members\nans = days",
            "# Python code, return ans\ncinnamon_balls = 50\nfamily_members = 5\ndays = cinnamon_balls // family_members\nans = days"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "Haley loves to collect things. This year, she decided to give away part of her collection as it was taking too much space in her room. Nine of her closest friends like stickers. If she plans to give all of them an equal number of stickers, how many will each receive if she has 72 stickers?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nstickers_total = 72\nfriends_num = 9\nstickers_per_friend = stickers_total // friends_num\nans = stickers_per_friend",
            "# Python code, return ans\nstickers_total = 72\nfriends_num = 9\nstickers_per_friend = stickers_total // friends_num\nans = stickers_per_friend",
            "# Python code, return ans\nstickers_total = 72\nfriends_num = 9\nstickers_per_friend = stickers_total // friends_num\nans = stickers_per_friend"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "In Haley's class, 5 are boys who love to play marbles. If Haley has 35 marbles, how many will each of the boys receive?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ntotal_marbles = 35\nboys_num = 5\nmarbles_each_boy = total_marbles / boys_num\nans = marbles_each_boy",
            "# Python code, return ans\ntotal_marbles = 35\nboys_num = 5\nmarbles_per_boy = total_marbles // boys_num\nans = marbles_per_boy",
            "# Python code, return ans\nHaley_marbles = 35\nboys_num = 5\nmarbles_per_boy = Haley_marbles / boys_num\nans = marbles_per_boy"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "When relatives visit Haley and her family, she and her cousins do origami. If she has 48 origami papers to give away to her six cousins, how many will each receive if she gives everyone the same number of origami papers?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\norigami_papers = 48\ncousins = 6\npapers_per_cousin = origami_papers // cousins\nans = papers_per_cousin",
            "# Python code, return ans\norigami_papers = 48\ncousins = 6\npapers_per_cousin = origami_papers / cousins\nans = papers_per_cousin",
            "# Python code, return ans\norigami_papers = 48\ncousins = 6\npapers_per_cousin = origami_papers / cousins\nans = papers_per_cousin"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "A large bag of balls was kept under Haley's bed. Her mom placed the balls in bags for children in foster homes. If every bag can contain 4 balls and Haley has 36 balls, how many bags will be used?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ntotal_balls = 36\nballs_per_bag = 4\nbags_needed = total_balls // balls_per_bag\nans = bags_needed",
            "# Python code, return ans\ntotal_balls = 36\nballs_per_bag = 4\nbags_needed = total_balls / balls_per_bag\nans = bags_needed",
            "# Python code, return ans\ntotal_balls = 36\nballs_per_bag = 4\nbags_needed = total_balls // balls_per_bag\nans = bags_needed"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Haley has 63 magazines in her cabinet. She plans to send it to the recycling office in their area. If she places it in boxes which can contain 9 magazines, how many boxes will she use?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nmagazines = 63\nmagazines_per_box = 9\nboxes_needed = magazines // magazines_per_box\nif magazines % magazines_per_box != 0:\n    boxes_needed += 1\nans = boxes_needed",
            "# Python code, return ans\nmagazines = 63\ncapacity_per_box = 9\nboxes_needed = magazines / capacity_per_box\nans = boxes_needed",
            "# Python code, return ans\nmagazines = 63\nmagazines_per_box = 9\nboxes_needed = magazines // magazines_per_box\nif magazines % magazines_per_box != 0:\n    boxes_needed += 1\nans = boxes_needed"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "One bright sunny day, Betty decided to make bracelets from beautiful stones she bought from a local store. She bought 88 pink flower stones and wanted to make 8 bracelets out of these stones. How many pink flower stones will each bracelet have if she used the same number of stones in each bracelet?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\npink_stones = 88\nbracelets = 8\nstones_per_bracelet = pink_stones // bracelets\nans = stones_per_bracelet",
            "# Python code, return ans\npink_stones = 88\nbracelets = 8\nstones_per_bracelet = pink_stones // bracelets\nans = stones_per_bracelet",
            "# Python code, return ans\npink_stones = 88\nbracelets = 8\nstones_per_bracelet = pink_stones // bracelets\nans = stones_per_bracelet"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "Betty also bought 140 shiny blue round stones. If 14 pieces of this stone is in each bracelet, how many bracelets of blue shiny round stones will there be?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\nblue_stones = 140\nstones_per_bracelet = 14\nbracelets = blue_stones // stones_per_bracelet\nans = bracelets",
            "# Python code, return ans\nblue_stones = 140\nstones_per_bracelet = 14\nbracelets = blue_stones // stones_per_bracelet\nans = bracelets",
            "# Python code, return ans\nblue_stones = 140\nstones_per_bracelet = 14\nbracelets = blue_stones // stones_per_bracelet\nans = bracelets"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "Brenda, Betty's sister, wanted to have 3 bracelets with star-shaped stones. She also bought 36 star-shaped stones from the local store and gave it to Betty. How many star-shaped stones will there be in each of the bracelet Betty makes for Brenda?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\ntotal_star_shaped_stones = 36\nbracelet_num = 3\nstones_per_bracelet = total_star_shaped_stones / bracelet_num\nans = stones_per_bracelet",
            "# Python code, return ans\ntotal_star_shaped_stones = 36\nbracelets_needed = 3\nstones_per_bracelet = total_star_shaped_stones / bracelets_needed\nans = stones_per_bracelet",
            "# Python code, return ans\ntotal_star_stones = 36\nbracelets = 3\nstar_stones_per_bracelet = total_star_stones / bracelets\nans = star_stones_per_bracelet"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Shannon, Brenda's neighbor, joined Brenda in making bracelets. She brought 48 heart-shaped stones and wanted to have 8 of this type of stone in each of the bracelet she makes. How many bracelets with heart-shaped stones can Shannon make?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nheart_stones = 48\nstones_per_bracelet = 8\nbracelets = heart_stones // stones_per_bracelet\nans = bracelets",
            "# Python code, return ans\nheart_stones = 48\nstones_per_bracelet = 8\nbracelets = heart_stones // stones_per_bracelet\nans = bracelets",
            "# Python code, return ans\nheart_stones = 48\nstones_per_bracelet = 8\nbracelets = heart_stones // stones_per_bracelet\nans = bracelets"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Brenda's mother made cookies for five. If she prepared 35 cookies and each of them had the same number of cookies, how many did each of them have?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ntotal_cookies = 35\npeople = 5\ncookies_per_person = total_cookies / people\nans = cookies_per_person",
            "# Python code, return ans\ntotal_cookies = 35\npeople = 5\ncookies_per_person = total_cookies / people\nans = cookies_per_person",
            "# Python code, return ans\ntotal_cookies = 35\npeople = 5\ncookies_per_person = total_cookies // people\nans = cookies_per_person"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "On the first Saturday of spring, Jane woke up early to enjoy the whole day and help with chores at home. Jane had been saving large empty cans to serve as pots for sunflowers. If she has 54 sunflower seeds and there are 9 cans, how many seeds will be placed in each can if she places an equal number of seeds in each can?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nsunflower_seeds = 54\ncans = 9\nseeds_per_can = sunflower_seeds / cans\nans = seeds_per_can",
            "# Python code, return ans\nsunflower_seeds = 54\ncans = 9\nseeds_per_can = sunflower_seeds // cans\nans = seeds_per_can",
            "# Python code, return ans\nsunflower_seeds = 54\ncans = 9\nseeds_per_can = sunflower_seeds // cans\nans = seeds_per_can"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Jane's mom picked cherry tomatoes from their backyard. If she gathered 56 cherry tomatoes and is about to place them in small jars which can contain 8 cherry tomatoes at a time, how many jars will she need?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ncherry_tomatoes = 56\ntomatoes_per_jar = 8\njars_needed = cherry_tomatoes // tomatoes_per_jar + (1 if cherry_tomatoes % tomatoes_per_jar > 0 else 0)\nans = jars_needed",
            "# Python code, return ans\ncherry_tomatoes = 56\ntomatoes_per_jar = 8\njars_needed = cherry_tomatoes // tomatoes_per_jar + (1 if cherry_tomatoes % tomatoes_per_jar > 0 else 0)\nans = jars_needed",
            "# Python code, return ans\ncherry_tomatoes = 56\ntomatoes_per_jar = 8\njars_needed = cherry_tomatoes // tomatoes_per_jar + (cherry_tomatoes % tomatoes_per_jar > 0)\nans = jars_needed"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Jane helped her mom prepare fresh lemonade. If each glass needs two lemons, how many glasses of fresh lemonade can she make if they have 18 lemons?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nlemons = 18\nlemons_per_glass = 2\nglasses_of_lemonade = lemons // lemons_per_glass\nans = glasses_of_lemonade",
            "# Python code, return ans\nlemons = 18\nlemons_per_glass = 2\nglasses_of_lemonade = lemons // lemons_per_glass\nans = glasses_of_lemonade",
            "# Python code, return ans\nlemons = 18\nlemons_per_glass = 2\nglasses_of_lemonade = lemons // lemons_per_glass\nans = glasses_of_lemonade"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Jane's dad brought home 24 marble potatoes. If Jane's mom made potato salad for lunch and served an equal amount of potatoes to Jane, herself and her husband, how many potatoes did each of them have?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ntotal_potatoes = 24\npeople = 3\npotatoes_each = total_potatoes / people\nans = potatoes_each",
            "# Python code, return ans\ntotal_potatoes = 24\npeople_num = 3\npotatoes_each = total_potatoes / people_num\nans = potatoes_each",
            "# Python code, return ans\ntotal_potatoes = 24\npeople_num = 3\npotatoes_each = total_potatoes / people_num\nans = potatoes_each"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "For dessert, Jane's mom prepared 12 pieces of bite-size cinnamon swirls. If the three of them ate an equal number of pieces of cinnamon swirls, how many pieces did Jane eat?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ntotal_cinnamon_swirls = 12\npeople = 3\nJane_cinnamon_swirls = total_cinnamon_swirls / people\nans = Jane_cinnamon_swirls",
            "# Python code, return ans\ntotal_cinnamon_swirls = 12\npeople_num = 3\nJane_cinnamon_swirls = total_cinnamon_swirls / people_num\nans = Jane_cinnamon_swirls",
            "# Python code, return ans\ntotal_cinnamon_swirls = 12\npeople = 3\nJane_cinnamon_swirls = total_cinnamon_swirls / people\nans = Jane_cinnamon_swirls"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Marian baked bread, cookies and pastries one Saturday at home for her family and friends this holiday season. She made 47 gingerbread cookies which she will distribute equally in tiny glass jars. If each jar is to contain six cookies each, how many cookies will not be placed in a jar?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ngingerbread_cookies = 47\ncookies_per_jar = 6\nnum_jars = gingerbread_cookies // cookies_per_jar\nremaining_cookies = gingerbread_cookies - (num_jars * cookies_per_jar)\nans = remaining_cookies",
            "# Python code, return ans\ntotal_cookies = 47\ncookies_per_jar = 6\njars_needed = total_cookies // cookies_per_jar\ncookies_not_in_jar = total_cookies - (jars_needed * cookies_per_jar)\nans = cookies_not_in_jar",
            "# Python code, return ans\ntotal_cookies = 47\ncookies_per_jar = 6\nnum_jars = total_cookies // cookies_per_jar\nremaining_cookies = total_cookies - (num_jars * cookies_per_jar)\nans = remaining_cookies"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Marian also prepared 59 croissants which she plans to give to her 8 neighbors. If each neighbor received and equal number of croissants, how many will be left with Marian?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\ncroissants = 59\nneighbors = 8\ncroissants_per_neighbor = croissants // neighbors\nleftover_croissants = croissants % neighbors\nans = leftover_croissants",
            "# Python code, return ans\ncroissants = 59\nneighbors = 8\ncroissants_per_neighbor = croissants // neighbors\nleftover_croissants = croissants % neighbors\nans = leftover_croissants",
            "# Python code, return ans\ncroissants = 59\nneighbors = 8\ncroissants_per_neighbor = croissants // neighbors\nleftover_croissants = croissants % neighbors\nans = leftover_croissants"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Marian also baked oatmeal cookies for her classmates. If she can place 12 cookies on a tray at a time, how many trays will she need to prepare 276 oatmeal cookies at a time?",
        "answer": 23,
        "generated": [
            "# Python code, return ans\ncookies_per_tray = 12\ntotal_cookies = 276\ntrays_needed = total_cookies // cookies_per_tray\nif total_cookies % cookies_per_tray != 0:\n    trays_needed += 1\nans = trays_needed",
            "# Python code, return ans\ncookies_per_tray = 12\ntotal_cookies = 276\ntrays_needed = total_cookies / cookies_per_tray\nans = trays_needed",
            "# Python code, return ans\ncookies_needed = 276\ncookies_per_tray = 12\ntrays_needed = cookies_needed / cookies_per_tray\nans = trays_needed"
        ],
        "results": [
            23.0,
            23.0,
            23.0
        ],
        "result_counter": {
            "23.0": 3
        },
        "prediction": 23.0
    },
    {
        "question": "Marian's friends were coming over that afternoon so she made 480 bite-sized pretzels. If one serving is equal to 12 pretzels, how many servings of bite-sized pretzels was Marian able to prepare?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\npretzels_made = 480\nserving_size = 12\ntotal_servings = pretzels_made // serving_size\nans = total_servings",
            "# Python code, return ans\npretzels_made = 480\nserving_size = 12\ntotal_servings = pretzels_made // serving_size\nans = total_servings",
            "# Python code, return ans\ntotal_pretzels = 480\nserving_size = 12\ntotal_servings = total_pretzels // serving_size\nans = total_servings"
        ],
        "results": [
            40.0,
            40.0,
            40.0
        ],
        "result_counter": {
            "40.0": 3
        },
        "prediction": 40.0
    },
    {
        "question": "Lastly, she baked 53 lemon cupcakes for the children living in the city orphanage. If two lemon cupcakes were left at home, how many boxes with 3 lemon cupcakes each were given away?",
        "answer": 17,
        "generated": [
            "# Python code, return ans\nlemon_cupcakes = 53\nleft_at_home = 2\ncupcakes_given_away = lemon_cupcakes - left_at_home\nboxes_given_away = cupcakes_given_away // 3\nans = boxes_given_away",
            "# Python code, return ans\nlemon_cupcakes = 53\nleft_at_home = 2\ncupcakes_given_away = lemon_cupcakes - left_at_home\nboxes_given_away = cupcakes_given_away // 3\nans = boxes_given_away",
            "# Python code, return ans\nlemon_cupcakes = 53\nleft_at_home = 2\ncupcakes_given_away = lemon_cupcakes - left_at_home\nboxes_given_away = cupcakes_given_away // 3\nans = boxes_given_away"
        ],
        "results": [
            17.0,
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 3
        },
        "prediction": 17.0
    },
    {
        "question": "Susie and her family woke up early on the first weekend of spring. They had a long list of activities for spring cleaning. Susie's mom prepared 74 carrot sticks for breakfast. If the carrots were served equally to 12 people, how many carrot sticks were left uneaten?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ncarrot_sticks = 74\npeople = 12\ncarrot_sticks_per_person = carrot_sticks // people\nuneaten_carrot_sticks = carrot_sticks - (carrot_sticks_per_person * people)\nans = uneaten_carrot_sticks",
            "# Python code, return ans\ntotal_carrot_sticks = 74\npeople = 12\ncarrot_sticks_per_person = total_carrot_sticks // people\nuneaten_carrot_sticks = total_carrot_sticks - (carrot_sticks_per_person * people)\nans = uneaten_carrot_sticks",
            "# Python code, return ans\ntotal_carrot_sticks = 74\npeople = 12\ncarrot_sticks_per_person = total_carrot_sticks // people\nuneaten_carrot_sticks = total_carrot_sticks - (carrot_sticks_per_person * people)\nans = uneaten_carrot_sticks"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Susie and her sister gathered all 98 of their teddy bears and placed them on the shelves in their bedroom. If every shelf can carry a maximum of 7 teddy bears, how many shelves will be filled?",
        "answer": 14,
        "generated": [
            "# Python code, return ans\ntotal_teddy_bears = 98\nteddy_bears_per_shelf = 7\nfilled_shelves = total_teddy_bears // teddy_bears_per_shelf\nans = filled_shelves",
            "# Python code, return ans\ntotal_teddy_bears = 98\nteddy_bears_per_shelf = 7\nfilled_shelves = total_teddy_bears // teddy_bears_per_shelf\nans = filled_shelves",
            "# Python code, return ans\ntotal_teddy_bears = 98\nteddy_bears_per_shelf = 7\nfilled_shelves = total_teddy_bears // teddy_bears_per_shelf\nans = filled_shelves"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "Susie's mother collected all family pictures and wanted to place all of them in an album. If an album can contain 20 pictures, how many albums will she need if there are 480 pictures?",
        "answer": 24,
        "generated": [
            "# Python code, return ans\ntotal_pictures = 480\nalbum_capacity = 20\nnum_albums = total_pictures // album_capacity\nif total_pictures % album_capacity != 0:\n    num_albums += 1\nans = num_albums",
            "# Python code, return ans\ntotal_pictures = 480\nalbum_capacity = 20\nnum_albums_needed = total_pictures // album_capacity + (1 if total_pictures % album_capacity > 0 else 0)\nans = num_albums_needed",
            "# Python code, return ans\ntotal_pictures = 480\nalbum_capacity = 20\nnum_albums = total_pictures // album_capacity\nif total_pictures % album_capacity != 0:\n    num_albums += 1\nans = num_albums"
        ],
        "results": [
            24.0,
            24.0,
            24.0
        ],
        "result_counter": {
            "24.0": 3
        },
        "prediction": 24.0
    },
    {
        "question": "Joe, Susie's brother, collected all 94 trading cards scattered in his room and placed them in boxes. If a full box can hold a maximum of 8 cards, how many boxes were fully filled?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\ntotal_cards = 94\ncards_per_box = 8\nfull_boxes = total_cards // cards_per_box\nans = full_boxes",
            "# Python code, return ans\ntrading_cards = 94\nbox_capacity = 8\nfully_filled_boxes = trading_cards // box_capacity\nans = fully_filled_boxes",
            "# Python code, return ans\ntotal_cards = 94\ncards_per_box = 8\nfull_boxes = total_cards // cards_per_box\nans = full_boxes"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "Joe, Susie's brother, collected all 94 trading cards scattered in his room and placed them in boxes. If a full box can hold a maximum of 8 cards, how many cards are there in the unfilled box?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ntotal_cards = 94\nbox_capacity = 8\nunfilled_box_cards = total_cards % box_capacity\nans = unfilled_box_cards",
            "# Python code, return ans\ntotal_cards = 94\ncards_per_box = 8\nunfilled_box_cards = total_cards % cards_per_box\nans = unfilled_box_cards",
            "# Python code, return ans\ntotal_cards = 94\ncards_per_box = 8\nunfilled_box_cards = total_cards % cards_per_box\nans = unfilled_box_cards"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Susie's father repaired the bookshelves in the reading room. If he has 210 books to be distributed equally on the 10 shelves he repaired, how many books will each shelf contain?",
        "answer": 21,
        "generated": [
            "# Python code, return ans\nbooks = 210\nshelves = 10\nbooks_per_shelf = books // shelves\nans = books_per_shelf",
            "# Python code, return ans\ntotal_books = 210\nshelves = 10\nbooks_per_shelf = total_books // shelves\nans = books_per_shelf",
            "# Python code, return ans\ntotal_books = 210\nnum_shelves = 10\nbooks_per_shelf = total_books // num_shelves\nans = books_per_shelf"
        ],
        "results": [
            21.0,
            21.0,
            21.0
        ],
        "result_counter": {
            "21.0": 3
        },
        "prediction": 21.0
    },
    {
        "question": "Matt and his friends were thinking of making Christmas decors for the clubhouse in their neighborhood. They are to repaint 350 balls in ten different colors. If they painted an equal number of balls for every color, how many balls are there for each color?",
        "answer": 35,
        "generated": [
            "# Python code, return ans\ntotal_balls = 350\ncolors = 10\nballs_per_color = total_balls / colors\nans = balls_per_color",
            "# Python code, return ans\ntotal_balls = 350\ncolors = 10\nballs_per_color = total_balls // colors\nans = balls_per_color",
            "# Python code, return ans\ntotal_balls = 350\ncolors = 10\nballs_per_color = total_balls // colors\nans = balls_per_color"
        ],
        "results": [
            35.0,
            35.0,
            35.0
        ],
        "result_counter": {
            "35.0": 3
        },
        "prediction": 35.0
    },
    {
        "question": "They had 119 matchboxes wrapped in colorful shiny wrappers. If they are to distribute the matchboxes equally to the 9 houses in the first block, how may matchboxes will each house receive?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\nmatchboxes = 119\nhouses = 9\nmatchboxes_per_house = matchboxes // houses\nans = matchboxes_per_house",
            "# Python code, return ans\ntotal_matchboxes = 119\nhouse_num = 9\nmatchboxes_per_house = total_matchboxes // house_num\nans = matchboxes_per_house",
            "# Python code, return ans\nmatchboxes = 119\nhouses = 9\nmatchboxes_per_house = matchboxes // houses\nans = matchboxes_per_house"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "They had 119 matchboxes wrapped in colorful shiny wrappers. If they are to distribute the matchboxes equally to the 9 houses in the first block, how many colorful matchboxes will they have left?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ntotal_matchboxes = 119\nhouses = 9\nmatchboxes_per_house = total_matchboxes // houses\nremaining_matchboxes = total_matchboxes % houses\nans = remaining_matchboxes",
            "# Python code, return ans\ntotal_matchboxes = 119\nhouses = 9\nmatchboxes_left = total_matchboxes % houses\nans = matchboxes_left",
            "# Python code, return ans\ntotal_matchboxes = 119\nhouses = 9\nmatchboxes_left = total_matchboxes % houses\nans = matchboxes_left"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "They also gathered paper to create some star-shaped papier-mache. If each star requires 20 pieces of paper and they had 680 pieces of paper, how many stars were they able to make?",
        "answer": 34,
        "generated": [
            "# Python code, return ans\npaper_pieces = 680\npieces_per_star = 20\nstars_made = paper_pieces // pieces_per_star\nans = stars_made",
            "# Python code, return ans\npaper_pieces = 680\npaper_per_star = 20\nstars_made = paper_pieces // paper_per_star\nans = stars_made",
            "# Python code, return ans\npaper_pieces = 680\npaper_per_star = 20\nstars_made = paper_pieces // paper_per_star\nans = stars_made"
        ],
        "results": [
            34.0,
            34.0,
            34.0
        ],
        "result_counter": {
            "34.0": 3
        },
        "prediction": 34.0
    },
    {
        "question": "Matt had 4 small cans of gold paint. If the 34 stars that they made were to be distributed equally to the cans of paint, how many stars will be left unpainted?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ntotal_stars = 34\ncans_of_paint = 4\nstars_per_can = total_stars // cans_of_paint\nunpainted_stars = total_stars - (stars_per_can * cans_of_paint)\nans = unpainted_stars",
            "# Python code, return ans\nstars = 34\ncans = 4\nstars_per_can = stars // cans\nunpainted_stars = stars % cans\nans = unpainted_stars",
            "# Python code, return ans\ncans_of_paint = 4\nstars = 34\nstars_per_can = stars // cans_of_paint\nunpainted_stars = stars - (stars_per_can * cans_of_paint)\nans = unpainted_stars"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Four girls were home all day one weekend preparing homemade treats. Anna made 33 blueberry cookies. If she shares this equally among her four friends, how many will each receive?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nAnna_cookies = 33\nfriends_num = 4\ncookies_per_friend = Anna_cookies // friends_num\nans = cookies_per_friend",
            "# Python code, return ans\nAnna_cookies = 33\nfriends_num = 4\ncookies_each_friend = Anna_cookies // friends_num\nans = cookies_each_friend",
            "# Python code, return ans\nAnna_cookies = 33\nfriends_num = 4\ncookies_per_friend = Anna_cookies // friends_num\nans = cookies_per_friend"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Britney brewed lemon tea that's enough to fill ten cups. If she serves this to her parents and three siblings and they share this equally, how many cups will each have?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ntotal_cups = 10\nfamily_members = 1 + 2 + 3  # Britney, her parents, and her three siblings\ncups_per_person = total_cups / family_members\nans = cups_per_person",
            "# Python code, return ans\ntotal_cups = 10\nfamily_members = 1 + 2 + 3  # Britney, her parents, and three siblings\ncups_per_person = total_cups / family_members\nans = cups_per_person",
            "# Python code, return ans\ntotal_cups = 10\nfamily_members = 1 + 2 + 3  # Britney, her parents, and three siblings\ncups_per_person = total_cups / family_members\nans = cups_per_person"
        ],
        "results": [
            1.6666666666666667,
            1.6666666666666667,
            1.6666666666666667
        ],
        "result_counter": {
            "1.6666666666666667": 3
        },
        "prediction": 1.6666666666666667
    },
    {
        "question": "Cristina baked 17 croissants. If she planned to serve this equally to her seven guests, how many will each have?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ncroissants = 17\nguests = 7\ncroissants_per_guest = croissants // guests\nans = croissants_per_guest",
            "# Python code, return ans\ncroissants = 17\nguests = 7\ncroissants_per_guest = croissants // guests\nans = croissants_per_guest",
            "# Python code, return ans\ncroissants = 17\nguests = 7\ncroissants_per_guest = croissants // guests\nans = croissants_per_guest"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Cristina baked 17 croissants. If Cristina's croissants were served equally among her seven guests, how many will Cristina have left?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\ncroissants_baked = 17\nguests = 7\ncroissants_left = croissants_baked % guests\nans = croissants_left",
            "# Python code, return ans\ncroissants = 17\nguests = 7\ncroissants_left = croissants % guests\nans = croissants_left",
            "# Python code, return ans\ncroissants = 17\nguests = 7\ncroissants_per_guest = croissants // guests\nleftover_croissants = croissants % guests\nans = leftover_croissants"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Drew prepared 61 servings of butterscotch. If she expects her 6 sweet-tooth guests to share the butterscotch among them equally, how many will be left unconsumed?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\nservings = 61\nguests = 6\nservings_per_guest = servings // guests\nunconsumed_servings = servings - (servings_per_guest * guests)\nans = unconsumed_servings",
            "# Python code, return ans\ntotal_servings = 61\nguests = 6\nservings_per_guest = total_servings // guests\nleftover_servings = total_servings - (servings_per_guest * guests)\nans = leftover_servings",
            "# Python code, return ans\ntotal_servings = 61\nguests = 6\nservings_per_guest = total_servings // guests\nleftover_servings = total_servings - (servings_per_guest * guests)\nans = leftover_servings"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "Allen, Charles, Lex and Shiela spent days reading books for their book report. The texts were printed very small so they were only able to cover very few pages a day. Allen read about the Solar System. He read 10 pages a day of a book which has 120 pages. How many days did it take Allen to finish reading the book?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nAllen_pages_per_day = 10\nbook_pages = 120\ndays_to_finish = book_pages / Allen_pages_per_day\nans = days_to_finish",
            "# Python code, return ans\npages_per_day = 10\ntotal_pages = 120\ndays_to_finish = total_pages / pages_per_day\nans = days_to_finish",
            "# Python code, return ans\npages_per_day = 10\ntotal_pages = 120\ndays_to_finish = total_pages / pages_per_day\nans = days_to_finish"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Charles was curious about Greek mythology and so he read 8 pages a day of a 96-page book entitled \"Greek Mythology: Fast Facts.\" How many days did it take Charles to finish the book?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nbook_pages = 96\npages_per_day = 8\ndays_to_finish = book_pages / pages_per_day\nans = days_to_finish",
            "# Python code, return ans\nbook_pages = 96\npages_per_day = 8\ndays_to_finish = book_pages / pages_per_day\nans = days_to_finish",
            "# Python code, return ans\nbook_pages = 96\npages_per_day = 8\ndays_to_finish = book_pages / pages_per_day\nans = days_to_finish"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Lex read a 420 page book about music and instruments. If he can read exactly 30 pages a day, how many days will it take Lex to finish reading the book?",
        "answer": 14,
        "generated": [
            "# Python code, return ans\nbook_pages = 420\npages_per_day = 30\ndays_to_finish = book_pages / pages_per_day\nans = days_to_finish",
            "# Python code, return ans\nbook_pages = 420\npages_per_day = 30\ndays_to_finish = book_pages / pages_per_day\nans = days_to_finish",
            "# Python code, return ans\nbook_pages = 420\npages_per_day = 30\ndays_to_finish = book_pages / pages_per_day\nans = days_to_finish"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "Lex read another book with 240 pages. If he read the same number of pages for 12 days, how many pages did he read every day?",
        "answer": 20,
        "generated": [
            "# Python code, return ans\nbook_pages = 240\ndays = 12\npages_per_day = book_pages / days\nans = pages_per_day",
            "# Python code, return ans\ntotal_pages = 240\ndays = 12\npages_per_day = total_pages / days\nans = pages_per_day",
            "# Python code, return ans\ntotal_pages = 240\ndays = 12\npages_per_day = total_pages / days\nans = pages_per_day"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "Shiela was into history of Asia. She can read 11 pages per hour of the book entitled \"Asia's History Made Easy\". If the encyclopedia has 143 pages, how many hours did it take Shiela to finish reading the book?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\npages_per_hour = 11\ntotal_pages = 143\ntime_to_finish = total_pages / pages_per_hour\nans = time_to_finish",
            "# Python code, return ans\npages_per_hour = 11\ntotal_pages = 143\nhours_to_finish = total_pages / pages_per_hour\nans = hours_to_finish",
            "# Python code, return ans\npages_per_hour = 11\ntotal_pages = 143\nhours_to_finish = total_pages / pages_per_hour\nans = hours_to_finish"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "Instead of buying from the store, Melody made Christmas cards for the elderly in a nursing home. She had 99 blue sequins which she plans to use as snowflakes for the cards. If she distributes the sequins equally to 12 cards, how many sequins will Melody have left?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nblue_sequins = 99\ncards = 12\nsequins_left = blue_sequins % cards\nans = sequins_left",
            "# Python code, return ans\nsequins = 99\ncards = 12\nsequins_per_card = sequins // cards\nsequins_left = sequins % cards\nans = sequins_left",
            "# Python code, return ans\nblue_sequins = 99\ncards = 12\nsequins_left = blue_sequins % cards\nans = sequins_left"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "She had 35 mistletoe stickers and wanted to place them equally in 8 cards. How many mistletoe stickers will she have left?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nstickers = 35\ncards = 8\nstickers_per_card = stickers // cards\nstickers_left = stickers % cards\nans = stickers_left",
            "# Python code, return ans\nstickers = 35\ncards = 8\nstickers_per_card = stickers // cards\nstickers_left = stickers - (stickers_per_card * cards)\nans = stickers_left",
            "# Python code, return ans\nstickers = 35\ncards = 8\nstickers_per_card = stickers // cards\nstickers_left = stickers % cards\nans = stickers_left"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Melody made 26 cut-outs of Christmas trees with red shiny balls. If she planned to paste 4 of this to the front cover of a certain number of cards, how many cards will she be able to make?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ncut_outs = 26\ncut_outs_per_card = 4\nnum_cards = cut_outs // cut_outs_per_card\nans = num_cards",
            "# Python code, return ans\ncut_outs = 26\ncut_outs_per_card = 4\ncards = cut_outs // cut_outs_per_card\nans = cards",
            "# Python code, return ans\ncut_outs = 26\ncut_outs_per_card = 4\ncards = cut_outs // cut_outs_per_card\nans = cards"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Melody made 26 cut-outs of Christmas trees with red shiny balls. If she planned to paste 4 of this to the front cover of a certain number of cards, how many cut-outs of Christmas trees will Melody have left?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ncut_outs = 26\ncut_outs_used = 4\ncut_outs_left = cut_outs - cut_outs_used\nans = cut_outs_left",
            "# Python code, return ans\ncut_outs = 26\nused_for_cover = 4\nleft_cut_outs = cut_outs - used_for_cover\nans = left_cut_outs",
            "# Python code, return ans\ncut_outs_total = 26\ncut_outs_used = 4\ncut_outs_left = cut_outs_total - cut_outs_used\nans = cut_outs_left"
        ],
        "results": [
            22.0,
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 3
        },
        "prediction": 22.0
    },
    {
        "question": "Melody printed 53 identical snowman drawings. If she was able to prepare cards with 4 identical snowman drawings each, how many cards was she able to prepare?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\nsnowman_drawings = 53\ndrawings_per_card = 4\ncards_prepared = snowman_drawings // drawings_per_card\nans = cards_prepared",
            "# Python code, return ans\nsnowman_drawings = 53\ndrawings_per_card = 4\ncards_prepared = snowman_drawings // drawings_per_card\nans = cards_prepared",
            "# Python code, return ans\nsnowman_drawings = 53\ndrawings_per_card = 4\ncards_prepared = snowman_drawings // drawings_per_card\nans = cards_prepared"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "Paul got a box of 479 crayons for his birthday. At the end of the school year, he only had 134 left. How many crayons had been lost or given away?",
        "answer": 345,
        "generated": [
            "# Python code, return ans\ninitial_crayons = 479\nremaining_crayons = 134\nlost_or_given_away_crayons = initial_crayons - remaining_crayons\nans = lost_or_given_away_crayons",
            "# Python code, return ans\ninitial_crayons = 479\nremaining_crayons = 134\nlost_or_given_away = initial_crayons - remaining_crayons\nans = lost_or_given_away",
            "# Python code, return ans\ntotal_crayons = 479\nremaining_crayons = 134\nlost_or_given_away_crayons = total_crayons - remaining_crayons\nans = lost_or_given_away_crayons"
        ],
        "results": [
            345.0,
            345.0,
            345.0
        ],
        "result_counter": {
            "345.0": 3
        },
        "prediction": 345.0
    },
    {
        "question": "179 birds were sitting in a tree. 38 more birds flew up to the tree. How many birds were there altogether in the tree?",
        "answer": 217,
        "generated": [
            "# Python code, return ans\nbirds_initial = 179\nbirds_flew_up = 38\ntotal_birds = birds_initial + birds_flew_up\nans = total_birds",
            "# Python code, return ans\nbirds_initial = 179\nbirds_flew_up = 38\ntotal_birds = birds_initial + birds_flew_up\nans = total_birds",
            "# Python code, return ans\nbirds_initial = 179\nbirds_flew_up = 38\ntotal_birds = birds_initial + birds_flew_up\nans = total_birds"
        ],
        "results": [
            217.0,
            217.0,
            217.0
        ],
        "result_counter": {
            "217.0": 3
        },
        "prediction": 217.0
    },
    {
        "question": "Cindy's mom baked 1215 cookies. Paul's dad baked 1112 cookies. They both brought them to school for a party. How many cookies did they have altogether?",
        "answer": 2327,
        "generated": [
            "# Python code, return ans\nCindy_cookies = 1215\nPaul_cookies = 1112\ntotal_cookies = Cindy_cookies + Paul_cookies\nans = total_cookies",
            "# Python code, return ans\nCindy_cookies = 1215\nPaul_cookies = 1112\ntotal_cookies = Cindy_cookies + Paul_cookies\nans = total_cookies",
            "# Python code, return ans\nCindy_cookies = 1215\nPaul_cookies = 1112\ntotal_cookies = Cindy_cookies + Paul_cookies\nans = total_cookies"
        ],
        "results": [
            2327.0,
            2327.0,
            2327.0
        ],
        "result_counter": {
            "2327.0": 3
        },
        "prediction": 2327.0
    },
    {
        "question": "Beth has 106 crayons. She gives 54 of them away to Jen. How many crayons does Beth have left?",
        "answer": 52,
        "generated": [
            "# Python code, return ans\nBeth_crayons = 106\ngiven_to_Jen = 54\nBeth_crayons_left = Beth_crayons - given_to_Jen\nans = Beth_crayons_left",
            "# Python code, return ans\nBeth_crayons = 106\ngiven_to_Jen = 54\nBeth_crayons_left = Beth_crayons - given_to_Jen\nans = Beth_crayons_left",
            "# Python code, return ans\nBeth_crayons = 106\ngiven_to_Jen = 54\nBeth_crayons_left = Beth_crayons - given_to_Jen\nans = Beth_crayons_left"
        ],
        "results": [
            52.0,
            52.0,
            52.0
        ],
        "result_counter": {
            "52.0": 3
        },
        "prediction": 52.0
    },
    {
        "question": "Misha has 34 dollars. How many dollars does she have to earn to have 47 dollars to buy a dog?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\nMisha_current_dollars = 34\ndollars_needed_for_dog = 47\ndollars_to_earn = dollars_needed_for_dog - Misha_current_dollars\nans = dollars_to_earn",
            "# Python code, return ans\nMisha_current_dollars = 34\ndollars_needed_for_dog = 47\ndollars_to_earn = dollars_needed_for_dog - Misha_current_dollars\nans = dollars_to_earn",
            "# Python code, return ans\nMisha_current_dollars = 34\ndollars_needed = 47\ndollars_to_earn = dollars_needed - Misha_current_dollars\nans = dollars_to_earn"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "James had 39 stickers. He got some more stickers for his birthday. Then he had 61 stickers. How many stickers did James get for his birthday?",
        "answer": 22,
        "generated": [
            "# Python code, return ans\ninitial_stickers = 39\nfinal_stickers = 61\nbirthday_stickers = final_stickers - initial_stickers\nans = birthday_stickers",
            "# Python code, return ans\ninitial_stickers = 39\nfinal_stickers = 61\nbirthday_stickers = final_stickers - initial_stickers\nans = birthday_stickers",
            "# Python code, return ans\ninitial_stickers = 39\nfinal_stickers = 61\nbirthday_stickers = final_stickers - initial_stickers\nans = birthday_stickers"
        ],
        "results": [
            22.0,
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 3
        },
        "prediction": 22.0
    },
    {
        "question": "There were 51 geese in the farmer's field. 28 of the geese flew away. How many geese were left in the field?",
        "answer": 23,
        "generated": [
            "# Python code, return ans\ngeese_initial = 51\ngeese_flew_away = 28\ngeese_left = geese_initial - geese_flew_away\nans = geese_left",
            "# Python code, return ans\ngeese_initial = 51\ngeese_flew_away = 28\ngeese_left = geese_initial - geese_flew_away\nans = geese_left",
            "# Python code, return ans\ngeese_initial = 51\ngeese_flew_away = 28\ngeese_left = geese_initial - geese_flew_away\nans = geese_left"
        ],
        "results": [
            23.0,
            23.0,
            23.0
        ],
        "result_counter": {
            "23.0": 3
        },
        "prediction": 23.0
    },
    {
        "question": "There were 27 boys and 35 girls on the playground at recess. How many children were on the playground at recess?",
        "answer": 62,
        "generated": [
            "# Python code, return ans\nboys = 27\ngirls = 35\ntotal_children = boys + girls\nans = total_children",
            "# Python code, return ans\nboys = 27\ngirls = 35\ntotal_children = boys + girls\nans = total_children",
            "# Python code, return ans\nboys_on_playground = 27\ngirls_on_playground = 35\ntotal_children = boys_on_playground + girls_on_playground\nans = total_children"
        ],
        "results": [
            62.0,
            62.0,
            62.0
        ],
        "result_counter": {
            "62.0": 3
        },
        "prediction": 62.0
    },
    {
        "question": "Paul had 28 strawberries in his basket. He picked 35 more strawberries. How many strawberries did he have then?",
        "answer": 63,
        "generated": [
            "# Python code, return ans\nstrawberries_initial = 28\nstrawberries_picked = 35\ntotal_strawberries = strawberries_initial + strawberries_picked\nans = total_strawberries",
            "# Python code, return ans\ninitial_strawberries = 28\npicked_strawberries = 35\ntotal_strawberries = initial_strawberries + picked_strawberries\nans = total_strawberries",
            "# Python code, return ans\ninitial_strawberries = 28\npicked_strawberries = 35\ntotal_strawberries = initial_strawberries + picked_strawberries\nans = total_strawberries"
        ],
        "results": [
            63.0,
            63.0,
            63.0
        ],
        "result_counter": {
            "63.0": 3
        },
        "prediction": 63.0
    },
    {
        "question": "Gary had 73 dollars. He spent 55 dollars on a pet snake. How many dollars did Gary have left?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\nGary_initial_money = 73\nGary_spent_money = 55\nGary_remaining_money = Gary_initial_money - Gary_spent_money\nans = Gary_remaining_money",
            "# Python code, return ans\nGary_initial_money = 73\nspent_on_snake = 55\nGary_remaining_money = Gary_initial_money - spent_on_snake\nans = Gary_remaining_money",
            "# Python code, return ans\nGary_initial_money = 73\nGary_spent_money = 55\nGary_remaining_money = Gary_initial_money - Gary_spent_money\nans = Gary_remaining_money"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "There are 46 birds perched on the branches of a tree. How many feet are there on the branches?",
        "answer": 92,
        "generated": [
            "# Python code, return ans\nbirds_on_tree = 46\nfeet_per_bird = 2\ntotal_feet = birds_on_tree * feet_per_bird\nans = total_feet",
            "# Python code, return ans\nbirds = 46\nfeet_per_bird = 2\ntotal_feet = birds * feet_per_bird\nans = total_feet",
            "# Python code, return ans\nbirds = 46\nfeet_per_bird = 2\ntotal_feet = birds * feet_per_bird\nans = total_feet"
        ],
        "results": [
            92.0,
            92.0,
            92.0
        ],
        "result_counter": {
            "92.0": 3
        },
        "prediction": 92.0
    },
    {
        "question": "I see 115 cows grazing in the pasture. How many legs do I see?",
        "answer": 460,
        "generated": [
            "# Python code, return ans\ncows = 115\nlegs_per_cow = 4\ntotal_legs = cows * legs_per_cow\nans = total_legs",
            "# Python code, return ans\ncows = 115\nlegs_per_cow = 4\ntotal_legs = cows * legs_per_cow\nans = total_legs",
            "# Python code, return ans\ncows = 115\nlegs_per_cow = 4\ntotal_legs = cows * legs_per_cow\nans = total_legs"
        ],
        "results": [
            460.0,
            460.0,
            460.0
        ],
        "result_counter": {
            "460.0": 3
        },
        "prediction": 460.0
    },
    {
        "question": "There are 397 butterflies. Each butterfly has 12 black dots and 17 yellow dots. How many black dots are there in all?",
        "answer": 4764,
        "generated": [
            "# Python code, return ans\nbutterflies = 397\nblack_dots_per_butterfly = 12\ntotal_black_dots = butterflies * black_dots_per_butterfly\nans = total_black_dots",
            "# Python code, return ans\nbutterflies = 397\nblack_dots_per_butterfly = 12\ntotal_black_dots = butterflies * black_dots_per_butterfly\nans = total_black_dots",
            "# Python code, return ans\nbutterfly_num = 397\nblack_dots_per_butterfly = 12\ntotal_black_dots = butterfly_num * black_dots_per_butterfly\nans = total_black_dots"
        ],
        "results": [
            4764.0,
            4764.0,
            4764.0
        ],
        "result_counter": {
            "4764.0": 3
        },
        "prediction": 4764.0
    },
    {
        "question": "At the zoo, I see 35 elephants and 48 tigers. How many legs do I see?",
        "answer": 332,
        "generated": [
            "# Python code, return ans\nelephants = 35\ntigers = 48\nelephant_legs = elephants * 4\ntiger_legs = tigers * 4\ntotal_legs = elephant_legs + tiger_legs\nans = total_legs",
            "# Python code, return ans\nelephants = 35\ntigers = 48\nelephant_legs = elephants * 4\ntiger_legs = tigers * 4\ntotal_legs = elephant_legs + tiger_legs\nans = total_legs",
            "# Python code, return ans\nelephant_num = 35\ntiger_num = 48\nelephant_legs = 4\ntiger_legs = 4\ntotal_legs = (elephant_num * elephant_legs) + (tiger_num * tiger_legs)\nans = total_legs"
        ],
        "results": [
            332.0,
            332.0,
            332.0
        ],
        "result_counter": {
            "332.0": 3
        },
        "prediction": 332.0
    },
    {
        "question": "In the park, I see 109 dogs. How many legs do I see?",
        "answer": 436,
        "generated": [
            "# Python code, return ans\ndogs = 109\nlegs_per_dog = 4\ntotal_legs = dogs * legs_per_dog\nans = total_legs",
            "# Python code, return ans\ndogs = 109\nlegs_per_dog = 4\ntotal_legs = dogs * legs_per_dog\nans = total_legs",
            "# Python code, return ans\ndogs = 109\nlegs_per_dog = 4\ntotal_legs = dogs * legs_per_dog\nans = total_legs"
        ],
        "results": [
            436.0,
            436.0,
            436.0
        ],
        "result_counter": {
            "436.0": 3
        },
        "prediction": 436.0
    },
    {
        "question": "If you had 37 bags of cookies with 19 cookies in each bag, how many cookies would you have?",
        "answer": 703,
        "generated": [
            "# Python code, return ans\nbags_of_cookies = 37\ncookies_in_each_bag = 19\ntotal_cookies = bags_of_cookies * cookies_in_each_bag\nans = total_cookies",
            "# Python code, return ans\nbags_of_cookies = 37\ncookies_in_each_bag = 19\ntotal_cookies = bags_of_cookies * cookies_in_each_bag\nans = total_cookies",
            "# Python code, return ans\nbags_of_cookies = 37\ncookies_per_bag = 19\ntotal_cookies = bags_of_cookies * cookies_per_bag\nans = total_cookies"
        ],
        "results": [
            703.0,
            703.0,
            703.0
        ],
        "result_counter": {
            "703.0": 3
        },
        "prediction": 703.0
    },
    {
        "question": "Each day you put a bag of garbage that weighs 55 pounds in the dumpster. How many pounds of garbage will you put in the dumpster in 4 weeks?",
        "answer": 1540,
        "generated": [
            "# Python code, return ans\ngarbage_per_day = 55\ndays_per_week = 7\nweeks = 4\ntotal_garbage = garbage_per_day * days_per_week * weeks\nans = total_garbage",
            "# Python code, return ans\ngarbage_per_day = 55\ndays_per_week = 7\nweeks = 4\ntotal_garbage = garbage_per_day * days_per_week * weeks\nans = total_garbage",
            "# Python code, return ans\ngarbage_per_day = 55\ndays_per_week = 7\nweeks = 4\ntotal_garbage = garbage_per_day * days_per_week * weeks\nans = total_garbage"
        ],
        "results": [
            1540.0,
            1540.0,
            1540.0
        ],
        "result_counter": {
            "1540.0": 3
        },
        "prediction": 1540.0
    },
    {
        "question": "If each piece costs 18 cents, how much would 136 pieces of bubble gum cost?",
        "answer": 2448,
        "generated": [
            "# Python code, return ans\npiece_cost = 18\ntotal_pieces = 136\ntotal_cost = piece_cost * total_pieces\nans = total_cost",
            "# Python code, return ans\npiece_cost = 18\npieces = 136\ntotal_cost = piece_cost * pieces\nans = total_cost",
            "# Python code, return ans\npiece_cost = 18\ntotal_pieces = 136\ntotal_cost = piece_cost * total_pieces\nans = total_cost"
        ],
        "results": [
            2448.0,
            2448.0,
            2448.0
        ],
        "result_counter": {
            "2448.0": 3
        },
        "prediction": 2448.0
    },
    {
        "question": "This year on your 11th birthday your mother tells you that she is exactly 3 times as old as you are. How old is she?",
        "answer": 33,
        "generated": [
            "# Python code, return ans\nyour_age = 11\nmother_age = 3 * your_age\nans = mother_age",
            "# Python code, return ans\nyour_age = 11\nmother_age = 3 * your_age\nans = mother_age",
            "# Python code, return ans\nyour_age = 11\nmother_age = 3 * your_age\nans = mother_age"
        ],
        "results": [
            33.0,
            33.0,
            33.0
        ],
        "result_counter": {
            "33.0": 3
        },
        "prediction": 33.0
    },
    {
        "question": "For the fifth grade play, the chairs have been put into 27 rows with 16 chairs in each row. How many chairs have been put out for the play?",
        "answer": 432,
        "generated": [
            "# Python code, return ans\nrows = 27\nchairs_per_row = 16\ntotal_chairs = rows * chairs_per_row\nans = total_chairs",
            "# Python code, return ans\nrows = 27\nchairs_per_row = 16\ntotal_chairs = rows * chairs_per_row\nans = total_chairs",
            "# Python code, return ans\nrows = 27\nchairs_per_row = 16\ntotal_chairs = rows * chairs_per_row\nans = total_chairs"
        ],
        "results": [
            432.0,
            432.0,
            432.0
        ],
        "result_counter": {
            "432.0": 3
        },
        "prediction": 432.0
    },
    {
        "question": "A baker has a pan of fudge that measures 18 inches on one side and 29 inches on another side. If the fudge is cut into square pieces 1 inch on each side, how many pieces of fudge does the pan hold?",
        "answer": 522,
        "generated": [
            "# Python code, return ans\nfudge_length = 18\nfudge_width = 29\nfudge_pieces = fudge_length * fudge_width\nans = fudge_pieces",
            "# Python code, return ans\nfudge_pan_length = 18\nfudge_pan_width = 29\nfudge_piece_size = 1\ntotal_pieces = (fudge_pan_length * fudge_pan_width) / (fudge_piece_size**2)\nans = total_pieces",
            "# Python code, return ans\npan_length = 18\npan_width = 29\nfudge_piece_size = 1\ntotal_pieces = (pan_length * pan_width) / (fudge_piece_size ** 2)\nans = total_pieces"
        ],
        "results": [
            522.0,
            522.0,
            522.0
        ],
        "result_counter": {
            "522.0": 3
        },
        "prediction": 522.0
    },
    {
        "question": "The Ferris wheel in Paradise Park has 14 seats. Each seat can hold 6 people. How many people can ride the Ferris wheel at the same time?",
        "answer": 84,
        "generated": [
            "# Python code, return ans\nseats = 14\npeople_per_seat = 6\ntotal_people = seats * people_per_seat\nans = total_people",
            "# Python code, return ans\nseats = 14\npeople_per_seat = 6\ntotal_people = seats * people_per_seat\nans = total_people",
            "# Python code, return ans\nseats = 14\npeople_per_seat = 6\ntotal_people = seats * people_per_seat\nans = total_people"
        ],
        "results": [
            84.0,
            84.0,
            84.0
        ],
        "result_counter": {
            "84.0": 3
        },
        "prediction": 84.0
    },
    {
        "question": "A garden has 52 rows and 15 columns of bean plants. How many plants are there in all?",
        "answer": 780,
        "generated": [
            "# Python code, return ans\nrows = 52\ncolumns = 15\ntotal_plants = rows * columns\nans = total_plants",
            "# Python code, return ans\nrows = 52\ncolumns = 15\ntotal_plants = rows * columns\nans = total_plants",
            "# Python code, return ans\nrows = 52\ncolumns = 15\ntotal_plants = rows * columns\nans = total_plants"
        ],
        "results": [
            780.0,
            780.0,
            780.0
        ],
        "result_counter": {
            "780.0": 3
        },
        "prediction": 780.0
    },
    {
        "question": "A sandbox is 312 centimeters long and 146 centimeters wide. How many square centimeters of ground does the sandbox cover?",
        "answer": 45552,
        "generated": [
            "# Python code, return ans\nsandbox_length = 312\nsandbox_width = 146\nsandbox_area = sandbox_length * sandbox_width\nans = sandbox_area",
            "# Python code, return ans\nsandbox_length = 312\nsandbox_width = 146\nsandbox_area = sandbox_length * sandbox_width\nans = sandbox_area",
            "# Python code, return ans\nsandbox_length = 312\nsandbox_width = 146\nsandbox_area = sandbox_length * sandbox_width\nans = sandbox_area"
        ],
        "results": [
            45552.0,
            45552.0,
            45552.0
        ],
        "result_counter": {
            "45552.0": 3
        },
        "prediction": 45552.0
    },
    {
        "question": "Sarah picked 45 apples. Her brother picked 9 apples. How many times as many apples did Sarah pick?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nSarah_apples = 45\nbrother_apples = 9\ntimes_more_apples = Sarah_apples / brother_apples\nans = times_more_apples",
            "# Python code, return ans\nSarah_apples = 45\nbrother_apples = 9\ntimes_more_apples = Sarah_apples / brother_apples\nans = times_more_apples",
            "# Python code, return ans\nSarah_apples = 45\nbrother_apples = 9\ntimes_more_apples = Sarah_apples / brother_apples\nans = times_more_apples"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "If you can choose between a regular or waffle cone and vanilla, strawberry, caramel, and bubblegum flavored ice cream, how many different ways can ice cream be ordered?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ncone_types = 2\nflavors = 4\ntotal_combinations = cone_types * flavors\nans = total_combinations",
            "# Python code, return ans\ncone_types = 2\nflavors = 4\ntotal_combinations = cone_types * flavors\nans = total_combinations",
            "# Python code, return ans\ncone_types = 2\nflavors = 4\ntotal_combinations = cone_types * flavors\nans = total_combinations"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "There are 261 fishbowls. Each fishbowl has 23 fish. How many fish are there?",
        "answer": 6003,
        "generated": [
            "# Python code, return ans\nfishbowl_num = 261\nfish_per_bowl = 23\ntotal_fish = fishbowl_num * fish_per_bowl\nans = total_fish",
            "# Python code, return ans\nfishbowls = 261\nfish_per_bowl = 23\ntotal_fish = fishbowls * fish_per_bowl\nans = total_fish",
            "# Python code, return ans\nfishbowl_num = 261\nfish_per_bowl = 23\ntotal_fish = fishbowl_num * fish_per_bowl\nans = total_fish"
        ],
        "results": [
            6003.0,
            6003.0,
            6003.0
        ],
        "result_counter": {
            "6003.0": 3
        },
        "prediction": 6003.0
    },
    {
        "question": "We ordered 21 pizzas. Each pizza has 8 slices. How many slices of pizza are there altogether?",
        "answer": 168,
        "generated": [
            "# Python code, return ans\npizzas_ordered = 21\nslices_per_pizza = 8\ntotal_slices = pizzas_ordered * slices_per_pizza\nans = total_slices",
            "# Python code, return ans\npizzas = 21\nslices_per_pizza = 8\ntotal_slices = pizzas * slices_per_pizza\nans = total_slices",
            "# Python code, return ans\npizzas = 21\nslices_per_pizza = 8\ntotal_slices = pizzas * slices_per_pizza\nans = total_slices"
        ],
        "results": [
            168.0,
            168.0,
            168.0
        ],
        "result_counter": {
            "168.0": 3
        },
        "prediction": 168.0
    },
    {
        "question": "Chris gave his 35 friends 12 pieces of candy each. How many pieces of candy did Chris give his friends?",
        "answer": 420,
        "generated": [
            "# Python code, return ans\nfriends = 35\ncandy_each = 12\ntotal_candy = friends * candy_each\nans = total_candy",
            "# Python code, return ans\nfriends = 35\ncandy_each = 12\ntotal_candy = friends * candy_each\nans = total_candy",
            "# Python code, return ans\nfriend_num = 35\ncandy_each = 12\ntotal_candy = friend_num * candy_each\nans = total_candy"
        ],
        "results": [
            420.0,
            420.0,
            420.0
        ],
        "result_counter": {
            "420.0": 3
        },
        "prediction": 420.0
    },
    {
        "question": "Emily collected eggs from the hen and put them into 303 baskets. She put 28 eggs into each basket. How many eggs did Emily collect?",
        "answer": 8484,
        "generated": [
            "# Python code, return ans\nbaskets = 303\neggs_per_basket = 28\ntotal_eggs = baskets * eggs_per_basket\nans = total_eggs",
            "# Python code, return ans\nbaskets = 303\neggs_per_basket = 28\ntotal_eggs = baskets * eggs_per_basket\nans = total_eggs",
            "# Python code, return ans\nbaskets = 303\neggs_per_basket = 28\ntotal_eggs = baskets * eggs_per_basket\nans = total_eggs"
        ],
        "results": [
            8484.0,
            8484.0,
            8484.0
        ],
        "result_counter": {
            "8484.0": 3
        },
        "prediction": 8484.0
    },
    {
        "question": "There were 150 book shelves. Each book shelf had 15 books. How many books were on the shelves?",
        "answer": 2250,
        "generated": [
            "# Python code, return ans\nbook_shelves = 150\nbooks_per_shelf = 15\ntotal_books = book_shelves * books_per_shelf\nans = total_books",
            "# Python code, return ans\nbook_shelves = 150\nbooks_per_shelf = 15\ntotal_books = book_shelves * books_per_shelf\nans = total_books",
            "# Python code, return ans\nbook_shelves = 150\nbooks_per_shelf = 15\ntotal_books = book_shelves * books_per_shelf\nans = total_books"
        ],
        "results": [
            2250.0,
            2250.0,
            2250.0
        ],
        "result_counter": {
            "2250.0": 3
        },
        "prediction": 2250.0
    },
    {
        "question": "I see 23 boys. How many eyes do I see?",
        "answer": 46,
        "generated": [
            "# Python code, return ans\nboys = 23\neyes_per_boy = 2\ntotal_eyes = boys * eyes_per_boy\nans = total_eyes",
            "# Python code, return ans\nboys = 23\neyes_per_boy = 2\ntotal_eyes = boys * eyes_per_boy\nans = total_eyes",
            "# Python code, return ans\nboys = 23\neyes_per_boy = 2\ntotal_eyes = boys * eyes_per_boy\nans = total_eyes"
        ],
        "results": [
            46.0,
            46.0,
            46.0
        ],
        "result_counter": {
            "46.0": 3
        },
        "prediction": 46.0
    },
    {
        "question": "I see 105 puppies. How many ears do they have?",
        "answer": 210,
        "generated": [
            "# Python code, return ans\npuppies = 105\nears_per_puppy = 2\ntotal_ears = puppies * ears_per_puppy\nans = total_ears",
            "# Python code, return ans\npuppies = 105\nears_per_puppy = 2\ntotal_ears = puppies * ears_per_puppy\nans = total_ears",
            "# Python code, return ans\npuppies = 105\nears_per_puppy = 2\ntotal_ears = puppies * ears_per_puppy\nans = total_ears"
        ],
        "results": [
            210.0,
            210.0,
            210.0
        ],
        "result_counter": {
            "210.0": 3
        },
        "prediction": 210.0
    },
    {
        "question": "I see 349 frogs. How many legs do they have?",
        "answer": 1396,
        "generated": [
            "# Python code, return ans\nfrogs = 349\nlegs_per_frog = 4\ntotal_legs = frogs * legs_per_frog\nans = total_legs",
            "# Python code, return ans\nfrog_num = 349\nlegs_per_frog = 4\ntotal_legs = frog_num * legs_per_frog\nans = total_legs",
            "# Python code, return ans\nfrog_count = 349\nlegs_per_frog = 4\ntotal_legs = frog_count * legs_per_frog\nans = total_legs"
        ],
        "results": [
            1396.0,
            1396.0,
            1396.0
        ],
        "result_counter": {
            "1396.0": 3
        },
        "prediction": 1396.0
    },
    {
        "question": "There are 84 leaves. There are 139 ladybugs on each leaf. How many ladybugs are there in all?",
        "answer": 11676,
        "generated": [
            "# Python code, return ans\nleaves = 84\nladybugs_per_leaf = 139\ntotal_ladybugs = leaves * ladybugs_per_leaf\nans = total_ladybugs",
            "# Python code, return ans\nleaves = 84\nladybugs_per_leaf = 139\ntotal_ladybugs = leaves * ladybugs_per_leaf\nans = total_ladybugs",
            "# Python code, return ans\nleaves = 84\nladybugs_per_leaf = 139\ntotal_ladybugs = leaves * ladybugs_per_leaf\nans = total_ladybugs"
        ],
        "results": [
            11676.0,
            11676.0,
            11676.0
        ],
        "result_counter": {
            "11676.0": 3
        },
        "prediction": 11676.0
    },
    {
        "question": "There are 37 baskets. There are 17 apples in each basket. How many apples are there in all?",
        "answer": 629,
        "generated": [
            "# Python code, return ans\nbaskets = 37\napples_per_basket = 17\ntotal_apples = baskets * apples_per_basket\nans = total_apples",
            "# Python code, return ans\nbaskets = 37\napples_per_basket = 17\ntotal_apples = baskets * apples_per_basket\nans = total_apples",
            "# Python code, return ans\nbaskets = 37\napples_per_basket = 17\ntotal_apples = baskets * apples_per_basket\nans = total_apples"
        ],
        "results": [
            629.0,
            629.0,
            629.0
        ],
        "result_counter": {
            "629.0": 3
        },
        "prediction": 629.0
    },
    {
        "question": "There are 544 pots. Each pot has 32 flowers in it. How many flowers are there in all?",
        "answer": 17408,
        "generated": [
            "# Python code, return ans\npots = 544\nflowers_per_pot = 32\ntotal_flowers = pots * flowers_per_pot\nans = total_flowers",
            "# Python code, return ans\npots = 544\nflowers_per_pot = 32\ntotal_flowers = pots * flowers_per_pot\nans = total_flowers",
            "# Python code, return ans\npots = 544\nflowers_per_pot = 32\ntotal_flowers = pots * flowers_per_pot\nans = total_flowers"
        ],
        "results": [
            17408.0,
            17408.0,
            17408.0
        ],
        "result_counter": {
            "17408.0": 3
        },
        "prediction": 17408.0
    },
    {
        "question": "Your class is having a pizza party. You buy 5 pizzas. Each pizza has 4 slices. How many slices is that altogether?",
        "answer": 20,
        "generated": [
            "# Python code, return ans\npizza_num = 5\nslices_per_pizza = 4\ntotal_slices = pizza_num * slices_per_pizza\nans = total_slices",
            "# Python code, return ans\npizzas = 5\nslices_per_pizza = 4\ntotal_slices = pizzas * slices_per_pizza\nans = total_slices",
            "# Python code, return ans\npizzas = 5\nslices_per_pizza = 4\ntotal_slices = pizzas * slices_per_pizza\nans = total_slices"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "Beth has 4 packs of crayons. Each pack has 10 crayons in it. She also has 6 extra crayons. How many crayons does Beth have altogether?",
        "answer": 46,
        "generated": [
            "# Python code, return ans\npacks_of_crayons = 4\ncrayons_in_pack = 10\nextra_crayons = 6\ntotal_crayons = (packs_of_crayons * crayons_in_pack) + extra_crayons\nans = total_crayons",
            "# Python code, return ans\npacks_of_crayons = 4\ncrayons_per_pack = 10\nextra_crayons = 6\ntotal_crayons = (packs_of_crayons * crayons_per_pack) + extra_crayons\nans = total_crayons",
            "# Python code, return ans\npacks_of_crayons = 4\ncrayons_per_pack = 10\nextra_crayons = 6\ntotal_crayons = (packs_of_crayons * crayons_per_pack) + extra_crayons\nans = total_crayons"
        ],
        "results": [
            46.0,
            46.0,
            46.0
        ],
        "result_counter": {
            "46.0": 3
        },
        "prediction": 46.0
    },
    {
        "question": "Ted has 15 candy bars. He wants to put them into 5 bags so there are the same number of candy bars in each bag. How many candy bars should go in each bag?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\ntotal_candy_bars = 15\nnum_of_bags = 5\ncandy_bars_per_bag = total_candy_bars / num_of_bags\nans = candy_bars_per_bag",
            "# Python code, return ans\ncandy_bars = 15\nbags = 5\ncandy_bars_per_bag = candy_bars / bags\nans = candy_bars_per_bag",
            "# Python code, return ans\ncandy_bars = 15\nbags = 5\ncandy_bars_per_bag = candy_bars / bags\nans = candy_bars_per_bag"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "A candy store has 6 boxes of chocolates. Each box has 500 pieces. How many pieces are there altogether in the 6 boxes?",
        "answer": 3000,
        "generated": [
            "# Python code, return ans\nboxes = 6\npieces_per_box = 500\ntotal_pieces = boxes * pieces_per_box\nans = total_pieces",
            "# Python code, return ans\nboxes = 6\npieces_per_box = 500\ntotal_pieces = boxes * pieces_per_box\nans = total_pieces",
            "# Python code, return ans\nboxes = 6\npieces_per_box = 500\ntotal_pieces = boxes * pieces_per_box\nans = total_pieces"
        ],
        "results": [
            3000.0,
            3000.0,
            3000.0
        ],
        "result_counter": {
            "3000.0": 3
        },
        "prediction": 3000.0
    },
    {
        "question": "You want to share 34 pencils among 6 friends. How many would each friend get?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\npencils = 34\nfriends = 6\npencils_per_friend = pencils // friends\nans = pencils_per_friend",
            "# Python code, return ans\npencils = 34\nfriends = 6\npencils_per_friend = pencils // friends\nans = pencils_per_friend",
            "# Python code, return ans\npencils = 34\nfriends = 6\npencils_per_friend = pencils // friends\nans = pencils_per_friend"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Martha bought 18 small cakes. She has 3 children. She would like to divide the cakes among her children so that each child gets the same amount. How many cakes would each child get?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ncakes = 18\nchildren = 3\ncakes_per_child = cakes // children\nans = cakes_per_child",
            "# Python code, return ans\ncakes = 18\nchildren = 3\ncakes_per_child = cakes // children\nans = cakes_per_child",
            "# Python code, return ans\ncakes = 18\nchildren = 3\ncakes_per_child = cakes / children\nans = cakes_per_child"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Julian is writing a comic book. His story has 143 frames in all. If he wants to put exactly 11 frames on each page, how many pages would he have?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\ntotal_frames = 143\nframes_per_page = 11\ntotal_pages = total_frames // frames_per_page\nif total_frames % frames_per_page != 0:\n    total_pages += 1\nans = total_pages",
            "# Python code, return ans\ntotal_frames = 143\nframes_per_page = 11\npages_needed = total_frames // frames_per_page\nif total_frames % frames_per_page != 0:\n    pages_needed += 1\nans = pages_needed",
            "# Python code, return ans\ntotal_frames = 143\nframes_per_page = 11\ntotal_pages = total_frames // frames_per_page\nif total_frames % frames_per_page != 0:\n    total_pages += 1\nans = total_pages"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "Jesse's room is 12 feet long and 8 feet wide. How much carpet does she need to cover the whole floor?",
        "answer": 96,
        "generated": [
            "# Python code, return ans\nroom_length = 12\nroom_width = 8\ncarpet_needed = room_length * room_width\nans = carpet_needed",
            "# Python code, return ans\nroom_length = 12\nroom_width = 8\ncarpet_needed = room_length * room_width\nans = carpet_needed",
            "# Python code, return ans\nroom_length = 12\nroom_width = 8\ncarpet_needed = room_length * room_width\nans = carpet_needed"
        ],
        "results": [
            96.0,
            96.0,
            96.0
        ],
        "result_counter": {
            "96.0": 3
        },
        "prediction": 96.0
    },
    {
        "question": "There are 5 people on the Green Bay High track team. If a relay race is 150 meters long, and all 5 team members participate, how far will each team member have to run?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\nrelay_race_length = 150\nteam_members = 5\ndistance_each_member = relay_race_length / team_members\nans = distance_each_member",
            "# Python code, return ans\nrelay_race_length = 150\nteam_members = 5\ndistance_per_member = relay_race_length / team_members\nans = distance_per_member",
            "# Python code, return ans\nrelay_race_length = 150\nteam_members = 5\ndistance_per_member = relay_race_length / team_members\nans = distance_per_member"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "It takes 4 feet of cotton to make a tee-shirt. How many tee-shirts can be made with 60 feet of material?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\nmaterial = 60\ncotton_per_tshirt = 4\ntshirt_num = material // cotton_per_tshirt\nans = tshirt_num",
            "# Python code, return ans\ncotton_per_tshirt = 4\ntotal_cotton = 60\ntshirt_num = total_cotton // cotton_per_tshirt\nans = tshirt_num",
            "# Python code, return ans\nmaterial_length = 60\ntee_shirt_length = 4\nnum_tee_shirts = material_length // tee_shirt_length\nans = num_tee_shirts"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "Lukas averages 12 points per game in basketball. How many points would he score in 5 games?",
        "answer": 60,
        "generated": [
            "# Python code, return ans\naverage_points_per_game = 12\ngames_played = 5\ntotal_points = average_points_per_game * games_played\nans = total_points",
            "# Python code, return ans\naverage_points = 12\ngames = 5\ntotal_points = average_points * games\nans = total_points",
            "# Python code, return ans\naverage_points_per_game = 12\ngames_played = 5\ntotal_points = average_points_per_game * games_played\nans = total_points"
        ],
        "results": [
            60.0,
            60.0,
            60.0
        ],
        "result_counter": {
            "60.0": 3
        },
        "prediction": 60.0
    },
    {
        "question": "My car gets 20 miles per gallon. How many miles can I drive on 5 gallons of gas?",
        "answer": 100,
        "generated": [
            "# Python code, return ans\nmiles_per_gallon = 20\ngallons = 5\ntotal_miles = miles_per_gallon * gallons\nans = total_miles",
            "# Python code, return ans\nmiles_per_gallon = 20\ngallons = 5\ntotal_miles = miles_per_gallon * gallons\nans = total_miles",
            "# Python code, return ans\nmiles_per_gallon = 20\ngallons = 5\ntotal_miles = miles_per_gallon * gallons\nans = total_miles"
        ],
        "results": [
            100.0,
            100.0,
            100.0
        ],
        "result_counter": {
            "100.0": 3
        },
        "prediction": 100.0
    },
    {
        "question": "It takes 7 minutes to bake one pan of cookies. How long will it take to bake 4 pans of cookies?",
        "answer": 28,
        "generated": [
            "# Python code, return ans\ntime_per_pan = 7\ntotal_pans = 4\ntotal_time = time_per_pan * total_pans\nans = total_time",
            "# Python code, return ans\nminutes_per_pan = 7\ntotal_pans = 4\ntotal_minutes = minutes_per_pan * total_pans\nans = total_minutes",
            "# Python code, return ans\nminutes_per_pan = 7\npans = 4\ntotal_minutes = minutes_per_pan * pans\nans = total_minutes"
        ],
        "results": [
            28.0,
            28.0,
            28.0
        ],
        "result_counter": {
            "28.0": 3
        },
        "prediction": 28.0
    },
    {
        "question": "My car gets 20 miles per gallon of gas. If Grandma's house is 100 miles away, how many gallons of gas would it take to get to her house?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nmiles_per_gallon = 20\ndistance_to_grandma = 100\ngallons_needed = distance_to_grandma / miles_per_gallon\nans = gallons_needed",
            "# Python code, return ans\nmiles_per_gallon = 20\ndistance_to_Grandma = 100\ngallons_needed = distance_to_Grandma / miles_per_gallon\nans = gallons_needed",
            "# Python code, return ans\nmiles_per_gallon = 20\ndistance_to_Grandma = 100\ngallons_needed = distance_to_Grandma / miles_per_gallon\nans = gallons_needed"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Everyday I eat 3 servings of veggies. How many servings of veggies do I eat in one week?",
        "answer": 21,
        "generated": [
            "# Python code, return ans\nservings_per_day = 3\ndays_in_week = 7\ntotal_servings = servings_per_day * days_in_week\nans = total_servings",
            "# Python code, return ans\nservings_per_day = 3\ndays_in_week = 7\ntotal_servings = servings_per_day * days_in_week\nans = total_servings",
            "# Python code, return ans\nservings_per_day = 3\ndays_in_week = 7\ntotal_servings = servings_per_day * days_in_week\nans = total_servings"
        ],
        "results": [
            21.0,
            21.0,
            21.0
        ],
        "result_counter": {
            "21.0": 3
        },
        "prediction": 21.0
    },
    {
        "question": "Melissa scored 120 points in each game. How many points did she score in 10 games?",
        "answer": 1200,
        "generated": [
            "# Python code, return ans\npoints_per_game = 120\ngames_played = 10\ntotal_points = points_per_game * games_played\nans = total_points",
            "# Python code, return ans\npoints_per_game = 120\ngames_played = 10\ntotal_points = points_per_game * games_played\nans = total_points",
            "# Python code, return ans\npoints_per_game = 120\ngames_played = 10\ntotal_points = points_per_game * games_played\nans = total_points"
        ],
        "results": [
            1200.0,
            1200.0,
            1200.0
        ],
        "result_counter": {
            "1200.0": 3
        },
        "prediction": 1200.0
    },
    {
        "question": "Our watermelons have 100 seeds each. If we have 4 watermelons, how many seeds should there be when all seeds are taken out of the watermelons?",
        "answer": 400,
        "generated": [
            "# Python code, return ans\nseeds_per_watermelon = 100\nwatermelon_num = 4\ntotal_seeds = seeds_per_watermelon * watermelon_num\nans = total_seeds",
            "# Python code, return ans\nseeds_per_watermelon = 100\nwatermelon_num = 4\ntotal_seeds = seeds_per_watermelon * watermelon_num\nans = total_seeds",
            "# Python code, return ans\nseeds_per_watermelon = 100\nwatermelon_num = 4\ntotal_seeds = seeds_per_watermelon * watermelon_num\nans = total_seeds"
        ],
        "results": [
            400.0,
            400.0,
            400.0
        ],
        "result_counter": {
            "400.0": 3
        },
        "prediction": 400.0
    },
    {
        "question": "63 people are going to the zoo. There are 3 cars to take people to the zoo. How many will go in each car if the same number go in each car?",
        "answer": 21,
        "generated": [
            "# Python code, return ans\npeople_num = 63\ncar_num = 3\npeople_per_car = people_num // car_num\nans = people_per_car",
            "# Python code, return ans\npeople = 63\ncars = 3\npeople_per_car = people // cars\nans = people_per_car",
            "# Python code, return ans\ntotal_people = 63\ntotal_cars = 3\npeople_per_car = total_people // total_cars\nans = people_per_car"
        ],
        "results": [
            21.0,
            21.0,
            21.0
        ],
        "result_counter": {
            "21.0": 3
        },
        "prediction": 21.0
    },
    {
        "question": "I have 80 cents to buy candy. If each gumdrop costs 4 cents, how many gumdrops can I buy?",
        "answer": 20,
        "generated": [
            "# Python code, return ans\ntotal_cents = 80\ngumdrop_cost = 4\ngumdrops_can_buy = total_cents // gumdrop_cost\nans = gumdrops_can_buy",
            "# Python code, return ans\ntotal_cents = 80\ngumdrop_cost = 4\ngumdrops_can_buy = total_cents // gumdrop_cost\nans = gumdrops_can_buy",
            "# Python code, return ans\ntotal_cents = 80\ngumdrop_cost = 4\ngumdrops_can_buy = total_cents // gumdrop_cost\nans = gumdrops_can_buy"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "Maggi had 3 packages of cupcakes. There are 4 cupcakes in each package. She ate 5 cupcakes. How many are left?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\npackages = 3\ncupcakes_per_package = 4\ntotal_cupcakes = packages * cupcakes_per_package\neaten_cupcakes = 5\nleft_cupcakes = total_cupcakes - eaten_cupcakes\nans = left_cupcakes",
            "# Python code, return ans\npackages = 3\ncupcakes_per_package = 4\ntotal_cupcakes = packages * cupcakes_per_package\ncupcakes_eaten = 5\ncupcakes_left = total_cupcakes - cupcakes_eaten\nans = cupcakes_left",
            "# Python code, return ans\npackages = 3\ncupcakes_per_package = 4\ntotal_cupcakes = packages * cupcakes_per_package\ncupcakes_eaten = 5\ncupcakes_left = total_cupcakes - cupcakes_eaten\nans = cupcakes_left"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "58 children are taking a bus to the zoo. They sit 2 children in every seat. How many seats will the children need in all?",
        "answer": 29,
        "generated": [
            "# Python code, return ans\nchildren = 58\nchildren_per_seat = 2\ntotal_seats = children / children_per_seat\nans = total_seats",
            "# Python code, return ans\nchildren = 58\nchildren_per_seat = 2\ntotal_seats = children / children_per_seat\nans = total_seats",
            "# Python code, return ans\nchildren = 58\nchildren_per_seat = 2\ntotal_seats = children / children_per_seat\nans = total_seats"
        ],
        "results": [
            29.0,
            29.0,
            29.0
        ],
        "result_counter": {
            "29.0": 3
        },
        "prediction": 29.0
    },
    {
        "question": "The Razorback T-shirt Shop ordered 12 cases of t-shirts. If each case contains 24 t-shirts, how many t-shirts did they order?",
        "answer": 288,
        "generated": [
            "# Python code, return ans\ncases_ordered = 12\ntshirts_per_case = 24\ntotal_tshirts = cases_ordered * tshirts_per_case\nans = total_tshirts",
            "# Python code, return ans\ncases = 12\ntshirts_per_case = 24\ntotal_tshirts = cases * tshirts_per_case\nans = total_tshirts",
            "# Python code, return ans\ncases_ordered = 12\ntshirts_per_case = 24\ntotal_tshirts = cases_ordered * tshirts_per_case\nans = total_tshirts"
        ],
        "results": [
            288.0,
            288.0,
            288.0
        ],
        "result_counter": {
            "288.0": 3
        },
        "prediction": 288.0
    },
    {
        "question": "The Razorback T-shirt Shop makes $9 dollars off each t-shirt sold. During the Arkansas and Texas Tech game they sold 245 t-shirts. How much money did they make from selling the t-shirts?",
        "answer": 2205,
        "generated": [
            "# Python code, return ans\nprice_per_tshirt = 9\ntshirts_sold = 245\ntotal_money = price_per_tshirt * tshirts_sold\nans = total_money",
            "# Python code, return ans\nprice_per_tshirt = 9\ntshirt_sold = 245\ntotal_money = price_per_tshirt * tshirt_sold\nans = total_money",
            "# Python code, return ans\ntshirt_price = 9\ntshirt_sold = 245\ntotal_money = tshirt_price * tshirt_sold\nans = total_money"
        ],
        "results": [
            2205.0,
            2205.0,
            2205.0
        ],
        "result_counter": {
            "2205.0": 3
        },
        "prediction": 2205.0
    },
    {
        "question": "The Razorback t-shirt Shop sells their t-shirts for $16. Last week they sold 45 t-shirts. How much money did they make last week?",
        "answer": 720,
        "generated": [
            "# Python code, return ans\ntshirt_price = 16\ntshirt_sold = 45\ntotal_money = tshirt_price * tshirt_sold\nans = total_money",
            "# Python code, return ans\ntshirt_price = 16\ntshirt_sold = 45\ntotal_money = tshirt_price * tshirt_sold\nans = total_money",
            "# Python code, return ans\ntshirt_price = 16\ntshirt_sold = 45\ntotal_money = tshirt_price * tshirt_sold\nans = total_money"
        ],
        "results": [
            720.0,
            720.0,
            720.0
        ],
        "result_counter": {
            "720.0": 3
        },
        "prediction": 720.0
    },
    {
        "question": "Mrs. Walker will have 56 apples for bobbing for apples. Each bucket will hold 9 apples. How many buckets will she need?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\napples = 56\napples_per_bucket = 9\nbuckets_needed = apples // apples_per_bucket + (1 if apples % apples_per_bucket != 0 else 0)\nans = buckets_needed",
            "# Python code, return ans\ntotal_apples = 56\napples_per_bucket = 9\nbuckets_needed = total_apples // apples_per_bucket + (1 if total_apples % apples_per_bucket > 0 else 0)\nans = buckets_needed",
            "# Python code, return ans\napples = 56\napples_per_bucket = 9\nbuckets_needed = apples // apples_per_bucket + (1 if apples % apples_per_bucket > 0 else 0)\nans = buckets_needed"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Warren has 252 guests coming to his party. Each table will hold 4 guests. How many tables will he need?",
        "answer": 63,
        "generated": [
            "# Python code, return ans\nguests = 252\nguests_per_table = 4\ntables_needed = guests // guests_per_table + (1 if guests % guests_per_table > 0 else 0)\nans = tables_needed",
            "# Python code, return ans\nguests = 252\nguests_per_table = 4\ntables_needed = guests / guests_per_table\nans = tables_needed",
            "# Python code, return ans\nguests = 252\nguests_per_table = 4\ntables_needed = guests // guests_per_table + (1 if guests % guests_per_table > 0 else 0)\nans = tables_needed"
        ],
        "results": [
            63.0,
            63.0,
            63.0
        ],
        "result_counter": {
            "63.0": 3
        },
        "prediction": 63.0
    },
    {
        "question": "Ellen had 380 legos, but she lost 57 of them. How many legos does she have now?",
        "answer": 323,
        "generated": [
            "# Python code, return ans\nlegos_initial = 380\nlegos_lost = 57\nlegos_remaining = legos_initial - legos_lost\nans = legos_remaining",
            "# Python code, return ans\nlegos_initial = 380\nlegos_lost = 57\nlegos_remaining = legos_initial - legos_lost\nans = legos_remaining",
            "# Python code, return ans\nlegos_initial = 380\nlegos_lost = 57\nlegos_remaining = legos_initial - legos_lost\nans = legos_remaining"
        ],
        "results": [
            323.0,
            323.0,
            323.0
        ],
        "result_counter": {
            "323.0": 3
        },
        "prediction": 323.0
    },
    {
        "question": "Arthur baked 35 muffins. How many more muffins does Arthur have to bake to have 83 muffins?",
        "answer": 48,
        "generated": [
            "# Python code, return ans\nmuffins_baked = 35\nmuffins_needed = 83\nmuffins_to_bake = muffins_needed - muffins_baked\nans = muffins_to_bake",
            "# Python code, return ans\nmuffins_baked = 35\nmuffins_needed = 83\nmuffins_to_bake = muffins_needed - muffins_baked\nans = muffins_to_bake",
            "# Python code, return ans\nmuffins_baked = 35\nmuffins_needed = 83\nmuffins_to_bake = muffins_needed - muffins_baked\nans = muffins_to_bake"
        ],
        "results": [
            48.0,
            48.0,
            48.0
        ],
        "result_counter": {
            "48.0": 3
        },
        "prediction": 48.0
    },
    {
        "question": "Willy has 1400 crayons. Lucy has 290 crayons. How many more crayons does Willy have then Lucy?",
        "answer": 1110,
        "generated": [
            "# Python code, return ans\nWilly_crayons = 1400\nLucy_crayons = 290\nmore_crayons = Willy_crayons - Lucy_crayons\nans = more_crayons",
            "# Python code, return ans\nWilly_crayons = 1400\nLucy_crayons = 290\nmore_crayons = Willy_crayons - Lucy_crayons\nans = more_crayons",
            "# Python code, return ans\nWilly_crayons = 1400\nLucy_crayons = 290\nmore_crayons = Willy_crayons - Lucy_crayons\nans = more_crayons"
        ],
        "results": [
            1110.0,
            1110.0,
            1110.0
        ],
        "result_counter": {
            "1110.0": 3
        },
        "prediction": 1110.0
    },
    {
        "question": "There are 10 stickers on a page. If you have 22 pages of stickers, how many stickers do you have?",
        "answer": 220,
        "generated": [
            "# Python code, return ans\nstickers_per_page = 10\npages = 22\ntotal_stickers = stickers_per_page * pages\nans = total_stickers",
            "# Python code, return ans\nstickers_per_page = 10\npages = 22\ntotal_stickers = stickers_per_page * pages\nans = total_stickers",
            "# Python code, return ans\nstickers_per_page = 10\npages = 22\ntotal_stickers = stickers_per_page * pages\nans = total_stickers"
        ],
        "results": [
            220.0,
            220.0,
            220.0
        ],
        "result_counter": {
            "220.0": 3
        },
        "prediction": 220.0
    },
    {
        "question": "There are 96 cupcakes for 8 children to share. How much will each person get if they share the cupcakes equally?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\ncupcakes = 96\nchildren = 8\ncupcakes_per_child = cupcakes / children\nans = cupcakes_per_child",
            "# Python code, return ans\ncupcakes = 96\nchildren = 8\ncupcakes_per_child = cupcakes / children\nans = cupcakes_per_child",
            "# Python code, return ans\ncupcakes = 96\nchildren = 8\ncupcakes_per_child = cupcakes / children\nans = cupcakes_per_child"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Lizette has 813 stamps. She has 125 more stamps than Minerva. How many stamps does Minerva have?",
        "answer": 688,
        "generated": [
            "# Python code, return ans\nLizette_stamps = 813\nMinerva_stamps = Lizette_stamps - 125\nans = Minerva_stamps",
            "# Python code, return ans\nLizette_stamps = 813\nMinerva_stamps = Lizette_stamps - 125\nans = Minerva_stamps",
            "# Python code, return ans\nLizette_stamps = 813\nMinerva_stamps = Lizette_stamps - 125\nans = Minerva_stamps"
        ],
        "results": [
            688.0,
            688.0,
            688.0
        ],
        "result_counter": {
            "688.0": 3
        },
        "prediction": 688.0
    },
    {
        "question": "White t-shirts can be purchased in packages of 6. If Mom buys 71 packages, how many white t-shirts will she have?",
        "answer": 426,
        "generated": [
            "# Python code, return ans\npackages = 71\ntshirts_per_package = 6\ntotal_tshirts = packages * tshirts_per_package\nans = total_tshirts",
            "# Python code, return ans\npackages = 71\ntshirts_per_package = 6\ntotal_tshirts = packages * tshirts_per_package\nans = total_tshirts",
            "# Python code, return ans\npackage_num = 71\ntshirts_per_package = 6\ntotal_tshirts = package_num * tshirts_per_package\nans = total_tshirts"
        ],
        "results": [
            426.0,
            426.0,
            426.0
        ],
        "result_counter": {
            "426.0": 3
        },
        "prediction": 426.0
    },
    {
        "question": "I have 648 pencils. If I put 4 pencils in each pencil box, how many pencil boxes will I fill?",
        "answer": 162,
        "generated": [
            "# Python code, return ans\npencils = 648\npencils_per_box = 4\npencil_boxes = pencils // pencils_per_box\nans = pencil_boxes",
            "# Python code, return ans\npencils = 648\npencils_per_box = 4\npencil_boxes = pencils // pencils_per_box\nans = pencil_boxes",
            "# Python code, return ans\npencils = 648\npencils_per_box = 4\npencil_boxes = pencils // pencils_per_box\nans = pencil_boxes"
        ],
        "results": [
            162.0,
            162.0,
            162.0
        ],
        "result_counter": {
            "162.0": 3
        },
        "prediction": 162.0
    },
    {
        "question": "Uncle Dave bought 143 ice cream sandwiches. If he wants to give them to his 11 hungry nieces, how many can each niece get?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\nice_cream_sandwiches = 143\nnieces = 11\nans = ice_cream_sandwiches // nieces",
            "# Python code, return ans\nice_cream_sandwiches = 143\nnieces = 11\nice_cream_per_niece = ice_cream_sandwiches // nieces\nans = ice_cream_per_niece",
            "# Python code, return ans\nice_cream_sandwiches = 143\nnieces = 11\nsandwiches_per_niece = ice_cream_sandwiches // nieces\nans = sandwiches_per_niece"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "Megan had 217 markers. Robert gave her 109 more markers. How many markers does Megan have altogether?",
        "answer": 326,
        "generated": [
            "# Python code, return ans\nMegan_markers = 217\nRobert_markers = 109\ntotal_markers = Megan_markers + Robert_markers\nans = total_markers",
            "# Python code, return ans\nMegan_markers = 217\nRobert_markers = 109\ntotal_markers = Megan_markers + Robert_markers\nans = total_markers",
            "# Python code, return ans\nMegan_markers = 217\nRobert_markers = 109\ntotal_markers = Megan_markers + Robert_markers\nans = total_markers"
        ],
        "results": [
            326.0,
            326.0,
            326.0
        ],
        "result_counter": {
            "326.0": 3
        },
        "prediction": 326.0
    },
    {
        "question": "A DVD book holds 126 DVDs. There are 81 DVDs already in the book. How many more DVDs can be put in the book?",
        "answer": 45,
        "generated": [
            "# Python code, return ans\nDVD_book_capacity = 126\nDVDs_already_in_book = 81\nDVDs_can_be_put = DVD_book_capacity - DVDs_already_in_book\nans = DVDs_can_be_put",
            "# Python code, return ans\nDVD_book_capacity = 126\nDVDs_already_in_book = 81\nDVDs_can_be_added = DVD_book_capacity - DVDs_already_in_book\nans = DVDs_can_be_added",
            "# Python code, return ans\nDVD_book_capacity = 126\nDVDs_already_in = 81\nDVD_space_left = DVD_book_capacity - DVDs_already_in\nans = DVD_space_left"
        ],
        "results": [
            45.0,
            45.0,
            45.0
        ],
        "result_counter": {
            "45.0": 3
        },
        "prediction": 45.0
    },
    {
        "question": "Kelly has 121 Nintendo games. How many does she need to give away so that she will have 22 games left?",
        "answer": 99,
        "generated": [
            "# Python code, return ans\ntotal_games = 121\ndesired_games = 22\ngames_to_give_away = total_games - desired_games\nans = games_to_give_away",
            "# Python code, return ans\nKelly_games = 121\ngames_left = 22\ngames_to_give_away = Kelly_games - games_left\nans = games_to_give_away",
            "# Python code, return ans\ntotal_games = 121\ndesired_games_left = 22\ngames_to_give_away = total_games - desired_games_left\nans = games_to_give_away"
        ],
        "results": [
            99.0,
            99.0,
            99.0
        ],
        "result_counter": {
            "99.0": 3
        },
        "prediction": 99.0
    },
    {
        "question": "Connie had some marbles. She gave 183 to Juan. Now she has 593 marbles left. How many did she have to start with?",
        "answer": 776,
        "generated": [
            "# Python code, return ans\nmarbles_left = 593\nmarbles_given = 183\ninitial_marbles = marbles_left + marbles_given\nans = initial_marbles",
            "# Python code, return ans\nmarbles_given = 183\nmarbles_left = 593\ninitial_marbles = marbles_given + marbles_left\nans = initial_marbles",
            "# Python code, return ans\nmarbles_given = 183\nmarbles_left = 593\ninitial_marbles = marbles_given + marbles_left\nans = initial_marbles"
        ],
        "results": [
            776.0,
            776.0,
            776.0
        ],
        "result_counter": {
            "776.0": 3
        },
        "prediction": 776.0
    },
    {
        "question": "Iesha has 344 books. 136 are about school and the rest are about sports. How many books about sports does Iesha have?",
        "answer": 208,
        "generated": [
            "# Python code, return ans\ntotal_books = 344\nschool_books = 136\nsports_books = total_books - school_books\nans = sports_books",
            "# Python code, return ans\ntotal_books = 344\nschool_books = 136\nsports_books = total_books - school_books\nans = sports_books",
            "# Python code, return ans\ntotal_books = 344\nschool_books = 136\nsports_books = total_books - school_books\nans = sports_books"
        ],
        "results": [
            208.0,
            208.0,
            208.0
        ],
        "result_counter": {
            "208.0": 3
        },
        "prediction": 208.0
    },
    {
        "question": "James has 1222 balloons. Amy has 513 balloons. How many more balloons does James have than Amy?",
        "answer": 709,
        "generated": [
            "# Python code, return ans\nJames_balloons = 1222\nAmy_balloons = 513\nmore_balloons = James_balloons - Amy_balloons\nans = more_balloons",
            "# Python code, return ans\nJames_balloons = 1222\nAmy_balloons = 513\nmore_balloons = James_balloons - Amy_balloons\nans = more_balloons",
            "# Python code, return ans\nJames_balloons = 1222\nAmy_balloons = 513\nmore_balloons = James_balloons - Amy_balloons\nans = more_balloons"
        ],
        "results": [
            709.0,
            709.0,
            709.0
        ],
        "result_counter": {
            "709.0": 3
        },
        "prediction": 709.0
    },
    {
        "question": "Sean has 223 whistles. He has 95 more whistles that Charles. How many whistles does Charles have?",
        "answer": 128,
        "generated": [
            "# Python code, return ans\nSean_whistles = 223\nCharles_whistles = Sean_whistles - 95\nans = Charles_whistles",
            "# Python code, return ans\nSean_whistles = 223\nCharles_whistles = Sean_whistles - 95\nans = Charles_whistles",
            "# Python code, return ans\nSean_whistles = 223\nCharles_whistles = Sean_whistles - 95\nans = Charles_whistles"
        ],
        "results": [
            128.0,
            128.0,
            128.0
        ],
        "result_counter": {
            "128.0": 3
        },
        "prediction": 128.0
    },
    {
        "question": "Connie has 323 marbles. Juan has 175 more marbles than Connie. How many marbles does Juan have?",
        "answer": 498,
        "generated": [
            "# Python code, return ans\nConnie_marbles = 323\nJuan_marbles = Connie_marbles + 175\nans = Juan_marbles",
            "# Python code, return ans\nConnie_marbles = 323\nJuan_marbles = Connie_marbles + 175\nans = Juan_marbles",
            "# Python code, return ans\nConnie_marbles = 323\nJuan_marbles = Connie_marbles + 175\nans = Juan_marbles"
        ],
        "results": [
            498.0,
            498.0,
            498.0
        ],
        "result_counter": {
            "498.0": 3
        },
        "prediction": 498.0
    },
    {
        "question": "Robin has 27 packages of gum. There are 18 pieces in each package. How many pieces of gum does Robin have?",
        "answer": 486,
        "generated": [
            "# Python code, return ans\npackages_of_gum = 27\npieces_in_each_package = 18\ntotal_pieces_of_gum = packages_of_gum * pieces_in_each_package\nans = total_pieces_of_gum",
            "# Python code, return ans\npackages_of_gum = 27\npieces_in_each_package = 18\ntotal_pieces_of_gum = packages_of_gum * pieces_in_each_package\nans = total_pieces_of_gum",
            "# Python code, return ans\npackages_of_gum = 27\npieces_in_each_package = 18\ntotal_pieces_of_gum = packages_of_gum * pieces_in_each_package\nans = total_pieces_of_gum"
        ],
        "results": [
            486.0,
            486.0,
            486.0
        ],
        "result_counter": {
            "486.0": 3
        },
        "prediction": 486.0
    },
    {
        "question": "Tony had $20. He paid $8 for a ticket to a baseball game. At the game, he bought a hot dog for $3. What amount of money did Tony have then?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ninitial_money = 20\nticket_cost = 8\nhot_dog_cost = 3\nremaining_money = initial_money - ticket_cost - hot_dog_cost\nans = remaining_money",
            "# Python code, return ans\ninitial_money = 20\nticket_cost = 8\nhot_dog_cost = 3\nremaining_money = initial_money - ticket_cost - hot_dog_cost\nans = remaining_money",
            "# Python code, return ans\ninitial_money = 20\nticket_cost = 8\nhot_dog_cost = 3\nremaining_money = initial_money - ticket_cost - hot_dog_cost\nans = remaining_money"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Mr. Guzman bought 48 doughnuts packed equally into 4 boxes. How many doughnuts were in each box?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\ntotal_doughnuts = 48\ntotal_boxes = 4\ndoughnuts_per_box = total_doughnuts / total_boxes\nans = doughnuts_per_box",
            "# Python code, return ans\ndoughnuts_total = 48\nboxes = 4\ndoughnuts_per_box = doughnuts_total / boxes\nans = doughnuts_per_box",
            "# Python code, return ans\ntotal_doughnuts = 48\nnumber_of_boxes = 4\ndoughnuts_per_box = total_doughnuts / number_of_boxes\nans = doughnuts_per_box"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "The Sumata family took a five-day vacation by car. Each day they drove 250 miles. How many total miles did they drive?",
        "answer": 1250,
        "generated": [
            "# Python code, return ans\nmiles_per_day = 250\ndays = 5\ntotal_miles = miles_per_day * days\nans = total_miles",
            "# Python code, return ans\ndaily_miles = 250\nvacation_days = 5\ntotal_miles = daily_miles * vacation_days\nans = total_miles",
            "# Python code, return ans\nmiles_per_day = 250\ndays_of_vacation = 5\ntotal_miles = miles_per_day * days_of_vacation\nans = total_miles"
        ],
        "results": [
            1250.0,
            1250.0,
            1250.0
        ],
        "result_counter": {
            "1250.0": 3
        },
        "prediction": 1250.0
    },
    {
        "question": "The town of Milburg has 5,256 grown-ups and 2,987 children. How many people live in Milburg?",
        "answer": 8243,
        "generated": [
            "# Python code, return ans\ngrown_ups = 5256\nchildren = 2987\ntotal_people = grown_ups + children\nans = total_people",
            "# Python code, return ans\ngrown_ups = 5256\nchildren = 2987\ntotal_people = grown_ups + children\nans = total_people",
            "# Python code, return ans\ngrown_ups = 5256\nchildren = 2987\ntotal_people = grown_ups + children\nans = total_people"
        ],
        "results": [
            8243.0,
            8243.0,
            8243.0
        ],
        "result_counter": {
            "8243.0": 3
        },
        "prediction": 8243.0
    },
    {
        "question": "There were 3,409 pieces of candy in a jar. If 145 pieces were red and the rest were blue, how many were blue?",
        "answer": 3264,
        "generated": [
            "# Python code, return ans\ntotal_candy = 3409\nred_candy = 145\nblue_candy = total_candy - red_candy\nans = blue_candy",
            "# Python code, return ans\ntotal_candy = 3409\nred_candy = 145\nblue_candy = total_candy - red_candy\nans = blue_candy",
            "# Python code, return ans\ntotal_candy = 3409\nred_candy = 145\nblue_candy = total_candy - red_candy\nans = blue_candy"
        ],
        "results": [
            3264.0,
            3264.0,
            3264.0
        ],
        "result_counter": {
            "3264.0": 3
        },
        "prediction": 3264.0
    },
    {
        "question": "On Friday, 1,250 people visited the zoo. Three times as many people visited on Saturday than on Friday. How many people visited the zoo on Saturday?",
        "answer": 3750,
        "generated": [
            "# Python code, return ans\npeople_visited_Friday = 1250\npeople_visited_Saturday = 3 * people_visited_Friday\nans = people_visited_Saturday",
            "# Python code, return ans\nFriday_visitors = 1250\nSaturday_visitors = Friday_visitors * 3\nans = Saturday_visitors",
            "# Python code, return ans\nFriday_visitors = 1250\nSaturday_visitors = Friday_visitors * 3\nans = Saturday_visitors"
        ],
        "results": [
            3750.0,
            3750.0,
            3750.0
        ],
        "result_counter": {
            "3750.0": 3
        },
        "prediction": 3750.0
    },
    {
        "question": "Third-grade students went to a concert in 8 buses. Each bus took 45 students. How many students went to the concert?",
        "answer": 360,
        "generated": [
            "# Python code, return ans\nbus_num = 8\nstudents_per_bus = 45\ntotal_students = bus_num * students_per_bus\nans = total_students",
            "# Python code, return ans\nbuses = 8\nstudents_per_bus = 45\ntotal_students = buses * students_per_bus\nans = total_students",
            "# Python code, return ans\nbuses = 8\nstudents_per_bus = 45\ntotal_students = buses * students_per_bus\nans = total_students"
        ],
        "results": [
            360.0,
            360.0,
            360.0
        ],
        "result_counter": {
            "360.0": 3
        },
        "prediction": 360.0
    },
    {
        "question": "There are 124 students making 3 stars each for the school wall. How many stars will they make all together?",
        "answer": 372,
        "generated": [
            "# Python code, return ans\nstudents = 124\nstars_each = 3\ntotal_stars = students * stars_each\nans = total_stars",
            "# Python code, return ans\nstudents = 124\nstars_each = 3\ntotal_stars = students * stars_each\nans = total_stars",
            "# Python code, return ans\nstudents = 124\nstars_each = 3\ntotal_stars = students * stars_each\nans = total_stars"
        ],
        "results": [
            372.0,
            372.0,
            372.0
        ],
        "result_counter": {
            "372.0": 3
        },
        "prediction": 372.0
    },
    {
        "question": "Marcia spent 300 minutes working on her science project. How many hours did she spend on her science project?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nminutes_spent = 300\nhours_spent = minutes_spent / 60\nans = hours_spent",
            "# Python code, return ans\nminutes_spent = 300\nhours_spent = minutes_spent / 60\nans = hours_spent",
            "# Python code, return ans\nminutes_spent = 300\nhours_spent = minutes_spent / 60\nans = hours_spent"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "In one week, an airplane pilot flew 1,134 miles on Tuesday and 1,475 miles on Thursday. If the pilot flies the same number of miles 3 weeks in a row, how many miles does he fly in all?",
        "answer": 7827,
        "generated": [
            "# Python code, return ans\nmiles_Tuesday = 1134\nmiles_Thursday = 1475\nmiles_one_week = miles_Tuesday + miles_Thursday\nmiles_three_weeks = miles_one_week * 3\nans = miles_three_weeks",
            "# Python code, return ans\nmiles_Tuesday = 1134\nmiles_Thursday = 1475\nmiles_one_week = miles_Tuesday + miles_Thursday\nmiles_three_weeks = miles_one_week * 3\nans = miles_three_weeks",
            "# Python code, return ans\nmiles_Tuesday = 1134\nmiles_Thursday = 1475\nmiles_one_week = miles_Tuesday + miles_Thursday\nmiles_three_weeks = miles_one_week * 3\nans = miles_three_weeks"
        ],
        "results": [
            7827.0,
            7827.0,
            7827.0
        ],
        "result_counter": {
            "7827.0": 3
        },
        "prediction": 7827.0
    },
    {
        "question": "Six students were sitting at each table in the lunchroom. There are 34 tables. How many students were sitting in the lunchroom?",
        "answer": 204,
        "generated": [
            "# Python code, return ans\nstudents_per_table = 6\ntable_num = 34\ntotal_students = students_per_table * table_num\nans = total_students",
            "# Python code, return ans\nstudents_per_table = 6\ntable_num = 34\ntotal_students = students_per_table * table_num\nans = total_students",
            "# Python code, return ans\nstudents_per_table = 6\ntable_num = 34\ntotal_students = students_per_table * table_num\nans = total_students"
        ],
        "results": [
            204.0,
            204.0,
            204.0
        ],
        "result_counter": {
            "204.0": 3
        },
        "prediction": 204.0
    },
    {
        "question": "Tyler had 15 dogs. Each dog had five puppies. How many puppies does Tyler now have?",
        "answer": 75,
        "generated": [
            "# Python code, return ans\ndogs = 15\npuppies_per_dog = 5\ntotal_puppies = dogs * puppies_per_dog\nans = total_puppies",
            "# Python code, return ans\ndogs = 15\npuppies_per_dog = 5\ntotal_puppies = dogs * puppies_per_dog\nans = total_puppies",
            "# Python code, return ans\nTyler_dogs = 15\npuppies_per_dog = 5\ntotal_puppies = Tyler_dogs * puppies_per_dog\nans = total_puppies"
        ],
        "results": [
            75.0,
            75.0,
            75.0
        ],
        "result_counter": {
            "75.0": 3
        },
        "prediction": 75.0
    },
    {
        "question": "The farmer had 127 apples. He gave 88 apples to his neighbor. How many apples does he have now?",
        "answer": 39,
        "generated": [
            "# Python code, return ans\ninitial_apples = 127\ngiven_apples = 88\nremaining_apples = initial_apples - given_apples\nans = remaining_apples",
            "# Python code, return ans\ninitial_apples = 127\napples_given = 88\nremaining_apples = initial_apples - apples_given\nans = remaining_apples",
            "# Python code, return ans\ninitial_apples = 127\napples_given = 88\nremaining_apples = initial_apples - apples_given\nans = remaining_apples"
        ],
        "results": [
            39.0,
            39.0,
            39.0
        ],
        "result_counter": {
            "39.0": 3
        },
        "prediction": 39.0
    },
    {
        "question": "John can read 4 books a day. He reads every Monday and Tuesday. How many books would he read in 6 weeks?",
        "answer": 48,
        "generated": [
            "# Python code, return ans\nbooks_per_day = 4\ndays_per_week = 2\nweeks = 6\ntotal_books = books_per_day * days_per_week * weeks\nans = total_books",
            "# Python code, return ans\nbooks_per_day = 4\ndays_per_week = 2\nweeks = 6\ntotal_books = books_per_day * days_per_week * weeks\nans = total_books",
            "# Python code, return ans\nbooks_per_day = 4\ndays_per_week = 2\nweeks = 6\ntotal_books = books_per_day * days_per_week * weeks\nans = total_books"
        ],
        "results": [
            48.0,
            48.0,
            48.0
        ],
        "result_counter": {
            "48.0": 3
        },
        "prediction": 48.0
    },
    {
        "question": "Jill invited 37 people to her birthday party. They each ate 8 pieces of pizza. How many pieces of pizza did they eat?",
        "answer": 296,
        "generated": [
            "# Python code, return ans\npeople_invited = 37\npieces_per_person = 8\ntotal_pieces = people_invited * pieces_per_person\nans = total_pieces",
            "# Python code, return ans\npeople_invited = 37\npizza_per_person = 8\ntotal_pizza_pieces = people_invited * pizza_per_person\nans = total_pizza_pieces",
            "# Python code, return ans\npeople_invited = 37\npizza_pieces_per_person = 8\ntotal_pizza_pieces = people_invited * pizza_pieces_per_person\nans = total_pizza_pieces"
        ],
        "results": [
            296.0,
            296.0,
            296.0
        ],
        "result_counter": {
            "296.0": 3
        },
        "prediction": 296.0
    },
    {
        "question": "The Spurs basketball team has 22 players. Each player has eleven basketballs. How many basketballs do they have in all? ",
        "answer": 242,
        "generated": [
            "# Python code, return ans\nplayers = 22\nbasketballs_per_player = 11\ntotal_basketballs = players * basketballs_per_player\nans = total_basketballs",
            "# Python code, return ans\nplayers = 22\nbasketballs_each = 11\ntotal_basketballs = players * basketballs_each\nans = total_basketballs",
            "# Python code, return ans\nplayers = 22\nbasketballs_per_player = 11\ntotal_basketballs = players * basketballs_per_player\nans = total_basketballs"
        ],
        "results": [
            242.0,
            242.0,
            242.0
        ],
        "result_counter": {
            "242.0": 3
        },
        "prediction": 242.0
    },
    {
        "question": "A regular octagon whose sides measure 3 ft each. Find the perimeter. ",
        "answer": 24,
        "generated": [
            "# Python code, return ans\nside_length = 3\nnum_sides = 8\nperimeter = side_length * num_sides\nans = perimeter",
            "# Python code, return ans\nside_length = 3\nnum_sides = 8\nperimeter = side_length * num_sides\nans = perimeter",
            "# Python code, return ans\nside_length = 3\nnum_sides = 8\nperimeter = side_length * num_sides\nans = perimeter"
        ],
        "results": [
            24.0,
            24.0,
            24.0
        ],
        "result_counter": {
            "24.0": 3
        },
        "prediction": 24.0
    },
    {
        "question": "Mrs. Hilt uses 2 ounces of detergent to wash a pound of clothes. How many ounces of soap will she use to wash 9 pounds of clothes?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\ndetergent_per_pound = 2\nclothes_weight = 9\ntotal_detergent = detergent_per_pound * clothes_weight\nans = total_detergent",
            "# Python code, return ans\ndetergent_per_pound = 2\nclothes_weight = 9\ntotal_detergent = detergent_per_pound * clothes_weight\nans = total_detergent",
            "# Python code, return ans\ndetergent_per_pound = 2\npounds_of_clothes = 9\ntotal_detergent = detergent_per_pound * pounds_of_clothes\nans = total_detergent"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "Mrs. Hilt went to a concert. A total of 65,899 people attended the concert. The next week, she went to a second concert, which had 119 more people in attendance. How many people were at the second concert?",
        "answer": 66018,
        "generated": [
            "# Python code, return ans\nfirst_concert_attendance = 65899\nsecond_concert_attendance = first_concert_attendance + 119\nans = second_concert_attendance",
            "# Python code, return ans\nfirst_concert_attendance = 65899\nsecond_concert_attendance = first_concert_attendance + 119\nans = second_concert_attendance",
            "# Python code, return ans\nfirst_concert_attendance = 65899\nsecond_concert_attendance = first_concert_attendance + 119\nans = second_concert_attendance"
        ],
        "results": [
            66018.0,
            66018.0,
            66018.0
        ],
        "result_counter": {
            "66018.0": 3
        },
        "prediction": 66018.0
    },
    {
        "question": "Mrs. Hilt baked pies last weekend for a holiday dinner. She baked 16 pecan pies and 14 apples pies. If she wants to arrange all of the pies in rows of 5 pies each, how many rows will she have?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\npecan_pies = 16\napple_pies = 14\ntotal_pies = pecan_pies + apple_pies\nrows = total_pies / 5\nans = rows",
            "# Python code, return ans\npecan_pies = 16\napple_pies = 14\ntotal_pies = pecan_pies + apple_pies\nrows = total_pies / 5\nans = rows",
            "# Python code, return ans\npecan_pies = 16\napple_pies = 14\ntotal_pies = pecan_pies + apple_pies\nrows = total_pies / 5\nans = rows"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Mrs. Hilt spent 74 cents at the school store. She bought a notebook for 35 cents, a ruler for 18 cents, and 3 pencils. What is the cost of one pencil?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ntotal_spent = 74\nnotebook_cost = 35\nruler_cost = 18\npencil_cost_total = total_spent - (notebook_cost + ruler_cost)\npencils = 3\npencil_cost = pencil_cost_total / pencils\nans = pencil_cost",
            "# Python code, return ans\ntotal_spent = 74\nnotebook_cost = 35\nruler_cost = 18\npencil_cost_total = total_spent - notebook_cost - ruler_cost\npencil_num = 3\npencil_cost = pencil_cost_total / pencil_num\nans = pencil_cost",
            "# Python code, return ans\ntotal_spent = 74\nnotebook_cost = 35\nruler_cost = 18\npencils_cost = total_spent - (notebook_cost + ruler_cost)\nnum_pencils = 3\ncost_per_pencil = pencils_cost / num_pencils\nans = cost_per_pencil"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Mrs. Hilt has 40 markers. They are divided equally into 7 packages. Mrs. Hilt wants to know how many markers are in each package?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ntotal_markers = 40\npackages = 7\nmarkers_per_package = total_markers // packages\nans = markers_per_package",
            "# Python code, return ans\ntotal_markers = 40\nnum_packages = 7\nmarkers_per_package = total_markers // num_packages\nans = markers_per_package",
            "# Python code, return ans\ntotal_markers = 40\npackages = 7\nmarkers_per_package = total_markers // packages\nans = markers_per_package"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Mrs. Hilt has 40 markers. They are divided equally into 7 packages. Mrs. Hilt wants to know how many markers are leftover?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ntotal_markers = 40\npackages = 7\nmarkers_per_package = total_markers // packages\nleftover_markers = total_markers % packages\nans = leftover_markers",
            "# Python code, return ans\ntotal_markers = 40\npackages = 7\nmarkers_per_package = total_markers // packages\nleftover_markers = total_markers % packages\nans = leftover_markers",
            "# Python code, return ans\ntotal_markers = 40\npackages = 7\nmarkers_per_package = total_markers // packages\nleftover_markers = total_markers % packages\nans = leftover_markers"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Mrs. Hilt read 4 books. Each book had 17 chapters in it. How many chapters did Mrs. Hilt read?",
        "answer": 68,
        "generated": [
            "# Python code, return ans\nbooks = 4\nchapters_per_book = 17\ntotal_chapters = books * chapters_per_book\nans = total_chapters",
            "# Python code, return ans\nbooks = 4\nchapters_per_book = 17\ntotal_chapters = books * chapters_per_book\nans = total_chapters",
            "# Python code, return ans\nbooks_read = 4\nchapters_per_book = 17\ntotal_chapters = books_read * chapters_per_book\nans = total_chapters"
        ],
        "results": [
            68.0,
            68.0,
            68.0
        ],
        "result_counter": {
            "68.0": 3
        },
        "prediction": 68.0
    },
    {
        "question": "Mrs. Hilt has a picture frame that is 12 inches high and 10 inches long. What is the perimeter of that picture frame?",
        "answer": 44,
        "generated": [
            "# Python code, return ans\nframe_height = 12\nframe_length = 10\nperimeter = 2 * (frame_height + frame_length)\nans = perimeter",
            "# Python code, return ans\nframe_height = 12\nframe_length = 10\nframe_perimeter = 2 * (frame_height + frame_length)\nans = frame_perimeter",
            "# Python code, return ans\nframe_height = 12\nframe_length = 10\nperimeter = 2 * (frame_height + frame_length)\nans = perimeter"
        ],
        "results": [
            44.0,
            44.0,
            44.0
        ],
        "result_counter": {
            "44.0": 3
        },
        "prediction": 44.0
    },
    {
        "question": "Mrs. Hilt measured her bookcase. It was 48 inches long. How many feet long was the bookcase?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nbookcase_inches = 48\nbookcase_feet = bookcase_inches / 12\nans = bookcase_feet",
            "# Python code, return ans\nbookcase_inches = 48\nbookcase_feet = bookcase_inches / 12\nans = bookcase_feet",
            "# Python code, return ans\nbookcase_inches = 48\nbookcase_feet = bookcase_inches / 12\nans = bookcase_feet"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Mrs. Hilt bought a notebook for $1.30. She paid with nickels. How many nickels did she use to buy the notebook?",
        "answer": 26,
        "generated": [
            "# Python code, return ans\nnotebook_cost = 1.30\nnickel_value = 0.05\nnickels_used = notebook_cost / nickel_value\nans = int(nickels_used)",
            "# Python code, return ans\nnotebook_cost = 1.30\nnickel_value = 0.05\nnickels_used = notebook_cost / nickel_value\nans = int(nickels_used)",
            "# Python code, return ans\nnotebook_cost = 1.30\nnickel_value = 0.05\nnickels_used = notebook_cost / nickel_value\nans = int(nickels_used)"
        ],
        "results": [
            26.0,
            26.0,
            26.0
        ],
        "result_counter": {
            "26.0": 3
        },
        "prediction": 26.0
    },
    {
        "question": "Mrs. Hilt saw a rollercoaster. Seven students rode the rollercoaster every 5 minutes. How many students rode the rollercoaster in 15 minutes?",
        "answer": 21,
        "generated": [
            "# Python code, return ans\nstudents_per_ride = 7\nminutes = 15\nstudents_in_15_minutes = (students_per_ride * minutes) / 5\nans = students_in_15_minutes",
            "# Python code, return ans\nstudents_per_ride = 7\ntime_interval = 5\ntotal_time = 15\nrides = total_time / time_interval\ntotal_students = students_per_ride * rides\nans = total_students",
            "# Python code, return ans\nstudents_per_ride = 7\ntime_interval = 5\ntotal_time = 15\nstudents_in_15_minutes = (total_time / time_interval) * students_per_ride\nans = students_in_15_minutes"
        ],
        "results": [
            21.0,
            21.0,
            21.0
        ],
        "result_counter": {
            "21.0": 3
        },
        "prediction": 21.0
    },
    {
        "question": "Mrs. Hilt saw 144 bees in the hive. The next day she saw 3 times that many. How many bees did she see on the second day?",
        "answer": 432,
        "generated": [
            "# Python code, return ans\nbees_first_day = 144\nbees_second_day = bees_first_day * 3\nans = bees_second_day",
            "# Python code, return ans\nbees_first_day = 144\nbees_second_day = bees_first_day * 3\nans = bees_second_day",
            "# Python code, return ans\nbees_first_day = 144\nbees_second_day = bees_first_day * 3\nans = bees_second_day"
        ],
        "results": [
            432.0,
            432.0,
            432.0
        ],
        "result_counter": {
            "432.0": 3
        },
        "prediction": 432.0
    },
    {
        "question": "Mrs. Hilt measured the distance from her desk to the water fountain. It was 30 feet. How many feet will Mrs. Hilt walk on her trips TO the fountain if she goes to the water fountain four times today?",
        "answer": 120,
        "generated": [
            "# Python code, return ans\ndistance_to_fountain = 30\ntrips_to_fountain = 4\ntotal_distance = distance_to_fountain * trips_to_fountain\nans = total_distance",
            "# Python code, return ans\ndistance_to_fountain = 30\ntrips_to_fountain = 4\ntotal_distance = distance_to_fountain * trips_to_fountain\nans = total_distance",
            "# Python code, return ans\ndistance_to_fountain = 30\ntrips_to_fountain = 4\ntotal_distance = distance_to_fountain * trips_to_fountain\nans = total_distance"
        ],
        "results": [
            120.0,
            120.0,
            120.0
        ],
        "result_counter": {
            "120.0": 3
        },
        "prediction": 120.0
    },
    {
        "question": "Lucy has an aquarium with 212 fish. She wants to buy 68 more fish. How many fish would Lucy have then?",
        "answer": 280,
        "generated": [
            "# Python code, return ans\ncurrent_fish = 212\nfish_to_buy = 68\ntotal_fish = current_fish + fish_to_buy\nans = total_fish",
            "# Python code, return ans\ncurrent_fish = 212\nfish_to_buy = 68\ntotal_fish = current_fish + fish_to_buy\nans = total_fish",
            "# Python code, return ans\ncurrent_fish = 212\nnew_fish = 68\ntotal_fish = current_fish + new_fish\nans = total_fish"
        ],
        "results": [
            280.0,
            280.0,
            280.0
        ],
        "result_counter": {
            "280.0": 3
        },
        "prediction": 280.0
    },
    {
        "question": "Lucy has 212 fish. How many more fish does she need to buy to have 280 fish?",
        "answer": 68,
        "generated": [
            "# Python code, return ans\ncurrent_fish = 212\ndesired_fish = 280\nfish_to_buy = desired_fish - current_fish\nans = fish_to_buy",
            "# Python code, return ans\ncurrent_fish = 212\ndesired_fish = 280\nfish_to_buy = desired_fish - current_fish\nans = fish_to_buy",
            "# Python code, return ans\ncurrent_fish = 212\ndesired_fish = 280\nfish_to_buy = desired_fish - current_fish\nans = fish_to_buy"
        ],
        "results": [
            68.0,
            68.0,
            68.0
        ],
        "result_counter": {
            "68.0": 3
        },
        "prediction": 68.0
    },
    {
        "question": "Chris has been saving his allowance to buy a new pair of soccer cleats and a ball. His grandmother gave him $25 for his birthday. His aunt and uncle gave him $20 and his parents gave him $75. Now he had $279. How much money did he have before his birthday?",
        "answer": 159,
        "generated": [
            "# Python code, return ans\nbirthday_money = 25 + 20 + 75\ntotal_money = 279\nmoney_before_birthday = total_money - birthday_money\nans = money_before_birthday",
            "# Python code, return ans\nbirthday_money = 25 + 20 + 75\ntotal_money = 279\nmoney_before_birthday = total_money - birthday_money\nans = money_before_birthday",
            "# Python code, return ans\nbirthday_money = 25 + 20 + 75\ncurrent_money = 279\nmoney_before_birthday = current_money - birthday_money\nans = money_before_birthday"
        ],
        "results": [
            159.0,
            159.0,
            159.0
        ],
        "result_counter": {
            "159.0": 3
        },
        "prediction": 159.0
    },
    {
        "question": "Rupert and Ronald aced their math test. So their mother bought for them a wonderful trampoline yesterday. Ronald jumped 157 times on the trampoline. Rupert jumped 86 more times than Ronald. How many times did they jump altogether?",
        "answer": 400,
        "generated": [
            "# Python code, return ans\nRonald_jumps = 157\nRupert_jumps = Ronald_jumps + 86\ntotal_jumps = Ronald_jumps + Rupert_jumps\nans = total_jumps",
            "# Python code, return ans\nRonald_jumps = 157\nRupert_jumps = Ronald_jumps + 86\ntotal_jumps = Ronald_jumps + Rupert_jumps\nans = total_jumps",
            "# Python code, return ans\nRonald_jumps = 157\nRupert_jumps = Ronald_jumps + 86\ntotal_jumps = Ronald_jumps + Rupert_jumps\nans = total_jumps"
        ],
        "results": [
            400.0,
            400.0,
            400.0
        ],
        "result_counter": {
            "400.0": 3
        },
        "prediction": 400.0
    },
    {
        "question": "Harry Hound had a terrible earache yesterday. When I peered into his ears yesterday, I found 36 frisky fleas having a party in his right ear and 85 baby fleas sleeping peacefully in his left ear. I cleaned out Harry Hound's ears. How many fleas perished?",
        "answer": 121,
        "generated": [
            "# Python code, return ans\nfrisky_fleas = 36\nbaby_fleas = 85\ntotal_fleas = frisky_fleas + baby_fleas\nans = total_fleas",
            "# Python code, return ans\nright_ear_fleas = 36\nleft_ear_fleas = 85\ntotal_fleas = right_ear_fleas + left_ear_fleas\nans = total_fleas",
            "# Python code, return ans\nright_ear_fleas = 36\nleft_ear_fleas = 85\ntotal_fleas = right_ear_fleas + left_ear_fleas\nans = total_fleas"
        ],
        "results": [
            121.0,
            121.0,
            121.0
        ],
        "result_counter": {
            "121.0": 3
        },
        "prediction": 121.0
    },
    {
        "question": "A pet supply store has 600 bags of dog food and 327 bags of cat food. How many more bags of dog food are there than cat food?",
        "answer": 273,
        "generated": [
            "# Python code, return ans\ndog_food = 600\ncat_food = 327\ndifference = dog_food - cat_food\nans = difference",
            "# Python code, return ans\ndog_food_bags = 600\ncat_food_bags = 327\nmore_dog_food_bags = dog_food_bags - cat_food_bags\nans = more_dog_food_bags",
            "# Python code, return ans\ndog_food_bags = 600\ncat_food_bags = 327\nmore_dog_food_bags = dog_food_bags - cat_food_bags\nans = more_dog_food_bags"
        ],
        "results": [
            273.0,
            273.0,
            273.0
        ],
        "result_counter": {
            "273.0": 3
        },
        "prediction": 273.0
    },
    {
        "question": "David has 7 boxes of stuffed toy dogs. Each box has four dogs in it. How many legs are there in all?",
        "answer": 112,
        "generated": [
            "# Python code, return ans\nbox_num = 7\ndogs_per_box = 4\nlegs_per_dog = 4\ntotal_dogs = box_num * dogs_per_box\ntotal_legs = total_dogs * legs_per_dog\nans = total_legs",
            "# Python code, return ans\nbox_num = 7\ndogs_per_box = 4\nlegs_per_dog = 4\ntotal_dogs = box_num * dogs_per_box\ntotal_legs = total_dogs * legs_per_dog\nans = total_legs",
            "# Python code, return ans\nbox_num = 7\ndogs_per_box = 4\ntotal_dogs = box_num * dogs_per_box\nlegs_per_dog = 4\ntotal_legs = total_dogs * legs_per_dog\nans = total_legs"
        ],
        "results": [
            112.0,
            112.0,
            112.0
        ],
        "result_counter": {
            "112.0": 3
        },
        "prediction": 112.0
    },
    {
        "question": "532 people are watching a movie in a theater. The theater has 750 seats. How many seats are empty in the theater?",
        "answer": 218,
        "generated": [
            "# Python code, return ans\ntotal_seats = 750\npeople_watching = 532\nempty_seats = total_seats - people_watching\nans = empty_seats",
            "# Python code, return ans\ntotal_seats = 750\npeople_watching = 532\nempty_seats = total_seats - people_watching\nans = empty_seats",
            "# Python code, return ans\ntotal_seats = 750\npeople_watching = 532\nempty_seats = total_seats - people_watching\nans = empty_seats"
        ],
        "results": [
            218.0,
            218.0,
            218.0
        ],
        "result_counter": {
            "218.0": 3
        },
        "prediction": 218.0
    },
    {
        "question": "Each bag contains 23 pounds of oranges. How many pounds of oranges are in 45 bags?",
        "answer": 1035,
        "generated": [
            "# Python code, return ans\noranges_per_bag = 23\nbags = 45\ntotal_oranges = oranges_per_bag * bags\nans = total_oranges",
            "# Python code, return ans\npounds_per_bag = 23\nnumber_of_bags = 45\ntotal_pounds = pounds_per_bag * number_of_bags\nans = total_pounds",
            "# Python code, return ans\nbag_weight = 23\nbag_num = 45\ntotal_weight = bag_weight * bag_num\nans = total_weight"
        ],
        "results": [
            1035.0,
            1035.0,
            1035.0
        ],
        "result_counter": {
            "1035.0": 3
        },
        "prediction": 1035.0
    },
    {
        "question": "Bert runs 2 miles every day. How many miles will Bert run in 3 weeks?",
        "answer": 42,
        "generated": [
            "# Python code, return ans\nmiles_per_day = 2\ndays_per_week = 7\nweeks = 3\ntotal_miles = miles_per_day * days_per_week * weeks\nans = total_miles",
            "# Python code, return ans\nmiles_per_day = 2\ndays_per_week = 7\nweeks = 3\ntotal_miles = miles_per_day * days_per_week * weeks\nans = total_miles",
            "# Python code, return ans\nmiles_per_day = 2\ndays_per_week = 7\nweeks = 3\ntotal_miles = miles_per_day * days_per_week * weeks\nans = total_miles"
        ],
        "results": [
            42.0,
            42.0,
            42.0
        ],
        "result_counter": {
            "42.0": 3
        },
        "prediction": 42.0
    },
    {
        "question": "Kiera has 14 blue envelopes. She has 6 fewer yellow envelopes than blue envelopes. She has 3 times as many green envelopes as yellow envelopes. How many envelopes does Kiera have in all?",
        "answer": 46,
        "generated": [
            "# Python code, return ans\nblue_envelopes = 14\nyellow_envelopes = blue_envelopes - 6\ngreen_envelopes = yellow_envelopes * 3\ntotal_envelopes = blue_envelopes + yellow_envelopes + green_envelopes\nans = total_envelopes",
            "# Python code, return ans\nblue_envelopes = 14\nyellow_envelopes = blue_envelopes - 6\ngreen_envelopes = yellow_envelopes * 3\ntotal_envelopes = blue_envelopes + yellow_envelopes + green_envelopes\nans = total_envelopes",
            "# Python code, return ans\nblue_envelopes = 14\nyellow_envelopes = blue_envelopes - 6\ngreen_envelopes = yellow_envelopes * 3\ntotal_envelopes = blue_envelopes + yellow_envelopes + green_envelopes\nans = total_envelopes"
        ],
        "results": [
            46.0,
            46.0,
            46.0
        ],
        "result_counter": {
            "46.0": 3
        },
        "prediction": 46.0
    },
    {
        "question": "Sara's mother gave her $69 to go to the store. Sara bought 3 loaves of bread and 5 cartons of orange juice. Each loaf of bread cost $2 and each carton of orange juice cost $3. How much money does Sara have left?",
        "answer": 48,
        "generated": [
            "# Python code, return ans\ninitial_money = 69\nbread_cost = 2\noj_cost = 3\nbread_quantity = 3\noj_quantity = 5\ntotal_spent = (bread_cost * bread_quantity) + (oj_cost * oj_quantity)\nmoney_left = initial_money - total_spent\nans = money_left",
            "# Python code, return ans\ntotal_money = 69\nbread_cost = 2\nbread_quantity = 3\norange_juice_cost = 3\norange_juice_quantity = 5\ntotal_spent = (bread_cost * bread_quantity) + (orange_juice_cost * orange_juice_quantity)\nmoney_left = total_money - total_spent\nans = money_left",
            "# Python code, return ans\ntotal_money = 69\nbread_cost = 2\nbread_quantity = 3\norange_juice_cost = 3\norange_juice_quantity = 5\ntotal_spent = (bread_cost * bread_quantity) + (orange_juice_cost * orange_juice_quantity)\nmoney_left = total_money - total_spent\nans = money_left"
        ],
        "results": [
            48.0,
            48.0,
            48.0
        ],
        "result_counter": {
            "48.0": 3
        },
        "prediction": 48.0
    },
    {
        "question": "Shelby had 92 pieces of candy. She gave 4 pieces each to 9 friends. How many pieces of candy does Shelby have left?",
        "answer": 56,
        "generated": [
            "# Python code, return ans\ncandy_total = 92\ncandy_given = 4 * 9\ncandy_left = candy_total - candy_given\nans = candy_left",
            "# Python code, return ans\ninitial_candy = 92\ncandy_given_each_friend = 4\nfriends = 9\ncandy_given_total = candy_given_each_friend * friends\ncandy_left = initial_candy - candy_given_total\nans = candy_left",
            "# Python code, return ans\ncandy_initial = 92\ncandy_given_each_friend = 4\nfriend_num = 9\ncandy_given_total = candy_given_each_friend * friend_num\ncandy_left = candy_initial - candy_given_total\nans = candy_left"
        ],
        "results": [
            56.0,
            56.0,
            56.0
        ],
        "result_counter": {
            "56.0": 3
        },
        "prediction": 56.0
    },
    {
        "question": "Ron and Chanarong had breakfast at a cafe. Muffins cost $2 each, and fruit cups cost $2 each. Ron had 1 muffin and 2 fruit cups. Chanarong had 1 muffin and 2 fruit cups. How much did their breakfast cost?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nmuffin_cost = 2\nfruit_cup_cost = 2\nRon_muffins = 1\nRon_fruit_cups = 2\nChanarong_muffins = 1\nChanarong_fruit_cups = 2\ntotal_cost = (Ron_muffins + Chanarong_muffins) * muffin_cost + (Ron_fruit_cups + Chanarong_fruit_cups) * fruit_cup_cost\nans = total_cost",
            "# Python code, return ans\nmuffin_cost = 2\nfruit_cup_cost = 2\nRon_muffin = 1\nRon_fruit_cups = 2\nChanarong_muffin = 1\nChanarong_fruit_cups = 2\ntotal_cost = (Ron_muffin + Chanarong_muffin) * muffin_cost + (Ron_fruit_cups + Chanarong_fruit_cups) * fruit_cup_cost\nans = total_cost",
            "# Python code, return ans\nmuffin_cost = 2\nfruit_cup_cost = 2\nRon_muffins = 1\nRon_fruit_cups = 2\nChanarong_muffins = 1\nChanarong_fruit_cups = 2\ntotal_cost = (Ron_muffins + Chanarong_muffins) * muffin_cost + (Ron_fruit_cups + Chanarong_fruit_cups) * fruit_cup_cost\nans = total_cost"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Jae bought 12 cartons of ice cream and 3 cartons of yogurt. Each carton of ice cream cost $9 and each carton of yogurt cost $2. How much more did Jae spend on ice cream than on yogurt?",
        "answer": 102,
        "generated": [
            "# Python code, return ans\nice_cream_cartons = 12\nyogurt_cartons = 3\nice_cream_cost = 9\nyogurt_cost = 2\ntotal_ice_cream_cost = ice_cream_cartons * ice_cream_cost\ntotal_yogurt_cost = yogurt_cartons * yogurt_cost\ncost_difference = total_ice_cream_cost - total_yogurt_cost\nans = cost_difference",
            "# Python code, return ans\nice_cream_cartons = 12\nyogurt_cartons = 3\nice_cream_cost = 9\nyogurt_cost = 2\ntotal_ice_cream_cost = ice_cream_cartons * ice_cream_cost\ntotal_yogurt_cost = yogurt_cartons * yogurt_cost\nans = total_ice_cream_cost - total_yogurt_cost",
            "# Python code, return ans\nice_cream_cartons = 12\nyogurt_cartons = 3\nice_cream_cost = 9\nyogurt_cost = 2\ntotal_ice_cream_cost = ice_cream_cartons * ice_cream_cost\ntotal_yogurt_cost = yogurt_cartons * yogurt_cost\nans = total_ice_cream_cost - total_yogurt_cost\nans"
        ],
        "results": [
            102.0,
            102.0,
            102.0
        ],
        "result_counter": {
            "102.0": 3
        },
        "prediction": 102.0
    },
    {
        "question": "Jermaine saved $43 in March. He saved $19 in April and $16 in May. Then Jermaine spent $77 on a keyboard. How much money does Jermaine have left?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\nsaved_March = 43\nsaved_April = 19\nsaved_May = 16\ntotal_saved = saved_March + saved_April + saved_May\nspent_on_keyboard = 77\nmoney_left = total_saved - spent_on_keyboard\nans = money_left",
            "# Python code, return ans\nsaved_March = 43\nsaved_April = 19\nsaved_May = 16\ntotal_saved = saved_March + saved_April + saved_May\nspent_on_keyboard = 77\nremaining_money = total_saved - spent_on_keyboard\nans = remaining_money",
            "# Python code, return ans\nsaved_March = 43\nsaved_April = 19\nsaved_May = 16\nspent_on_keyboard = 77\ntotal_saved = saved_March + saved_April + saved_May\nmoney_left = total_saved - spent_on_keyboard\nans = money_left"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "Ulrich wants to buy a jump rope that costs $9, a board game that costs $9, and a playground ball that costs $5. He has saved $7 from his allowance, and his uncle gave him $15. How much more money does Ulrich need to buy the jump rope, the game, and the ball?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\njump_rope_cost = 9\nboard_game_cost = 9\nplayground_ball_cost = 5\ntotal_cost = jump_rope_cost + board_game_cost + playground_ball_cost\n\nsaved_allowance = 7\nuncle_money = 15\ntotal_money = saved_allowance + uncle_money\n\nmoney_needed = total_cost - total_money\nans = money_needed",
            "# Python code, return ans\njump_rope_cost = 9\nboard_game_cost = 9\nplayground_ball_cost = 5\ntotal_cost = jump_rope_cost + board_game_cost + playground_ball_cost\n\nallowance_saved = 7\nuncle_gift = 15\ntotal_money = allowance_saved + uncle_gift\n\nmoney_needed = total_cost - total_money\nans = money_needed",
            "# Python code, return ans\njump_rope_cost = 9\nboard_game_cost = 9\nplayground_ball_cost = 5\ntotal_cost = jump_rope_cost + board_game_cost + playground_ball_cost\n\nsaved_money = 7\nuncle_money = 15\ntotal_money = saved_money + uncle_money\n\nmoney_needed = total_cost - total_money\nans = money_needed"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "In Ben's classroom there are red chairs, yellow chairs, and blue chairs. There are 3 red chairs. There are 4 times as many yellow chairs as red chairs, and there are 2 fewer blue chairs than yellow chairs. How many chairs are there in Ben's classroom?",
        "answer": 25,
        "generated": [
            "# Python code, return ans\nred_chairs = 3\nyellow_chairs = 4 * red_chairs\nblue_chairs = yellow_chairs - 2\ntotal_chairs = red_chairs + yellow_chairs + blue_chairs\nans = total_chairs",
            "# Python code, return ans\nred_chairs = 3\nyellow_chairs = 4 * red_chairs\nblue_chairs = yellow_chairs - 2\ntotal_chairs = red_chairs + yellow_chairs + blue_chairs\nans = total_chairs",
            "# Python code, return ans\nred_chairs = 3\nyellow_chairs = 4 * red_chairs\nblue_chairs = yellow_chairs - 2\ntotal_chairs = red_chairs + yellow_chairs + blue_chairs\nans = total_chairs"
        ],
        "results": [
            25.0,
            25.0,
            25.0
        ],
        "result_counter": {
            "25.0": 3
        },
        "prediction": 25.0
    },
    {
        "question": "Anita needs 26 cartons of berries to make a berry cobbler. She already has 10 cartons of strawberries and 9 cartons of blueberries. How many more cartons of berries should Anita buy?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ncartons_needed = 26\nstrawberry_cartons = 10\nblueberry_cartons = 9\ncartons_already_have = strawberry_cartons + blueberry_cartons\ncartons_to_buy = cartons_needed - cartons_already_have\nans = cartons_to_buy",
            "# Python code, return ans\ncartons_needed = 26\nstrawberries = 10\nblueberries = 9\ncartons_have = strawberries + blueberries\ncartons_to_buy = cartons_needed - cartons_have\nans = cartons_to_buy",
            "# Python code, return ans\nstrawberry_cartons = 10\nblueberry_cartons = 9\ntotal_cartons_needed = 26\ncartons_already_have = strawberry_cartons + blueberry_cartons\nmore_cartons_needed = total_cartons_needed - cartons_already_have\nans = more_cartons_needed"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Antonieta wants to ride the Ferris wheel, the roller coaster, and the log ride. The Ferris wheel costs 6 tickets, the roller coaster costs 5 tickets and the log ride costs 7 tickets. Antonieta has 2 tickets. How many more tickets should Antonieta buy?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\nFerris_wheel_tickets = 6\nroller_coaster_tickets = 5\nlog_ride_tickets = 7\ntotal_tickets_needed = Ferris_wheel_tickets + roller_coaster_tickets + log_ride_tickets\nAntonieta_tickets = 2\ntickets_to_buy = total_tickets_needed - Antonieta_tickets\nans = tickets_to_buy",
            "# Python code, return ans\nferris_wheel_tickets = 6\nroller_coaster_tickets = 5\nlog_ride_tickets = 7\ntotal_tickets_needed = ferris_wheel_tickets + roller_coaster_tickets + log_ride_tickets\ntickets_already_have = 2\ntickets_to_buy = total_tickets_needed - tickets_already_have\nans = tickets_to_buy",
            "# Python code, return ans\nFerris_wheel_tickets = 6\nroller_coaster_tickets = 5\nlog_ride_tickets = 7\ntotal_tickets_needed = Ferris_wheel_tickets + roller_coaster_tickets + log_ride_tickets\nAntonieta_tickets = 2\ntickets_to_buy = total_tickets_needed - Antonieta_tickets\nans = tickets_to_buy"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "Maggie bought 9 books about plants and 1 book about fish. She also bought 10 science magazines. Each book cost $15 and each magazine cost $2. How much did Maggie spend in all?",
        "answer": 170,
        "generated": [
            "# Python code, return ans\nbook_cost = 15\nmagazine_cost = 2\nbooks_total = 9 + 1\nmagazines_total = 10\ntotal_cost = (books_total * book_cost) + (magazines_total * magazine_cost)\nans = total_cost",
            "# Python code, return ans\nbook_cost = 15\nmagazine_cost = 2\nbooks_num = 9 + 1\nmagazines_num = 10\ntotal_cost = (books_num * book_cost) + (magazines_num * magazine_cost)\nans = total_cost",
            "# Python code, return ans\nbook_cost = 15\nmagazine_cost = 2\nbooks_total = 9 + 1\nmagazines_total = 10\ntotal_cost = (books_total * book_cost) + (magazines_total * magazine_cost)\nans = total_cost"
        ],
        "results": [
            170.0,
            170.0,
            170.0
        ],
        "result_counter": {
            "170.0": 3
        },
        "prediction": 170.0
    },
    {
        "question": "Zeshaun bought stamps at the post office. Some of the stamps had a snowflake design, some had a truck design, and some had a rose design. Zeshaun bought 3 snowflake stamps. He bought 5 more truck stamps than snowflake stamps, and 2 fewer rose stamps than truck stamps. How many stamps did Zeshaun buy in all?",
        "answer": 17,
        "generated": [
            "# Python code, return ans\nsnowflake_stamps = 3\ntruck_stamps = snowflake_stamps + 5\nrose_stamps = truck_stamps - 2\ntotal_stamps = snowflake_stamps + truck_stamps + rose_stamps\nans = total_stamps",
            "# Python code, return ans\nsnowflake_stamps = 3\ntruck_stamps = snowflake_stamps + 5\nrose_stamps = truck_stamps - 2\ntotal_stamps = snowflake_stamps + truck_stamps + rose_stamps\nans = total_stamps",
            "# Python code, return ans\nsnowflake_stamps = 3\ntruck_stamps = snowflake_stamps + 5\nrose_stamps = truck_stamps - 2\ntotal_stamps = snowflake_stamps + truck_stamps + rose_stamps\nans = total_stamps"
        ],
        "results": [
            17.0,
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 3
        },
        "prediction": 17.0
    },
    {
        "question": "A group of 4 children and 3 adults are going to the zoo. Child tickets cost $3, and adult tickets cost $6. How much will the zoo tickets cost in all?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\nchild_num = 4\nadult_num = 3\nchild_ticket_cost = 3\nadult_ticket_cost = 6\ntotal_cost = (child_num * child_ticket_cost) + (adult_num * adult_ticket_cost)\nans = total_cost",
            "# Python code, return ans\nchild_ticket_cost = 3\nadult_ticket_cost = 6\nchild_num = 4\nadult_num = 3\ntotal_cost = (child_ticket_cost * child_num) + (adult_ticket_cost * adult_num)\nans = total_cost",
            "# Python code, return ans\nchild_ticket_cost = 3\nadult_ticket_cost = 6\nchild_num = 4\nadult_num = 3\ntotal_cost = (child_ticket_cost * child_num) + (adult_ticket_cost * adult_num)\nans = total_cost"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "A group of science students went on a field trip. They took 2 vans and 3 buses. There were 8 people in each van and 20 people in each bus. How many people went on the field trip?",
        "answer": 76,
        "generated": [
            "# Python code, return ans\nvan_num = 2\nbus_num = 3\npeople_per_van = 8\npeople_per_bus = 20\ntotal_people = (van_num * people_per_van) + (bus_num * people_per_bus)\nans = total_people",
            "# Python code, return ans\nvan_num = 2\nbus_num = 3\npeople_per_van = 8\npeople_per_bus = 20\ntotal_people = (van_num * people_per_van) + (bus_num * people_per_bus)\nans = total_people",
            "# Python code, return ans\nvan_num = 2\nbus_num = 3\npeople_per_van = 8\npeople_per_bus = 20\ntotal_people = van_num * people_per_van + bus_num * people_per_bus\nans = total_people"
        ],
        "results": [
            76.0,
            76.0,
            76.0
        ],
        "result_counter": {
            "76.0": 3
        },
        "prediction": 76.0
    },
    {
        "question": "Ruth has 8 white buttons. She has 6 fewer brown buttons than white buttons. Ruth has 3 more gray buttons than brown buttons. How many buttons does Ruth have in all?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\nwhite_buttons = 8\nbrown_buttons = white_buttons - 6\ngray_buttons = brown_buttons + 3\ntotal_buttons = white_buttons + brown_buttons + gray_buttons\nans = total_buttons",
            "# Python code, return ans\nwhite_buttons = 8\nbrown_buttons = white_buttons - 6\ngray_buttons = brown_buttons + 3\ntotal_buttons = white_buttons + brown_buttons + gray_buttons\nans = total_buttons",
            "# Python code, return ans\nwhite_buttons = 8\nbrown_buttons = white_buttons - 6\ngray_buttons = brown_buttons + 3\ntotal_buttons = white_buttons + brown_buttons + gray_buttons\nans = total_buttons"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "An airplane hangar is 300 feet long. How many planes can fit into it, end to end, if each plane is 40 feet long?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nhangar_length = 300\nplane_length = 40\nnum_planes = hangar_length // plane_length\nans = num_planes",
            "# Python code, return ans\nhangar_length = 300\nplane_length = 40\nplanes_fit = hangar_length // plane_length\nans = planes_fit",
            "# Python code, return ans\nhangar_length = 300\nplane_length = 40\nplanes_fit = hangar_length // plane_length\nans = planes_fit"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "It takes 3 eggs to make a cake. How many cakes can you make with 37 eggs?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\neggs = 37\neggs_per_cake = 3\ncakes = eggs // eggs_per_cake\nans = cakes",
            "# Python code, return ans\neggs = 37\neggs_per_cake = 3\ncakes = eggs // eggs_per_cake\nans = cakes",
            "# Python code, return ans\neggs = 37\neggs_per_cake = 3\ncakes = eggs // eggs_per_cake\nans = cakes"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "105 people are going to a movie. 6 people can ride in each car. How many cars are needed to get all 105 people to the movie?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\ntotal_people = 105\npeople_per_car = 6\ncars_needed = total_people // people_per_car\nif total_people % people_per_car != 0:\n    cars_needed += 1\nans = cars_needed",
            "# Python code, return ans\npeople = 105\npeople_per_car = 6\ncars_needed = people // people_per_car\nif people % people_per_car != 0:\n    cars_needed += 1\nans = cars_needed",
            "# Python code, return ans\npeople = 105\npeople_per_car = 6\ncars_needed = (people + people_per_car - 1) // people_per_car\nans = cars_needed"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "Ms. Baker has 17 cupcakes. She wants to share them equally among her 3 children so that no one gets more than anyone else. If she gives each child as many cupcakes as possible, how many cupcakes will be left over for Ms. Baker to eat?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ncupcakes = 17\nchildren = 3\ncupcakes_each = cupcakes // children\nleftover_cupcakes = cupcakes % children\nans = leftover_cupcakes",
            "# Python code, return ans\ntotal_cupcakes = 17\nchildren = 3\ncupcakes_per_child = total_cupcakes // children\nleftover_cupcakes = total_cupcakes % children\nans = leftover_cupcakes",
            "# Python code, return ans\ncupcakes = 17\nchildren = 3\ncupcakes_per_child = cupcakes // children\nleftover_cupcakes = cupcakes % children\nans = leftover_cupcakes"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "89 cookies are being shared equally among 4 people. How many does each person get?",
        "answer": 22,
        "generated": [
            "# Python code, return ans\ncookies = 89\npeople = 4\ncookies_per_person = cookies // people\nans = cookies_per_person",
            "# Python code, return ans\ncookies = 89\npeople = 4\ncookies_per_person = cookies // people\nans = cookies_per_person",
            "# Python code, return ans\ncookies = 89\npeople = 4\ncookies_per_person = cookies // people\nans = cookies_per_person"
        ],
        "results": [
            22.0,
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 3
        },
        "prediction": 22.0
    },
    {
        "question": "19 children take a minibus to the zoo. They are to sit 2 or 3 to a seat. There are 7 seats. How many seats will have 3 children seated on them?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nchildren = 19\nseats = 7\nseats_with_3_children = (children - (seats * 2)) / (3 - 2)\nans = seats_with_3_children",
            "# Python code, return ans\ntotal_children = 19\ntotal_seats = 7\nchildren_per_seat_2 = 2\nchildren_per_seat_3 = 3\n\nseats_with_3_children = (total_children - (total_seats * children_per_seat_2)) / (children_per_seat_3 - children_per_seat_2)\nans = seats_with_3_children",
            "# Python code, return ans\nchildren = 19\nseats = 7\nchildren_per_seat = children / seats\nseats_with_3_children = 0\n\nwhile children > 0:\n    if children % 2 == 1:\n        seats_with_3_children += 1\n        children -= 3\n    else:\n        children -= 2\n\nans = seats_with_3_children"
        ],
        "results": [
            5.0,
            5.0,
            1.0
        ],
        "result_counter": {
            "5.0": 2,
            "1.0": 1
        },
        "prediction": 5.0
    },
    {
        "question": "Many families serve each person in the family one 6-ounce glass of orange juice each morning. If they buy orange juice by the gallon, how many whole servings of juice will they get out of one gallon (one gallon = 4 quarts, 1 quart = 32 ounces) of juice?",
        "answer": 21,
        "generated": [
            "# Python code, return ans\ngallon_to_ounce = 4 * 32\nounce_per_glass = 6\nservings_per_gallon = gallon_to_ounce // ounce_per_glass\nans = servings_per_gallon",
            "# Python code, return ans\ngallon_to_ounce = 4 * 32\nserving_size = 6\ntotal_servings = gallon_to_ounce // serving_size\nans = total_servings",
            "# Python code, return ans\ngallon_to_ounce = 4 * 32\nserving_size = 6\ntotal_servings = gallon_to_ounce // serving_size\nans = total_servings"
        ],
        "results": [
            21.0,
            21.0,
            21.0
        ],
        "result_counter": {
            "21.0": 3
        },
        "prediction": 21.0
    },
    {
        "question": "A company donates 935 pencils to a school. The pencils are divided evenly among 9 classrooms. The rest of the pencils are given to the library. How many pencils were donated to the library?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ntotal_pencils = 935\nclassrooms = 9\npencils_per_classroom = total_pencils // classrooms\npencils_given_to_classrooms = pencils_per_classroom * classrooms\npencils_donated_to_library = total_pencils - pencils_given_to_classrooms\nans = pencils_donated_to_library",
            "# Python code, return ans\ntotal_pencils = 935\nclassrooms = 9\npencils_per_classroom = total_pencils // classrooms\npencils_given_to_library = total_pencils - (pencils_per_classroom * classrooms)\nans = pencils_given_to_library",
            "# Python code, return ans\ntotal_pencils = 935\nclassrooms = 9\npencils_per_classroom = total_pencils // classrooms\npencils_given_to_classrooms = pencils_per_classroom * classrooms\npencils_donated_to_library = total_pencils - pencils_given_to_classrooms\nans = pencils_donated_to_library"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "A company donates 935 pencils to a school. The pencils are divided evenly among 9 classrooms. The rest of the pencils are given to the library. How many pencils were donated to the library?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ntotal_pencils = 935\nclassrooms = 9\npencils_per_classroom = total_pencils // classrooms\npencils_in_classrooms = pencils_per_classroom * classrooms\npencils_in_library = total_pencils - pencils_in_classrooms\nans = pencils_in_library",
            "# Python code, return ans\ntotal_pencils = 935\nclassrooms = 9\npencils_per_classroom = total_pencils // classrooms\npencils_given_to_classrooms = pencils_per_classroom * classrooms\npencils_given_to_library = total_pencils - pencils_given_to_classrooms\nans = pencils_given_to_library",
            "# Python code, return ans\ntotal_pencils = 935\nclassrooms = 9\npencils_per_classroom = total_pencils // classrooms\npencils_donated_to_library = total_pencils - (pencils_per_classroom * classrooms)\nans = pencils_donated_to_library"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Mrs. Hilt bought 15 books. She paid $11 for each book. She later sold all 15 books for $25 each. What is the difference between the total amount of money Mrs. Hilt sold the books for and the total amount of money she paid for the books?",
        "answer": 210,
        "generated": [
            "# Python code, return ans\nbooks = 15\ncost_per_book = 11\nsell_price_per_book = 25\ntotal_cost = books * cost_per_book\ntotal_sell_price = books * sell_price_per_book\ndifference = total_sell_price - total_cost\nans = difference",
            "# Python code, return ans\nbooks = 15\ncost_per_book = 11\nselling_price_per_book = 25\ntotal_cost = books * cost_per_book\ntotal_sell = books * selling_price_per_book\ndifference = total_sell - total_cost\nans = difference",
            "# Python code, return ans\nbooks = 15\nprice_paid_per_book = 11\nprice_sold_per_book = 25\ntotal_paid = books * price_paid_per_book\ntotal_sold = books * price_sold_per_book\ndifference = total_sold - total_paid\nans = difference"
        ],
        "results": [
            210.0,
            210.0,
            210.0
        ],
        "result_counter": {
            "210.0": 3
        },
        "prediction": 210.0
    },
    {
        "question": "Mrs. Hilt has 6 pizzas. Each pizza has 6 slices. She sold one-fourth of the pizza slices. How many slices were left?",
        "answer": 27,
        "generated": [
            "# Python code, return ans\ntotal_pizzas = 6\nslices_per_pizza = 6\ntotal_slices = total_pizzas * slices_per_pizza\nslices_sold = total_slices * 1/4\nslices_left = total_slices - slices_sold\nans = slices_left",
            "# Python code, return ans\ntotal_pizzas = 6\nslices_per_pizza = 6\ntotal_slices = total_pizzas * slices_per_pizza\nslices_sold = total_slices * 1/4\nslices_left = total_slices - slices_sold\nans = slices_left",
            "# Python code, return ans\ntotal_pizzas = 6\nslices_per_pizza = 6\ntotal_slices = total_pizzas * slices_per_pizza\nsold_slices = total_slices * 1/4\nleft_slices = total_slices - sold_slices\nans = left_slices"
        ],
        "results": [
            27.0,
            27.0,
            27.0
        ],
        "result_counter": {
            "27.0": 3
        },
        "prediction": 27.0
    },
    {
        "question": "Mrs. Hilt wants to buy a television that regularly costs $600. If the sale price is 20% off the regular price, what was the sale price?",
        "answer": 480,
        "generated": [
            "# Python code, return ans\nregular_price = 600\ndiscount_percentage = 20\ndiscount_amount = regular_price * (discount_percentage / 100)\nsale_price = regular_price - discount_amount\nans = sale_price",
            "# Python code, return ans\nregular_price = 600\ndiscount_percentage = 20\ndiscount_amount = regular_price * (discount_percentage / 100)\nsale_price = regular_price - discount_amount\nans = sale_price",
            "# Python code, return ans\nregular_price = 600\ndiscount_percentage = 20\nsale_price = regular_price * (1 - discount_percentage / 100)\nans = sale_price"
        ],
        "results": [
            480.0,
            480.0,
            480.0
        ],
        "result_counter": {
            "480.0": 3
        },
        "prediction": 480.0
    },
    {
        "question": "Mrs. Hilt traveled 6, 760 miles to Japan. She read one book every 450 miles she traveled. How many books had she finished when she got to Japan?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\ntotal_miles = 6760\nmiles_per_book = 450\nbooks_read = total_miles // miles_per_book\nans = books_read",
            "# Python code, return ans\nmiles_traveled = 6760\nmiles_per_book = 450\nbooks_finished = miles_traveled // miles_per_book\nans = books_finished",
            "# Python code, return ans\nmiles_traveled = 6760\nmiles_per_book = 450\nbooks_read = miles_traveled // miles_per_book\nans = books_read"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "Mrs. Hilt had $4,000 in her savings account. She earned 10% interest each year. If she left that money in the account for one year, how much will she have in the account at the end of that year?",
        "answer": 4400,
        "generated": [
            "# Python code, return ans\ninitial_savings = 4000\ninterest_rate = 0.1\ninterest_earned = initial_savings * interest_rate\nfinal_savings = initial_savings + interest_earned\nans = final_savings",
            "# Python code, return ans\ninitial_amount = 4000\ninterest_rate = 0.1\ninterest_earned = initial_amount * interest_rate\nfinal_amount = initial_amount + interest_earned\nans = final_amount",
            "# Python code, return ans\ninitial_savings = 4000\ninterest_rate = 0.10\ninterest_earned = initial_savings * interest_rate\ntotal_savings = initial_savings + interest_earned\nans = total_savings"
        ],
        "results": [
            4400.0,
            4400.0,
            4400.0
        ],
        "result_counter": {
            "4400.0": 3
        },
        "prediction": 4400.0
    },
    {
        "question": "Mrs. Hilt will buy a new pair of shoes in 11 days. How many minutes must she wait before she can buy her new pair of shoes?",
        "answer": 15840,
        "generated": [
            "# Python code, return ans\ndays_to_wait = 11\nhours_to_wait = days_to_wait * 24\nminutes_to_wait = hours_to_wait * 60\nans = minutes_to_wait",
            "# Python code, return ans\ndays_to_wait = 11\nhours_to_wait = days_to_wait * 24\nminutes_to_wait = hours_to_wait * 60\nans = minutes_to_wait",
            "# Python code, return ans\ndays_to_wait = 11\nhours_to_wait = days_to_wait * 24\nminutes_to_wait = hours_to_wait * 60\nans = minutes_to_wait"
        ],
        "results": [
            15840.0,
            15840.0,
            15840.0
        ],
        "result_counter": {
            "15840.0": 3
        },
        "prediction": 15840.0
    },
    {
        "question": "There are 5 boys and 4 girls in a classroom. After 3 boys left the classroom, another 2 girls came in the classroom. How many children were there in the classroom in the end?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nboys_initial = 5\ngirls_initial = 4\nboys_left = 3\ngirls_came = 2\nboys_final = boys_initial - boys_left\ngirls_final = girls_initial + girls_came\ntotal_children = boys_final + girls_final\nans = total_children",
            "# Python code, return ans\nboys_initial = 5\ngirls_initial = 4\nboys_left = 3\ngirls_came = 2\nboys_final = boys_initial - boys_left\ngirls_final = girls_initial + girls_came\ntotal_children = boys_final + girls_final\nans = total_children",
            "# Python code, return ans\nboys_initial = 5\ngirls_initial = 4\nboys_left = 3\ngirls_came = 2\nboys_final = boys_initial - boys_left\ngirls_final = girls_initial + girls_came\ntotal_children = boys_final + girls_final\nans = total_children"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "There are 2 red water bottles, 3 black water bottles, and 4 blue water bottles in the fridge. If 5 water bottles are taken out, how many water bottles are left in the fridge?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nred_bottles = 2\nblack_bottles = 3\nblue_bottles = 4\ntotal_bottles = red_bottles + black_bottles + blue_bottles\ntaken_out = 5\nremaining_bottles = total_bottles - taken_out\nans = remaining_bottles",
            "# Python code, return ans\nred_bottles = 2\nblack_bottles = 3\nblue_bottles = 4\ntotal_bottles = red_bottles + black_bottles + blue_bottles\ntaken_out = 5\nleft_bottles = total_bottles - taken_out\nans = left_bottles",
            "# Python code, return ans\nred_bottles = 2\nblack_bottles = 3\nblue_bottles = 4\ntotal_bottles = red_bottles + black_bottles + blue_bottles\ntaken_out = 5\nleft_bottles = total_bottles - taken_out\nans = left_bottles"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "At a Halloween store, there are 3 green capes, 2 blue capes, and 3 red capes. If 6 capes are bought, how many capes are left?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ngreen_capes = 3\nblue_capes = 2\nred_capes = 3\ntotal_capes = green_capes + blue_capes + red_capes\ncapes_bought = 6\ncapes_left = total_capes - capes_bought\nans = capes_left",
            "# Python code, return ans\ngreen_capes = 3\nblue_capes = 2\nred_capes = 3\ntotal_capes = green_capes + blue_capes + red_capes\ncapes_bought = 6\ncapes_left = total_capes - capes_bought\nans = capes_left",
            "# Python code, return ans\ngreen_capes = 3\nblue_capes = 2\nred_capes = 3\ntotal_capes = green_capes + blue_capes + red_capes\ncapes_bought = 6\ncapes_left = total_capes - capes_bought\nans = capes_left"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "There are 2 green books, 1 blue book, and 4 orange books in a bookshelf. If 3 of them are taken out to be read, how many books are left on the bookshelf?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ngreen_books = 2\nblue_books = 1\norange_books = 4\ntotal_books = green_books + blue_books + orange_books\nbooks_taken_out = 3\nbooks_left = total_books - books_taken_out\nans = books_left",
            "# Python code, return ans\ngreen_books = 2\nblue_books = 1\norange_books = 4\ntotal_books = green_books + blue_books + orange_books\nbooks_taken_out = 3\nbooks_left = total_books - books_taken_out\nans = books_left",
            "# Python code, return ans\ngreen_books = 2\nblue_books = 1\norange_books = 4\ntotal_books = green_books + blue_books + orange_books\nbooks_taken_out = 3\nbooks_left = total_books - books_taken_out\nans = books_left"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "There is 1 green bead, 2 brown beads and 3 red beads in a container. Tom took some beads out of the container and left 4 in. How many beads did Tom take out?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ntotal_beads = 1 + 2 + 3\nbeads_left = 4\nbeads_taken = total_beads - beads_left\nans = beads_taken",
            "# Python code, return ans\ntotal_beads = 1 + 2 + 3\nbeads_left = 4\nbeads_taken = total_beads - beads_left\nans = beads_taken",
            "# Python code, return ans\ntotal_beads = 1 + 2 + 3\nbeads_left = 4\nbeads_taken = total_beads - beads_left\nans = beads_taken"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Georgia has 4 yellow buttons, 2 black buttons and 3 green buttons. She gives some of the buttons to Mary, and she has 5 left. How many buttons did Georgia give to Marry?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ntotal_buttons = 4 + 2 + 3\nbuttons_left = 5\nbuttons_given_to_Mary = total_buttons - buttons_left\nans = buttons_given_to_Mary",
            "# Python code, return ans\ntotal_buttons = 4 + 2 + 3\nbuttons_left = 5\nbuttons_given_to_Mary = total_buttons - buttons_left\nans = buttons_given_to_Mary",
            "# Python code, return ans\ntotal_buttons = 4 + 2 + 3\nbuttons_left = 5\nbuttons_given_to_Mary = total_buttons - buttons_left\nans = buttons_given_to_Mary"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "There are 2 American people, 4 French people and 4 Chinese people a meeting room. 3 of them leave. How many people are left the meeting room?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nAmerican_people = 2\nFrench_people = 4\nChinese_people = 4\ntotal_people = American_people + French_people + Chinese_people\npeople_left = total_people - 3\nans = people_left",
            "# Python code, return ans\nAmerican_people = 2\nFrench_people = 4\nChinese_people = 4\ntotal_people = American_people + French_people + Chinese_people\npeople_left = total_people - 3\nans = people_left",
            "# Python code, return ans\nAmerican_people = 2\nFrench_people = 4\nChinese_people = 4\ntotal_people = American_people + French_people + Chinese_people\npeople_left = total_people - 3\nans = people_left"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "At a candy store, there are 3 brown candy boxes, 3 black candy boxes, and 2 blue candy boxes. If 5 boxes are bought, how many candy boxes are left?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nbrown_boxes = 3\nblack_boxes = 3\nblue_boxes = 2\ntotal_boxes = brown_boxes + black_boxes + blue_boxes\nboxes_bought = 5\nboxes_left = total_boxes - boxes_bought\nans = boxes_left",
            "# Python code, return ans\nbrown_boxes = 3\nblack_boxes = 3\nblue_boxes = 2\ntotal_boxes = brown_boxes + black_boxes + blue_boxes\nboxes_bought = 5\nboxes_left = total_boxes - boxes_bought\nans = boxes_left",
            "# Python code, return ans\nbrown_boxes = 3\nblack_boxes = 3\nblue_boxes = 2\ntotal_boxes = brown_boxes + black_boxes + blue_boxes\nboxes_bought = 5\nboxes_left = total_boxes - boxes_bought\nans = boxes_left"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "There are some children at a bakery. As they were deciding what to buy, 24 girls came in and 31 boys left. If there are 78 children in the bakery in the end, how many children were there at first?",
        "answer": 85,
        "generated": [
            "# Python code, return ans\ngirls_came_in = 24\nboys_left = 31\nchildren_end = 78\nchildren_start = children_end - girls_came_in + boys_left\nans = children_start",
            "# Python code, return ans\ngirls_came_in = 24\nboys_left = 31\nchildren_end = 78\nchildren_start = children_end - girls_came_in + boys_left\nans = children_start",
            "# Python code, return ans\ngirls_came_in = 24\nboys_left = 31\nchildren_end = 78\nchildren_start = children_end - girls_came_in + boys_left\nans = children_start"
        ],
        "results": [
            85.0,
            85.0,
            85.0
        ],
        "result_counter": {
            "85.0": 3
        },
        "prediction": 85.0
    },
    {
        "question": "Blithe has a lot of toys. He lost 6 of them and found 9 in his closet. If he had 43 after that, how many toys did Blithe have at first?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\nlost_toys = 6\nfound_toys = 9\nfinal_toys = 43\ninitial_toys = final_toys - found_toys + lost_toys\nans = initial_toys",
            "# Python code, return ans\nlost_toys = 6\nfound_toys = 9\nfinal_toys = 43\ninitial_toys = final_toys - found_toys + lost_toys\nans = initial_toys",
            "# Python code, return ans\nlost_toys = 6\nfound_toys = 9\nfinal_toys = 43\ninitial_toys = final_toys - found_toys + lost_toys\nans = initial_toys"
        ],
        "results": [
            40.0,
            40.0,
            40.0
        ],
        "result_counter": {
            "40.0": 3
        },
        "prediction": 40.0
    },
    {
        "question": "Lena had some pocket money. She lost $4 and her mom gave her $9. If she had $66 after that, how many dollars did Lena have at first?",
        "answer": 61,
        "generated": [
            "# Python code, return ans\nlost_money = 4\nmom_gave = 9\nfinal_money = 66\ninitial_money = final_money - mom_gave + lost_money\nans = initial_money",
            "# Python code, return ans\nlost_money = 4\nmom_gave = 9\nfinal_money = 66\ninitial_money = final_money - mom_gave + lost_money\nans = initial_money",
            "# Python code, return ans\nlost_money = 4\nmom_gave = 9\nfinal_money = 66\ninitial_money = final_money - mom_gave + lost_money\nans = initial_money"
        ],
        "results": [
            61.0,
            61.0,
            61.0
        ],
        "result_counter": {
            "61.0": 3
        },
        "prediction": 61.0
    },
    {
        "question": "There are some passengers on a bus. At a bus stop, 7 more passengers got on the bus and 9 passengers got off. If there are 26 passengers in the bus in the end, how many passengers were there at first?",
        "answer": 28,
        "generated": [
            "# Python code, return ans\npassengers_after_stop = 26\npassengers_on = 7\npassengers_off = 9\ninitial_passengers = passengers_after_stop + passengers_off - passengers_on\nans = initial_passengers",
            "# Python code, return ans\npassengers_end = 26\npassengers_on = 7\npassengers_off = 9\npassengers_start = passengers_end - passengers_on + passengers_off\nans = passengers_start",
            "# Python code, return ans\npassengers_after = 26\npassengers_on = 7\npassengers_off = 9\npassengers_initial = passengers_after - passengers_on + passengers_off\nans = passengers_initial"
        ],
        "results": [
            28.0,
            28.0,
            28.0
        ],
        "result_counter": {
            "28.0": 3
        },
        "prediction": 28.0
    },
    {
        "question": "Bruno had some story books. He lost 4 of them and his dad gave him 10 more books. If he had 39 books after that, how many books did Bruno have at first?",
        "answer": 33,
        "generated": [
            "# Python code, return ans\nbooks_after_lost = 39 - 10\nbooks_initial = books_after_lost + 4\nans = books_initial",
            "# Python code, return ans\nbooks_after = 39\nbooks_lost = 4\nbooks_received = 10\nbooks_initial = books_after - books_received + books_lost\nans = books_initial",
            "# Python code, return ans\nbooks_after_lost = 39 - 10\nbooks_initial = books_after_lost + 4\nans = books_initial"
        ],
        "results": [
            33.0,
            33.0,
            33.0
        ],
        "result_counter": {
            "33.0": 3
        },
        "prediction": 33.0
    },
    {
        "question": "There 95 colored lights on a Christmas tree. 26 of them are red, 37 of them are yellow and the rest are blue. How many blue lights are there on the Christmas tree?",
        "answer": 32,
        "generated": [
            "# Python code, return ans\ntotal_lights = 95\nred_lights = 26\nyellow_lights = 37\nblue_lights = total_lights - red_lights - yellow_lights\nans = blue_lights",
            "# Python code, return ans\ntotal_lights = 95\nred_lights = 26\nyellow_lights = 37\nblue_lights = total_lights - (red_lights + yellow_lights)\nans = blue_lights",
            "# Python code, return ans\ntotal_lights = 95\nred_lights = 26\nyellow_lights = 37\nblue_lights = total_lights - (red_lights + yellow_lights)\nans = blue_lights\n"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "Jacqueline had 16 plums, 18 guavas and 21 apples. She gave some of them to Jane and had 15 fruits left. How many fruits did Jacqueline give Jane?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\nJacqueline_total_fruits = 16 + 18 + 21\nfruits_left = 15\nfruits_given_to_Jane = Jacqueline_total_fruits - fruits_left\nans = fruits_given_to_Jane",
            "# Python code, return ans\ntotal_fruits = 16 + 18 + 21\nfruits_left = 15\nfruits_given = total_fruits - fruits_left\nans = fruits_given",
            "# Python code, return ans\nplums = 16\nguavas = 18\napples = 21\ntotal_fruits = plums + guavas + apples\nfruits_left = 15\nfruits_given = total_fruits - fruits_left\nans = fruits_given"
        ],
        "results": [
            40.0,
            40.0,
            40.0
        ],
        "result_counter": {
            "40.0": 3
        },
        "prediction": 40.0
    },
    {
        "question": "There were 36 dogs and 29 cats in a pet center. After 20 of the dogs were adopted by people, the pet center collected another 12 cats. How many pets were there in the pet center in the end?",
        "answer": 57,
        "generated": [
            "# Python code, return ans\ninitial_dogs = 36\ninitial_cats = 29\nadopted_dogs = 20\nnew_cats = 12\nremaining_dogs = initial_dogs - adopted_dogs\ntotal_cats = initial_cats + new_cats\ntotal_pets = remaining_dogs + total_cats\nans = total_pets",
            "# Python code, return ans\ndogs_initial = 36\ncats_initial = 29\ndogs_adopted = 20\ncats_added = 12\ndogs_remaining = dogs_initial - dogs_adopted\npets_final = dogs_remaining + cats_initial + cats_added\nans = pets_final",
            "# Python code, return ans\ninitial_dogs = 36\ninitial_cats = 29\nadopted_dogs = 20\nnew_cats = 12\nfinal_dogs = initial_dogs - adopted_dogs\nfinal_cats = initial_cats + new_cats\ntotal_pets = final_dogs + final_cats\nans = total_pets"
        ],
        "results": [
            57.0,
            57.0,
            57.0
        ],
        "result_counter": {
            "57.0": 3
        },
        "prediction": 57.0
    },
    {
        "question": "Jennifer has an 87 cm long ribbon. She uses 24 cm of the ribbon to tie a present for her friend and 45 cm of the ribbon to make a bow. How much of the ribbon is left in the end?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\nribbon_length = 87\nused_for_present = 24\nused_for_bow = 45\nribbon_left = ribbon_length - (used_for_present + used_for_bow)\nans = ribbon_left",
            "# Python code, return ans\nribbon_length = 87\nribbon_present = 24\nribbon_bow = 45\nribbon_left = ribbon_length - ribbon_present - ribbon_bow\nans = ribbon_left",
            "# Python code, return ans\nribbon_length = 87\npresent_ribbon = 24\nbow_ribbon = 45\nribbon_left = ribbon_length - present_ribbon - bow_ribbon\nans = ribbon_left"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "There are 54 passengers on a bus. 18 of them are men, 26 of them are women and the rest are children. How many children are there on the bus?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\ntotal_passengers = 54\nmen = 18\nwomen = 26\nchildren = total_passengers - (men + women)\nans = children",
            "# Python code, return ans\ntotal_passengers = 54\nmen = 18\nwomen = 26\nchildren = total_passengers - (men + women)\nans = children",
            "# Python code, return ans\ntotal_passengers = 54\nmen = 18\nwomen = 26\nchildren = total_passengers - (men + women)\nans = children"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "Bernard had 15 red notebooks, 17 blue notebooks and 19 white notebooks. He gave some of them to Tom and had 5 left. How many notebooks did Bernard give Tom?",
        "answer": 46,
        "generated": [
            "# Python code, return ans\nred_notebooks = 15\nblue_notebooks = 17\nwhite_notebooks = 19\ntotal_notebooks = red_notebooks + blue_notebooks + white_notebooks\nnotebooks_left = 5\nnotebooks_given_to_Tom = total_notebooks - notebooks_left\nans = notebooks_given_to_Tom",
            "# Python code, return ans\nred_notebooks = 15\nblue_notebooks = 17\nwhite_notebooks = 19\ntotal_notebooks = red_notebooks + blue_notebooks + white_notebooks\nnotebooks_left = 5\nnotebooks_given_to_Tom = total_notebooks - notebooks_left\nans = notebooks_given_to_Tom",
            "# Python code, return ans\nred_notebooks = 15\nblue_notebooks = 17\nwhite_notebooks = 19\ntotal_notebooks = red_notebooks + blue_notebooks + white_notebooks\nnotebooks_left = 5\nnotebooks_given = total_notebooks - notebooks_left\nans = notebooks_given"
        ],
        "results": [
            46.0,
            46.0,
            46.0
        ],
        "result_counter": {
            "46.0": 3
        },
        "prediction": 46.0
    },
    {
        "question": "Robert made $76 at work. He spent $6 on a pen and $14 for a calculator. How much money did he have left?",
        "answer": 56,
        "generated": [
            "# Python code, return ans\nRobert_money = 76\npen_cost = 6\ncalculator_cost = 14\nmoney_left = Robert_money - (pen_cost + calculator_cost)\nans = money_left",
            "# Python code, return ans\nRobert_money = 76\nspent_on_pen = 6\nspent_on_calculator = 14\nmoney_left = Robert_money - (spent_on_pen + spent_on_calculator)\nans = money_left",
            "# Python code, return ans\nRobert_money = 76\npen_cost = 6\ncalculator_cost = 14\nmoney_left = Robert_money - (pen_cost + calculator_cost)\nans = money_left"
        ],
        "results": [
            56.0,
            56.0,
            56.0
        ],
        "result_counter": {
            "56.0": 3
        },
        "prediction": 56.0
    },
    {
        "question": "A shop stocked 22 pairs of large-size shoes, 50 pairs of medium-size shoes and 24 pairs of small-size shoes. After selling some of the shoes, it had 13 pairs of shoes left. How many pairs of shoes did the shop sell?",
        "answer": 83,
        "generated": [
            "# Python code, return ans\nlarge_shoes = 22\nmedium_shoes = 50\nsmall_shoes = 24\ntotal_shoes = large_shoes + medium_shoes + small_shoes\nshoes_left = 13\nshoes_sold = total_shoes - shoes_left\nans = shoes_sold",
            "# Python code, return ans\nlarge_shoes = 22\nmedium_shoes = 50\nsmall_shoes = 24\ntotal_shoes = large_shoes + medium_shoes + small_shoes\nremaining_shoes = 13\nsold_shoes = total_shoes - remaining_shoes\nans = sold_shoes",
            "# Python code, return ans\nlarge_shoes = 22\nmedium_shoes = 50\nsmall_shoes = 24\ntotal_shoes = large_shoes + medium_shoes + small_shoes\nleft_shoes = 13\nsold_shoes = total_shoes - left_shoes\nans = sold_shoes"
        ],
        "results": [
            83.0,
            83.0,
            83.0
        ],
        "result_counter": {
            "83.0": 3
        },
        "prediction": 83.0
    },
    {
        "question": "There are 100 books on a shelf. 32 of them are history books, 25 of them are geography books and the rest are math books. How many math books are there on the shelf?",
        "answer": 43,
        "generated": [
            "# Python code, return ans\ntotal_books = 100\nhistory_books = 32\ngeography_books = 25\nmath_books = total_books - history_books - geography_books\nans = math_books",
            "# Python code, return ans\ntotal_books = 100\nhistory_books = 32\ngeography_books = 25\nmath_books = total_books - (history_books + geography_books)\nans = math_books",
            "# Python code, return ans\ntotal_books = 100\nhistory_books = 32\ngeography_books = 25\nmath_books = total_books - history_books - geography_books\nans = math_books\nans"
        ],
        "results": [
            43.0,
            43.0,
            43.0
        ],
        "result_counter": {
            "43.0": 3
        },
        "prediction": 43.0
    },
    {
        "question": "Roger collected 42 pennies, 36 nickels and 15 dimes. He donated some of his coins and had 27 coins left. How many coins did Roger donate?",
        "answer": 66,
        "generated": [
            "# Python code, return ans\npennies = 42\nnickels = 36\ndimes = 15\ntotal_coins = pennies + nickels + dimes\ncoins_left = 27\ncoins_donated = total_coins - coins_left\nans = coins_donated",
            "# Python code, return ans\npennies = 42\nnickels = 36\ndimes = 15\ntotal_coins = pennies + nickels + dimes\ncoins_left = 27\ncoins_donated = total_coins - coins_left\nans = coins_donated",
            "# Python code, return ans\npennies = 42\nnickels = 36\ndimes = 15\ntotal_coins = pennies + nickels + dimes\ncoins_left = 27\ncoins_donated = total_coins - coins_left\nans = coins_donated"
        ],
        "results": [
            66.0,
            66.0,
            66.0
        ],
        "result_counter": {
            "66.0": 3
        },
        "prediction": 66.0
    },
    {
        "question": "A factory produced 50 printers and 21 scanners. After 41 of the printers were sold, it produced another 16 scanners. How many printers and scanners did the factory have in the end?",
        "answer": 46,
        "generated": [
            "# Python code, return ans\ninitial_printers = 50\ninitial_scanners = 21\nsold_printers = 41\nnew_scanners = 16\n\nremaining_printers = initial_printers - sold_printers\ntotal_scanners = initial_scanners + new_scanners\ntotal_devices = remaining_printers + total_scanners\nans = total_devices",
            "# Python code, return ans\ninitial_printers = 50\ninitial_scanners = 21\nsold_printers = 41\nnew_scanners = 16\n\nremaining_printers = initial_printers - sold_printers\ntotal_scanners = initial_scanners + new_scanners\ntotal_devices = remaining_printers + total_scanners\nans = total_devices",
            "# Python code, return ans\ninitial_printers = 50\ninitial_scanners = 21\nsold_printers = 41\nnew_scanners = 16\n\nremaining_printers = initial_printers - sold_printers\ntotal_scanners = initial_scanners + new_scanners\ntotal_devices = remaining_printers + total_scanners\nans = total_devices"
        ],
        "results": [
            46.0,
            46.0,
            46.0
        ],
        "result_counter": {
            "46.0": 3
        },
        "prediction": 46.0
    },
    {
        "question": "Harry walked along the beach and collected 34 sea stars, 21 seashells and 29 snails. He lost some of the items and had 59 items left at the end of his walk. How many sea creatures did he lose in all?",
        "answer": 25,
        "generated": [
            "# Python code, return ans\nsea_stars = 34\nseashells = 21\nsnails = 29\ntotal_collected = sea_stars + seashells + snails\nitems_left = 59\nitems_lost = total_collected - items_left\nans = items_lost",
            "# Python code, return ans\nsea_stars = 34\nseashells = 21\nsnails = 29\ntotal_collected = sea_stars + seashells + snails\nitems_left = 59\nitems_lost = total_collected - items_left\nans = items_lost",
            "# Python code, return ans\nsea_stars = 34\nseashells = 21\nsnails = 29\ntotal_collected = sea_stars + seashells + snails\nitems_left = 59\nitems_lost = total_collected - items_left\nans = items_lost"
        ],
        "results": [
            25.0,
            25.0,
            25.0
        ],
        "result_counter": {
            "25.0": 3
        },
        "prediction": 25.0
    },
    {
        "question": "Georgia had 24 yellow buttons, 16 black buttons and 19 green buttons. She gave some of the buttons to Mary and now Georgia has 13 buttons left. How many buttons did Georgia give Mary?",
        "answer": 46,
        "generated": [
            "# Python code, return ans\nyellow_buttons = 24\nblack_buttons = 16\ngreen_buttons = 19\ntotal_buttons = yellow_buttons + black_buttons + green_buttons\nbuttons_left = 13\nbuttons_given = total_buttons - buttons_left\nans = buttons_given",
            "# Python code, return ans\nyellow_buttons = 24\nblack_buttons = 16\ngreen_buttons = 19\ntotal_buttons = yellow_buttons + black_buttons + green_buttons\nbuttons_left = 13\nbuttons_given = total_buttons - buttons_left\nans = buttons_given",
            "# Python code, return ans\nyellow_buttons = 24\nblack_buttons = 16\ngreen_buttons = 19\ntotal_buttons = yellow_buttons + black_buttons + green_buttons\nbuttons_left = 13\nbuttons_given_to_Mary = total_buttons - buttons_left\nans = buttons_given_to_Mary"
        ],
        "results": [
            46.0,
            46.0,
            46.0
        ],
        "result_counter": {
            "46.0": 3
        },
        "prediction": 46.0
    },
    {
        "question": "There are a total of 90 items at a bakery. 49 of them are bread rolls and 19 of them are croissants. How many bagels are there?",
        "answer": 22,
        "generated": [
            "# Python code, return ans\ntotal_items = 90\nbread_rolls = 49\ncroissants = 19\nbagels = total_items - (bread_rolls + croissants)\nans = bagels",
            "# Python code, return ans\ntotal_items = 90\nbread_rolls = 49\ncroissants = 19\nbagels = total_items - (bread_rolls + croissants)\nans = bagels",
            "# Python code, return ans\ntotal_items = 90\nbread_rolls = 49\ncroissants = 19\nbagels = total_items - (bread_rolls + croissants)\nans = bagels"
        ],
        "results": [
            22.0,
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 3
        },
        "prediction": 22.0
    },
    {
        "question": "A pet shop has a total of 77 animals. 32 of them are kittens and 15 of them hamsters, the rest are birds. How many birds are there?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\ntotal_animals = 77\nkittens = 32\nhamsters = 15\nbirds = total_animals - (kittens + hamsters)\nans = birds",
            "# Python code, return ans\ntotal_animals = 77\nkittens = 32\nhamsters = 15\nbirds = total_animals - (kittens + hamsters)\nans = birds",
            "# Python code, return ans\ntotal_animals = 77\nkittens = 32\nhamsters = 15\nbirds = total_animals - kittens - hamsters\nans = birds"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "A restaurant has 94 pieces of cutlery. 38 are forks, 27 are knives, and the rest are spoons. How many spoons are there?",
        "answer": 29,
        "generated": [
            "# Python code, return ans\ntotal_cutlery = 94\nforks = 38\nknives = 27\nspoons = total_cutlery - forks - knives\nans = spoons",
            "# Python code, return ans\ntotal_cutlery = 94\nforks = 38\nknives = 27\nspoons = total_cutlery - (forks + knives)\nans = spoons",
            "# Python code, return ans\ntotal_cutlery = 94\nforks = 38\nknives = 27\nspoons = total_cutlery - (forks + knives)\nans = spoons"
        ],
        "results": [
            29.0,
            29.0,
            29.0
        ],
        "result_counter": {
            "29.0": 3
        },
        "prediction": 29.0
    },
    {
        "question": "Debby makes 67 pancakes. She adds blueberries to 20 of them and bananas to 24 of them. The rest are plain. How many plain pancakes are there?",
        "answer": 23,
        "generated": [
            "# Python code, return ans\ntotal_pancakes = 67\nblueberry_pancakes = 20\nbanana_pancakes = 24\nplain_pancakes = total_pancakes - blueberry_pancakes - banana_pancakes\nans = plain_pancakes",
            "# Python code, return ans\ntotal_pancakes = 67\nblueberry_pancakes = 20\nbanana_pancakes = 24\nplain_pancakes = total_pancakes - (blueberry_pancakes + banana_pancakes)\nans = plain_pancakes",
            "# Python code, return ans\ntotal_pancakes = 67\nblueberry_pancakes = 20\nbanana_pancakes = 24\nplain_pancakes = total_pancakes - blueberry_pancakes - banana_pancakes\nans = plain_pancakes"
        ],
        "results": [
            23.0,
            23.0,
            23.0
        ],
        "result_counter": {
            "23.0": 3
        },
        "prediction": 23.0
    },
    {
        "question": "At a carnival, there are 87 kids, teenagers, and adults waiting to get in. 24 are teenagers, 19 are adults, and the rest are kids. How many kids are waiting in line at the carnival?",
        "answer": 44,
        "generated": [
            "# Python code, return ans\ntotal_people = 87\nteenagers = 24\nadults = 19\nkids = total_people - teenagers - adults\nans = kids",
            "# Python code, return ans\ntotal_people = 87\nteenagers = 24\nadults = 19\nkids = total_people - (teenagers + adults)\nans = kids",
            "# Python code, return ans\ntotal_people = 87\nteenagers = 24\nadults = 19\nkids = total_people - (teenagers + adults)\nans = kids"
        ],
        "results": [
            44.0,
            44.0,
            44.0
        ],
        "result_counter": {
            "44.0": 3
        },
        "prediction": 44.0
    },
    {
        "question": "An international group had 49 Chinese, Americans and Australians. 16 of them were Americans and 11 of them were Australians. How many Chinese were there?",
        "answer": 22,
        "generated": [
            "# Python code, return ans\ntotal_people = 49\nAmericans = 16\nAustralians = 11\nChinese = total_people - Americans - Australians\nans = Chinese",
            "# Python code, return ans\ntotal_people = 49\nAmericans = 16\nAustralians = 11\nChinese = total_people - Americans - Australians\nans = Chinese",
            "# Python code, return ans\ntotal_people = 49\nAmericans = 16\nAustralians = 11\nChinese = total_people - Americans - Australians\nans = Chinese"
        ],
        "results": [
            22.0,
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 3
        },
        "prediction": 22.0
    },
    {
        "question": "A summer sports camp had 88 soccer campers, basketball campers and football campers. If 24 of them were basketball campers and 32 of them were football campers, how many soccer campers were there?",
        "answer": 32,
        "generated": [
            "# Python code, return ans\ntotal_campers = 88\nbasketball_campers = 24\nfootball_campers = 32\nsoccer_campers = total_campers - (basketball_campers + football_campers)\nans = soccer_campers",
            "# Python code, return ans\ntotal_campers = 88\nbasketball_campers = 24\nfootball_campers = 32\nsoccer_campers = total_campers - (basketball_campers + football_campers)\nans = soccer_campers",
            "# Python code, return ans\ntotal_campers = 88\nbasketball_campers = 24\nfootball_campers = 32\nsoccer_campers = total_campers - (basketball_campers + football_campers)\nans = soccer_campers"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "67 medals are displayed in the sports center. There are 19 gold medals and 32 silver medals. How many bronze medals are displayed?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\ntotal_medals = 67\ngold_medals = 19\nsilver_medals = 32\nbronze_medals = total_medals - gold_medals - silver_medals\nans = bronze_medals",
            "# Python code, return ans\ntotal_medals = 67\ngold_medals = 19\nsilver_medals = 32\nbronze_medals = total_medals - gold_medals - silver_medals\nans = bronze_medals",
            "# Python code, return ans\ntotal_medals = 67\ngold_medals = 19\nsilver_medals = 32\nbronze_medals = total_medals - gold_medals - silver_medals\nans = bronze_medals"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "At a store, there are 92 computers. 31 are sold. 20 are shipped away to a company. How many computers are left?",
        "answer": 41,
        "generated": [
            "# Python code, return ans\ntotal_computers = 92\nsold_computers = 31\nshipped_computers = 20\nremaining_computers = total_computers - sold_computers - shipped_computers\nans = remaining_computers",
            "# Python code, return ans\ntotal_computers = 92\nsold_computers = 31\nshipped_computers = 20\ncomputers_left = total_computers - sold_computers - shipped_computers\nans = computers_left",
            "# Python code, return ans\ntotal_computers = 92\nsold_computers = 31\nshipped_computers = 20\ncomputers_left = total_computers - sold_computers - shipped_computers\nans = computers_left"
        ],
        "results": [
            41.0,
            41.0,
            41.0
        ],
        "result_counter": {
            "41.0": 3
        },
        "prediction": 41.0
    },
    {
        "question": "There were 86 pineapples in a store. The owner sold 48 pineapples. 9 of the remaining pineapples were rotten and thrown away. How many fresh pineapples are left?",
        "answer": 29,
        "generated": [
            "# Python code, return ans\ntotal_pineapples = 86\nsold_pineapples = 48\nrotten_pineapples = 9\nfresh_pineapples = total_pineapples - sold_pineapples - rotten_pineapples\nans = fresh_pineapples",
            "# Python code, return ans\ntotal_pineapples = 86\nsold_pineapples = 48\nrotten_pineapples = 9\nfresh_pineapples = total_pineapples - sold_pineapples - rotten_pineapples\nans = fresh_pineapples",
            "# Python code, return ans\ntotal_pineapples = 86\nsold_pineapples = 48\nrotten_pineapples = 9\nfresh_pineapples = total_pineapples - sold_pineapples - rotten_pineapples\nans = fresh_pineapples"
        ],
        "results": [
            29.0,
            29.0,
            29.0
        ],
        "result_counter": {
            "29.0": 3
        },
        "prediction": 29.0
    },
    {
        "question": "Lenny has $84. He spent $24 on video games, and $21 at the grocery store. How much does Lenny have left?",
        "answer": 39,
        "generated": [
            "# Python code, return ans\nLenny_money = 84\nspent_video_games = 24\nspent_grocery = 21\nLenny_money_left = Lenny_money - (spent_video_games + spent_grocery)\nans = Lenny_money_left",
            "# Python code, return ans\ninitial_money = 84\nspent_on_games = 24\nspent_on_groceries = 21\nmoney_left = initial_money - (spent_on_games + spent_on_groceries)\nans = money_left",
            "# Python code, return ans\nLenny_money = 84\nspent_video_games = 24\nspent_grocery_store = 21\nLenny_money_left = Lenny_money - spent_video_games - spent_grocery_store\nans = Lenny_money_left"
        ],
        "results": [
            39.0,
            39.0,
            39.0
        ],
        "result_counter": {
            "39.0": 3
        },
        "prediction": 39.0
    },
    {
        "question": "There are 96 trees in a park. 15 of them are huge ancient oaks and another 23 of them are medium-sized fir trees. The rest are saplings. How many saplings are in the park?",
        "answer": 58,
        "generated": [
            "# Python code, return ans\ntotal_trees = 96\nancient_oaks = 15\nmedium_firs = 23\nsaplings = total_trees - (ancient_oaks + medium_firs)\nans = saplings",
            "# Python code, return ans\ntotal_trees = 96\nancient_oaks = 15\nfir_trees = 23\nsaplings = total_trees - (ancient_oaks + fir_trees)\nans = saplings",
            "# Python code, return ans\ntotal_trees = 96\nancient_oaks = 15\nfir_trees = 23\nsaplings = total_trees - (ancient_oaks + fir_trees)\nans = saplings"
        ],
        "results": [
            58.0,
            58.0,
            58.0
        ],
        "result_counter": {
            "58.0": 3
        },
        "prediction": 58.0
    },
    {
        "question": "There were 86 trees in a park. 15 of them died and another 23 of them were cut. How many trees were still left?",
        "answer": 48,
        "generated": [
            "# Python code, return ans\ntotal_trees = 86\ndead_trees = 15\ncut_trees = 23\nremaining_trees = total_trees - dead_trees - cut_trees\nans = remaining_trees",
            "# Python code, return ans\ntotal_trees = 86\ndead_trees = 15\ncut_trees = 23\nremaining_trees = total_trees - dead_trees - cut_trees\nans = remaining_trees",
            "# Python code, return ans\ntotal_trees = 86\ndead_trees = 15\ncut_trees = 23\nremaining_trees = total_trees - dead_trees - cut_trees\nans = remaining_trees"
        ],
        "results": [
            48.0,
            48.0,
            48.0
        ],
        "result_counter": {
            "48.0": 3
        },
        "prediction": 48.0
    },
    {
        "question": "A mirror store has 78 mirrors in stock. 8 mirrors are broken, and 57 mirrors are sold. How many mirrors are left?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\nmirrors_in_stock = 78\nbroken_mirrors = 8\nsold_mirrors = 57\nmirrors_left = mirrors_in_stock - broken_mirrors - sold_mirrors\nans = mirrors_left",
            "# Python code, return ans\nmirror_stock = 78\nbroken_mirrors = 8\nsold_mirrors = 57\nremaining_mirrors = mirror_stock - broken_mirrors - sold_mirrors\nans = remaining_mirrors",
            "# Python code, return ans\nmirrors_in_stock = 78\nbroken_mirrors = 8\nsold_mirrors = 57\nmirrors_left = mirrors_in_stock - broken_mirrors - sold_mirrors\nans = mirrors_left"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "A restaurant has 67 tomatoes. 32 are made into salads. Another 21 are made into pasta sauce. How many tomatoes are left?",
        "answer": 14,
        "generated": [
            "# Python code, return ans\ntotal_tomatoes = 67\ntomatoes_salad = 32\ntomatoes_sauce = 21\ntomatoes_left = total_tomatoes - (tomatoes_salad + tomatoes_sauce)\nans = tomatoes_left",
            "# Python code, return ans\ntotal_tomatoes = 67\ntomatoes_salad = 32\ntomatoes_sauce = 21\ntomatoes_left = total_tomatoes - tomatoes_salad - tomatoes_sauce\nans = tomatoes_left",
            "# Python code, return ans\ntotal_tomatoes = 67\ntomatoes_in_salad = 32\ntomatoes_in_sauce = 21\ntomatoes_left = total_tomatoes - (tomatoes_in_salad + tomatoes_in_sauce)\nans = tomatoes_left"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "Ryan collected 89 leaves. He lost 24 leaves. After a while, 43 more leaves broke. How many leaves are left in his collection?",
        "answer": 22,
        "generated": [
            "# Python code, return ans\ncollected_leaves = 89\nlost_leaves = 24\nbroken_leaves = 43\nremaining_leaves = collected_leaves - lost_leaves - broken_leaves\nans = remaining_leaves",
            "# Python code, return ans\ninitial_leaves = 89\nlost_leaves = 24\nbroken_leaves = 43\nremaining_leaves = initial_leaves - lost_leaves - broken_leaves\nans = remaining_leaves",
            "# Python code, return ans\ncollected_leaves = 89\nlost_leaves = 24\nbroken_leaves = 43\nremaining_leaves = collected_leaves - lost_leaves - broken_leaves\nans = remaining_leaves"
        ],
        "results": [
            22.0,
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 3
        },
        "prediction": 22.0
    },
    {
        "question": "Kendra took a road trip. In the afternoon, she saw 4 minivans like hers. Later, in the evening, she saw one more minivan like hers. How many minivans like hers did she see in all?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nminivans_afternoon = 4\nminivans_evening = 1\ntotal_minivans = minivans_afternoon + minivans_evening\nans = total_minivans",
            "# Python code, return ans\nminivans_afternoon = 4\nminivans_evening = 1\ntotal_minivans = minivans_afternoon + minivans_evening\nans = total_minivans",
            "# Python code, return ans\nminivans_afternoon = 4\nminivans_evening = 1\ntotal_minivans = minivans_afternoon + minivans_evening\nans = total_minivans"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "There are 4 boys and 5 girls in a preschool daycare. How many children are there in the daycare?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nboys = 4\ngirls = 5\ntotal_children = boys + girls\nans = total_children",
            "# Python code, return ans\nboys = 4\ngirls = 5\ntotal_children = boys + girls\nans = total_children",
            "# Python code, return ans\nboys = 4\ngirls = 5\ntotal_children = boys + girls\nans = total_children"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "The Vance family walked over to the post office. They bought 2 rooster stamps and 2 daffodil stamps. How many stamps did they buy in all?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nrooster_stamps = 2\ndaffodil_stamps = 2\ntotal_stamps = rooster_stamps + daffodil_stamps\nans = total_stamps",
            "# Python code, return ans\nrooster_stamps = 2\ndaffodil_stamps = 2\ntotal_stamps = rooster_stamps + daffodil_stamps\nans = total_stamps",
            "# Python code, return ans\nrooster_stamps = 2\ndaffodil_stamps = 2\ntotal_stamps = rooster_stamps + daffodil_stamps\nans = total_stamps"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "There are 7 basketballs at a school. If the school buys another 3 basketballs, how many basketballs will the school have?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\ncurrent_basketballs = 7\nnew_basketballs = 3\ntotal_basketballs = current_basketballs + new_basketballs\nans = total_basketballs",
            "# Python code, return ans\ncurrent_basketballs = 7\nnew_basketballs = 3\ntotal_basketballs = current_basketballs + new_basketballs\nans = total_basketballs",
            "# Python code, return ans\ncurrent_basketballs = 7\nnew_basketballs = 3\ntotal_basketballs = current_basketballs + new_basketballs\nans = total_basketballs"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "Garrett went shopping for snack supplies and bought 6 oatmeal raisin granola bars and 8 peanut granola bars. How many granola bars did he buy in all?",
        "answer": 14,
        "generated": [
            "# Python code, return ans\noatmeal_granola_bars = 6\npeanut_granola_bars = 8\ntotal_granola_bars = oatmeal_granola_bars + peanut_granola_bars\nans = total_granola_bars",
            "# Python code, return ans\noatmeal_granola_bars = 6\npeanut_granola_bars = 8\ntotal_granola_bars = oatmeal_granola_bars + peanut_granola_bars\nans = total_granola_bars",
            "# Python code, return ans\noatmeal_granola_bars = 6\npeanut_granola_bars = 8\ntotal_granola_bars = oatmeal_granola_bars + peanut_granola_bars\nans = total_granola_bars"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "Jack received 8 emails in the morning and 2 emails in the afternoon. How many emails did Jack receive in the day?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\nemails_morning = 8\nemails_afternoon = 2\ntotal_emails = emails_morning + emails_afternoon\nans = total_emails",
            "# Python code, return ans\nemails_morning = 8\nemails_afternoon = 2\ntotal_emails = emails_morning + emails_afternoon\nans = total_emails",
            "# Python code, return ans\nemails_morning = 8\nemails_afternoon = 2\ntotal_emails = emails_morning + emails_afternoon\nans = total_emails"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "Teacher buys 4 black pens and 4 blue pens for students as awards. How many pens does the teacher buy altogether?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nblack_pens = 4\nblue_pens = 4\ntotal_pens = black_pens + blue_pens\nans = total_pens",
            "# Python code, return ans\nblack_pens = 4\nblue_pens = 4\ntotal_pens = black_pens + blue_pens\nans = total_pens",
            "# Python code, return ans\nblack_pens = 4\nblue_pens = 4\ntotal_pens = black_pens + blue_pens\nans = total_pens"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "A chess club has 3 members. If 4 new members are enrolled, how many total members are there in the chess club?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ninitial_members = 3\nnew_members = 4\ntotal_members = initial_members + new_members\nans = total_members",
            "# Python code, return ans\ninitial_members = 3\nnew_members = 4\ntotal_members = initial_members + new_members\nans = total_members",
            "# Python code, return ans\ninitial_members = 3\nnew_members = 4\ntotal_members = initial_members + new_members\nans = total_members"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "There are 5 roses and 5 carnations in a vase. How many flowers are there in the vase in all?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\nroses = 5\ncarnations = 5\ntotal_flowers = roses + carnations\nans = total_flowers",
            "# Python code, return ans\nroses = 5\ncarnations = 5\ntotal_flowers = roses + carnations\nans = total_flowers",
            "# Python code, return ans\nroses = 5\ncarnations = 5\ntotal_flowers = roses + carnations\nans = total_flowers"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "Every day, Ryan spends 4 hours on learning English and 3 hours on learning Chinese. How many hours does he spend on learning English and Chinese in all?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nhours_learning_English = 4\nhours_learning_Chinese = 3\ntotal_hours_learning = hours_learning_English + hours_learning_Chinese\nans = total_hours_learning",
            "# Python code, return ans\nEnglish_hours = 4\nChinese_hours = 3\ntotal_hours = English_hours + Chinese_hours\nans = total_hours",
            "# Python code, return ans\nhours_english = 4\nhours_chinese = 3\ntotal_hours = hours_english + hours_chinese\nans = total_hours"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "There are 83 trees in a park. 36 of them willows and the rest are oaks. How many more oaks than willows are there in the park?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\ntotal_trees = 83\nwillows = 36\noaks = total_trees - willows\nmore_oaks_than_willows = oaks - willows\nans = more_oaks_than_willows",
            "# Python code, return ans\ntotal_trees = 83\nwillows = 36\noaks = total_trees - willows\nmore_oaks_than_willows = oaks - willows\nans = more_oaks_than_willows",
            "# Python code, return ans\ntotal_trees = 83\nwillow_trees = 36\noak_trees = total_trees - willow_trees\nmore_oaks_than_willows = oak_trees - willow_trees\nans = more_oaks_than_willows"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "Ryan collected 89 leaves. He lost 24 leaves and threw away 43 leaves. How many leaves did Ryan have left?",
        "answer": 22,
        "generated": [
            "# Python code, return ans\ncollected_leaves = 89\nlost_leaves = 24\nthrown_away_leaves = 43\nremaining_leaves = collected_leaves - lost_leaves - thrown_away_leaves\nans = remaining_leaves",
            "# Python code, return ans\ncollected_leaves = 89\nlost_leaves = 24\nthrown_away_leaves = 43\nremaining_leaves = collected_leaves - lost_leaves - thrown_away_leaves\nans = remaining_leaves",
            "# Python code, return ans\ncollected_leaves = 89\nlost_leaves = 24\nthrown_away_leaves = 43\nremaining_leaves = collected_leaves - lost_leaves - thrown_away_leaves\nans = remaining_leaves"
        ],
        "results": [
            22.0,
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 3
        },
        "prediction": 22.0
    },
    {
        "question": "Sam has 58 Power Ranger stickers. He bundles them up in two boxes. If there are 23 Power Ranger stickers in the first box, how many more Power Ranger stickers are there in the second box than the first box?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\ntotal_stickers = 58\nfirst_box = 23\nsecond_box = total_stickers - first_box\nmore_stickers = second_box - first_box\nans = more_stickers",
            "# Python code, return ans\nstickers_total = 58\nstickers_first_box = 23\nstickers_second_box = stickers_total - stickers_first_box\nmore_stickers_in_second_box = stickers_second_box - stickers_first_box\nans = more_stickers_in_second_box",
            "# Python code, return ans\nstickers_total = 58\nstickers_first_box = 23\nstickers_second_box = stickers_total - stickers_first_box\nmore_stickers = stickers_second_box - stickers_first_box\nans = more_stickers"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Beryl has 88 radishes. She puts them into two baskets. If there are 37 radishes in the first basket, how many more radishes are there in the second basket than the first?",
        "answer": 14,
        "generated": [
            "# Python code, return ans\ntotal_radishes = 88\nfirst_basket = 37\nsecond_basket = total_radishes - first_basket\nmore_radishes = second_basket - first_basket\nans = more_radishes",
            "# Python code, return ans\ntotal_radishes = 88\nfirst_basket_radishes = 37\nsecond_basket_radishes = total_radishes - first_basket_radishes\nmore_radishes = second_basket_radishes - first_basket_radishes\nans = more_radishes",
            "# Python code, return ans\ntotal_radishes = 88\nfirst_basket = 37\nsecond_basket = total_radishes - first_basket\nmore_radishes = second_basket - first_basket\nans = more_radishes"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "There are 56 students in the class. The teacher wants to split them into two groups. The first group has 24 students. How many more students will there be in the second group?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ntotal_students = 56\nfirst_group_students = 24\nsecond_group_students = total_students - first_group_students\nans = second_group_students",
            "# Python code, return ans\ntotal_students = 56\nfirst_group_students = 24\nsecond_group_students = total_students - first_group_students\nans = second_group_students",
            "# Python code, return ans\ntotal_students = 56\nfirst_group_students = 24\nsecond_group_students = total_students - first_group_students\nans = second_group_students"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "The total weight of Jack and Sam is 96 pounds. If Jack weighs 52 pounds, how much heavier is Jack than Sam?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ntotal_weight = 96\nJack_weight = 52\nSam_weight = total_weight - Jack_weight\nweight_difference = Jack_weight - Sam_weight\nans = weight_difference",
            "# Python code, return ans\nJack_weight = 52\ntotal_weight = 96\nSam_weight = total_weight - Jack_weight\nweight_difference = Jack_weight - Sam_weight\nans = weight_difference",
            "# Python code, return ans\nJack_weight = 52\ntotal_weight = 96\nSam_weight = total_weight - Jack_weight\nweight_difference = Jack_weight - Sam_weight\nans = weight_difference"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Antonia has 79 Barbie Dolls. She packs away them in two wardrobes. If there are 35 Barbie Dolls in the first wardrobe, how many more Barbie Dolls are there in the second wardrobe than the first?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ntotal_dolls = 79\nfirst_wardrobe_dolls = 35\nsecond_wardrobe_dolls = total_dolls - first_wardrobe_dolls\nmore_dolls_in_second = second_wardrobe_dolls - first_wardrobe_dolls\nans = more_dolls_in_second",
            "# Python code, return ans\ntotal_dolls = 79\nfirst_wardrobe_dolls = 35\nsecond_wardrobe_dolls = total_dolls - first_wardrobe_dolls\nmore_dolls_in_second = second_wardrobe_dolls - first_wardrobe_dolls\nans = more_dolls_in_second",
            "# Python code, return ans\ntotal_dolls = 79\nfirst_wardrobe_dolls = 35\nsecond_wardrobe_dolls = total_dolls - first_wardrobe_dolls\nmore_dolls_in_second = second_wardrobe_dolls - first_wardrobe_dolls\nans = more_dolls_in_second"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Savant has 3 jars. He puts in 34 coins in the first jar, 29 coins in the second jar and 13 coins in the third jar. How many coins does Savant save together?",
        "answer": 76,
        "generated": [
            "# Python code, return ans\njar1_coins = 34\njar2_coins = 29\njar3_coins = 13\ntotal_coins = jar1_coins + jar2_coins + jar3_coins\nans = total_coins",
            "# Python code, return ans\njar1_coins = 34\njar2_coins = 29\njar3_coins = 13\ntotal_coins = jar1_coins + jar2_coins + jar3_coins\nans = total_coins",
            "# Python code, return ans\njar1_coins = 34\njar2_coins = 29\njar3_coins = 13\ntotal_coins = jar1_coins + jar2_coins + jar3_coins\nans = total_coins"
        ],
        "results": [
            76.0,
            76.0,
            76.0
        ],
        "result_counter": {
            "76.0": 3
        },
        "prediction": 76.0
    },
    {
        "question": "An online toy store stocked some toys. It sold 38 toys at the first week and 26 toys at the second week. If it had 19 toys left, how many toys were in stock at the beginning?",
        "answer": 83,
        "generated": [
            "# Python code, return ans\nsold_first_week = 38\nsold_second_week = 26\nleft_toys = 19\ninitial_stock = sold_first_week + sold_second_week + left_toys\nans = initial_stock",
            "# Python code, return ans\ntoys_sold_first_week = 38\ntoys_sold_second_week = 26\ntoys_left = 19\ntoys_stocked_beginning = toys_sold_first_week + toys_sold_second_week + toys_left\nans = toys_stocked_beginning",
            "# Python code, return ans\nsold_first_week = 38\nsold_second_week = 26\nleft_toys = 19\ninitial_stock = sold_first_week + sold_second_week + left_toys\nans = initial_stock"
        ],
        "results": [
            83.0,
            83.0,
            83.0
        ],
        "result_counter": {
            "83.0": 3
        },
        "prediction": 83.0
    },
    {
        "question": "Mother bought some potatoes. She used 15 of the potatoes to make salads and 24 of the potatoes for mashed potatoes. If there were 13 potatoes left, how many potatoes did mother buy at first?",
        "answer": 52,
        "generated": [
            "# Python code, return ans\npotatoes_salad = 15\npotatoes_mashed = 24\npotatoes_left = 13\ntotal_potatoes = potatoes_salad + potatoes_mashed + potatoes_left\nans = total_potatoes",
            "# Python code, return ans\npotatoes_salad = 15\npotatoes_mashed = 24\npotatoes_left = 13\ntotal_potatoes = potatoes_salad + potatoes_mashed + potatoes_left\nans = total_potatoes",
            "# Python code, return ans\nused_for_salad = 15\nused_for_mashed = 24\nleftover_potatoes = 13\ntotal_potatoes = used_for_salad + used_for_mashed + leftover_potatoes\nans = total_potatoes"
        ],
        "results": [
            52.0,
            52.0,
            52.0
        ],
        "result_counter": {
            "52.0": 3
        },
        "prediction": 52.0
    },
    {
        "question": "Joshua has 3 toy boxes for his toy cars. He puts in 21 toy cars in the first toy box, 31 toy cars in the second toy box and 19 toy cars in the third box. How many toy cars does Joshua have together?",
        "answer": 71,
        "generated": [
            "# Python code, return ans\ntoy_box1 = 21\ntoy_box2 = 31\ntoy_box3 = 19\ntotal_toy_cars = toy_box1 + toy_box2 + toy_box3\nans = total_toy_cars",
            "# Python code, return ans\ntoy_box1 = 21\ntoy_box2 = 31\ntoy_box3 = 19\ntotal_toy_cars = toy_box1 + toy_box2 + toy_box3\nans = total_toy_cars",
            "# Python code, return ans\ntoy_box1 = 21\ntoy_box2 = 31\ntoy_box3 = 19\ntotal_toy_cars = toy_box1 + toy_box2 + toy_box3\nans = total_toy_cars"
        ],
        "results": [
            71.0,
            71.0,
            71.0
        ],
        "result_counter": {
            "71.0": 3
        },
        "prediction": 71.0
    },
    {
        "question": "There are some rooms in a building. 35 of them are classrooms, 10 of them are office and the remaining 6 are reading rooms. How many rooms are in the building?",
        "answer": 51,
        "generated": [
            "# Python code, return ans\nclassrooms = 35\noffices = 10\nreading_rooms = 6\ntotal_rooms = classrooms + offices + reading_rooms\nans = total_rooms",
            "# Python code, return ans\nclassrooms = 35\noffices = 10\nreading_rooms = 6\ntotal_rooms = classrooms + offices + reading_rooms\nans = total_rooms",
            "# Python code, return ans\nclassrooms = 35\noffices = 10\nreading_rooms = 6\ntotal_rooms = classrooms + offices + reading_rooms\nans = total_rooms"
        ],
        "results": [
            51.0,
            51.0,
            51.0
        ],
        "result_counter": {
            "51.0": 3
        },
        "prediction": 51.0
    },
    {
        "question": "Mr. Peter harvested some pears. He picked 43 kg of the pears into a bag and 35 kg of the pears into another bag. If there were still 15 kg of pears left unpacked, how many kilograms of pears did Mr. Peter harvest?",
        "answer": 93,
        "generated": [
            "# Python code, return ans\nbag1_pears = 43\nbag2_pears = 35\nunpack_pears = 15\ntotal_pears = bag1_pears + bag2_pears + unpack_pears\nans = total_pears",
            "# Python code, return ans\nbag1_pears = 43\nbag2_pears = 35\nunpack_pears = 15\ntotal_pears = bag1_pears + bag2_pears + unpack_pears\nans = total_pears",
            "# Python code, return ans\nbag1_pears = 43\nbag2_pears = 35\nunpack_pears = 15\ntotal_pears = bag1_pears + bag2_pears + unpack_pears\nans = total_pears"
        ],
        "results": [
            93.0,
            93.0,
            93.0
        ],
        "result_counter": {
            "93.0": 3
        },
        "prediction": 93.0
    },
    {
        "question": "Gary had some stickers. He gave 42 stickers to Lucy and 26 stickers to Alex. If he had 31 stickers left, how many stickers did Gary have at first?",
        "answer": 99,
        "generated": [
            "# Python code, return ans\nstickers_given_Lucy = 42\nstickers_given_Alex = 26\nstickers_left = 31\ntotal_stickers = stickers_given_Lucy + stickers_given_Alex + stickers_left\nans = total_stickers",
            "# Python code, return ans\nstickers_given_to_Lucy = 42\nstickers_given_to_Alex = 26\nstickers_left = 31\ntotal_stickers = stickers_given_to_Lucy + stickers_given_to_Alex + stickers_left\nans = total_stickers",
            "# Python code, return ans\nstickers_given_to_Lucy = 42\nstickers_given_to_Alex = 26\nstickers_left = 31\ntotal_stickers = stickers_given_to_Lucy + stickers_given_to_Alex + stickers_left\nans = total_stickers"
        ],
        "results": [
            99.0,
            99.0,
            99.0
        ],
        "result_counter": {
            "99.0": 3
        },
        "prediction": 99.0
    },
    {
        "question": "A chef served 3 different foods for a banquet: 25 plates lobster rolls, 14 plates of spicy hot noodles and 16 plates of seafood noodles. How many plates of food did the chef make altogether?",
        "answer": 55,
        "generated": [
            "# Python code, return ans\nlobster_rolls = 25\nspicy_hot_noodles = 14\nseafood_noodles = 16\ntotal_plates = lobster_rolls + spicy_hot_noodles + seafood_noodles\nans = total_plates",
            "# Python code, return ans\nlobster_rolls = 25\nspicy_hot_noodles = 14\nseafood_noodles = 16\ntotal_plates = lobster_rolls + spicy_hot_noodles + seafood_noodles\nans = total_plates",
            "# Python code, return ans\nlobster_rolls = 25\nspicy_hot_noodles = 14\nseafood_noodles = 16\ntotal_plates = lobster_rolls + spicy_hot_noodles + seafood_noodles\nans = total_plates"
        ],
        "results": [
            55.0,
            55.0,
            55.0
        ],
        "result_counter": {
            "55.0": 3
        },
        "prediction": 55.0
    },
    {
        "question": "A car dealer sold 14 cars on the first day, 16 cars on the second day, and 27 cars on the third day. How many cars did the car dealer sell on the 3 days?",
        "answer": 57,
        "generated": [
            "# Python code, return ans\ncars_sold_first_day = 14\ncars_sold_second_day = 16\ncars_sold_third_day = 27\ntotal_cars_sold = cars_sold_first_day + cars_sold_second_day + cars_sold_third_day\nans = total_cars_sold",
            "# Python code, return ans\ncars_first_day = 14\ncars_second_day = 16\ncars_third_day = 27\ntotal_cars_sold = cars_first_day + cars_second_day + cars_third_day\nans = total_cars_sold",
            "# Python code, return ans\ncars_sold_day1 = 14\ncars_sold_day2 = 16\ncars_sold_day3 = 27\ntotal_cars_sold = cars_sold_day1 + cars_sold_day2 + cars_sold_day3\nans = total_cars_sold"
        ],
        "results": [
            57.0,
            57.0,
            57.0
        ],
        "result_counter": {
            "57.0": 3
        },
        "prediction": 57.0
    },
    {
        "question": "A washing machine can wash 28 pounds of clothes per day. If there are 200 pounds of clothes to be washed per day, how many washing machines are needed?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nclothes_per_day = 200\nwashing_machine_capacity = 28\nwashing_machines_needed = clothes_per_day // washing_machine_capacity\nif clothes_per_day % washing_machine_capacity > 0:\n    washing_machines_needed += 1\nans = washing_machines_needed",
            "# Python code, return ans\nclothes_per_day = 200\ncapacity_per_machine = 28\nnum_machines_needed = clothes_per_day // capacity_per_machine\n\nif clothes_per_day % capacity_per_machine > 0:\n    num_machines_needed += 1\n\nans = num_machines_needed",
            "# Python code, return ans\nclothes_per_day = 200\nwashing_capacity = 28\nwashing_machines_needed = clothes_per_day // washing_capacity\nif clothes_per_day % washing_capacity > 0:\n    washing_machines_needed += 1\nans = washing_machines_needed"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "A washing machine can wash 28 pounds of clothes per day. If there are 200 pounds of clothes to be washed per day, how many pounds of clothes does the washing machine that isn't fully loaded wash per day?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nwashing_machine_capacity = 28\ntotal_clothes = 200\nnum_of_machines = total_clothes // washing_machine_capacity\nclothes_left = total_clothes - (num_of_machines * washing_machine_capacity)\nans = clothes_left",
            "# Python code, return ans\nwashing_machine_capacity = 28\ntotal_clothes = 200\nfull_loads = total_clothes // washing_machine_capacity\nremaining_clothes = total_clothes - (full_loads * washing_machine_capacity)\nans = remaining_clothes",
            "# Python code, return ans\nwashing_machine_capacity = 28\ntotal_clothes = 200\nnum_machines = total_clothes // washing_machine_capacity\nremaining_clothes = total_clothes - (num_machines * washing_machine_capacity)\nans = remaining_clothes"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "There are 757 pounds of sand to be filled into bags. If each bag has a capacity of 65 pounds, how many bags are needed?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nsand_total = 757\nbag_capacity = 65\nbags_needed = sand_total // bag_capacity + (1 if sand_total % bag_capacity > 0 else 0)\nans = bags_needed",
            "# Python code, return ans\nsand_weight = 757\nbag_capacity = 65\nbags_needed = sand_weight // bag_capacity + (1 if sand_weight % bag_capacity > 0 else 0)\nans = bags_needed",
            "# Python code, return ans\nsand_weight = 757\nbag_capacity = 65\nbags_needed = sand_weight // bag_capacity + (1 if sand_weight % bag_capacity != 0 else 0)\nans = bags_needed"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "There are 757 pounds of sand to be filled into bags. If each bag has a capacity of 65 pounds, how many pounds of sand are there in the bag that is not full?",
        "answer": 42,
        "generated": [
            "# Python code, return ans\ntotal_sand = 757\nbag_capacity = 65\nfull_bags = total_sand // bag_capacity\nremaining_sand = total_sand - (full_bags * bag_capacity)\nans = remaining_sand",
            "# Python code, return ans\ntotal_sand = 757\nbag_capacity = 65\nfull_bags = total_sand // bag_capacity\nremaining_sand = total_sand - (full_bags * bag_capacity)\nans = remaining_sand",
            "# Python code, return ans\ntotal_sand = 757\nbag_capacity = 65\nfull_bags = total_sand // bag_capacity\nremaining_sand = total_sand - (full_bags * bag_capacity)\nans = remaining_sand"
        ],
        "results": [
            42.0,
            42.0,
            42.0
        ],
        "result_counter": {
            "42.0": 3
        },
        "prediction": 42.0
    },
    {
        "question": "If Simon needs to make 519 gift bags at a rate of 42 bags per day, how many days does he need to finish making all the gift boxes?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\ntotal_gift_bags = 519\nbags_per_day = 42\ndays_needed = total_gift_bags / bags_per_day\nans = days_needed",
            "# Python code, return ans\ntotal_gift_bags = 519\nbags_per_day = 42\ndays_needed = total_gift_bags / bags_per_day\nans = days_needed",
            "# Python code, return ans\ntotal_gift_bags = 519\nbags_per_day = 42\ndays_needed = total_gift_bags / bags_per_day\nans = days_needed"
        ],
        "results": [
            12.357142857142858,
            12.357142857142858,
            12.357142857142858
        ],
        "result_counter": {
            "12.357142857142858": 3
        },
        "prediction": 12.357142857142858
    },
    {
        "question": "If Simon needs to make 519 gift bags at a rate of 42 bags per day, how many gift bags will he make on the last day?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\ntotal_gift_bags = 519\nbags_per_day = 42\ndays_needed = total_gift_bags // bags_per_day\nremaining_gift_bags = total_gift_bags % bags_per_day\nans = remaining_gift_bags",
            "# Python code, return ans\ntotal_gift_bags = 519\nbags_per_day = 42\ndays = total_gift_bags // bags_per_day\nremaining_gift_bags = total_gift_bags - (days * bags_per_day)\nans = remaining_gift_bags",
            "# Python code, return ans\ntotal_gift_bags = 519\nbags_per_day = 42\ndays_to_complete = total_gift_bags // bags_per_day\nremaining_gift_bags = total_gift_bags - (days_to_complete * bags_per_day)\nans = remaining_gift_bags"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "Jane can arrange 16 vases of flowers in a day. If there are 248 vases of flowers to be arranged, how many days are needed for her to finish all the flower arrangements?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\nvases_per_day = 16\ntotal_vases = 248\ndays_needed = total_vases / vases_per_day\nans = days_needed",
            "# Python code, return ans\nvases_per_day = 16\ntotal_vases = 248\ndays_needed = total_vases / vases_per_day\nans = days_needed",
            "# Python code, return ans\nvases_per_day = 16\ntotal_vases = 248\ndays_needed = total_vases / vases_per_day\nans = days_needed"
        ],
        "results": [
            15.5,
            15.5,
            15.5
        ],
        "result_counter": {
            "15.5": 3
        },
        "prediction": 15.5
    },
    {
        "question": "Jane can arrange 16 vases of flowers in a day. If there are 248 vases of flowers to be arranged, how many vases of flowers will she arrange on the last day?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ntotal_vases = 248\nvases_per_day = 16\ndays = total_vases // vases_per_day\nremaining_vases = total_vases - (days * vases_per_day)\nans = remaining_vases",
            "# Python code, return ans\ntotal_vases = 248\nvases_per_day = 16\ndays_to_arrange = total_vases // vases_per_day\nlast_day_vases = total_vases - (days_to_arrange * vases_per_day)\nans = last_day_vases",
            "# Python code, return ans\nvases_total = 248\nvases_per_day = 16\ndays_to_arrange = vases_total // vases_per_day\nvases_last_day = vases_total - (days_to_arrange * vases_per_day)\nans = vases_last_day"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "A box can hold 18 pieces of chalk. If there are 3,484 pieces of chalk, how many boxes are full to hold all the chalk?",
        "answer": 194,
        "generated": [
            "# Python code, return ans\nchalk_per_box = 18\ntotal_chalk = 3484\nfull_boxes = total_chalk // chalk_per_box\nans = full_boxes",
            "# Python code, return ans\nchalk_pieces = 3484\nbox_capacity = 18\nfull_boxes = chalk_pieces // box_capacity\nans = full_boxes",
            "# Python code, return ans\nchalk_pieces = 3484\nchalk_per_box = 18\nfull_boxes = chalk_pieces // chalk_per_box\nans = full_boxes"
        ],
        "results": [
            193.0,
            193.0,
            193.0
        ],
        "result_counter": {
            "193.0": 3
        },
        "prediction": 193.0
    },
    {
        "question": "A box can hold 18 pieces of chalk. If there are 3,484 pieces of chalk, how many chalks are there in the box that is not full?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\nchalk_per_box = 18\ntotal_chalk = 3484\nchalk_in_not_full_box = total_chalk % chalk_per_box\nans = chalk_in_not_full_box",
            "# Python code, return ans\nchalk_per_box = 18\ntotal_chalk = 3484\nremaining_chalk = total_chalk % chalk_per_box\nans = remaining_chalk",
            "# Python code, return ans\ntotal_chalk = 3484\nchalk_per_box = 18\nfull_boxes = total_chalk // chalk_per_box\nremaining_chalk = total_chalk - (full_boxes * chalk_per_box)\nans = remaining_chalk"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "A paper bag can hold 16 cookies. If Edgar buys 292 cookies, how many paper bags does he need?",
        "answer": 19,
        "generated": [
            "# Python code, return ans\ncookies = 292\ncookies_per_bag = 16\nbags_needed = (cookies + cookies_per_bag - 1) // cookies_per_bag\nans = bags_needed",
            "# Python code, return ans\ncookies = 292\ncookies_per_bag = 16\nbags_needed = cookies // cookies_per_bag\nif cookies % cookies_per_bag != 0:\n    bags_needed += 1\nans = bags_needed",
            "# Python code, return ans\ncookies = 292\ncookies_per_bag = 16\nbags_needed = (cookies + cookies_per_bag - 1) // cookies_per_bag\nans = bags_needed"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "A paper bag can hold 16 cookies. If Edgar buys 292 cookies, how many cookies are there in the paper bag that is not full?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ncookies_total = 292\ncookies_per_bag = 16\nbags_needed = cookies_total // cookies_per_bag\nremaining_cookies = cookies_total % cookies_per_bag\nans = remaining_cookies",
            "# Python code, return ans\ncookies_total = 292\ncookies_per_bag = 16\nbags_full = cookies_total // cookies_per_bag\nremaining_cookies = cookies_total - (bags_full * cookies_per_bag)\nans = remaining_cookies",
            "# Python code, return ans\ntotal_cookies = 292\ncookies_per_bag = 16\nfull_bags = total_cookies // cookies_per_bag\nremaining_cookies = total_cookies - (full_bags * cookies_per_bag)\nans = remaining_cookies"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "A bus can transport 48 passengers. If a school of 1,230 students and teachers are going on a field trip, how many buses should be rented?",
        "answer": 26,
        "generated": [
            "# Python code, return ans\ntotal_people = 1230\nbus_capacity = 48\nnum_buses = total_people // bus_capacity\nif total_people % bus_capacity > 0:\n    num_buses += 1\nans = num_buses",
            "# Python code, return ans\ntotal_people = 1230\nbus_capacity = 48\nbuses_needed = total_people // bus_capacity\nif total_people % bus_capacity > 0:\n    buses_needed += 1\nans = buses_needed",
            "# Python code, return ans\ntotal_people = 1230\nbus_capacity = 48\nbuses_needed = total_people // bus_capacity\nif total_people % bus_capacity != 0:\n    buses_needed += 1\nans = buses_needed"
        ],
        "results": [
            26.0,
            26.0,
            26.0
        ],
        "result_counter": {
            "26.0": 3
        },
        "prediction": 26.0
    },
    {
        "question": "A bus can transport 48 passengers. If a school of 1,230 students and teachers are going on a field trip, how many passengers are there on the bus that is not fully occupied?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\ntotal_passengers = 1230\nbus_capacity = 48\nnum_full_buses = total_passengers // bus_capacity\nremaining_passengers = total_passengers - (num_full_buses * bus_capacity)\nans = remaining_passengers",
            "# Python code, return ans\ntotal_people = 1230\nbus_capacity = 48\nfull_bus_num = total_people // bus_capacity\nremaining_passengers = total_people % bus_capacity\nans = remaining_passengers",
            "# Python code, return ans\ntotal_students_teachers = 1230\nbus_capacity = 48\nnum_full_buses = total_students_teachers // bus_capacity\nremaining_passengers = total_students_teachers % bus_capacity\nans = remaining_passengers"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "If Tom plans to fix 158 watches at the rate of 12 watches per day, how many days does he need to fix the watches?",
        "answer": 14,
        "generated": [
            "# Python code, return ans\nwatches_to_fix = 158\nwatches_per_day = 12\ndays_needed = watches_to_fix / watches_per_day\nans = days_needed",
            "# Python code, return ans\nwatches_to_fix = 158\nwatches_per_day = 12\ndays_needed = watches_to_fix / watches_per_day\nans = days_needed",
            "# Python code, return ans\ntotal_watches = 158\nwatches_per_day = 12\ndays_needed = total_watches / watches_per_day\nans = days_needed"
        ],
        "results": [
            13.166666666666666,
            13.166666666666666,
            13.166666666666666
        ],
        "result_counter": {
            "13.166666666666666": 3
        },
        "prediction": 13.166666666666666
    },
    {
        "question": "If Tom plans to fix 158 watches at the rate of 12 watches per day, how many watches will he fix on the last day?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ntotal_watches = 158\nwatches_per_day = 12\ndays = total_watches // watches_per_day\nwatches_on_last_day = total_watches - (days * watches_per_day)\nans = watches_on_last_day",
            "# Python code, return ans\ntotal_watches = 158\nwatches_per_day = 12\ndays = total_watches // watches_per_day\nremaining_watches = total_watches - (days * watches_per_day)\nans = remaining_watches",
            "# Python code, return ans\ntotal_watches = 158\nwatches_per_day = 12\ndays_to_fix = total_watches // watches_per_day\nwatches_last_day = total_watches - (days_to_fix * watches_per_day)\nans = watches_last_day"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Jack is reading a 285-page book. If he reads 23 pages per day, how many days will he take to finish reading the book?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\nbook_pages = 285\npages_per_day = 23\ndays_to_finish = book_pages / pages_per_day\nans = days_to_finish",
            "# Python code, return ans\nbook_pages = 285\npages_per_day = 23\ndays_to_finish = book_pages / pages_per_day\nans = days_to_finish",
            "# Python code, return ans\nbook_pages = 285\npages_per_day = 23\ndays_to_finish = book_pages / pages_per_day\nans = days_to_finish"
        ],
        "results": [
            12.391304347826088,
            12.391304347826088,
            12.391304347826088
        ],
        "result_counter": {
            "12.391304347826088": 3
        },
        "prediction": 12.391304347826088
    },
    {
        "question": "Jack is reading a 285-page book. If he reads 23 pages per day, how many pages will he read on the last day?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ntotal_pages = 285\npages_per_day = 23\ndays_to_read = total_pages // pages_per_day\npages_left = total_pages - (days_to_read * pages_per_day)\nans = pages_left",
            "# Python code, return ans\ntotal_pages = 285\npages_per_day = 23\ndays_to_read = total_pages // pages_per_day\nremaining_pages = total_pages - (days_to_read * pages_per_day)\nans = remaining_pages",
            "# Python code, return ans\ntotal_pages = 285\npages_per_day = 23\ndays_to_read = total_pages // pages_per_day\npages_left = total_pages - (days_to_read * pages_per_day)\nans = pages_left"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "The capacity of a tank is 32 gallons. If a company bought 728 gallons of oil, how many tanks are needed to hold all the oil?",
        "answer": 23,
        "generated": [
            "# Python code, return ans\ntank_capacity = 32\noil_gallons = 728\ntanks_needed = oil_gallons // tank_capacity + (1 if oil_gallons % tank_capacity != 0 else 0)\nans = tanks_needed",
            "# Python code, return ans\ntank_capacity = 32\noil_gallons = 728\ntanks_needed = oil_gallons // tank_capacity + (1 if oil_gallons % tank_capacity > 0 else 0)\nans = tanks_needed",
            "# Python code, return ans\ntank_capacity = 32\noil_gallons = 728\ntanks_needed = oil_gallons // tank_capacity\nif oil_gallons % tank_capacity != 0:\n    tanks_needed += 1\nans = tanks_needed"
        ],
        "results": [
            23.0,
            23.0,
            23.0
        ],
        "result_counter": {
            "23.0": 3
        },
        "prediction": 23.0
    },
    {
        "question": "The capacity of a tank is 32 gallons. If a company bought 728 gallons of oil, how much oil is in the tank that is not full?",
        "answer": 24,
        "generated": [
            "# Python code, return ans\ntotal_oil = 728\ntank_capacity = 32\nremaining_oil = total_oil % tank_capacity\nans = remaining_oil",
            "# Python code, return ans\ntotal_oil = 728\ntank_capacity = 32\nremaining_oil = total_oil % tank_capacity\nans = remaining_oil",
            "# Python code, return ans\ntotal_oil = 728\ntank_capacity = 32\nremaining_oil = total_oil % tank_capacity\nans = remaining_oil"
        ],
        "results": [
            24.0,
            24.0,
            24.0
        ],
        "result_counter": {
            "24.0": 3
        },
        "prediction": 24.0
    },
    {
        "question": "Mrs. Smith gave 53 strawberries to 8 girls equally. How many strawberries did each girl get?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nstrawberries = 53\ngirls = 8\nstrawberries_per_girl = strawberries // girls\nans = strawberries_per_girl",
            "# Python code, return ans\nstrawberries = 53\ngirls = 8\nstrawberries_per_girl = strawberries // girls\nans = strawberries_per_girl",
            "# Python code, return ans\nstrawberries = 53\ngirls = 8\nstrawberries_per_girl = strawberries // girls\nans = strawberries_per_girl"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Mrs. Smith gave 53 strawberries to 8 girls equally. How many strawberries were left?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nstrawberries = 53\ngirls = 8\nstrawberries_each = strawberries // girls\nstrawberries_left = strawberries % girls\nans = strawberries_left",
            "# Python code, return ans\nstrawberries = 53\ngirls = 8\nstrawberries_per_girl = strawberries // girls\nstrawberries_left = strawberries % girls\nans = strawberries_left",
            "# Python code, return ans\ntotal_strawberries = 53\ngirls = 8\nstrawberries_per_girl = total_strawberries // girls\nleftover_strawberries = total_strawberries % girls\nans = leftover_strawberries"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Tom had $19 and he wanted to buy as many folders as he could. If one folder costs $2, how many folders can Tom buy?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nTom_money = 19\nfolder_cost = 2\nfolders_can_buy = Tom_money // folder_cost\nans = folders_can_buy",
            "# Python code, return ans\nTom_money = 19\nfolder_cost = 2\nfolders_can_buy = Tom_money // folder_cost\nans = folders_can_buy",
            "# Python code, return ans\nTom_money = 19\nfolder_cost = 2\nfolders_can_buy = Tom_money // folder_cost\nans = folders_can_buy"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Tom had $19 and he wanted to buy as many folders as he could. If one folder costs $2, how much is left after he bought the folders?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\nTom_money = 19\nfolder_cost = 2\nfolders_bought = Tom_money // folder_cost\nmoney_left = Tom_money - (folders_bought * folder_cost)\nans = money_left",
            "# Python code, return ans\nTom_money = 19\nfolder_cost = 2\nfolders_bought = Tom_money // folder_cost\nmoney_left = Tom_money - (folders_bought * folder_cost)\nans = money_left",
            "# Python code, return ans\nTom_money = 19\nfolder_cost = 2\nfolders_bought = Tom_money // folder_cost\nmoney_left = Tom_money - (folders_bought * folder_cost)\nans = money_left"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "86 students are going hiking. Each school- bus can take 9 students. How many school-buses are needed?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nstudents = 86\nbus_capacity = 9\nbuses_needed = students // bus_capacity + (1 if students % bus_capacity != 0 else 0)\nans = buses_needed",
            "# Python code, return ans\nstudents = 86\nbus_capacity = 9\nbuses_needed = (students + bus_capacity - 1) // bus_capacity\nans = buses_needed",
            "# Python code, return ans\nstudents = 86\nbus_capacity = 9\nbuses_needed = students // bus_capacity\nif students % bus_capacity > 0:\n    buses_needed += 1\nans = buses_needed"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "86 students are going hiking. Each school- bus can take 9 students. How many students are left?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ntotal_students = 86\nbus_capacity = 9\nstudents_left = total_students % bus_capacity\nans = students_left",
            "# Python code, return ans\ntotal_students = 86\nstudents_per_bus = 9\nstudents_left = total_students % students_per_bus\nans = students_left",
            "# Python code, return ans\ntotal_students = 86\nstudents_per_bus = 9\nstudents_left = total_students % students_per_bus\nans = students_left"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "The teacher gave 42 pencils to 12 students equally. How many pencils did each student get?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\ntotal_pencils = 42\ntotal_students = 12\npencils_per_student = total_pencils // total_students\nans = pencils_per_student",
            "# Python code, return ans\ntotal_pencils = 42\nnum_students = 12\npencils_per_student = total_pencils / num_students\nans = pencils_per_student",
            "# Python code, return ans\ntotal_pencils = 42\ntotal_students = 12\npencils_per_student = total_pencils // total_students\nans = pencils_per_student"
        ],
        "results": [
            3.0,
            3.5,
            3.0
        ],
        "result_counter": {
            "3.0": 2,
            "3.5": 1
        },
        "prediction": 3.0
    },
    {
        "question": "The teacher gave 42 pencils to 12 students equally. How many pencils are left?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ntotal_pencils = 42\nstudents = 12\npencils_per_student = total_pencils // students\npencils_left = total_pencils % students\nans = pencils_left",
            "# Python code, return ans\ntotal_pencils = 42\nstudents = 12\npencils_per_student = total_pencils // students\npencils_left = total_pencils - (pencils_per_student * students)\nans = pencils_left",
            "# Python code, return ans\ntotal_pencils = 42\nstudents = 12\npencils_per_student = total_pencils // students\npencils_left = total_pencils % students\nans = pencils_left"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "9 boys went to water trees. There were 29 trees. If each of them watered the equal amount of trees, how many trees did each boy water?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nboys = 9\ntrees = 29\ntrees_watered_each = trees // boys\nans = trees_watered_each",
            "# Python code, return ans\ntotal_trees = 29\ntotal_boys = 9\ntrees_per_boy = total_trees // total_boys\nans = trees_per_boy",
            "# Python code, return ans\ntotal_trees = 29\nboys = 9\ntrees_per_boy = total_trees // boys\nans = trees_per_boy"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "9 boys went to water trees. There were 29 trees. If each of them watered the equal amount of trees, how many trees are left?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\nboys = 9\ntrees = 29\ntrees_watered_per_boy = trees // boys\ntrees_left = trees - (trees_watered_per_boy * boys)\nans = trees_left",
            "# Python code, return ans\nboys = 9\ntrees = 29\ntrees_per_boy = trees // boys\ntrees_left = trees - (trees_per_boy * boys)\nans = trees_left",
            "# Python code, return ans\nboys = 9\ntrees = 29\ntrees_per_boy = trees // boys\ntrees_left = trees - (trees_per_boy * boys)\nans = trees_left"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "There were 44 laptops in the shop, and Mike divided them equally into 5 rows. How many laptops are there in each row?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nlaptop_num = 44\nrow_num = 5\nlaptops_per_row = laptop_num // row_num\nans = laptops_per_row",
            "# Python code, return ans\nlaptops = 44\nrows = 5\nlaptops_per_row = laptops // rows\nans = laptops_per_row",
            "# Python code, return ans\nlaptops_total = 44\nrows = 5\nlaptops_per_row = laptops_total // rows\nans = laptops_per_row"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "There were 44 laptops in the shop, and Mike divided them equally into 5 rows. How many are left?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nlaptops = 44\nrows = 5\nlaptops_per_row = laptops // rows\nleftover_laptops = laptops % rows\nans = leftover_laptops",
            "# Python code, return ans\nlaptops = 44\nrows = 5\nlaptops_in_each_row = laptops // rows\nlaptops_left = laptops % rows\nans = laptops_left",
            "# Python code, return ans\nlaptops = 44\nrows = 5\nleft_over_laptops = laptops % rows\nans = left_over_laptops"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "There are 22 dogs in the farm. They live in 5 dog-houses equally. How many dogs are there in each dog-house?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ndog_num = 22\ndog_house_num = 5\ndogs_per_house = dog_num // dog_house_num\nans = dogs_per_house",
            "# Python code, return ans\ndog_num = 22\ndog_house_num = 5\ndogs_in_each_house = dog_num // dog_house_num\nans = dogs_in_each_house",
            "# Python code, return ans\ndogs = 22\ndog_houses = 5\ndogs_per_house = dogs // dog_houses\nans = dogs_per_house"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "There are 22 dogs in the farm. They live in 5 dog-houses equally. How many dogs are left?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ntotal_dogs = 22\ndog_houses = 5\ndogs_per_house = total_dogs // dog_houses\ndogs_left = total_dogs % dog_houses\nans = dogs_left",
            "# Python code, return ans\ndogs = 22\ndog_houses = 5\ndogs_per_house = dogs // dog_houses\ndogs_left = dogs % dog_houses\nans = dogs_left",
            "# Python code, return ans\ntotal_dogs = 22\ndog_houses = 5\ndogs_per_house = total_dogs // dog_houses\ndogs_left = total_dogs % dog_houses\nans = dogs_left"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Divide 39 balloons into 7 equal groups. How many balloons are there in each group?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nballoons = 39\ngroups = 7\nballoons_per_group = balloons // groups\nans = balloons_per_group",
            "# Python code, return ans\nballoons = 39\ngroups = 7\nballoons_in_each_group = balloons // groups\nans = balloons_in_each_group",
            "# Python code, return ans\nballoons = 39\ngroups = 7\nballoons_per_group = balloons // groups\nans = balloons_per_group"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Divide 39 balloons into 7 equal groups. How many balloons are left?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ntotal_balloons = 39\ngroups = 7\nballoons_left = total_balloons % groups\nans = balloons_left",
            "# Python code, return ans\nballoons = 39\ngroups = 7\nballoons_left = balloons % groups\nans = balloons_left",
            "# Python code, return ans\nballoons = 39\ngroups = 7\nballoons_left = balloons % groups\nans = balloons_left"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "The school bought 54 basketballs and distribute them into 7 classes equally. How many basketballs did each class get?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ntotal_basketballs = 54\nnum_classes = 7\nbasketballs_per_class = total_basketballs // num_classes\nans = basketballs_per_class",
            "# Python code, return ans\ntotal_basketballs = 54\nnum_classes = 7\nbasketballs_per_class = total_basketballs // num_classes\nans = basketballs_per_class",
            "# Python code, return ans\ntotal_basketballs = 54\nnum_classes = 7\nbasketballs_per_class = total_basketballs // num_classes\nans = basketballs_per_class"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "The school bought 54 basketballs and distribute them into 7 classes equally. How many basketballs are left?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nbasketballs = 54\nclasses = 7\nballs_per_class = basketballs // classes\nballs_left = basketballs % classes\nans = balls_left\n",
            "# Python code, return ans\nbasketballs = 54\nclasses = 7\nbasketballs_per_class = basketballs // classes\nremaining_basketballs = basketballs % classes\nans = remaining_basketballs",
            "# Python code, return ans\nbasketballs = 54\nclasses = 7\nleftover_basketballs = basketballs % classes\nans = leftover_basketballs"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "There are 32 students in the class. The teacher divided them into 5 equal groups. How many students are there in each group?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ntotal_students = 32\ngroups = 5\nstudents_per_group = total_students // groups\nans = students_per_group",
            "# Python code, return ans\ntotal_students = 32\ngroups = 5\nstudents_per_group = total_students // groups\nans = students_per_group",
            "# Python code, return ans\ntotal_students = 32\ngroups = 5\nstudents_per_group = total_students // groups\nans = students_per_group"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "There are 32 students in the class. The teacher divided them into 5 equal groups. How many students are left?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ntotal_students = 32\ngroup_size = 5\nstudents_left = total_students % group_size\nans = students_left",
            "# Python code, return ans\ntotal_students = 32\ngroup_size = 5\nstudents_left = total_students % group_size\nans = students_left",
            "# Python code, return ans\ntotal_students = 32\ngroup_size = 5\nstudents_left = total_students % group_size\nans = students_left"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "A transport company bought 95 tons of oil. A large barrel can hold 6 tons of oil and a small barrel can hold 5 tons of oil. In order to use the least number of barrels and have every barrel fully occupied, how many large barrels should be used?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\ntotal_oil = 95\nlarge_barrel_capacity = 6\nsmall_barrel_capacity = 5\n\nlarge_barrels = 0\n\nwhile total_oil % small_barrel_capacity != 0:\n    total_oil -= large_barrel_capacity\n    large_barrels += 1\n\nans = large_barrels\nans",
            "# Python code, return ans\ntotal_oil = 95\nlarge_barrel_capacity = 6\nsmall_barrel_capacity = 5\n\nlarge_barrels = 0\nwhile total_oil % small_barrel_capacity != 0:\n    total_oil -= large_barrel_capacity\n    large_barrels += 1\n\nans = large_barrels\nans",
            "# Python code, return ans\ntotal_oil = 95\nlarge_barrel_capacity = 6\nsmall_barrel_capacity = 5\n\n# We will use a loop to find the least number of large barrels\nlarge_barrels = 0\nwhile (total_oil - large_barrels * large_barrel_capacity) % small_barrel_capacity != 0:\n    large_barrels += 1\n\nans = large_barrels\nans"
        ],
        "results": [
            0.0,
            0.0,
            0.0
        ],
        "result_counter": {
            "0.0": 3
        },
        "prediction": 0.0
    },
    {
        "question": "A transport company bought 95 tons of oil. A large barrel can hold 6 tons of oil and a small barrel can hold 5 tons of oil. In order to use the least number of barrels and have every barrel fully occupied, how many small barrels should be used?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\ntotal_oil = 95\nlarge_barrel_capacity = 6\nsmall_barrel_capacity = 5\n\nnum_large_barrels = total_oil // large_barrel_capacity\nremaining_oil = total_oil % large_barrel_capacity\n\nnum_small_barrels = remaining_oil // small_barrel_capacity\n\nans = num_small_barrels\nans",
            "# Python code, return ans\ntotal_oil = 95\nlarge_barrel_capacity = 6\nsmall_barrel_capacity = 5\n\n# Find the number of large barrels that can be used\nnum_large_barrels = total_oil // large_barrel_capacity\n\n# Find the remaining oil after using large barrels\nremaining_oil = total_oil - (num_large_barrels * large_barrel_capacity)\n\n# Find the number of small barrels needed for the remaining oil\nnum_small_barrels = remaining_oil // small_barrel_capacity\n\n# Check if there is any oil left after using small barrels\nremaining_oil = remaining_oil - (num_small_barrels * small_barrel_capacity)\n\n# If there is still oil left, use one more small barrel\nif remaining_oil > 0:\n    num_small_barrels += 1\n\nans = num_small_barrels\nans",
            "# Python code, return ans\ntotal_oil = 95\nlarge_barrel_capacity = 6\nsmall_barrel_capacity = 5\n\nlarge_barrels = total_oil // large_barrel_capacity\nremaining_oil = total_oil % large_barrel_capacity\n\nsmall_barrels = remaining_oil // small_barrel_capacity\n\nans = small_barrels\nans"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "A worker needs to cut a 27-yard long rope into some long pieces at 4 yard each and some short pieces at 1 yard each. In order to make the least number of pieces, how many long pieces should be cut for?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nrope_length = 27\nlong_piece_length = 4\nshort_piece_length = 1\n\nlong_pieces = rope_length // long_piece_length\nans = long_pieces",
            "# Python code, return ans\ntotal_length = 27\nlong_piece_length = 4\nshort_piece_length = 1\n\nlong_pieces = total_length // long_piece_length\nans = long_pieces",
            "# Python code, return ans\nrope_length = 27\nlong_piece_length = 4\nshort_piece_length = 1\n\nlong_pieces = rope_length // long_piece_length\nans = long_pieces"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "A worker needs to cut a 27-yard long rope into some long pieces at 4 yard each and some short pieces at 1 yard each. In order to make the least number of pieces, how many short pieces should be cut for?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nrope_length = 27\nlong_piece = 4\nshort_piece = 1\n\nmax_long_pieces = rope_length // long_piece\nremaining_rope = rope_length - (max_long_pieces * long_piece)\n\nshort_pieces_needed = remaining_rope // short_piece\nans = short_pieces_needed",
            "# Python code, return ans\nrope_length = 27\nlong_piece_length = 4\nshort_piece_length = 1\n\nleast_long_pieces = rope_length // long_piece_length\nremaining_rope = rope_length % long_piece_length\nshort_pieces = remaining_rope // short_piece_length\n\nans = short_pieces",
            "# Python code, return ans\ntotal_rope_length = 27\nlong_piece_length = 4\nshort_piece_length = 1\n\nmax_long_pieces = total_rope_length // long_piece_length\nremaining_rope_length = total_rope_length % long_piece_length\n\nshort_pieces = remaining_rope_length // short_piece_length\nans = short_pieces\n"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "15 students split 122 portfolios of paintings. Each student should get the same number of portfolios. How many portfolios of paintings will each of them get?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ntotal_portfolios = 122\ntotal_students = 15\nportfolios_per_student = total_portfolios // total_students\nans = portfolios_per_student",
            "# Python code, return ans\ntotal_portfolios = 122\ntotal_students = 15\nportfolios_per_student = total_portfolios // total_students\nans = portfolios_per_student",
            "# Python code, return ans\ntotal_portfolios = 122\nstudents = 15\nportfolios_per_student = total_portfolios // students\nans = portfolios_per_student"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "15 students split 122 portfolios of paintings. Each student should get the same number of portfolios. How many portfolios of paintings will be left?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ntotal_portfolios = 122\nnum_students = 15\nportfolios_per_student = total_portfolios // num_students\nremaining_portfolios = total_portfolios % num_students\nans = remaining_portfolios",
            "# Python code, return ans\ntotal_portfolios = 122\nstudent_num = 15\nportfolios_per_student = total_portfolios // student_num\nleft_portfolios = total_portfolios % student_num\nans = left_portfolios",
            "# Python code, return ans\ntotal_portfolios = 122\nstudents = 15\nportfolios_per_student = total_portfolios // students\nleftover_portfolios = total_portfolios % students\nans = leftover_portfolios"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "172 students are forming teams for a mountaineering competition. Each team should have 18 students. How many teams can they form?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ntotal_students = 172\nstudents_per_team = 18\nnum_teams = total_students // students_per_team\nans = num_teams",
            "# Python code, return ans\ntotal_students = 172\nstudents_per_team = 18\nteams = total_students // students_per_team\nans = teams",
            "# Python code, return ans\ntotal_students = 172\nstudents_per_team = 18\nteams = total_students // students_per_team\nans = teams"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "172 students are forming teams for a mountaineering competition. Each team should have 18 students. How many students will not be on a team?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\ntotal_students = 172\nteam_size = 18\nnum_teams = total_students // team_size\nstudents_not_on_team = total_students - (num_teams * team_size)\nans = students_not_on_team",
            "# Python code, return ans\ntotal_students = 172\nteam_size = 18\nstudents_not_on_team = total_students % team_size\nans = students_not_on_team",
            "# Python code, return ans\ntotal_students = 172\nteam_size = 18\nteams = total_students // team_size\nstudents_not_on_team = total_students - (teams * team_size)\nans = students_not_on_team"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "Mr. Lee wants to load 134 tons of his fruits. A large truck can load 15 tons of fruits and small truck can load 7 tons. In order to use the least number of trucks and have every truck fully occupied, how many large trucks should be used?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ntotal_weight = 134\nlarge_truck_capacity = 15\nsmall_truck_capacity = 7\n\nlarge_trucks = 0\n\nwhile total_weight > 0:\n    if total_weight % large_truck_capacity == 0:\n        large_trucks = total_weight // large_truck_capacity\n        break\n    else:\n        total_weight -= small_truck_capacity\n\nans = large_trucks",
            "# Python code, return ans\ntotal_fruits = 134\nlarge_truck_capacity = 15\nsmall_truck_capacity = 7\n\nlarge_trucks = 0\n\nwhile (total_fruits - (large_truck_capacity * large_trucks)) % small_truck_capacity != 0:\n    large_trucks += 1\n\nans = large_trucks\nans",
            "# Python code, return ans\ntotal_tons = 134\nlarge_truck_capacity = 15\nsmall_truck_capacity = 7\n\nlarge_trucks = 0\nremaining_tons = total_tons\n\nwhile remaining_tons >= large_truck_capacity:\n    large_trucks += 1\n    remaining_tons -= large_truck_capacity\n\nwhile remaining_tons % small_truck_capacity != 0:\n    large_trucks -= 1\n    remaining_tons += large_truck_capacity\n\nans = large_trucks\nans"
        ],
        "results": [
            8.0,
            1.0,
            8.0
        ],
        "result_counter": {
            "8.0": 2,
            "1.0": 1
        },
        "prediction": 8.0
    },
    {
        "question": "Mr. Lee wants to load 134 tons of his fruits. A large truck can load 15 tons of fruits and small truck can load 7 tons. In order to use the least number of trucks and have every truck fully occupied, how many small trucks should be used?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ntotal_fruit = 134\nlarge_truck_capacity = 15\nsmall_truck_capacity = 7\nnum_large_trucks = total_fruit // large_truck_capacity\nremaining_fruit = total_fruit - (num_large_trucks * large_truck_capacity)\n\nnum_small_trucks = remaining_fruit // small_truck_capacity\nif remaining_fruit % small_truck_capacity != 0:\n    num_small_trucks += 1\n\nans = num_small_trucks\nans",
            "# Python code, return ans\ntotal_fruits = 134\nlarge_truck_capacity = 15\nsmall_truck_capacity = 7\n\n# Find the number of large trucks needed\nlarge_trucks_needed = total_fruits // large_truck_capacity\n\n# Calculate the remaining fruits after loading large trucks\nremaining_fruits = total_fruits - (large_trucks_needed * large_truck_capacity)\n\n# Find the number of small trucks needed\nsmall_trucks_needed = remaining_fruits // small_truck_capacity\n\n# Check if there are any remaining fruits after loading small trucks\nremaining_fruits = remaining_fruits - (small_trucks_needed * small_truck_capacity)\n\n# If there are remaining fruits, add one more small truck\nif remaining_fruits > 0:\n    small_trucks_needed += 1\n\nans = small_trucks_needed\nans",
            "# Python code, return ans\ntotal_tons = 134\nlarge_truck_tons = 15\nsmall_truck_tons = 7\nnum_small_trucks = 0\n\nwhile (total_tons - num_small_trucks * small_truck_tons) % large_truck_tons != 0:\n    num_small_trucks += 1\n\nans = num_small_trucks\nans"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Sam cut equal-length pieces of ribbon from a 3,730-cm long ribbon. If each piece was 73 cm long, how many 73 cm pieces of ribbon did Sam make?",
        "answer": 51,
        "generated": [
            "# Python code, return ans\ntotal_length = 3730\npiece_length = 73\nnum_pieces = total_length // piece_length\nans = num_pieces",
            "# Python code, return ans\ntotal_length = 3730\npiece_length = 73\nnum_pieces = total_length // piece_length\nans = num_pieces",
            "# Python code, return ans\ntotal_length = 3730\npiece_length = 73\nnum_pieces = total_length // piece_length\nans = num_pieces"
        ],
        "results": [
            51.0,
            51.0,
            51.0
        ],
        "result_counter": {
            "51.0": 3
        },
        "prediction": 51.0
    },
    {
        "question": "Sam cut equal-length pieces of ribbon from a 3,730-cm long ribbon. If each piece was 73 cm long, how much of the original ribbon was left?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ntotal_ribbon = 3730\npiece_length = 73\npieces = total_ribbon // piece_length\nleftover_ribbon = total_ribbon - (pieces * piece_length)\nans = leftover_ribbon",
            "# Python code, return ans\ntotal_ribbon_length = 3730\npiece_length = 73\nnum_pieces = total_ribbon_length // piece_length\nleftover_ribbon = total_ribbon_length - (num_pieces * piece_length)\nans = leftover_ribbon",
            "# Python code, return ans\ntotal_length = 3730\npiece_length = 73\nnum_pieces = total_length // piece_length\nleftover = total_length - (num_pieces * piece_length)\nans = leftover"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "A tourist group has 26 people. At a hotel, they want to rent some large rooms for 3 people each and some small rooms for 2 each. In order to rent the least number of rooms and have every room fully occupied, how many large rooms should be rented?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ntotal_people = 26\nlarge_room_capacity = 3\nsmall_room_capacity = 2\n\nlarge_rooms = 0\nwhile (total_people - large_room_capacity * large_rooms) % small_room_capacity != 0:\n    large_rooms += 1\n\nans = large_rooms",
            "# Python code, return ans\ntotal_people = 26\nlarge_room_capacity = 3\nsmall_room_capacity = 2\n\nlarge_rooms = 0\nremaining_people = total_people\n\nwhile remaining_people % small_room_capacity != 0:\n    large_rooms += 1\n    remaining_people -= large_room_capacity\n\nans = large_rooms\nans",
            "# Python code, return ans\ntotal_people = 26\nlarge_room_capacity = 3\nsmall_room_capacity = 2\n\nlarge_rooms = 0\nwhile total_people % large_room_capacity != 0:\n    total_people -= small_room_capacity\n    large_rooms += 1\n\nans = large_rooms"
        ],
        "results": [
            0.0,
            0.0,
            1.0
        ],
        "result_counter": {
            "0.0": 2,
            "1.0": 1
        },
        "prediction": 0.0
    },
    {
        "question": "A tourist group has 26 people. At a hotel, they want to rent some large rooms for 3 people each and some small rooms for 2 each. In order to rent the least number of rooms and have every room fully occupied, how many small rooms should be rented?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\ntotal_people = 26\nlarge_room_capacity = 3\nsmall_room_capacity = 2\n\nleast_small_rooms = 0\n\nwhile (total_people - least_small_rooms * small_room_capacity) % large_room_capacity != 0:\n    least_small_rooms += 1\n\nans = least_small_rooms\nans",
            "# Python code, return ans\ntotal_people = 26\nlarge_room_capacity = 3\nsmall_room_capacity = 2\n\nnum_large_rooms = total_people // large_room_capacity\nremaining_people = total_people % large_room_capacity\n\nif remaining_people > 0:\n    num_small_rooms = remaining_people // small_room_capacity\nelse:\n    num_small_rooms = 0\n\nans = num_small_rooms\nans",
            "# Python code, return ans\ntotal_people = 26\nlarge_room_capacity = 3\nsmall_room_capacity = 2\n\n# Find the least number of large rooms\nnum_large_rooms = total_people // large_room_capacity\n\n# Find the remaining people after allocating large rooms\nremaining_people = total_people % large_room_capacity\n\n# Find the number of small rooms needed for the remaining people\nnum_small_rooms = remaining_people // small_room_capacity\n\nans = num_small_rooms\n"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "Mr. Lee harvested 495 apples and he packed them evenly in some baskets. If there are 25 apples in each basket, how many baskets of apples are there?",
        "answer": 19,
        "generated": [
            "# Python code, return ans\napples = 495\napples_per_basket = 25\nbaskets = apples // apples_per_basket\nans = baskets",
            "# Python code, return ans\napples = 495\napples_per_basket = 25\nbaskets = apples / apples_per_basket\nans = baskets",
            "# Python code, return ans\ntotal_apples = 495\napples_per_basket = 25\nnum_baskets = total_apples // apples_per_basket\nans = num_baskets"
        ],
        "results": [
            19.0,
            19.8,
            19.0
        ],
        "result_counter": {
            "19.0": 2,
            "19.8": 1
        },
        "prediction": 19.0
    },
    {
        "question": "Mr. Lee harvested 495 apples and he packed them evenly in some baskets. If there are 25 apples in each basket, how many apples were left unpacked?",
        "answer": 20,
        "generated": [
            "# Python code, return ans\ntotal_apples = 495\napples_per_basket = 25\nleftover_apples = total_apples % apples_per_basket\nans = leftover_apples",
            "# Python code, return ans\ntotal_apples = 495\napples_per_basket = 25\nleftover_apples = total_apples % apples_per_basket\nans = leftover_apples",
            "# Python code, return ans\ntotal_apples = 495\napples_per_basket = 25\nleftover_apples = total_apples % apples_per_basket\nans = leftover_apples"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "A ballet class wants to divide its 90 members into some large groups at 7 members each and some small groups at 3 members each. In order to make the least number of groups, how many large groups should be made?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\ntotal_members = 90\nlarge_group_size = 7\nsmall_group_size = 3\n\nlarge_groups = total_members // large_group_size\nremaining_members = total_members % large_group_size\n\nwhile remaining_members % small_group_size != 0:\n    large_groups -= 1\n    remaining_members += large_group_size\n\nans = large_groups",
            "# Python code, return ans\ntotal_members = 90\nlarge_group_size = 7\nsmall_group_size = 3\n\nlarge_groups = total_members // large_group_size\nremaining_members = total_members % large_group_size\n\nwhile remaining_members % small_group_size != 0:\n    large_groups -= 1\n    remaining_members += large_group_size\n\nans = large_groups",
            "# Python code, return ans\ntotal_members = 90\nlarge_group_size = 7\nsmall_group_size = 3\n\nlarge_groups = 0\n\nwhile total_members % small_group_size != 0:\n    total_members -= large_group_size\n    large_groups += 1\n\nans = large_groups"
        ],
        "results": [
            12.0,
            12.0,
            0.0
        ],
        "result_counter": {
            "12.0": 2,
            "0.0": 1
        },
        "prediction": 12.0
    },
    {
        "question": "A ballet class wants to divide its 90 members into some large groups at 7 members each and some small groups at 3 members each. In order to make the least number of groups, how many small groups should be made?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ntotal_members = 90\nlarge_group_size = 7\nsmall_group_size = 3\n\n# Find the maximum number of large groups that can be formed\nmax_large_groups = total_members // large_group_size\n\n# Initialize the number of small groups\nsmall_groups = 0\n\n# Iterate through the possible number of large groups and find the least number of small groups needed\nfor large_groups in range(max_large_groups, -1, -1):\n    remaining_members = total_members - (large_groups * large_group_size)\n    if remaining_members % small_group_size == 0:\n        small_groups = remaining_members // small_group_size\n        break\n\nans = small_groups\nans",
            "# Python code, return ans\ntotal_members = 90\nlarge_group_size = 7\nsmall_group_size = 3\n\nleast_small_groups = 0\n\nwhile total_members % large_group_size != 0:\n    total_members -= small_group_size\n    least_small_groups += 1\n\nans = least_small_groups",
            "# Python code, return ans\ntotal_members = 90\nlarge_group_size = 7\nsmall_group_size = 3\n\nleast_small_groups = 0\nwhile (total_members - least_small_groups * small_group_size) % large_group_size != 0:\n    least_small_groups += 1\n\nans = least_small_groups\nans"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "There was 1,050 ml of tea in a pot. Anna poured the tea into some cups. If there were 65 ml of tea in each cup, how many cups were filled with tea?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\ntea_in_pot = 1050\ntea_per_cup = 65\ncups_filled = tea_in_pot // tea_per_cup\nans = cups_filled",
            "# Python code, return ans\ntea_in_pot = 1050\ntea_per_cup = 65\ncups_filled = tea_in_pot // tea_per_cup\nans = cups_filled",
            "# Python code, return ans\ntea_in_pot = 1050\ntea_in_each_cup = 65\nnum_of_cups = tea_in_pot // tea_in_each_cup\nans = num_of_cups"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "There was 1,050 ml of tea in a pot. Anna poured the tea into some cups. If there were 65 ml of tea in each cup, how much tea was left in the pot?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\ntotal_tea = 1050\ntea_per_cup = 65\ncups_filled = total_tea // tea_per_cup\ntea_left = total_tea - (cups_filled * tea_per_cup)\nans = tea_left",
            "# Python code, return ans\ntea_in_pot = 1050\ntea_in_cup = 65\ncups_filled = tea_in_pot // tea_in_cup\ntea_left = tea_in_pot - (cups_filled * tea_in_cup)\nans = tea_left",
            "# Python code, return ans\ntea_in_pot = 1050\ntea_per_cup = 65\ncups_filled = tea_in_pot // tea_per_cup\ntea_left = tea_in_pot - (cups_filled * tea_per_cup)\nans = tea_left"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "There are 250 vitamins in a bottle. Gil takes 12 vitamins per day. How many vitamins short of his usual 12 vitamins is Gil on the day the bottle runs out?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\nvitamins_in_bottle = 250\nvitamins_per_day = 12\ndays_to_run_out = vitamins_in_bottle // vitamins_per_day\nvitamins_left = vitamins_in_bottle - (days_to_run_out * vitamins_per_day)\nvitamins_short = vitamins_per_day - vitamins_left\nans = vitamins_short",
            "# Python code, return ans\nvitamins_in_bottle = 250\nvitamins_per_day = 12\ndays_of_vitamins = vitamins_in_bottle // vitamins_per_day\nvitamins_left = vitamins_in_bottle - (days_of_vitamins * vitamins_per_day)\nans = 12 - vitamins_left\nans",
            "# Python code, return ans\nvitamins_in_bottle = 250\nvitamins_per_day = 12\ndays_to_run_out = vitamins_in_bottle // vitamins_per_day\nvitamins_left_on_last_day = vitamins_in_bottle - (days_to_run_out * vitamins_per_day)\nvitamins_short = vitamins_per_day - vitamins_left_on_last_day\nans = vitamins_short"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "A farmer bought 164 rabbits. If the farmer wanted to fill 17 cages with the same number of rabbits, how many more rabbits should the farmer buy?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nrabbit_num = 164\ncage_num = 17\ni = 0\nwhile cage_num * i < rabbit_num:\n    i += 1\nrabbits_to_buy = cage_num * i - rabbit_num\nans = rabbits_to_buy",
            "# Python code, return ans\nrabbits_bought = 164\ncages = 17\ni = 0\nwhile cages * i < rabbits_bought:\n    i += 1\nrabbits_to_buy = cages * i - rabbits_bought\nans = rabbits_to_buy",
            "# Python code, return ans\nrabbits_bought = 164\ncages = 17\ni = 0\nwhile cages * i < rabbits_bought:\n    i += 1\nrabbits_to_buy = cages * i - rabbits_bought\nans = rabbits_to_buy"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "650 lollipops are to be distributed to 42 kids. If all the kids share all of the lollipops equally, at least how many more lollipops are needed?",
        "answer": 22,
        "generated": [
            "# Python code, return ans\nlollipops = 650\nkids = 42\ni = 0\nwhile kids * i < lollipops:\n    i += 1\nlollipops_needed = kids * i - lollipops\nans = lollipops_needed",
            "# Python code, return ans\nlollipops = 650\nkids = 42\ni = 0\nwhile kids * i < lollipops:\n    i += 1\nlollipops_needed = kids * i - lollipops\nans = lollipops_needed",
            "# Python code, return ans\nlollipops = 650\nkids = 42\ni = 0\nwhile kids * i < lollipops:\n    i += 1\nneeded_lollipops = kids * i - lollipops\nans = needed_lollipops"
        ],
        "results": [
            22.0,
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 3
        },
        "prediction": 22.0
    },
    {
        "question": "Mrs. Dalloway made 85 tarts. If she wants to fill 10 boxes with the same number of tarts, how many more tarts should she make?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ntarts_made = 85\nboxes = 10\ni = 0\nwhile boxes * i < tarts_made:\n    i += 1\ntarts_needed = boxes * i - tarts_made\nans = tarts_needed",
            "# Python code, return ans\ntarts_made = 85\nboxes = 10\ni = 0\nwhile boxes * i < tarts_made:\n    i += 1\ntarts_needed = boxes * i - tarts_made\nans = tarts_needed",
            "# Python code, return ans\ntarts_made = 85\nboxes = 10\ni = 0\nwhile boxes * i < tarts_made:\n    i += 1\ntarts_to_make = boxes * i - tarts_made\nans = tarts_to_make"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "A library buys 4,305 new books. If it wants to shelve them equally onto 83 shelves, how many more new books should be purchased?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\nnew_books = 4305\nshelves = 83\ni = 0\nwhile shelves * i < new_books:\n    i += 1\nbooks_to_buy = shelves * i - new_books\nans = books_to_buy",
            "# Python code, return ans\nnew_books = 4305\nshelves = 83\ni = 0\nwhile shelves * i < new_books:\n    i += 1\nbooks_to_purchase = shelves * i - new_books\nans = books_to_purchase",
            "# Python code, return ans\nnew_books = 4305\nshelves = 83\nbooks_per_shelf = new_books // shelves\nadditional_books_needed = (books_per_shelf + 1) * shelves - new_books\nans = additional_books_needed"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "A company buys 88 bureaus for 14 offices. If each office should get an equal number of bureaus, how many more bureaus are needed at least?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\nbureaus_bought = 88\noffice_num = 14\ni = 0\nwhile office_num * i < bureaus_bought:\n    i += 1\nbureaus_needed = office_num * i - bureaus_bought\nans = bureaus_needed",
            "# Python code, return ans\nbureaus = 88\noffices = 14\ni = 0\nwhile offices * i < bureaus:\n    i += 1\nbureaus_needed = offices * i - bureaus\nans = bureaus_needed\n",
            "# Python code, return ans\nbureaus_bought = 88\noffice_num = 14\ni = 0\nwhile office_num * i < bureaus_bought:\n    i += 1\nbureaus_needed = office_num * i - bureaus_bought\nans = bureaus_needed"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "Betty has 367 beads and wants to use all the beads to make necklaces. If she wants to make 15 necklaces with each having the same number of beads, how many more beads does she need?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nbeads = 367\nnecklaces = 15\ni = 0\nwhile necklaces * i < beads:\n    i += 1\nbeads_needed = necklaces * i - beads\nans = beads_needed",
            "# Python code, return ans\nbeads = 367\nnecklaces = 15\ni = 0\nwhile necklaces * i < beads:\n    i += 1\nbeads_needed = necklaces * i - beads\nans = beads_needed",
            "# Python code, return ans\nbeads = 367\nnecklaces = 15\ni = 0\nwhile necklaces * i < beads:\n    i += 1\nbeads_needed = necklaces * i - beads\nans = beads_needed"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "There are 315 cups of puddings to be distributed to 218 students. If each of them wants an equal number of pudding cups, at least how many more pudding cups are needed?",
        "answer": 121,
        "generated": [
            "# Python code, return ans\npudding_cups = 315\nstudents = 218\ni = 0\nwhile students * i < pudding_cups:\n    i += 1\nmore_pudding_cups_needed = students * i - pudding_cups\nans = more_pudding_cups_needed",
            "# Python code, return ans\npudding_cups = 315\nstudents = 218\ni = 0\nwhile students * i < pudding_cups:\n    i += 1\nmore_pudding_cups_needed = students * i - pudding_cups\nans = more_pudding_cups_needed",
            "# Python code, return ans\npudding_cups = 315\nstudents = 218\ni = 0\nwhile students * i < pudding_cups:\n    i += 1\nmore_pudding_cups_needed = students * i - pudding_cups\nans = more_pudding_cups_needed"
        ],
        "results": [
            121.0,
            121.0,
            121.0
        ],
        "result_counter": {
            "121.0": 3
        },
        "prediction": 121.0
    },
    {
        "question": "Sam has 389 riddles for 18 of his students to guess. If he wants the students to guess the same number of riddles, at least how many more riddles does he need to distribute?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nriddles = 389\nstudents = 18\ni = 0\nwhile students * i < riddles:\n    i += 1\nmore_riddles_needed = students * i - riddles\nans = more_riddles_needed",
            "# Python code, return ans\nriddles = 389\nstudents = 18\ni = 0\nwhile students * i < riddles:\n    i += 1\nmore_riddles = students * i - riddles\nans = more_riddles",
            "# Python code, return ans\nriddles_num = 389\nstudent_num = 18\ni = 0\nwhile student_num * i < riddles_num:\n    i += 1\nriddles_to_distribute = student_num * i - riddles_num\nans = riddles_to_distribute"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "A school buys 1,093 chairs. If it wants to distribute them equally into 35 classrooms, how many more chairs should be purchased?",
        "answer": 27,
        "generated": [
            "# Python code, return ans\nchairs_bought = 1093\nclassrooms = 35\ni = 0\nwhile classrooms * i < chairs_bought:\n    i += 1\nchairs_to_buy = classrooms * i - chairs_bought\nans = chairs_to_buy",
            "# Python code, return ans\ntotal_chairs = 1093\nclassrooms = 35\ni = 0\nwhile classrooms * i < total_chairs:\n    i += 1\nchairs_to_buy = classrooms * i - total_chairs\nans = chairs_to_buy",
            "# Python code, return ans\ntotal_chairs = 1093\nclassrooms = 35\nchairs_per_classroom = total_chairs // classrooms\nextra_chairs_needed = (chairs_per_classroom + 1) * classrooms - total_chairs\nans = extra_chairs_needed"
        ],
        "results": [
            27.0,
            27.0,
            27.0
        ],
        "result_counter": {
            "27.0": 3
        },
        "prediction": 27.0
    },
    {
        "question": "The weight of 2 bags of chips is 800 g. The total weight of 5 such bags of chips and 4 bottles of juice is 2 kg 200 g. How much heavier is a bag of chips than a bottle of juice?",
        "answer": 350,
        "generated": [
            "# Python code, return ans\nbag_of_chips_weight = 800 / 2\ntotal_weight = 2200\ntotal_chips_weight = 5 * bag_of_chips_weight\ntotal_juice_weight = total_weight - total_chips_weight\nbottle_of_juice_weight = total_juice_weight / 4\nweight_difference = bag_of_chips_weight - bottle_of_juice_weight\nans = weight_difference",
            "# Python code, return ans\nweight_chips_2_bags = 800\nweight_chips_1_bag = weight_chips_2_bags / 2\ntotal_weight_chips_juice = 2200  # 2 kg 200 g in grams\ntotal_weight_chips_5_bags = weight_chips_1_bag * 5\ntotal_weight_juice_4_bottles = total_weight_chips_juice - total_weight_chips_5_bags\nweight_juice_1_bottle = total_weight_juice_4_bottles / 4\nweight_difference = weight_chips_1_bag - weight_juice_1_bottle\nans = weight_difference",
            "# Python code, return ans\nbag_of_chips_weight = 800 / 2\ntotal_weight = 2200\ntotal_weight_chips = 5 * bag_of_chips_weight\ntotal_weight_juice = total_weight - total_weight_chips\nbottle_of_juice_weight = total_weight_juice / 4\nweight_difference = bag_of_chips_weight - bottle_of_juice_weight\nans = weight_difference"
        ],
        "results": [
            350.0,
            350.0,
            350.0
        ],
        "result_counter": {
            "350.0": 3
        },
        "prediction": 350.0
    },
    {
        "question": "The weight of 5 diamonds is 100 g. The total weight of 4 diamonds and 2 jades is 140 g. How much heavier is a jade than a diamond?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\ndiamond_weight_total = 100\ndiamond_num = 5\ndiamond_weight_each = diamond_weight_total / diamond_num\n\ndiamond_weight_4 = diamond_weight_each * 4\ndiamond_and_jade_weight = 140\njade_num = 2\njade_weight_total = diamond_and_jade_weight - diamond_weight_4\njade_weight_each = jade_weight_total / jade_num\n\nweight_difference = jade_weight_each - diamond_weight_each\nans = weight_difference",
            "# Python code, return ans\ndiamond_weight_total = 100\ndiamond_num = 5\ndiamond_weight_each = diamond_weight_total / diamond_num\n\ndiamond_and_jade_weight_total = 140\ndiamond_and_jade_num = 4 + 2\njade_num = 2\n\njade_weight_total = diamond_and_jade_weight_total - (diamond_weight_each * diamond_and_jade_num)\njade_weight_each = jade_weight_total / jade_num\n\nweight_difference = jade_weight_each - diamond_weight_each\nans = weight_difference",
            "# Python code, return ans\ndiamond_weight = 100 / 5\ndiamonds_and_jades_weight = 140\njades_weight = diamonds_and_jades_weight - (4 * diamond_weight)\njade_weight = jades_weight / 2\ndifference = jade_weight - diamond_weight\nans = difference"
        ],
        "results": [
            10.0,
            -10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 2,
            "-10.0": 1
        },
        "prediction": 10.0
    },
    {
        "question": "The weight of 5 single beds is 50 kg. The total weight of 2 single beds and 4 double beds is 100 kg. How much heavier is a double bed than a single bed?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\nsingle_bed_weight = 50 / 5\ntotal_weight = 100\ndouble_bed_num = 4\nsingle_bed_num = 2\n\ndouble_bed_weight = (total_weight - (single_bed_num * single_bed_weight)) / double_bed_num\nweight_difference = double_bed_weight - single_bed_weight\nans = weight_difference",
            "# Python code, return ans\nsingle_bed_weight = 50 / 5\ntotal_weight = 100\ndouble_bed_num = 4\nsingle_bed_num = 2\ndouble_bed_weight = (total_weight - (single_bed_num * single_bed_weight)) / double_bed_num\nweight_difference = double_bed_weight - single_bed_weight\nans = weight_difference",
            "# Python code, return ans\nsingle_bed_weight = 50 / 5\ntotal_weight_2_single_4_double = 100\ndouble_bed_weight = (total_weight_2_single_4_double - 2 * single_bed_weight) / 4\nweight_difference = double_bed_weight - single_bed_weight\nans = weight_difference"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "The weight of 3 glass bottles is 600 g. The total weight of 4 glass bottles and 5 plastic bottles is 1 kg 50 g. How much heavier is a glass bottle than a plastic bottle?",
        "answer": 150,
        "generated": [
            "# Python code, return ans\ntotal_weight_glass_bottles = 600\ntotal_weight_glass_and_plastic_bottles = 1050\nnum_glass_bottles = 3\nnum_plastic_bottles = 5\n\nweight_of_one_glass_bottle = total_weight_glass_bottles / num_glass_bottles\ntotal_weight_plastic_bottles = total_weight_glass_and_plastic_bottles - total_weight_glass_bottles\n\nweight_of_one_plastic_bottle = total_weight_plastic_bottles / num_plastic_bottles\ndifference_in_weight = weight_of_one_glass_bottle - weight_of_one_plastic_bottle\nans = difference_in_weight",
            "# Python code, return ans\nglass_bottles_weight = 600\ntotal_weight_glass_and_plastic = 1050\nnum_glass_bottles = 3\nnum_plastic_bottles = 5\n\nweight_of_4_glass_bottles = (glass_bottles_weight / num_glass_bottles) * 4\nweight_of_5_plastic_bottles = total_weight_glass_and_plastic - weight_of_4_glass_bottles\n\nweight_of_1_glass_bottle = weight_of_4_glass_bottles / 4\nweight_of_1_plastic_bottle = weight_of_5_plastic_bottles / num_plastic_bottles\n\ndifference = weight_of_1_glass_bottle - weight_of_1_plastic_bottle\nans = difference",
            "# Python code, return ans\nglass_bottles = 3\nglass_bottles_weight = 600  # in grams\nplastic_bottles = 5\ntotal_weight = 1050  # in grams (1 kg = 1000 g, so 1 kg 50 g = 1000 + 50 = 1050 g)\n\nglass_bottle_weight = glass_bottles_weight / glass_bottles\nfour_glass_bottles_weight = glass_bottle_weight * 4\n\nplastic_bottles_weight = total_weight - four_glass_bottles_weight\nplastic_bottle_weight = plastic_bottles_weight / plastic_bottles\n\nweight_difference = glass_bottle_weight - plastic_bottle_weight\nans = weight_difference"
        ],
        "results": [
            110.0,
            150.0,
            150.0
        ],
        "result_counter": {
            "110.0": 1,
            "150.0": 2
        },
        "prediction": 150.0
    },
    {
        "question": "The weight of 5 foxes is 25 kg. The total weight of 3 foxes and 5 dogs is 65 kg. How much heavier is a dog than a fox?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nfox_weight = 25 / 5\ntotal_weight_3_foxes_5_dogs = 65\nweight_3_foxes = 3 * fox_weight\nweight_5_dogs = total_weight_3_foxes_5_dogs - weight_3_foxes\ndog_weight = weight_5_dogs / 5\nweight_difference = dog_weight - fox_weight\nans = weight_difference",
            "# Python code, return ans\nfox_weight = 25 / 5\nfox_and_dog_weight = 65\ndog_and_fox_weight = fox_and_dog_weight - (3 * fox_weight)\ndog_weight = dog_and_fox_weight / 5\nweight_difference = dog_weight - fox_weight\nans = weight_difference",
            "# Python code, return ans\nfox_weight_total = 25\nfox_num = 5\nfox_weight_each = fox_weight_total / fox_num\n\nfox_dog_weight_total = 65\ndog_num = 5\nfox_three_weight = fox_weight_each * 3\n\ndog_weight_total = fox_dog_weight_total - fox_three_weight\ndog_weight_each = dog_weight_total / dog_num\n\nweight_difference = dog_weight_each - fox_weight_each\nans = weight_difference"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "The weight of 4 watermelons is 5 kg 200 g. The total weight of 3 such watermelons and 4 pineapples is 5 kg 700 g. How much heavier is a watermelon than a pineapple?",
        "answer": 850,
        "generated": [
            "# Python code, return ans\nweight_watermelons = 5200  # in grams\nweight_watermelons_and_pineapples = 5700  # in grams\nweight_3_watermelons = (3 / 4) * weight_watermelons\nweight_4_pineapples = weight_watermelons_and_pineapples - weight_3_watermelons\nweight_1_pineapple = weight_4_pineapples / 4\nweight_1_watermelon = weight_watermelons / 4\nweight_difference = weight_1_watermelon - weight_1_pineapple\nans = weight_difference",
            "# Python code, return ans\nwatermelon_weight = 5200 / 4\ntotal_weight = 5700\npineapple_weight = (total_weight - 3 * watermelon_weight) / 4\nweight_difference = watermelon_weight - pineapple_weight\nans = weight_difference",
            "# Python code, return ans\nwatermelon_weight = 5200 / 4\ntotal_weight = 5700\npineapple_weight = (total_weight - 3 * watermelon_weight) / 4\nweight_difference = watermelon_weight - pineapple_weight\nans = weight_difference"
        ],
        "results": [
            850.0,
            850.0,
            850.0
        ],
        "result_counter": {
            "850.0": 3
        },
        "prediction": 850.0
    },
    {
        "question": "The weight of 4 cakes is 800 g. The total weight of 3 cakes and 5 pieces of bread is 1 kg 100 g. How much heavier is a cake than a piece of bread?",
        "answer": 100,
        "generated": [
            "# Python code, return ans\ncake_weight_total = 800\ncake_num = 4\ncake_weight = cake_weight_total / cake_num\n\ntotal_weight_cake_bread = 1100\nbread_num = 5\ncake_weight_3 = 3 * cake_weight\n\nbread_weight_total = total_weight_cake_bread - cake_weight_3\nbread_weight = bread_weight_total / bread_num\n\nweight_difference = cake_weight - bread_weight\nans = weight_difference",
            "# Python code, return ans\ncake_weight_total = 800\ncake_num = 4\ncake_weight = cake_weight_total / cake_num\n\ntotal_weight_cakes_bread = 1100\nbread_num = 5\nweight_3_cakes = cake_weight * 3\n\nbread_weight_total = total_weight_cakes_bread - weight_3_cakes\nbread_weight = bread_weight_total / bread_num\n\nweight_difference = cake_weight - bread_weight\nans = weight_difference",
            "# Python code, return ans\ncake_weight_total = 800\ncake_num = 4\ncake_weight = cake_weight_total / cake_num\n\ntotal_weight_cake_bread = 1100\nbread_num = 5\nweight_3_cakes = 3 * cake_weight\n\nbread_weight_total = total_weight_cake_bread - weight_3_cakes\nbread_weight = bread_weight_total / bread_num\n\nweight_difference = cake_weight - bread_weight\nans = weight_difference"
        ],
        "results": [
            100.0,
            100.0,
            100.0
        ],
        "result_counter": {
            "100.0": 3
        },
        "prediction": 100.0
    },
    {
        "question": "The ratio of boys to girls in a kindergarten is 2:3. If the number of boys is 12, find the number of girls.",
        "answer": 18,
        "generated": [
            "# Python code, return ans\nboys = 12\nboys_to_girls_ratio = 2 / 3\ngirls = boys / boys_to_girls_ratio\nans = girls",
            "# Python code, return ans\nboys = 12\nboys_to_girls_ratio = 2 / 3\ngirls = boys / boys_to_girls_ratio\nans = girls",
            "# Python code, return ans\nboys = 12\nboys_to_girls_ratio = 2 / 3\ngirls = boys / boys_to_girls_ratio\nans = girls"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "In a basket, there are 24 good oranges and rest are bad oranges. The ratio of good oranges to the bad oranges is 3:1, find the number of bad oranges.",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ngood_oranges = 24\ngood_to_bad_ratio = 3 / 1\nbad_oranges = good_oranges / good_to_bad_ratio\nans = bad_oranges",
            "# Python code, return ans\ngood_oranges = 24\ngood_to_bad_ratio = 3/1\nbad_oranges = good_oranges / good_to_bad_ratio\nans = bad_oranges",
            "# Python code, return ans\ngood_oranges = 24\ngood_to_bad_ratio = 3/1\nbad_oranges = good_oranges / good_to_bad_ratio\nans = bad_oranges"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "In a play school, there are 16 red balls and the rest are white balls. The ratio of red balls to white balls is 4:5. Find the number of white balls.",
        "answer": 20,
        "generated": [
            "# Python code, return ans\nred_balls = 16\nred_to_white_ratio = 4 / 5\nwhite_balls = red_balls * (5 / 4)\nans = white_balls",
            "# Python code, return ans\nred_balls = 16\nred_to_white_ratio = 4 / 5\nwhite_balls = red_balls * (5 / 4)\nans = white_balls",
            "# Python code, return ans\nred_balls = 16\nred_to_white_ratio = 4/5\nwhite_balls = red_balls * (5/4)\nans = white_balls"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "The distance travelled by Ben and Tim is in the ratio 3:4. The distance travelled by Ben is 18 miles. Find the distance travelled by Tim.",
        "answer": 24,
        "generated": [
            "# Python code, return ans\nBen_distance = 18\nBen_ratio = 3\nTim_ratio = 4\ntotal_ratio = Ben_ratio + Tim_ratio\none_unit = Ben_distance / Ben_ratio\nTim_distance = one_unit * Tim_ratio\nans = Tim_distance",
            "# Python code, return ans\nBen_distance = 18\nBen_ratio = 3\nTim_ratio = 4\nTim_distance = (Tim_ratio * Ben_distance) / Ben_ratio\nans = Tim_distance",
            "# Python code, return ans\nBen_distance = 18\nBen_ratio = 3\nTim_ratio = 4\ntotal_ratio = Ben_ratio + Tim_ratio\nratio_per_mile = Ben_distance / Ben_ratio\nTim_distance = Tim_ratio * ratio_per_mile\nans = Tim_distance"
        ],
        "results": [
            24.0,
            24.0,
            24.0
        ],
        "result_counter": {
            "24.0": 3
        },
        "prediction": 24.0
    },
    {
        "question": "When Jose rode on a bus, he noticed some people sitting. At the next bus stop, 5 people got on and 2 people got off. Two stops later, 7 people got on 15 people got off the bus at the terminal station. How many people were in the bus when Jose got on the bus?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\npeople_on = 5 + 7\npeople_off = 2 + 15\nnet_change = people_on - people_off\nans = net_change\n",
            "# Python code, return ans\npeople_on_next_stop = 5\npeople_off_next_stop = 2\npeople_on_two_stops_later = 7\npeople_off_terminal_station = 15\n\nnet_people_change = people_on_next_stop - people_off_next_stop + people_on_two_stops_later - people_off_terminal_station\npeople_on_bus_initially = net_people_change * -1\nans = people_on_bus_initially",
            "# Python code, return ans\npeople_on_bus = 0\npeople_got_on_first_stop = 5\npeople_got_off_first_stop = 2\npeople_got_on_second_stop = 7\npeople_got_off_terminal = 15\n\npeople_on_bus += people_got_on_first_stop - people_got_off_first_stop\npeople_on_bus += people_got_on_second_stop - people_got_off_terminal\nans = people_on_bus"
        ],
        "results": [
            -5.0,
            5.0,
            -5.0
        ],
        "result_counter": {
            "-5.0": 2,
            "5.0": 1
        },
        "prediction": -5.0
    },
    {
        "question": "Magellan has decided to make party baskets for the fund raiser. Balloons are sold in bags of 20, party horns are sold in bags of 10, and there are 8 candy bars in a package. How many of each should he buy so there are an equal number of balloons, horns and candy bars in each basket?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\nballoons_per_bag = 20\nhorns_per_bag = 10\ncandy_bars_per_package = 8\n\n# Find the least common multiple (LCM) of the three quantities\ndef lcm(a, b):\n    # Find the greatest common divisor (GCD) of two numbers\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    return a * b // gcd(a, b)\n\nlcm_balloons_horns = lcm(balloons_per_bag, horns_per_bag)\nlcm_all = lcm(lcm_balloons_horns, candy_bars_per_package)\n\n# Calculate how many of each item should be bought\nballoons_to_buy = lcm_all // balloons_per_bag\nhorns_to_buy = lcm_all // horns_per_bag\ncandy_bars_to_buy = lcm_all // candy_bars_per_package\n\nans = (balloons_to_buy, horns_to_buy, candy_bars_to_buy)",
            "# Python code, return ans\nballoons_per_bag = 20\nhorns_per_bag = 10\ncandy_bars_per_package = 8\n\n# Find the least common multiple (LCM) of the three quantities\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nlcm_balloons_horns = lcm(balloons_per_bag, horns_per_bag)\nlcm_all = lcm(lcm_balloons_horns, candy_bars_per_package)\n\n# Calculate the number of each item to buy\nballoons_to_buy = lcm_all // balloons_per_bag\nhorns_to_buy = lcm_all // horns_per_bag\ncandy_bars_to_buy = lcm_all // candy_bars_per_package\n\nans = (balloons_to_buy, horns_to_buy, candy_bars_to_buy)",
            "# Python code, return ans\nballoons_per_bag = 20\nhorns_per_bag = 10\ncandy_bars_per_package = 8\n\n# Find the least common multiple (LCM) of the quantities\ndef lcm(x, y):\n    greater = max(x, y)\n    while (greater % x != 0) or (greater % y != 0):\n        greater += 1\n    return greater\n\nlcm_balloons_horns = lcm(balloons_per_bag, horns_per_bag)\nlcm_all_items = lcm(lcm_balloons_horns, candy_bars_per_package)\n\n# Calculate the number of bags/packages needed for each item\nballoons_to_buy = lcm_all_items // balloons_per_bag\nhorns_to_buy = lcm_all_items // horns_per_bag\ncandy_bars_to_buy = lcm_all_items // candy_bars_per_package\n\nans = (balloons_to_buy, horns_to_buy, candy_bars_to_buy)"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Cups are sold 5 to a package and plates are sold 10 to a package. If you want to have the same number of each item for a party, what is the least number of packages of each you need to buy?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\ncups_per_package = 5\nplates_per_package = 10\nleast_common_multiple = 0\ni = 1\n\nwhile least_common_multiple == 0:\n    if i % cups_per_package == 0 and i % plates_per_package == 0:\n        least_common_multiple = i\n    i += 1\n\npackages_of_cups = least_common_multiple // cups_per_package\npackages_of_plates = least_common_multiple // plates_per_package\nans = (packages_of_cups, packages_of_plates)",
            "# Python code, return ans\ncups_per_package = 5\nplates_per_package = 10\n\n# Find the least common multiple (LCM) of cups_per_package and plates_per_package\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nleast_common_multiple = lcm(cups_per_package, plates_per_package)\n\n# Calculate the number of packages needed for each item\ncups_packages_needed = least_common_multiple // cups_per_package\nplates_packages_needed = least_common_multiple // plates_per_package\n\nans = (cups_packages_needed, plates_packages_needed)",
            "# Python code, return ans\ncups_per_package = 5\nplates_per_package = 10\nleast_common_multiple = 1\n\nfor i in range(1, (cups_per_package * plates_per_package) + 1):\n    if i % cups_per_package == 0 and i % plates_per_package == 0:\n        least_common_multiple = i\n        break\n\npackages_of_cups = least_common_multiple // cups_per_package\npackages_of_plates = least_common_multiple // plates_per_package\nans = (packages_of_cups, packages_of_plates)"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Mei has 15 oranges, 9 peaches and 18 pears. She wants to put all of the fruit into baskets with each basket having the same number of pieces of fruit in it. Without mixing the fruit, what is the greatest number of pieces of fruit Mei can put in each basket?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\noranges = 15\npeaches = 9\npears = 18\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_common_divisor = gcd(oranges, gcd(peaches, pears))\nans = greatest_common_divisor\nans",
            "# Python code, return ans\noranges = 15\npeaches = 9\npears = 18\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ngreatest_common_divisor = gcd(gcd(oranges, peaches), pears)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\noranges = 15\npeaches = 9\npears = 18\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_common_divisor = gcd(gcd(oranges, peaches), pears)\nans = greatest_common_divisor\nans"
        ],
        "results": [
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 2
        },
        "prediction": 3.0
    },
    {
        "question": "At the gym, Hillary swims every 6 days, runs every 4 days and cycles every 16 days. If she did all three activities today, in how many days will she do all three activities again on the same day?",
        "answer": 48,
        "generated": [
            "# Python code, return ans\nswim_days = 6\nrun_days = 4\ncycle_days = 16\n\ndef lcm(x, y):\n   if x > y:\n       greater = x\n   else:\n       greater = y\n\n   while((greater % x != 0) or (greater % y != 0)):\n       greater += 1\n\n   return greater\n\nlcm_swim_run = lcm(swim_days, run_days)\nlcm_all_activities = lcm(lcm_swim_run, cycle_days)\nans = lcm_all_activities\nans",
            "# Python code, return ans\nswim_days = 6\nrun_days = 4\ncycle_days = 16\n\ndef lcm(x, y):\n    greater = max(x, y)\n    while(True):\n        if((greater % x == 0) and (greater % y == 0)):\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nlcm_swim_run = lcm(swim_days, run_days)\nlcm_all_activities = lcm(lcm_swim_run, cycle_days)\nans = lcm_all_activities\nans",
            "# Python code, return ans\nimport math\nswim_days = 6\nrun_days = 4\ncycle_days = 16\nlcm = (swim_days * run_days * cycle_days) // math.gcd(swim_days, math.gcd(run_days, cycle_days))\nans = lcm"
        ],
        "results": [
            48.0,
            48.0,
            192.0
        ],
        "result_counter": {
            "48.0": 2,
            "192.0": 1
        },
        "prediction": 48.0
    },
    {
        "question": "Oscar needs to ship 14 rock CDs, 12 classical CDs, and 8 pop CDs. He can pack only one type of CD in each box and he must pack the same number of CDs in each box. What is the greatest number of CDs Oscar can pack in each box?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\nrock_CDs = 14\nclassical_CDs = 12\npop_CDs = 8\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngcd_rock_classical = gcd(rock_CDs, classical_CDs)\ngcd_all = gcd(gcd_rock_classical, pop_CDs)\nans = gcd_all\nans",
            "# Python code, return ans\nrock_CDs = 14\nclassical_CDs = 12\npop_CDs = 8\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngcd_rock_classical = gcd(rock_CDs, classical_CDs)\ngcd_all = gcd(gcd_rock_classical, pop_CDs)\nans = gcd_all\nans",
            "# Python code, return ans\nrock_CDs = 14\nclassical_CDs = 12\npop_CDs = 8\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngcd_rock_classical = gcd(rock_CDs, classical_CDs)\ngcd_all = gcd(gcd_rock_classical, pop_CDs)\nans = gcd_all\nans"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "I want to plant 45 sunflower plants, 81 corn plants and 63 tomato plants in my garden. If I put the same number of plants in each row and each row has only one type of plant, what is the greatest number of plants I can put in one row?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nimport math\n\nsunflower_plants = 45\ncorn_plants = 81\ntomato_plants = 63\n\ngcd_sunflower_corn = math.gcd(sunflower_plants, corn_plants)\ngcd_all_plants = math.gcd(gcd_sunflower_corn, tomato_plants)\n\nans = gcd_all_plants\nans",
            "# Python code, return ans\nimport math\n\nsunflower_plants = 45\ncorn_plants = 81\ntomato_plants = 63\n\ngcd1 = math.gcd(sunflower_plants, corn_plants)\ngcd2 = math.gcd(gcd1, tomato_plants)\n\nans = gcd2\nans",
            "# Python code, return ans\nimport math\n\nsunflower_plants = 45\ncorn_plants = 81\ntomato_plants = 63\n\ngcd_sunflower_corn = math.gcd(sunflower_plants, corn_plants)\ngcd_all_plants = math.gcd(gcd_sunflower_corn, tomato_plants)\n\nans = gcd_all_plants\nans"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "A full moon occurs every 30 days. If the last full moon occurred on a Friday, how many days will pass before a full moon occurs again on a Friday?",
        "answer": 210,
        "generated": [
            "# Python code, return ans\nfull_moon_cycle = 30\ndays_in_week = 7\ndays_to_full_moon_on_Friday = (full_moon_cycle % days_in_week) * days_in_week\nans = days_to_full_moon_on_Friday",
            "# Python code, return ans\nfull_moon_cycle = 30\ndays_in_week = 7\ndays_to_next_Friday_full_moon = (full_moon_cycle % days_in_week) * days_in_week\nans = days_to_next_Friday_full_moon",
            "# Python code, return ans\nfull_moon_cycle = 30\ndays_in_week = 7\ndays_until_full_moon_on_Friday = (full_moon_cycle % days_in_week) * days_in_week\nans = days_until_full_moon_on_Friday"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "Ricky has a magic money box. Every day the box doubles the number of coins placed inside of it. Ricky put in 3 pennies on Monday. He looked inside his box on Friday. How many pennies did Ricky see?",
        "answer": 48,
        "generated": [
            "# Python code, return ans\npennies_on_Monday = 3\ndays_passed = 5 - 1  # We subtract 1 because we don't count Monday\npennies_on_Friday = pennies_on_Monday * (2 ** days_passed)\nans = pennies_on_Friday",
            "# Python code, return ans\npennies_on_Monday = 3\ndays_passed = 5 - 1  # Subtract 1 because Monday is already counted\npennies_on_Friday = pennies_on_Monday * (2 ** days_passed)\nans = pennies_on_Friday",
            "# Python code, return ans\npennies_on_Monday = 3\ndays_passed = 5 - 1  # Subtract 1 because Monday is already counted\npennies_on_Friday = pennies_on_Monday * (2 ** days_passed)\nans = pennies_on_Friday"
        ],
        "results": [
            48.0,
            48.0,
            48.0
        ],
        "result_counter": {
            "48.0": 3
        },
        "prediction": 48.0
    },
    {
        "question": "A number machine changes the value of the numbers placed inside it. My number machine will add 15 to a number and then subtract 6 from the sum. If I put in the number 68, what number will come out of the machine?",
        "answer": 77,
        "generated": [
            "# Python code, return ans\ninput_number = 68\nadd_15 = input_number + 15\nsubtract_6 = add_15 - 6\nans = subtract_6",
            "# Python code, return ans\ninput_number = 68\noutput_number = (input_number + 15) - 6\nans = output_number",
            "# Python code, return ans\ninput_number = 68\noutput_number = input_number + 15 - 6\nans = output_number"
        ],
        "results": [
            77.0,
            77.0,
            77.0
        ],
        "result_counter": {
            "77.0": 3
        },
        "prediction": 77.0
    },
    {
        "question": "I put another number into my machine. The machine added 15 and then subtracted 6. The number 35 came out of the machine. What number did I put in?",
        "answer": 26,
        "generated": [
            "# Python code, return ans\nnumber_out = 35\nnumber_in = (number_out + 6) - 15\nans = number_in",
            "# Python code, return ans\noutput_number = 35\ninput_number = (output_number + 6) - 15\nans = input_number",
            "# Python code, return ans\noutput_number = 35\nadded_number = 15\nsubtracted_number = 6\ninput_number = output_number - added_number + subtracted_number\nans = input_number"
        ],
        "results": [
            26.0,
            26.0,
            26.0
        ],
        "result_counter": {
            "26.0": 3
        },
        "prediction": 26.0
    },
    {
        "question": "Jordon has a different kind of number machine. Her machine doubles the number and adds 3 more. So when Jordon put in 25, the number 53 came out of the machine. Jordon put in the number 16. What number do you think came out of her machine?",
        "answer": 35,
        "generated": [
            "# Python code, return ans\ninput_number = 16\noutput_number = input_number * 2 + 3\nans = output_number",
            "# Python code, return ans\ninput_number = 16\noutput_number = input_number * 2 + 3\nans = output_number",
            "# Python code, return ans\ninput_number = 16\noutput_number = (input_number * 2) + 3\nans = output_number"
        ],
        "results": [
            35.0,
            35.0,
            35.0
        ],
        "result_counter": {
            "35.0": 3
        },
        "prediction": 35.0
    },
    {
        "question": "Jordon put a new number into her machine. The machine doubled it then added 3 more. The number 27 came out of the machine. What number do you think Jordon put in her machine?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\noutput_number = 27\ninput_number = (output_number - 3) / 2\nans = input_number",
            "# Python code, return ans\noutput_number = 27\ninput_number = (output_number - 3) / 2\nans = input_number",
            "# Python code, return ans\noutput_number = 27\ninput_number = (output_number - 3) / 2\nans = input_number"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Drew gave 12 marbles to Marcus. Each boy then had 25 marbles. How many more marbles did Drew have than Marcus at first?",
        "answer": 24,
        "generated": [
            "# Python code, return ans\nmarbles_given = 12\nmarbles_each_after = 25\nDrew_marbles_initial = marbles_each_after + marbles_given\nMarcus_marbles_initial = marbles_each_after\nmore_marbles = Drew_marbles_initial - Marcus_marbles_initial\nans = more_marbles",
            "# Python code, return ans\nmarbles_given = 12\nmarbles_each_after = 25\nDrew_initial_marbles = marbles_each_after + marbles_given\nMarcus_initial_marbles = marbles_each_after\nmore_marbles_Drew = Drew_initial_marbles - Marcus_initial_marbles\nans = more_marbles_Drew",
            "# Python code, return ans\nmarbles_given = 12\nmarbles_each_after = 25\nDrew_initial_marbles = marbles_each_after + marbles_given\nMarcus_initial_marbles = marbles_each_after\nmore_marbles = Drew_initial_marbles - Marcus_initial_marbles\nans = more_marbles"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "There are four pieces of paper in a bag. Each paper has a number on it. The numbers are 19, 23, 34, and 38. Harry took out one piece of paper. The sum of the remaining numbers was 76. What number did Harry remove from the bag?",
        "answer": 38,
        "generated": [
            "# Python code, return ans\nnumbers = [19, 23, 34, 38]\nremaining_sum = 76\n\nfor number in numbers:\n    if sum(numbers) - number == remaining_sum:\n        ans = number\n        break\n\nans",
            "# Python code, return ans\nnumbers = [19, 23, 34, 38]\ntotal_sum = sum(numbers)\nremaining_sum = 76\nnumber_removed = total_sum - remaining_sum\nans = number_removed",
            "# Python code, return ans\nnumbers = [19, 23, 34, 38]\nremaining_sum = 76\nfor number in numbers:\n    if sum(numbers) - number == remaining_sum:\n        ans = number\n        break\nans"
        ],
        "results": [
            38.0,
            38.0,
            38.0
        ],
        "result_counter": {
            "38.0": 3
        },
        "prediction": 38.0
    },
    {
        "question": "A comic book costs 37 cents. The store owner reversed the digits by mistake. He wrote that number on the comic book. How much did the store owner overcharge his customer?",
        "answer": 36,
        "generated": [
            "# Python code, return ans\ncorrect_price = 37\nreversed_price = int(str(correct_price)[::-1])\novercharge = reversed_price - correct_price\nans = overcharge",
            "# Python code, return ans\ncorrect_price = 37\nreversed_price = int(str(correct_price)[::-1])\novercharge = reversed_price - correct_price\nans = overcharge",
            "# Python code, return ans\ncorrect_price = 37\nreversed_price = int(str(correct_price)[::-1])\novercharge = reversed_price - correct_price\nans = overcharge"
        ],
        "results": [
            36.0,
            36.0,
            36.0
        ],
        "result_counter": {
            "36.0": 3
        },
        "prediction": 36.0
    },
    {
        "question": "Mr. Bradley gave his class a math problem to solve. He said, \"Begin with the number 28. Add 12 to it. Then add 7 more.\" Ned followed the instructions perfectly but Billy subtracted 7. What is the difference between the boys' answers?",
        "answer": 14,
        "generated": [
            "# Python code, return ans\nbegin_number = 28\nadd_12 = begin_number + 12\nNed_result = add_12 + 7\nBilly_result = add_12 - 7\ndifference = Ned_result - Billy_result\nans = difference",
            "# Python code, return ans\nnumber = 28\nadd_12 = number + 12\nadd_7 = add_12 + 7\nsubtract_7 = add_12 - 7\ndifference = add_7 - subtract_7\nans = difference",
            "# Python code, return ans\ninitial_number = 28\nadd_12 = initial_number + 12\nNed_answer = add_12 + 7\nBilly_answer = add_12 - 7\ndifference = abs(Ned_answer - Billy_answer)\nans = difference"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "Caitlin is on the 13th step of a giant slide. She walked down 4 steps to talk to her friend Dana. Then she walked up 12 steps to the top. How many steps does the giant slide have?",
        "answer": 21,
        "generated": [
            "# Python code, return ans\ncurrent_step = 13\nwalked_down = 4\nwalked_up = 12\ntotal_steps = current_step - walked_down + walked_up\nans = total_steps",
            "# Python code, return ans\ncurrent_step = 13\nsteps_down = 4\nsteps_up = 12\ntotal_steps = current_step - steps_down + steps_up\nans = total_steps",
            "# Python code, return ans\ncurrent_step = 13\nwalked_down = 4\nwalked_up = 12\ntotal_steps = current_step - walked_down + walked_up\nans = total_steps"
        ],
        "results": [
            21.0,
            21.0,
            21.0
        ],
        "result_counter": {
            "21.0": 3
        },
        "prediction": 21.0
    },
    {
        "question": "Maddie, Luisa, and Amy counted their books. Maddie had 15 books. Luisa had 18 books. Together, Amy and Luisa had 9 more books than Maddie. How many books did Amy have?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nMaddie_books = 15\nLuisa_books = 18\nAmy_and_Luisa_books = Maddie_books + 9\nAmy_books = Amy_and_Luisa_books - Luisa_books\nans = Amy_books",
            "# Python code, return ans\nMaddie_books = 15\nLuisa_books = 18\nAmy_and_Luisa_books = Maddie_books + 9\nAmy_books = Amy_and_Luisa_books - Luisa_books\nans = Amy_books",
            "# Python code, return ans\nMaddie_books = 15\nLuisa_books = 18\nAmy_and_Luisa_books = Maddie_books + 9\nAmy_books = Amy_and_Luisa_books - Luisa_books\nans = Amy_books"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Greg and Brad started reading their books at the same time. Greg read 18 pages a day. Brad read 26 pages a day. How many more pages did Brad read than Greg?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nGreg_pages_per_day = 18\nBrad_pages_per_day = 26\nmore_pages_read = Brad_pages_per_day - Greg_pages_per_day\nans = more_pages_read",
            "# Python code, return ans\nGreg_daily_pages = 18\nBrad_daily_pages = 26\nmore_pages_read = Brad_daily_pages - Greg_daily_pages\nans = more_pages_read",
            "# Python code, return ans\nGreg_pages_per_day = 18\nBrad_pages_per_day = 26\nmore_pages_read = Brad_pages_per_day - Greg_pages_per_day\nans = more_pages_read"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Greg's mom made some cookies for the family. The cookies were so huge that she decided to cut them in half. Greg ate 4 halves and his brother, Brad, had 6 halves. There were 18 halves left. How many whole cookies did Greg's mom make?",
        "answer": 14,
        "generated": [
            "# Python code, return ans\nGreg_halves = 4\nBrad_halves = 6\nremaining_halves = 18\ntotal_halves = Greg_halves + Brad_halves + remaining_halves\nwhole_cookies = total_halves / 2\nans = whole_cookies",
            "# Python code, return ans\nGreg_halves = 4\nBrad_halves = 6\nremaining_halves = 18\ntotal_halves = Greg_halves + Brad_halves + remaining_halves\nwhole_cookies = total_halves / 2\nans = whole_cookies",
            "# Python code, return ans\nGreg_halves = 4\nBrad_halves = 6\nremaining_halves = 18\ntotal_halves = Greg_halves + Brad_halves + remaining_halves\nwhole_cookies = total_halves / 2\nans = whole_cookies"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "Eric has two pieces of rope. One piece is 10 inches longer than the other. The total length of the two pieces is 40 inches. How long is the shorter piece?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\ntotal_length = 40\ndifference = 10\nshorter_piece = (total_length - difference) / 2\nans = shorter_piece",
            "# Python code, return ans\ntotal_length = 40\ndifference = 10\nshorter_piece = (total_length - difference) / 2\nans = shorter_piece",
            "# Python code, return ans\ntotal_length = 40\nlength_difference = 10\nshorter_piece = (total_length - length_difference) / 2\nans = shorter_piece"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "Ethan and Frank went rowing. Ethan rowed the boat from 10:50 to 11:15. Frank rowed the boat twice as long. How long did the boys row the boat altogether?",
        "answer": 75,
        "generated": [
            "# Python code, return ans\nEthan_row_time = 11.25 - 10.833333333333334 # 11:15 - 10:50 in decimal format\nFrank_row_time = Ethan_row_time * 2\ntotal_row_time = Ethan_row_time + Frank_row_time\nans = total_row_time",
            "# Python code, return ans\nEthan_rowing_time = 11.25 - 10.8333 # 11:15 - 10:50 in decimal hours\nFrank_rowing_time = Ethan_rowing_time * 2\ntotal_rowing_time = Ethan_rowing_time + Frank_rowing_time\nans = total_rowing_time * 60 # Convert to minutes",
            "# Python code, return ans\nEthan_rowing_time = 11.25 - 10.83  # 11:15 - 10:50 (in decimal)\nFrank_rowing_time = Ethan_rowing_time * 2\ntotal_rowing_time = Ethan_rowing_time + Frank_rowing_time\nans = total_rowing_time * 60  # Convert to minutes"
        ],
        "results": [
            1.2499999999999982,
            75.00600000000009,
            75.6
        ],
        "result_counter": {
            "1.2499999999999982": 1,
            "75.00600000000009": 1,
            "75.6": 1
        },
        "prediction": 1.2499999999999982
    },
    {
        "question": "There were 18 girls and 15 boys on the track team. 7 more girls joined the team. 4 boys quit the team. How many children were on the track team then?",
        "answer": 36,
        "generated": [
            "# Python code, return ans\ninitial_girls = 18\ninitial_boys = 15\nnew_girls = 7\nboys_quit = 4\ntotal_girls = initial_girls + new_girls\ntotal_boys = initial_boys - boys_quit\nans = total_girls + total_boys",
            "# Python code, return ans\ngirls_initial = 18\nboys_initial = 15\ngirls_joined = 7\nboys_quit = 4\ngirls_final = girls_initial + girls_joined\nboys_final = boys_initial - boys_quit\ntotal_children = girls_final + boys_final\nans = total_children",
            "# Python code, return ans\ngirls_initial = 18\nboys_initial = 15\ngirls_joined = 7\nboys_quit = 4\ngirls_final = girls_initial + girls_joined\nboys_final = boys_initial - boys_quit\ntotal_children = girls_final + boys_final\nans = total_children"
        ],
        "results": [
            36.0,
            36.0,
            36.0
        ],
        "result_counter": {
            "36.0": 3
        },
        "prediction": 36.0
    },
    {
        "question": "London is 11 years old and Blair is 16 years old. Several years ago, Blair was twice as old as London. How old was London then?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ncurrent_age_London = 11\ncurrent_age_Blair = 16\n\nyears_ago = 1\nwhile (current_age_Blair - years_ago) != 2 * (current_age_London - years_ago):\n    years_ago += 1\n\nans = current_age_London - years_ago\nans",
            "# Python code, return ans\ncurrent_age_London = 11\ncurrent_age_Blair = 16\n\nfor years_ago in range(1, current_age_London):\n    London_age_then = current_age_London - years_ago\n    Blair_age_then = current_age_Blair - years_ago\n    if Blair_age_then == 2 * London_age_then:\n        ans = London_age_then\n        break\n\nans",
            "# Python code, return ans\nLondon_current_age = 11\nBlair_current_age = 16\nyears_ago = Blair_current_age - 2 * London_current_age\nLondon_age_then = London_current_age - years_ago\nans = London_age_then"
        ],
        "results": [
            5.0,
            5.0,
            17.0
        ],
        "result_counter": {
            "5.0": 2,
            "17.0": 1
        },
        "prediction": 5.0
    },
    {
        "question": "Anna has a total of 28 nickels and dimes in her piggy bank. She has 8 fewer nickels than dimes. How many dimes does Anna have?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\ntotal_coins = 28\nnickels_less_than_dimes = 8\ndimes = (total_coins + nickels_less_than_dimes) // 2\nans = dimes",
            "# Python code, return ans\ntotal_coins = 28\nnickel_dime_difference = 8\ndimes = (total_coins + nickel_dime_difference) // 2\nans = dimes",
            "# Python code, return ans\ntotal_coins = 28\nnickels_less_than_dimes = 8\ndimes = (total_coins + nickels_less_than_dimes) // 2\nans = dimes"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "Cindy and Dan have the same number of stickers. Cindy used 15 of her stickers. Dan bought 18 more stickers. How many more stickers did Dan have than Cindy then?",
        "answer": 33,
        "generated": [
            "# Python code, return ans\nCindy_used = 15\nDan_bought = 18\nmore_stickers = Dan_bought - Cindy_used\nans = more_stickers",
            "# Python code, return ans\nCindy_stickers_used = 15\nDan_stickers_bought = 18\nsticker_difference = Dan_stickers_bought - Cindy_stickers_used\nans = sticker_difference",
            "# Python code, return ans\nCindy_used = 15\nDan_bought = 18\nmore_stickers = Dan_bought - Cindy_used\nans = more_stickers"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Rick and Todd have the same number of candy bars. Rick ate 11 candy bars. Todd gave away 18 of his candy bars. How many more candy bars did Rick have than Todd then?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nRick_candy_bars = 11\nTodd_candy_bars_given_away = 18\ndifference_candy_bars = Rick_candy_bars - Todd_candy_bars_given_away\nans = difference_candy_bars",
            "# Python code, return ans\nRick_candy_bars = 11\nTodd_candy_bars_given_away = 18\ndifference_candy_bars = Rick_candy_bars - Todd_candy_bars_given_away\nans = difference_candy_bars",
            "# Python code, return ans\nRick_candy_bars = 11\nTodd_candy_bars_given_away = 18\ndifference = Rick_candy_bars - Todd_candy_bars_given_away\nans = difference"
        ],
        "results": [
            -7.0,
            -7.0,
            -7.0
        ],
        "result_counter": {
            "-7.0": 3
        },
        "prediction": -7.0
    },
    {
        "question": "Ed had 22 more marbles than Doug. Doug lost 8 of his marbles at the playground. How many more marble did Ed have than Doug then?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\nDoug_marbles = 8\nEd_more_marbles = 22\nEd_marbles = Doug_marbles + Ed_more_marbles\nDoug_lost_marbles = 8\nDoug_remaining_marbles = Doug_marbles - Doug_lost_marbles\nans = Ed_marbles - Doug_remaining_marbles",
            "# Python code, return ans\nEd_more_marbles = 22\nDoug_lost_marbles = 8\nans = Ed_more_marbles + Doug_lost_marbles",
            "# Python code, return ans\nEd_more_marbles = 22\nDoug_lost_marbles = 8\nans = Ed_more_marbles + Doug_lost_marbles"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "Sara bought decorations for her party. She paid $5 for balloons and $18 for tablecloths. She also spent $9 for streamers. She paid the cashier and got $8 back. How much money did Sara give to the cashier?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\nballoons_cost = 5\ntablecloths_cost = 18\nstreamers_cost = 9\nchange_received = 8\ntotal_cost = balloons_cost + tablecloths_cost + streamers_cost\ncash_given = total_cost + change_received\nans = cash_given",
            "# Python code, return ans\nballoons_cost = 5\ntablecloths_cost = 18\nstreamers_cost = 9\nchange_received = 8\ntotal_cost = balloons_cost + tablecloths_cost + streamers_cost\ncash_given = total_cost + change_received\nans = cash_given",
            "# Python code, return ans\nballoons_cost = 5\ntablecloths_cost = 18\nstreamers_cost = 9\nchange_received = 8\ntotal_cost = balloons_cost + tablecloths_cost + streamers_cost\ncash_given = total_cost + change_received\nans = cash_given"
        ],
        "results": [
            40.0,
            40.0,
            40.0
        ],
        "result_counter": {
            "40.0": 3
        },
        "prediction": 40.0
    },
    {
        "question": "Zachary collects cans for the recycling club. On the first day, he found 4 cans. On the second day, he found 9 cans. He found 14 cans on the third day. If this pattern continues, how many cans do you  think Zachary will find on the seventh day?",
        "answer": 34,
        "generated": [
            "# Python code, return ans\nfirst_day_cans = 4\ndifference = 5\nseventh_day_cans = first_day_cans + difference * (7 - 1)\nans = seventh_day_cans",
            "# Python code, return ans\nfirst_day_cans = 4\nsecond_day_cans = 9\nthird_day_cans = 14\n\ndifference_first_second = second_day_cans - first_day_cans\ndifference_second_third = third_day_cans - second_day_cans\n\n# Since the difference between the number of cans found on consecutive days is constant, this is an arithmetic sequence.\ncommon_difference = difference_second_third\n\n# Using the formula for the nth term of an arithmetic sequence: an = a1 + (n-1)d\nseventh_day_cans = first_day_cans + (7 - 1) * common_difference\nans = seventh_day_cans",
            "# Python code, return ans\nfirst_day_cans = 4\nsecond_day_cans = 9\nthird_day_cans = 14\n\ndifference_first_second = second_day_cans - first_day_cans\ndifference_second_third = third_day_cans - second_day_cans\n\n# Since the pattern is increasing by a constant difference, it is an arithmetic sequence.\ncommon_difference = difference_second_third\n\n# Finding the number of cans on the seventh day using the arithmetic sequence formula:\n# An = A1 + (n-1) * d\nseventh_day_cans = third_day_cans + (7 - 3) * common_difference\nans = seventh_day_cans"
        ],
        "results": [
            34.0,
            34.0,
            34.0
        ],
        "result_counter": {
            "34.0": 3
        },
        "prediction": 34.0
    },
    {
        "question": "Suzanne read the first 15 pages of her book on Monday. She read 16 more pages than that on Tuesday. Then there were 18 pages left. How many pages are in Suzanne's book altogether?",
        "answer": 64,
        "generated": [
            "# Python code, return ans\nread_on_Monday = 15\nread_on_Tuesday = read_on_Monday + 16\npages_left = 18\ntotal_pages = read_on_Monday + read_on_Tuesday + pages_left\nans = total_pages",
            "# Python code, return ans\nread_on_Monday = 15\nread_on_Tuesday = read_on_Monday + 16\npages_left = 18\ntotal_pages = read_on_Monday + read_on_Tuesday + pages_left\nans = total_pages",
            "# Python code, return ans\nread_on_Monday = 15\nread_on_Tuesday = read_on_Monday + 16\npages_left = 18\ntotal_pages = read_on_Monday + read_on_Tuesday + pages_left\nans = total_pages"
        ],
        "results": [
            64.0,
            64.0,
            64.0
        ],
        "result_counter": {
            "64.0": 3
        },
        "prediction": 64.0
    },
    {
        "question": "Maria and her sister want to buy a present for their mother. Maria has $17. Her sister has double that amount. They want to buy their mom a coat that costs $80. How much more money do they need?",
        "answer": 29,
        "generated": [
            "# Python code, return ans\nMaria_money = 17\nsister_money = Maria_money * 2\ntotal_money = Maria_money + sister_money\ncoat_cost = 80\nmore_money_needed = coat_cost - total_money\nans = more_money_needed",
            "# Python code, return ans\nMaria_money = 17\nsister_money = Maria_money * 2\ntotal_money = Maria_money + sister_money\ncoat_cost = 80\nmoney_needed = coat_cost - total_money\nans = money_needed",
            "# Python code, return ans\nMaria_money = 17\nsister_money = Maria_money * 2\ntotal_money = Maria_money + sister_money\ncoat_cost = 80\nmoney_needed = coat_cost - total_money\nans = money_needed"
        ],
        "results": [
            29.0,
            29.0,
            29.0
        ],
        "result_counter": {
            "29.0": 3
        },
        "prediction": 29.0
    },
    {
        "question": "Tina had a large collection of beanie babies. She gave 8 beanie babies to her cousin. She gave half that amount to her sister. She gave 36 beanie babies to needy children. She kept 12 for herself. How many beanie babies were in Tina's collection at first?",
        "answer": 60,
        "generated": [
            "# Python code, return ans\nbeanie_babies_cousin = 8\nbeanie_babies_sister = beanie_babies_cousin / 2\nbeanie_babies_needy_children = 36\nbeanie_babies_kept = 12\n\ntotal_beanie_babies = beanie_babies_cousin + beanie_babies_sister + beanie_babies_needy_children + beanie_babies_kept\nans = total_beanie_babies",
            "# Python code, return ans\nbeanie_babies_cousin = 8\nbeanie_babies_sister = beanie_babies_cousin / 2\nbeanie_babies_needy_children = 36\nbeanie_babies_kept = 12\n\ntotal_beanie_babies = beanie_babies_cousin + beanie_babies_sister + beanie_babies_needy_children + beanie_babies_kept\nans = total_beanie_babies",
            "# Python code, return ans\nbeanie_babies_given_cousin = 8\nbeanie_babies_given_sister = beanie_babies_given_cousin / 2\nbeanie_babies_given_needy_children = 36\nbeanie_babies_kept = 12\n\ntotal_beanie_babies = beanie_babies_given_cousin + beanie_babies_given_sister + beanie_babies_given_needy_children + beanie_babies_kept\nans = total_beanie_babies"
        ],
        "results": [
            60.0,
            60.0,
            60.0
        ],
        "result_counter": {
            "60.0": 3
        },
        "prediction": 60.0
    },
    {
        "question": "David spent 74 cents. He bought a ruler for 29 cents and a folder for 25 cents. He also bought 2 pencils. How much does one pencil cost?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\ntotal_spent = 74\nruler_cost = 29\nfolder_cost = 25\npencil_cost_total = total_spent - (ruler_cost + folder_cost)\npencil_cost_each = pencil_cost_total / 2\nans = pencil_cost_each",
            "# Python code, return ans\ntotal_spent = 74\nruler_cost = 29\nfolder_cost = 25\npencils_cost = total_spent - (ruler_cost + folder_cost)\npencil_cost = pencils_cost / 2\nans = pencil_cost",
            "# Python code, return ans\nspent_total = 74\nruler_cost = 29\nfolder_cost = 25\npencil_cost_total = spent_total - (ruler_cost + folder_cost)\npencil_cost_each = pencil_cost_total / 2\nans = pencil_cost_each"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "Mark had 24 marbles and Evan had 3 marbles. Mark gave some of his marbles to Evan. Now Mark has exactly double the number of marbles that Evan has. How many marbles did Mark give to Evan?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nMark_initial_marbles = 24\nEvan_initial_marbles = 3\n\n# Let x be the number of marbles Mark gave to Evan\n# Mark's marbles after giving = 24 - x\n# Evan's marbles after receiving = 3 + x\n# Mark's marbles are double Evan's marbles: 24 - x = 2 * (3 + x)\n\n# Solving the equation\nfrom sympy import symbols, Eq, solve\nx = symbols('x')\nequation = Eq(24 - x, 2 * (3 + x))\nmarbles_given = solve(equation, x)[0]\nans = marbles_given\nans",
            "# Python code, return ans\nMark_initial_marbles = 24\nEvan_initial_marbles = 3\n\nfor marbles_given in range(1, Mark_initial_marbles):\n    Mark_new_marbles = Mark_initial_marbles - marbles_given\n    Evan_new_marbles = Evan_initial_marbles + marbles_given\n    if Mark_new_marbles == 2 * Evan_new_marbles:\n        ans = marbles_given\n        break\n\nans",
            "# Python code, return ans\nMark_initial_marbles = 24\nEvan_initial_marbles = 3\n\nfor marbles_given in range(1, Mark_initial_marbles):\n    Mark_new_marbles = Mark_initial_marbles - marbles_given\n    Evan_new_marbles = Evan_initial_marbles + marbles_given\n    if Mark_new_marbles == 2 * Evan_new_marbles:\n        ans = marbles_given\n        break\n\nans"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Annette and Caitlin weigh 95 pounds together. Caitlin and Sara weigh 87 pounds together. How much more does Annette weigh than Sara?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nAnnette_Caitlin_weight = 95\nCaitlin_Sara_weight = 87\nAnnette_Sara_weight_diff = Annette_Caitlin_weight - Caitlin_Sara_weight\nans = Annette_Sara_weight_diff",
            "# Python code, return ans\nAnnette_Caitlin_weight = 95\nCaitlin_Sara_weight = 87\n# Let Annette's weight be A, Caitlin's weight be C, and Sara's weight be S\n# A + C = 95\n# C + S = 87\n# A - S = (A + C) - (C + S)\ndifference_weight = Annette_Caitlin_weight - Caitlin_Sara_weight\nans = difference_weight",
            "# Python code, return ans\nAnnette_Caitlin_weight = 95\nCaitlin_Sara_weight = 87\n# Let Annette's weight = A, Caitlin's weight = C, and Sara's weight = S\n# A + C = 95\n# C + S = 87\n# A - S = (A + C) - (C + S)\nAnnette_more_than_Sara = Annette_Caitlin_weight - Caitlin_Sara_weight\nans = Annette_more_than_Sara"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Kyle bought 3 presents. The first present cost $18. The second present cost $7 more than the first. The third present cost $11 less than the first. How much did Kyle pay for all 3 presents?",
        "answer": 50,
        "generated": [
            "# Python code, return ans\nfirst_present_cost = 18\nsecond_present_cost = first_present_cost + 7\nthird_present_cost = first_present_cost - 11\ntotal_cost = first_present_cost + second_present_cost + third_present_cost\nans = total_cost",
            "# Python code, return ans\nfirst_present_cost = 18\nsecond_present_cost = first_present_cost + 7\nthird_present_cost = first_present_cost - 11\ntotal_cost = first_present_cost + second_present_cost + third_present_cost\nans = total_cost",
            "# Python code, return ans\nfirst_present_cost = 18\nsecond_present_cost = first_present_cost + 7\nthird_present_cost = first_present_cost - 11\ntotal_cost = first_present_cost + second_present_cost + third_present_cost\nans = total_cost"
        ],
        "results": [
            50.0,
            50.0,
            50.0
        ],
        "result_counter": {
            "50.0": 3
        },
        "prediction": 50.0
    },
    {
        "question": "Three paper bags contain a total of 24 apples. The first and second bags contain a total of 11 apples. The second and third bags contain a total of 18 apples. How many apples are in the first and third bags together?",
        "answer": 19,
        "generated": [
            "# Python code, return ans\ntotal_apples = 24\nfirst_and_second_bags = 11\nsecond_and_third_bags = 18\nsecond_bag = second_and_third_bags - (total_apples - first_and_second_bags)\nfirst_and_third_bags = total_apples - second_bag\nans = first_and_third_bags",
            "# Python code, return ans\ntotal_apples = 24\nfirst_and_second_bags = 11\nsecond_and_third_bags = 18\n\n# Find the number of apples in the second bag\nsecond_bag = second_and_third_bags - (total_apples - first_and_second_bags)\n\n# Find the number of apples in the first and third bags\nfirst_and_third_bags = total_apples - second_bag\n\nans = first_and_third_bags\n",
            "# Python code, return ans\ntotal_apples = 24\nfirst_second_bags = 11\nsecond_third_bags = 18\n# Let's find the number of apples in the second bag\nsecond_bag = second_third_bags - (total_apples - first_second_bags)\n# Now, we can find the number of apples in the first and third bags\nfirst_third_bags = total_apples - second_bag\nans = first_third_bags"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "A worm has fallen into a hole that is 26 inches deep. It climbs up 8 inches and slides back 3 inches every day. How many days will it take the worm to reach the top?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nhole_depth = 26\nclimb_up = 8\nslide_back = 3\nnet_climb = climb_up - slide_back\ndays = 0\n\nwhile hole_depth > 0:\n    hole_depth -= net_climb\n    days += 1\n    if hole_depth <= 0:\n        break\n    hole_depth += slide_back\n\nans = days",
            "# Python code, return ans\nhole_depth = 26\nclimb_up = 8\nslide_back = 3\nnet_climb = climb_up - slide_back\ndays = 0\n\nwhile hole_depth > 0:\n    hole_depth -= net_climb\n    days += 1\n    if hole_depth <= 0:\n        break\n    hole_depth += slide_back\n\nans = days",
            "# Python code, return ans\nhole_depth = 26\nclimb_up = 8\nslide_back = 3\nnet_climb = climb_up - slide_back\ndays = 0\n\nwhile hole_depth > 0:\n    hole_depth -= net_climb\n    days += 1\n    if hole_depth <= 0:\n        break\n    hole_depth += slide_back\n\nans = days"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Rita, Peter, and Skeeter are penguins. They weigh 90 pounds altogether. Rita and Peter know they weigh the same amount. Peter and Skeeter know they weigh 68 pounds together. How much does Skeeter weigh?",
        "answer": 46,
        "generated": [
            "# Python code, return ans\ntotal_weight = 90\nPeter_Skeeter_weight = 68\nRita_Peter_weight = (total_weight - Peter_Skeeter_weight) / 2\nSkeeter_weight = Peter_Skeeter_weight - Rita_Peter_weight\nans = Skeeter_weight",
            "# Python code, return ans\ntotal_weight = 90\nPeter_Skeeter_weight = 68\nRita_Peter_weight = (total_weight - Peter_Skeeter_weight) / 2\nSkeeter_weight = Peter_Skeeter_weight - Rita_Peter_weight\nans = Skeeter_weight",
            "# Python code, return ans\ntotal_weight = 90\nPeter_Skeeter_weight = 68\nRita_Peter_weight = (total_weight - Peter_Skeeter_weight) / 2\nSkeeter_weight = Peter_Skeeter_weight - Rita_Peter_weight\nans = Skeeter_weight"
        ],
        "results": [
            57.0,
            57.0,
            57.0
        ],
        "result_counter": {
            "57.0": 3
        },
        "prediction": 57.0
    },
    {
        "question": "A new store opened up at the mall. During the first hour, 94 people came in and 27 people left. During the second hour, 18 people came in and 9 people left. How many people were still in the store after 2 hours?",
        "answer": 76,
        "generated": [
            "# Python code, return ans\nfirst_hour_in = 94\nfirst_hour_out = 27\nsecond_hour_in = 18\nsecond_hour_out = 9\n\ntotal_in = first_hour_in + second_hour_in\ntotal_out = first_hour_out + second_hour_out\npeople_in_store = total_in - total_out\nans = people_in_store",
            "# Python code, return ans\nfirst_hour_in = 94\nfirst_hour_out = 27\nsecond_hour_in = 18\nsecond_hour_out = 9\ntotal_people_in = first_hour_in + second_hour_in\ntotal_people_out = first_hour_out + second_hour_out\npeople_still_in_store = total_people_in - total_people_out\nans = people_still_in_store",
            "# Python code, return ans\nfirst_hour_in = 94\nfirst_hour_out = 27\nsecond_hour_in = 18\nsecond_hour_out = 9\n\ntotal_people_in = first_hour_in + second_hour_in\ntotal_people_out = first_hour_out + second_hour_out\npeople_in_store = total_people_in - total_people_out\nans = people_in_store"
        ],
        "results": [
            76.0,
            76.0,
            76.0
        ],
        "result_counter": {
            "76.0": 3
        },
        "prediction": 76.0
    },
    {
        "question": "Ben had some baseball cards. His friend, Tim, had 20 cards. After Ben bought 3 more cards, he had twice as many cards as Tim. How many cards did Ben have at first?",
        "answer": 37,
        "generated": [
            "# Python code, return ans\nTim_cards = 20\nBen_cards_after_purchase = 2 * Tim_cards\nBen_cards_initial = Ben_cards_after_purchase - 3\nans = Ben_cards_initial",
            "# Python code, return ans\nTim_cards = 20\nBen_cards_after_purchase = Tim_cards * 2\nBen_cards_before_purchase = Ben_cards_after_purchase - 3\nans = Ben_cards_before_purchase",
            "# Python code, return ans\nTim_cards = 20\nBen_cards_after_purchase = 2 * Tim_cards\nBen_cards_before_purchase = Ben_cards_after_purchase - 3\nans = Ben_cards_before_purchase"
        ],
        "results": [
            37.0,
            37.0,
            37.0
        ],
        "result_counter": {
            "37.0": 3
        },
        "prediction": 37.0
    },
    {
        "question": "Alex, Brad, Calvin, and Dennis are playing checkers. Each of the 4 boys played 2 games with every other player. How many games of checkers were played altogether?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\ntotal_players = 4\ngames_each_pair = 2\ntotal_games = (total_players * (total_players - 1) // 2) * games_each_pair\nans = total_games",
            "# Python code, return ans\ntotal_players = 4\ngames_per_pair = 2\ntotal_games = (total_players * (total_players - 1) // 2) * games_per_pair\nans = total_games",
            "# Python code, return ans\ntotal_players = 4\ngames_per_pair = 2\ntotal_games = (total_players * (total_players - 1) // 2) * games_per_pair\nans = total_games"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "A box of apples was delivered to Paul's Pies and Cakes. He put half of the apples aside for a pie he would make later. He put 25 of the remaining apples in the refrigerator. That left 6 apples to use in his muffins. How many apples were in the box at first?",
        "answer": 62,
        "generated": [
            "# Python code, return ans\napples_for_muffins = 6\napples_in_refrigerator = 25\nremaining_apples = apples_for_muffins + apples_in_refrigerator\ntotal_apples = remaining_apples * 2\nans = total_apples",
            "# Python code, return ans\napples_for_muffins = 6\napples_in_refrigerator = 25\nremaining_apples = apples_for_muffins + apples_in_refrigerator\ntotal_apples = remaining_apples * 2\nans = total_apples",
            "# Python code, return ans\napples_in_refrigerator = 25\napples_for_muffins = 6\nremaining_apples = apples_in_refrigerator + apples_for_muffins\ntotal_apples = remaining_apples * 2\nans = total_apples"
        ],
        "results": [
            62.0,
            62.0,
            62.0
        ],
        "result_counter": {
            "62.0": 3
        },
        "prediction": 62.0
    },
    {
        "question": "Megan and her sister, Tara, wanted to buy a scooter for $26. Tara had $4 more than Megan. Together they had enough money to buy the scooter. How much money did Tara have?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\nscooter_cost = 26\nMegan_money = (scooter_cost - 4) / 2\nTara_money = Megan_money + 4\nans = Tara_money",
            "# Python code, return ans\nscooter_price = 26\nMegan_money = (scooter_price - 4) / 2\nTara_money = Megan_money + 4\nans = Tara_money",
            "# Python code, return ans\nscooter_price = 26\nMegan_money = (scooter_price - 4) / 2\nTara_money = Megan_money + 4\nans = Tara_money"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "Evan delivers packages in a building. He started on the first floor and went up 7 floors. He went down 3 floors and then up 16 floors. Then he was only 2 floors away from the top of the building. How many floors are in the building altogether?",
        "answer": 23,
        "generated": [
            "# Python code, return ans\nstart_floor = 1\nfloors_up_first = 7\nfloors_down = 3\nfloors_up_second = 16\nfloors_from_top = 2\n\ncurrent_floor = start_floor + floors_up_first - floors_down + floors_up_second\ntotal_floors = current_floor + floors_from_top\nans = total_floors",
            "# Python code, return ans\nstart_floor = 1\nup_7_floors = 7\ndown_3_floors = -3\nup_16_floors = 16\nfloors_to_top = 2\n\ncurrent_floor = start_floor + up_7_floors + down_3_floors + up_16_floors\ntotal_floors = current_floor + floors_to_top\nans = total_floors",
            "# Python code, return ans\nstart_floor = 1\nup_7_floors = 7\ndown_3_floors = -3\nup_16_floors = 16\nfloors_to_top = 2\n\ncurrent_floor = start_floor + up_7_floors + down_3_floors + up_16_floors\ntotal_floors = current_floor + floors_to_top\nans = total_floors"
        ],
        "results": [
            23.0,
            23.0,
            23.0
        ],
        "result_counter": {
            "23.0": 3
        },
        "prediction": 23.0
    },
    {
        "question": "Jake bought a book of tickets for the rides at Fun Land. 8 of the tickets were red. There were twice as many blue tickets as red tickets. Jake used all 6 of his yellow tickets first. How many tickets did Jake buy in all?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\nred_tickets = 8\nblue_tickets = red_tickets * 2\nyellow_tickets = 6\ntotal_tickets = red_tickets + blue_tickets + yellow_tickets\nans = total_tickets",
            "# Python code, return ans\nred_tickets = 8\nblue_tickets = red_tickets * 2\nyellow_tickets = 6\ntotal_tickets = red_tickets + blue_tickets + yellow_tickets\nans = total_tickets",
            "# Python code, return ans\nred_tickets = 8\nblue_tickets = red_tickets * 2\nyellow_tickets = 6\ntotal_tickets = red_tickets + blue_tickets + yellow_tickets\nans = total_tickets"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "My ice cream shop was really busy today. It was 98 degrees and we sold 67 ice cream cones. We sold 15 more milkshakes than ice cream cones. How many milkshakes were sold?",
        "answer": 82,
        "generated": [
            "# Python code, return ans\nice_cream_cones_sold = 67\nmore_milkshakes_sold = 15\nmilkshakes_sold = ice_cream_cones_sold + more_milkshakes_sold\nans = milkshakes_sold",
            "# Python code, return ans\nice_cream_cones_sold = 67\nmilkshakes_sold = ice_cream_cones_sold + 15\nans = milkshakes_sold",
            "# Python code, return ans\nice_cream_cones_sold = 67\nmilkshakes_sold = ice_cream_cones_sold + 15\nans = milkshakes_sold"
        ],
        "results": [
            82.0,
            82.0,
            82.0
        ],
        "result_counter": {
            "82.0": 3
        },
        "prediction": 82.0
    },
    {
        "question": "Todd had 85 cents in his pocket. He bought a candy bar for 14 cents. He bought a box of cookies for 39 cents. How much money did Todd spend altogether?",
        "answer": 53,
        "generated": [
            "# Python code, return ans\ncandy_bar_cost = 14\ncookies_cost = 39\ntotal_spent = candy_bar_cost + cookies_cost\nans = total_spent",
            "# Python code, return ans\ncandy_bar_cost = 14\ncookies_cost = 39\ntotal_spent = candy_bar_cost + cookies_cost\nans = total_spent",
            "# Python code, return ans\ncandy_bar_cost = 14\ncookies_cost = 39\ntotal_spent = candy_bar_cost + cookies_cost\nans = total_spent"
        ],
        "results": [
            53.0,
            53.0,
            53.0
        ],
        "result_counter": {
            "53.0": 3
        },
        "prediction": 53.0
    },
    {
        "question": "The little league stadium has 92 seats. 47 people came to the game today. 38 people were holding banners. How many seats were empty?",
        "answer": 45,
        "generated": [
            "# Python code, return ans\ntotal_seats = 92\npeople_without_banners = 47 - 38\nempty_seats = total_seats - people_without_banners - 38\nans = empty_seats",
            "# Python code, return ans\ntotal_seats = 92\npeople_without_banners = 47 - 38\nempty_seats = total_seats - people_without_banners - 38\nans = empty_seats",
            "# Python code, return ans\ntotal_seats = 92\npeople_without_banners = 47 - 38\nempty_seats = total_seats - people_without_banners - 38\nans = empty_seats"
        ],
        "results": [
            45.0,
            45.0,
            45.0
        ],
        "result_counter": {
            "45.0": 3
        },
        "prediction": 45.0
    },
    {
        "question": "The music room has 27 violins. There are also 15 flutes. 18 students are in the school band. How many instruments are in the music room?",
        "answer": 42,
        "generated": [
            "# Python code, return ans\nviolins = 27\nflutes = 15\ntotal_instruments = violins + flutes\nans = total_instruments",
            "# Python code, return ans\nviolins = 27\nflutes = 15\ntotal_instruments = violins + flutes\nans = total_instruments",
            "# Python code, return ans\nviolins = 27\nflutes = 15\ntotal_instruments = violins + flutes\nans = total_instruments"
        ],
        "results": [
            42.0,
            42.0,
            42.0
        ],
        "result_counter": {
            "42.0": 3
        },
        "prediction": 42.0
    },
    {
        "question": "Maura collects seashells every summer. Her family stays at the beach house for 21 days. This summer, Maura found 75 seashells. She gave some to her little sister. Maura then had 57 seashells. How many seashells did Maura give to her sister?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\ntotal_seashells = 75\nseashells_left = 57\nseashells_given = total_seashells - seashells_left\nans = seashells_given",
            "# Python code, return ans\ntotal_seashells = 75\nseashells_left = 57\nseashells_given = total_seashells - seashells_left\nans = seashells_given",
            "# Python code, return ans\ntotal_seashells = 75\nseashells_left = 57\nseashells_given = total_seashells - seashells_left\nans = seashells_given"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "The tallest giraffe at the zoo is 96 inches tall. There are 14 adult giraffes at the zoo. The shortest giraffe is 68 inches. How much taller is the bigger giraffe?",
        "answer": 28,
        "generated": [
            "# Python code, return ans\ntallest_giraffe = 96\nshortest_giraffe = 68\nheight_difference = tallest_giraffe - shortest_giraffe\nans = height_difference",
            "# Python code, return ans\ntallest_giraffe = 96\nshortest_giraffe = 68\nheight_difference = tallest_giraffe - shortest_giraffe\nans = height_difference",
            "# Python code, return ans\ntallest_giraffe = 96\nshortest_giraffe = 68\nheight_difference = tallest_giraffe - shortest_giraffe\nans = height_difference"
        ],
        "results": [
            28.0,
            28.0,
            28.0
        ],
        "result_counter": {
            "28.0": 3
        },
        "prediction": 28.0
    },
    {
        "question": "The Central City Zoo has 45 chimpanzees. Every day the chimps eat a total of 72 bananas. Next week, the zoo is moving 18 chimps to a new cage. How many chimps will stay in the old cage?",
        "answer": 27,
        "generated": [
            "# Python code, return ans\ntotal_chimps = 45\nchimps_moving = 18\nchimps_staying = total_chimps - chimps_moving\nans = chimps_staying",
            "# Python code, return ans\ntotal_chimpanzees = 45\nmoving_chimpanzees = 18\nremaining_chimpanzees = total_chimpanzees - moving_chimpanzees\nans = remaining_chimpanzees",
            "# Python code, return ans\ntotal_chimps = 45\nchimps_moving = 18\nchimps_staying = total_chimps - chimps_moving\nans = chimps_staying"
        ],
        "results": [
            27.0,
            27.0,
            27.0
        ],
        "result_counter": {
            "27.0": 3
        },
        "prediction": 27.0
    },
    {
        "question": "The zookeeper has 68 fish to feed to the penguins. 19 penguins have already gotten a fish. The zoo has 36 penguins. How many more penguins need to get a fish?",
        "answer": 17,
        "generated": [
            "# Python code, return ans\ntotal_penguins = 36\npenguins_fed = 19\npenguins_to_feed = total_penguins - penguins_fed\nans = penguins_to_feed",
            "# Python code, return ans\ntotal_penguins = 36\npenguins_fed = 19\npenguins_to_feed = total_penguins - penguins_fed\nans = penguins_to_feed",
            "# Python code, return ans\ntotal_fish = 68\npenguins_fed = 19\ntotal_penguins = 36\npenguins_to_feed = total_penguins - penguins_fed\nans = penguins_to_feed"
        ],
        "results": [
            17.0,
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 3
        },
        "prediction": 17.0
    },
    {
        "question": "One zoo guide spoke to a group of 19 children. Another guide spoke to a group of 25 children. There are 22 guides at the zoo. How many children did the zoo guides speak to?",
        "answer": 44,
        "generated": [
            "# Python code, return ans\nguide1_children = 19\nguide2_children = 25\ntotal_children = guide1_children + guide2_children\nans = total_children",
            "# Python code, return ans\nguide_1_children = 19\nguide_2_children = 25\ntotal_children = guide_1_children + guide_2_children\nans = total_children",
            "# Python code, return ans\nguide1_children = 19\nguide2_children = 25\ntotal_children = guide1_children + guide2_children\nans = total_children"
        ],
        "results": [
            44.0,
            44.0,
            44.0
        ],
        "result_counter": {
            "44.0": 3
        },
        "prediction": 44.0
    },
    {
        "question": "Ralph has a photo album with 50 pages. He has 26 pictures of wild animals. Ralph's friend, Derrick, has 34 pictures of wild animals. How many fewer pictures of wild animals does Ralph have?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nRalph_pictures = 26\nDerrick_pictures = 34\nfewer_pictures = Derrick_pictures - Ralph_pictures\nans = fewer_pictures",
            "# Python code, return ans\nRalph_pictures = 26\nDerrick_pictures = 34\nfewer_pictures = Derrick_pictures - Ralph_pictures\nans = fewer_pictures",
            "# Python code, return ans\nRalph_pictures = 26\nDerrick_pictures = 34\nans = Derrick_pictures - Ralph_pictures"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Lisa invited the entire third grade to her party. There are 48 students altogether. 23 of the students are boys and 25 are girls. 9 students will not be able to go to the party. How many students will be there?",
        "answer": 39,
        "generated": [
            "# Python code, return ans\ntotal_students = 48\nstudents_not_going = 9\nstudents_going = total_students - students_not_going\nans = students_going",
            "# Python code, return ans\ntotal_students = 48\nstudents_not_going = 9\nstudents_going = total_students - students_not_going\nans = students_going",
            "# Python code, return ans\ntotal_students = 48\nstudents_not_going = 9\nstudents_going = total_students - students_not_going\nans = students_going"
        ],
        "results": [
            39.0,
            39.0,
            39.0
        ],
        "result_counter": {
            "39.0": 3
        },
        "prediction": 39.0
    },
    {
        "question": "Molly swam 45 meters on Saturday. She swam 28 meters on Sunday. The pool is 25 meters long. How many meters did Molly swim in all?",
        "answer": 73,
        "generated": [
            "# Python code, return ans\nswam_on_Saturday = 45\nswam_on_Sunday = 28\ntotal_swam = swam_on_Saturday + swam_on_Sunday\nans = total_swam",
            "# Python code, return ans\nswim_Saturday = 45\nswim_Sunday = 28\ntotal_swim = swim_Saturday + swim_Sunday\nans = total_swim",
            "# Python code, return ans\nswam_on_Saturday = 45\nswam_on_Sunday = 28\ntotal_swam = swam_on_Saturday + swam_on_Sunday\nans = total_swam\n"
        ],
        "results": [
            73.0,
            73.0,
            73.0
        ],
        "result_counter": {
            "73.0": 3
        },
        "prediction": 73.0
    },
    {
        "question": "Billy can play 24 songs in his music book. He knows the names of 18 different guitar chords. Billy's music book has 52 songs in it. How many songs does Billy still need to learn?",
        "answer": 28,
        "generated": [
            "# Python code, return ans\ntotal_songs = 52\nsongs_known = 24\nsongs_to_learn = total_songs - songs_known\nans = songs_to_learn",
            "# Python code, return ans\ntotal_songs = 52\nsongs_known = 24\nsongs_to_learn = total_songs - songs_known\nans = songs_to_learn",
            "# Python code, return ans\ntotal_songs_in_book = 52\nsongs_known = 24\nsongs_to_learn = total_songs_in_book - songs_known\nans = songs_to_learn"
        ],
        "results": [
            28.0,
            28.0,
            28.0
        ],
        "result_counter": {
            "28.0": 3
        },
        "prediction": 28.0
    },
    {
        "question": "Mom made 32 chocolate chip cookies. It took 24 minutes to mix the ingredients and 16 minutes to bake. Julie and Matt ate 9 cookies after dinner. How many cookies were left?",
        "answer": 23,
        "generated": [
            "# Python code, return ans\ntotal_cookies = 32\nmix_time = 24\nbake_time = 16\neaten_cookies = 9\nleft_cookies = total_cookies - eaten_cookies\nans = left_cookies",
            "# Python code, return ans\ntotal_cookies = 32\nmix_time = 24\nbake_time = 16\ncookies_eaten = 9\ncookies_left = total_cookies - cookies_eaten\nans = cookies_left",
            "# Python code, return ans\ntotal_cookies = 32\nmix_time = 24\nbake_time = 16\ncookies_eaten = 9\ncookies_left = total_cookies - cookies_eaten\nans = cookies_left"
        ],
        "results": [
            23.0,
            23.0,
            23.0
        ],
        "result_counter": {
            "23.0": 3
        },
        "prediction": 23.0
    },
    {
        "question": "There are 45 questions on the math test. 17 questions are word problems. 28 questions are addition and subtraction problems. Steve can only answer 38 questions. How many questions did Steve leave blank?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ntotal_questions = 45\nanswered_questions = 38\nblank_questions = total_questions - answered_questions\nans = blank_questions",
            "# Python code, return ans\ntotal_questions = 45\nanswered_questions = 38\nblank_questions = total_questions - answered_questions\nans = blank_questions",
            "# Python code, return ans\ntotal_questions = 45\nanswered_questions = 38\nblank_questions = total_questions - answered_questions\nans = blank_questions"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Kendra learns 12 new spelling words each week. Her goal is to learn 60 new words before her eighth birthday. She has already learned 36 new words. How many more words does Kendra need to learn?",
        "answer": 24,
        "generated": [
            "# Python code, return ans\ncurrent_learned_words = 36\ngoal_words = 60\nnew_words_each_week = 12\nwords_to_learn = goal_words - current_learned_words\nans = words_to_learn",
            "# Python code, return ans\ncurrent_learned_words = 36\ngoal_words = 60\nwords_to_learn = goal_words - current_learned_words\nans = words_to_learn",
            "# Python code, return ans\ncurrent_words = 36\ngoal_words = 60\nwords_to_learn = goal_words - current_words\nans = words_to_learn"
        ],
        "results": [
            24.0,
            24.0,
            24.0
        ],
        "result_counter": {
            "24.0": 3
        },
        "prediction": 24.0
    },
    {
        "question": "Jake read 37 pages of his new book. It has 8 chapters and 95 pages. Jake read 25 more pages later that day. How many pages has he read in all?",
        "answer": 62,
        "generated": [
            "# Python code, return ans\npages_read_initially = 37\npages_read_later = 25\ntotal_pages_read = pages_read_initially + pages_read_later\nans = total_pages_read",
            "# Python code, return ans\npages_read_initially = 37\npages_read_later = 25\ntotal_pages_read = pages_read_initially + pages_read_later\nans = total_pages_read",
            "# Python code, return ans\ninitial_pages_read = 37\nadditional_pages_read = 25\ntotal_pages_read = initial_pages_read + additional_pages_read\nans = total_pages_read"
        ],
        "results": [
            62.0,
            62.0,
            62.0
        ],
        "result_counter": {
            "62.0": 3
        },
        "prediction": 62.0
    },
    {
        "question": "Adam has 29 marbles in his collection. Mary has 11 fewer marbles than Adam. Greg has 14 more marbles than Adam. How many marbles does Greg have?",
        "answer": 43,
        "generated": [
            "# Python code, return ans\nAdam_marbles = 29\nMary_marbles = Adam_marbles - 11\nGreg_marbles = Adam_marbles + 14\nans = Greg_marbles",
            "# Python code, return ans\nAdam_marbles = 29\nMary_marbles = Adam_marbles - 11\nGreg_marbles = Adam_marbles + 14\nans = Greg_marbles",
            "# Python code, return ans\nAdam_marbles = 29\nMary_marbles = Adam_marbles - 11\nGreg_marbles = Adam_marbles + 14\nans = Greg_marbles"
        ],
        "results": [
            43.0,
            43.0,
            43.0
        ],
        "result_counter": {
            "43.0": 3
        },
        "prediction": 43.0
    },
    {
        "question": "Martin works at the Hungry Hippo. He sells 48 hamburgers before 6 o'clock. He sells 28 more hamburgers than that after 6 o'clock. He works 24 hours each week. How many hamburgers does Martin sell after 6 o'clock?",
        "answer": 76,
        "generated": [
            "# Python code, return ans\nhamburgers_before_6 = 48\nhamburgers_after_6 = hamburgers_before_6 + 28\nans = hamburgers_after_6",
            "# Python code, return ans\nhamburgers_before_6 = 48\nhamburgers_after_6 = hamburgers_before_6 + 28\nans = hamburgers_after_6",
            "# Python code, return ans\nhamburgers_before_6 = 48\nhamburgers_after_6 = hamburgers_before_6 + 28\nans = hamburgers_after_6"
        ],
        "results": [
            76.0,
            76.0,
            76.0
        ],
        "result_counter": {
            "76.0": 3
        },
        "prediction": 76.0
    },
    {
        "question": "Zoe is on vacation. She has already taken 28 pictures. She has enough film left to take 32 more pictures. Zoe took 16 more pictures at the dolphin show. How many pictures has Zoe taken altogether?",
        "answer": 44,
        "generated": [
            "# Python code, return ans\ntaken_pictures = 28\nfilm_left = 32\ndolphin_show_pictures = 16\ntotal_pictures_taken = taken_pictures + dolphin_show_pictures\nans = total_pictures_taken",
            "# Python code, return ans\ntaken_pictures = 28\nremaining_film = 32\ndolphin_show_pictures = 16\ntotal_pictures_taken = taken_pictures + dolphin_show_pictures\nans = total_pictures_taken",
            "# Python code, return ans\npictures_taken = 28\npictures_left = 32\npictures_dolphin_show = 16\ntotal_pictures_taken = pictures_taken + pictures_dolphin_show\nans = total_pictures_taken"
        ],
        "results": [
            44.0,
            44.0,
            44.0
        ],
        "result_counter": {
            "44.0": 3
        },
        "prediction": 44.0
    },
    {
        "question": "Tripp and Charlotte are going on a 36 mile hike. Tripp's backpack weighs 25 pounds. Charlotte's back pack weighs 7 pounds less. They hiked 9 miles the first day. How many miles do they have left?",
        "answer": 27,
        "generated": [
            "# Python code, return ans\ntotal_hike = 36\nfirst_day_hike = 9\nremaining_hike = total_hike - first_day_hike\nans = remaining_hike",
            "# Python code, return ans\ntotal_miles = 36\nhiked_first_day = 9\nmiles_left = total_miles - hiked_first_day\nans = miles_left",
            "# Python code, return ans\nhike_total_miles = 36\nhike_first_day = 9\nremaining_miles = hike_total_miles - hike_first_day\nans = remaining_miles"
        ],
        "results": [
            27.0,
            27.0,
            27.0
        ],
        "result_counter": {
            "27.0": 3
        },
        "prediction": 27.0
    },
    {
        "question": "The Sweet Shop gets a new candy shipment every 35 days. There are 25 cases of chocolate bars. There are 55 cases of lollipops. How many cases of candy altogether?",
        "answer": 80,
        "generated": [
            "# Python code, return ans\nchocolate_cases = 25\nlollipop_cases = 55\ntotal_cases = chocolate_cases + lollipop_cases\nans = total_cases",
            "# Python code, return ans\nchocolate_cases = 25\nlollipop_cases = 55\ntotal_cases = chocolate_cases + lollipop_cases\nans = total_cases",
            "# Python code, return ans\nchocolate_cases = 25\nlollipop_cases = 55\ntotal_cases = chocolate_cases + lollipop_cases\nans = total_cases"
        ],
        "results": [
            80.0,
            80.0,
            80.0
        ],
        "result_counter": {
            "80.0": 3
        },
        "prediction": 80.0
    },
    {
        "question": "Dora is having her tenth birthday party next Saurday. She invited 64 people. Her mom ordered 36 sandwiches. 16 people can not come to the party. How many people will be at Dora's party?",
        "answer": 48,
        "generated": [
            "# Python code, return ans\ntotal_invited = 64\nnot_attending = 16\nattending = total_invited - not_attending\nans = attending",
            "# Python code, return ans\ntotal_invited = 64\nnot_coming = 16\nattending = total_invited - not_coming\nans = attending",
            "# Python code, return ans\ntotal_invited = 64\npeople_not_coming = 16\npeople_attending = total_invited - people_not_coming\nans = people_attending"
        ],
        "results": [
            48.0,
            48.0,
            48.0
        ],
        "result_counter": {
            "48.0": 3
        },
        "prediction": 48.0
    },
    {
        "question": "There are 95 pretzels in a bowl. John ate 28 pretzels. Alan ate 9 fewer pretzels than John. Marcus ate 12 more pretzels than John. How many pretzels did Marcus eat?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\npretzels_total = 95\nJohn_ate = 28\nAlan_ate = John_ate - 9\nMarcus_ate = John_ate + 12\nans = Marcus_ate",
            "# Python code, return ans\npretzels_total = 95\nJohn_pretzels = 28\nAlan_pretzels = John_pretzels - 9\nMarcus_pretzels = John_pretzels + 12\nans = Marcus_pretzels",
            "# Python code, return ans\npretzels_total = 95\nJohn_ate = 28\nAlan_ate = John_ate - 9\nMarcus_ate = John_ate + 12\nans = Marcus_ate"
        ],
        "results": [
            40.0,
            40.0,
            40.0
        ],
        "result_counter": {
            "40.0": 3
        },
        "prediction": 40.0
    },
    {
        "question": "Mrs. Randall has taught third grade for 18 years. She has 26 students this year. She also taught second grade for 8 years. How many years has Mrs. Randall been teaching?",
        "answer": 26,
        "generated": [
            "# Python code, return ans\nthird_grade_years = 18\nsecond_grade_years = 8\ntotal_years = third_grade_years + second_grade_years\nans = total_years",
            "# Python code, return ans\nthird_grade_years = 18\nsecond_grade_years = 8\ntotal_teaching_years = third_grade_years + second_grade_years\nans = total_teaching_years",
            "# Python code, return ans\nthird_grade_years = 18\nsecond_grade_years = 8\ntotal_teaching_years = third_grade_years + second_grade_years\nans = total_teaching_years"
        ],
        "results": [
            26.0,
            26.0,
            26.0
        ],
        "result_counter": {
            "26.0": 3
        },
        "prediction": 26.0
    },
    {
        "question": "There were 46 passengers on the bus. 19 passengers got off at the first stop. 15 passengers got off at the second stop. How many passengers were left on the bus?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\ninitial_passengers = 46\nfirst_stop_passengers = 19\nsecond_stop_passengers = 15\nremaining_passengers = initial_passengers - first_stop_passengers - second_stop_passengers\nans = remaining_passengers",
            "# Python code, return ans\ninitial_passengers = 46\nfirst_stop_passengers = 19\nsecond_stop_passengers = 15\nremaining_passengers = initial_passengers - first_stop_passengers - second_stop_passengers\nans = remaining_passengers",
            "# Python code, return ans\ninitial_passengers = 46\nfirst_stop_passengers = 19\nsecond_stop_passengers = 15\nremaining_passengers = initial_passengers - first_stop_passengers - second_stop_passengers\nans = remaining_passengers"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "The book store is very busy today. There are 25 children listening to a story. 36 people are shopping for books. 17 people are at the checkout counter. How many people are at the bookstore?",
        "answer": 78,
        "generated": [
            "# Python code, return ans\nchildren_listening = 25\npeople_shopping = 36\npeople_checkout = 17\ntotal_people = children_listening + people_shopping + people_checkout\nans = total_people",
            "# Python code, return ans\nchildren_listening = 25\npeople_shopping = 36\npeople_checkout = 17\ntotal_people = children_listening + people_shopping + people_checkout\nans = total_people",
            "# Python code, return ans\nchildren_listening = 25\npeople_shopping = 36\npeople_checkout = 17\ntotal_people = children_listening + people_shopping + people_checkout\nans = total_people"
        ],
        "results": [
            78.0,
            78.0,
            78.0
        ],
        "result_counter": {
            "78.0": 3
        },
        "prediction": 78.0
    },
    {
        "question": "Alexa is reading a Nancy Drew mystery. There are 95 pages in her book. She read 18 pages the first day. The next day, Alexa just couldn't stop reading. She read 58 pages. How many pages does Alexa have left to read?",
        "answer": 19,
        "generated": [
            "# Python code, return ans\ntotal_pages = 95\nread_first_day = 18\nread_second_day = 58\npages_left = total_pages - (read_first_day + read_second_day)\nans = pages_left",
            "# Python code, return ans\ntotal_pages = 95\nread_first_day = 18\nread_second_day = 58\npages_left = total_pages - (read_first_day + read_second_day)\nans = pages_left",
            "# Python code, return ans\ntotal_pages = 95\nfirst_day_read = 18\nsecond_day_read = 58\npages_left = total_pages - (first_day_read + second_day_read)\nans = pages_left"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "Sam put 86 pretzels in a bowl for the party. His friends ate 49 of them. Sam put in 27 more pretzels. How many pretzels were in the bowl then?",
        "answer": 64,
        "generated": [
            "# Python code, return ans\ninitial_pretzels = 86\neaten_pretzels = 49\nadded_pretzels = 27\nremaining_pretzels = initial_pretzels - eaten_pretzels + added_pretzels\nans = remaining_pretzels",
            "# Python code, return ans\ninitial_pretzels = 86\npretzels_eaten = 49\nadditional_pretzels = 27\npretzels_left = initial_pretzels - pretzels_eaten\npretzels_in_bowl = pretzels_left + additional_pretzels\nans = pretzels_in_bowl",
            "# Python code, return ans\ninitial_pretzels = 86\npretzels_eaten = 49\nadditional_pretzels = 27\npretzels_left = initial_pretzels - pretzels_eaten\npretzels_after_adding = pretzels_left + additional_pretzels\nans = pretzels_after_adding"
        ],
        "results": [
            64.0,
            64.0,
            64.0
        ],
        "result_counter": {
            "64.0": 3
        },
        "prediction": 64.0
    },
    {
        "question": "Jake has 36 comic books. His brother has 15 more comic books than Jake. How many comic books do they have altogether?",
        "answer": 87,
        "generated": [
            "# Python code, return ans\nJake_comic_books = 36\nbrother_comic_books = Jake_comic_books + 15\ntotal_comic_books = Jake_comic_books + brother_comic_books\nans = total_comic_books",
            "# Python code, return ans\nJake_comic_books = 36\nbrother_comic_books = Jake_comic_books + 15\ntotal_comic_books = Jake_comic_books + brother_comic_books\nans = total_comic_books",
            "# Python code, return ans\nJake_comic_books = 36\nbrother_comic_books = Jake_comic_books + 15\ntotal_comic_books = Jake_comic_books + brother_comic_books\nans = total_comic_books"
        ],
        "results": [
            87.0,
            87.0,
            87.0
        ],
        "result_counter": {
            "87.0": 3
        },
        "prediction": 87.0
    },
    {
        "question": "Tommy has $79. He wants to buy a $35 camera. He also wants to buy a $59 CD player. How much more money does Tommy need?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\nTommy_money = 79\ncamera_cost = 35\ncd_player_cost = 59\ntotal_cost = camera_cost + cd_player_cost\nmoney_needed = total_cost - Tommy_money\nans = money_needed",
            "# Python code, return ans\nTommy_money = 79\ncamera_cost = 35\ncd_player_cost = 59\ntotal_cost = camera_cost + cd_player_cost\nmoney_needed = total_cost - Tommy_money\nans = money_needed",
            "# Python code, return ans\nTommy_money = 79\ncamera_cost = 35\nCD_player_cost = 59\ntotal_cost = camera_cost + CD_player_cost\nmoney_needed = total_cost - Tommy_money\nans = money_needed"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "Tuition at the music school is $45 per person. There is a $15 discount for siblings. Ali and her brother, Matt, signed up for classes. How much will it cost for both children?",
        "answer": 75,
        "generated": [
            "# Python code, return ans\ntuition_per_person = 45\nsibling_discount = 15\nAli_tuition = tuition_per_person\nMatt_tuition = tuition_per_person - sibling_discount\ntotal_cost = Ali_tuition + Matt_tuition\nans = total_cost",
            "# Python code, return ans\ntuition_per_person = 45\nsibling_discount = 15\nAli_tuition = tuition_per_person\nMatt_tuition = tuition_per_person - sibling_discount\ntotal_cost = Ali_tuition + Matt_tuition\nans = total_cost",
            "# Python code, return ans\ntuition_per_person = 45\nsibling_discount = 15\nAli_tuition = tuition_per_person\nMatt_tuition = tuition_per_person - sibling_discount\ntotal_cost = Ali_tuition + Matt_tuition\nans = total_cost"
        ],
        "results": [
            75.0,
            75.0,
            75.0
        ],
        "result_counter": {
            "75.0": 3
        },
        "prediction": 75.0
    },
    {
        "question": "Omar loves to play checkers. He played 37 games yesterday. He played 49 games today. Omar lost 18 games. How many games did he win?",
        "answer": 68,
        "generated": [
            "# Python code, return ans\ngame_played_yesterday = 37\ngame_played_today = 49\ngame_total_played = game_played_yesterday + game_played_today\ngame_lost = 18\ngame_win = game_total_played - game_lost\nans = game_win\nans",
            "# Python code, return ans\ngame_played_yesterday = 37\ngame_played_today = 49\ngame_total_played = game_played_yesterday + game_played_today\ngame_lost = 18\ngame_win = game_total_played - game_lost\nans = game_win\nans",
            "# Python code, return ans\ngame_played_yesterday = 37\ngame_played_today = 49\ngame_total_played = game_played_yesterday + game_played_today\ngame_lost = 18\ngame_win = game_total_played - game_lost\nans = game_win\nans"
        ],
        "results": [
            68.0,
            68.0,
            68.0
        ],
        "result_counter": {
            "68.0": 3
        },
        "prediction": 68.0
    },
    {
        "question": "94 students signed up for computer classes. There were 24 second graders and 29 third graders. The rest of the students were fourth graders. How many fourth graders took computer classes?",
        "answer": 41,
        "generated": [
            "# Python code, return ans\ntotal_students = 94\nsecond_graders = 24\nthird_graders = 29\nfourth_graders = total_students - (second_graders + third_graders)\nans = fourth_graders",
            "# Python code, return ans\ntotal_students = 94\nsecond_graders = 24\nthird_graders = 29\nfourth_graders = total_students - (second_graders + third_graders)\nans = fourth_graders",
            "# Python code, return ans\ntotal_students = 94\nsecond_graders = 24\nthird_graders = 29\nfourth_graders = total_students - (second_graders + third_graders)\nans = fourth_graders"
        ],
        "results": [
            41.0,
            41.0,
            41.0
        ],
        "result_counter": {
            "41.0": 3
        },
        "prediction": 41.0
    },
    {
        "question": "J.T. has some superhero trading cards. He lost 14 of them. He gave 19 of them to his best friend. Now he has 45 cards left. How many cards did J.T. have at first?",
        "answer": 78,
        "generated": [
            "# Python code, return ans\ncards_lost = 14\ncards_given = 19\ncards_left = 45\ninitial_cards = cards_lost + cards_given + cards_left\nans = initial_cards",
            "# Python code, return ans\ncards_lost = 14\ncards_given = 19\ncards_left = 45\ninitial_cards = cards_lost + cards_given + cards_left\nans = initial_cards",
            "# Python code, return ans\ncards_lost = 14\ncards_given = 19\ncards_left = 45\ninitial_cards = cards_lost + cards_given + cards_left\nans = initial_cards"
        ],
        "results": [
            78.0,
            78.0,
            78.0
        ],
        "result_counter": {
            "78.0": 3
        },
        "prediction": 78.0
    },
    {
        "question": "Evan has a large collection of books. He gave his best friend 14 books. He gave his little brother 8 books. Now Evan has 60 books in his collection. How many books did he have at first?",
        "answer": 82,
        "generated": [
            "# Python code, return ans\nbooks_given_friend = 14\nbooks_given_brother = 8\nbooks_left = 60\ninitial_books = books_given_friend + books_given_brother + books_left\nans = initial_books",
            "# Python code, return ans\nbooks_given_friend = 14\nbooks_given_brother = 8\ncurrent_books = 60\ninitial_books = books_given_friend + books_given_brother + current_books\nans = initial_books",
            "# Python code, return ans\nbooks_given_to_friend = 14\nbooks_given_to_brother = 8\nbooks_left = 60\ninitial_books = books_given_to_friend + books_given_to_brother + books_left\nans = initial_books"
        ],
        "results": [
            82.0,
            82.0,
            82.0
        ],
        "result_counter": {
            "82.0": 3
        },
        "prediction": 82.0
    },
    {
        "question": "It is 78 miles to Grandma's house. Mr. Welch drove 35 miles. He stopped to buy a pie for dessert. Then he drove 18 miles and stopped to put gas in the car. How many more miles until he reaches Grandma's house?",
        "answer": 25,
        "generated": [
            "# Python code, return ans\ntotal_miles = 78\nmiles_driven_first = 35\nmiles_driven_second = 18\nmiles_driven = miles_driven_first + miles_driven_second\nmiles_remaining = total_miles - miles_driven\nans = miles_remaining",
            "# Python code, return ans\ntotal_miles = 78\nmiles_driven_first = 35\nmiles_driven_second = 18\nmiles_driven_total = miles_driven_first + miles_driven_second\nmiles_remaining = total_miles - miles_driven_total\nans = miles_remaining",
            "# Python code, return ans\ntotal_miles = 78\nmiles_driven_first = 35\nmiles_driven_second = 18\nmiles_driven_total = miles_driven_first + miles_driven_second\nmiles_left = total_miles - miles_driven_total\nans = miles_left"
        ],
        "results": [
            25.0,
            25.0,
            25.0
        ],
        "result_counter": {
            "25.0": 3
        },
        "prediction": 25.0
    },
    {
        "question": "Sean is playing Monopoly with his friends. He already has 27 houses. Sean traded in 8 houses for money to buy Park Place. He collected so much rent that he decided to buy 12 more houses. How many houses did Sean have then?",
        "answer": 31,
        "generated": [
            "# Python code, return ans\ninitial_houses = 27\ntraded_houses = 8\nbought_houses = 12\nfinal_houses = initial_houses - traded_houses + bought_houses\nans = final_houses",
            "# Python code, return ans\ninitial_houses = 27\ntraded_houses = 8\nbought_houses = 12\nfinal_houses = initial_houses - traded_houses + bought_houses\nans = final_houses",
            "# Python code, return ans\ninitial_houses = 27\nhouses_traded = 8\nhouses_bought = 12\nfinal_houses = initial_houses - houses_traded + houses_bought\nans = final_houses"
        ],
        "results": [
            31.0,
            31.0,
            31.0
        ],
        "result_counter": {
            "31.0": 3
        },
        "prediction": 31.0
    },
    {
        "question": "Lou's Shoes must sell 80 pairs of shoes each month. They sold 27 pairs last week and 12 pairs this week. How many more pairs of shoes must they sell?",
        "answer": 41,
        "generated": [
            "# Python code, return ans\nmonthly_goal = 80\nlast_week_sales = 27\nthis_week_sales = 12\ntotal_sales = last_week_sales + this_week_sales\nremaining_sales = monthly_goal - total_sales\nans = remaining_sales",
            "# Python code, return ans\nmonthly_goal = 80\nlast_week_sales = 27\nthis_week_sales = 12\ntotal_sales = last_week_sales + this_week_sales\nremaining_sales = monthly_goal - total_sales\nans = remaining_sales",
            "# Python code, return ans\nmonthly_goal = 80\nsold_last_week = 27\nsold_this_week = 12\ntotal_sold = sold_last_week + sold_this_week\nremaining_pairs = monthly_goal - total_sold\nans = remaining_pairs"
        ],
        "results": [
            41.0,
            41.0,
            41.0
        ],
        "result_counter": {
            "41.0": 3
        },
        "prediction": 41.0
    },
    {
        "question": "Alissa picked 16 flowers. Her twin sister, Melissa, also picked 16 flowers. They gave their mother 18 flowers. How many flowers did the sisters have left?",
        "answer": 14,
        "generated": [
            "# Python code, return ans\nAlissa_flowers = 16\nMelissa_flowers = 16\ntotal_flowers = Alissa_flowers + Melissa_flowers\nflowers_given = 18\nflowers_left = total_flowers - flowers_given\nans = flowers_left",
            "# Python code, return ans\nAlissa_flowers = 16\nMelissa_flowers = 16\ntotal_flowers = Alissa_flowers + Melissa_flowers\nflowers_given = 18\nflowers_left = total_flowers - flowers_given\nans = flowers_left",
            "# Python code, return ans\nAlissa_flowers = 16\nMelissa_flowers = 16\ntotal_flowers = Alissa_flowers + Melissa_flowers\nflowers_given_to_mother = 18\nflowers_left = total_flowers - flowers_given_to_mother\nans = flowers_left"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "Diane wants to buy a package of cookies. The cookies cost 65 cents. Diane has 27 cents. How much more money does she need?",
        "answer": 38,
        "generated": [
            "# Python code, return ans\ncookie_cost = 65\nDiane_money = 27\nmoney_needed = cookie_cost - Diane_money\nans = money_needed",
            "# Python code, return ans\ncookie_cost = 65\nDiane_money = 27\nmoney_needed = cookie_cost - Diane_money\nans = money_needed",
            "# Python code, return ans\ncookie_cost = 65\nDiane_money = 27\nmoney_needed = cookie_cost - Diane_money\nans = money_needed"
        ],
        "results": [
            38.0,
            38.0,
            38.0
        ],
        "result_counter": {
            "38.0": 3
        },
        "prediction": 38.0
    },
    {
        "question": "Andy had 31 baseball cards. His dad gave him some more. Then Andy had 50 baseball cards. How many baseball cards did Andy get from his dad?",
        "answer": 19,
        "generated": [
            "# Python code, return ans\ninitial_cards = 31\nfinal_cards = 50\ncards_from_dad = final_cards - initial_cards\nans = cards_from_dad",
            "# Python code, return ans\ninitial_cards = 31\nfinal_cards = 50\ncards_from_dad = final_cards - initial_cards\nans = cards_from_dad",
            "# Python code, return ans\ninitial_cards = 31\nfinal_cards = 50\ncards_from_dad = final_cards - initial_cards\nans = cards_from_dad"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "Elizabeth studied 25 minutes for her science test. She studied 35 minutes for her math test. How long did Elizabeth study altogether?",
        "answer": 60,
        "generated": [
            "# Python code, return ans\nstudy_science = 25\nstudy_math = 35\ntotal_study_time = study_science + study_math\nans = total_study_time",
            "# Python code, return ans\nscience_study_time = 25\nmath_study_time = 35\ntotal_study_time = science_study_time + math_study_time\nans = total_study_time",
            "# Python code, return ans\nstudy_science = 25\nstudy_math = 35\ntotal_study_time = study_science + study_math\nans = total_study_time"
        ],
        "results": [
            60.0,
            60.0,
            60.0
        ],
        "result_counter": {
            "60.0": 3
        },
        "prediction": 60.0
    },
    {
        "question": "Zachary did 47 push-ups in gym class today. David did 15 more push-ups than Zachary. How many push-ups did David do?",
        "answer": 62,
        "generated": [
            "# Python code, return ans\nZachary_pushups = 47\nDavid_pushups = Zachary_pushups + 15\nans = David_pushups",
            "# Python code, return ans\nZachary_pushups = 47\nDavid_pushups = Zachary_pushups + 15\nans = David_pushups",
            "# Python code, return ans\nZachary_pushups = 47\nDavid_pushups = Zachary_pushups + 15\nans = David_pushups"
        ],
        "results": [
            62.0,
            62.0,
            62.0
        ],
        "result_counter": {
            "62.0": 3
        },
        "prediction": 62.0
    },
    {
        "question": "Christine has 11 stickers on her good helper chart. She needs 30 stickers to get a prize. How many more stickers does Christine need?",
        "answer": 19,
        "generated": [
            "# Python code, return ans\nstickers_have = 11\nstickers_needed = 30\nstickers_to_get = stickers_needed - stickers_have\nans = stickers_to_get",
            "# Python code, return ans\nstickers_have = 11\nstickers_needed = 30\nstickers_to_get = stickers_needed - stickers_have\nans = stickers_to_get",
            "# Python code, return ans\nstickers_have = 11\nstickers_needed = 30\nstickers_to_get = stickers_needed - stickers_have\nans = stickers_to_get"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "Rachel baked some brownies. She brought 16 brownies to school that day. She left 24 brownies at home. How many brownies did Rachel bake?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\nbrownies_at_school = 16\nbrownies_at_home = 24\ntotal_brownies = brownies_at_school + brownies_at_home\nans = total_brownies",
            "# Python code, return ans\nbrownies_at_school = 16\nbrownies_at_home = 24\ntotal_brownies = brownies_at_school + brownies_at_home\nans = total_brownies",
            "# Python code, return ans\nbrownies_at_school = 16\nbrownies_at_home = 24\ntotal_brownies = brownies_at_school + brownies_at_home\nans = total_brownies"
        ],
        "results": [
            40.0,
            40.0,
            40.0
        ],
        "result_counter": {
            "40.0": 3
        },
        "prediction": 40.0
    },
    {
        "question": "Danny collects bottle caps. He found 18 bottle caps at the park. Now he has 55 bottle caps in his collection. How many bottle caps did Danny have at first?",
        "answer": 37,
        "generated": [
            "# Python code, return ans\nfound_caps = 18\ntotal_caps = 55\ninitial_caps = total_caps - found_caps\nans = initial_caps",
            "# Python code, return ans\nfound_caps = 18\ntotal_caps = 55\ninitial_caps = total_caps - found_caps\nans = initial_caps",
            "# Python code, return ans\nfound_bottle_caps = 18\ntotal_bottle_caps = 55\ninitial_bottle_caps = total_bottle_caps - found_bottle_caps\nans = initial_bottle_caps"
        ],
        "results": [
            37.0,
            37.0,
            37.0
        ],
        "result_counter": {
            "37.0": 3
        },
        "prediction": 37.0
    },
    {
        "question": "The sum of two numbers is 62. One of the numbers is 27. What is the other number?",
        "answer": 35,
        "generated": [
            "# Python code, return ans\nsum_of_numbers = 62\none_number = 27\nother_number = sum_of_numbers - one_number\nans = other_number",
            "# Python code, return ans\nsum_of_numbers = 62\none_number = 27\nother_number = sum_of_numbers - one_number\nans = other_number",
            "# Python code, return ans\nsum_of_numbers = 62\none_number = 27\nother_number = sum_of_numbers - one_number\nans = other_number"
        ],
        "results": [
            35.0,
            35.0,
            35.0
        ],
        "result_counter": {
            "35.0": 3
        },
        "prediction": 35.0
    },
    {
        "question": "Kim sold 54 boxes of Girl Scout cookies. Jennifer sold 17 more boxes than Kim. How many boxes of cookies did Jennifer sell?",
        "answer": 71,
        "generated": [
            "# Python code, return ans\nKim_boxes = 54\nJennifer_boxes = Kim_boxes + 17\nans = Jennifer_boxes",
            "# Python code, return ans\nKim_boxes = 54\nJennifer_boxes = Kim_boxes + 17\nans = Jennifer_boxes",
            "# Python code, return ans\nKim_cookies = 54\nJennifer_cookies = Kim_cookies + 17\nans = Jennifer_cookies"
        ],
        "results": [
            71.0,
            71.0,
            71.0
        ],
        "result_counter": {
            "71.0": 3
        },
        "prediction": 71.0
    },
    {
        "question": "Belle collected 97 animal stickers. Carolyn collected 18 fewer stickers than Belle. How many stickers did Carolyn collect?",
        "answer": 79,
        "generated": [
            "# Python code, return ans\nBelle_stickers = 97\nCarolyn_stickers = Belle_stickers - 18\nans = Carolyn_stickers",
            "# Python code, return ans\nBelle_stickers = 97\nCarolyn_stickers = Belle_stickers - 18\nans = Carolyn_stickers",
            "# Python code, return ans\nBelle_stickers = 97\nCarolyn_stickers = Belle_stickers - 18\nans = Carolyn_stickers"
        ],
        "results": [
            79.0,
            79.0,
            79.0
        ],
        "result_counter": {
            "79.0": 3
        },
        "prediction": 79.0
    },
    {
        "question": "Peter had 33 marbles in his pocket. He lost some when he went outside to play. Now he only has 18 marbles. How many marbles did Peter lose?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\ninitial_marbles = 33\nfinal_marbles = 18\nmarbles_lost = initial_marbles - final_marbles\nans = marbles_lost",
            "# Python code, return ans\ninitial_marbles = 33\nremaining_marbles = 18\nmarbles_lost = initial_marbles - remaining_marbles\nans = marbles_lost",
            "# Python code, return ans\ninitial_marbles = 33\nremaining_marbles = 18\nlost_marbles = initial_marbles - remaining_marbles\nans = lost_marbles"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "Mikayla has a huge collection of music CDs. She gave 15 CDs to her friend. Now she has 78 CDs left. How many CDs were in Mikayla's collection at first?",
        "answer": 93,
        "generated": [
            "# Python code, return ans\nCDs_given = 15\nCDs_left = 78\ninitial_CDs = CDs_given + CDs_left\nans = initial_CDs",
            "# Python code, return ans\nCDs_given = 15\nCDs_left = 78\nCDs_total = CDs_given + CDs_left\nans = CDs_total",
            "# Python code, return ans\ngiven_CDs = 15\nremaining_CDs = 78\ninitial_CDs = given_CDs + remaining_CDs\nans = initial_CDs"
        ],
        "results": [
            93.0,
            93.0,
            93.0
        ],
        "result_counter": {
            "93.0": 3
        },
        "prediction": 93.0
    },
    {
        "question": "Vincent has learned the words to 56 songs. He learned 18 more songs at summer camp. How many songs does Vincent know now?",
        "answer": 74,
        "generated": [
            "# Python code, return ans\nsongs_before_camp = 56\nsongs_learned_at_camp = 18\ntotal_songs = songs_before_camp + songs_learned_at_camp\nans = total_songs",
            "# Python code, return ans\nsongs_before_camp = 56\nsongs_learned_at_camp = 18\ntotal_songs = songs_before_camp + songs_learned_at_camp\nans = total_songs",
            "# Python code, return ans\nsongs_known_before = 56\nsongs_learned_at_camp = 18\ntotal_songs_known = songs_known_before + songs_learned_at_camp\nans = total_songs_known"
        ],
        "results": [
            74.0,
            74.0,
            74.0
        ],
        "result_counter": {
            "74.0": 3
        },
        "prediction": 74.0
    },
    {
        "question": "There are 28 students in Mrs. Riley's class but she only has 19 pencils. How many more pencils does Mrs. Riley need?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nstudents = 28\npencils = 19\npencils_needed = students - pencils\nans = pencils_needed",
            "# Python code, return ans\nstudents = 28\npencils = 19\npencils_needed = students - pencils\nans = pencils_needed",
            "# Python code, return ans\nstudents = 28\npencils = 19\npencils_needed = students - pencils\nans = pencils_needed"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "A committee organizing a marathon has 16 jugs of water and 12 jugs of sports drink. The committee would like to set up a number of refreshment stations along the marathon course, with the same combination of jugs of water and jugs of sports drink at each station, with no beverages left over. What is the greatest number of refreshment stations that can be set up?",
        "answer": 4,
        "generated": [],
        "results": [],
        "result_counter": {},
        "prediction": null
    },
    {
        "question": "Rita is buying flower bulbs for her garden. She wants to buy the same number of tulips and daffodils. If tulip bulbs come in packs of 15 and daffodil bulbs come in packs of 16, what is the least number of each type of bulb Rita will need to buy?",
        "answer": 240,
        "generated": [
            "# Python code, return ans\ntulip_pack = 15\ndaffodil_pack = 16\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nleast_bulbs = lcm(tulip_pack, daffodil_pack)\nans = least_bulbs",
            "# Python code, return ans\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ntulip_pack = 15\ndaffodil_pack = 16\nleast_bulbs = lcm(tulip_pack, daffodil_pack)\nans = least_bulbs",
            "# Python code, return ans\nimport math\n\ntulip_pack = 15\ndaffodil_pack = 16\n\nleast_common_multiple = (tulip_pack * daffodil_pack) // math.gcd(tulip_pack, daffodil_pack)\nans = least_common_multiple\nans"
        ],
        "results": [
            240.0
        ],
        "result_counter": {
            "240.0": 1
        },
        "prediction": 240.0
    },
    {
        "question": "Kathleen is a dental sales representative who wants to distribute 18 brochures and 12 pamphlets to local dental offices. She wants to deliver the same combination of brochures and pamphlets to each office, without having any materials left over. What is the greatest number of dental offices Kathleen can distribute materials to?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nbrochures = 18\npamphlets = 12\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_common_divisor = gcd(brochures, pamphlets)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nimport math\nbrochures = 18\npamphlets = 12\ngreatest_common_divisor = math.gcd(brochures, pamphlets)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nimport math\nbrochures = 18\npamphlets = 12\ngreatest_common_divisor = math.gcd(brochures, pamphlets)\nans = greatest_common_divisor\nans"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "With flu season coming up, Lexi decides to make get-well-soon kits. She has 10 cans of chicken soup and 15 boxes of tissue, which she wants to use to make identical kits with no materials left over. What is the greatest number of get-well-soon kits Lexi can make?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nimport math\nsoup_cans = 10\ntissue_boxes = 15\ngreatest_common_divisor = math.gcd(soup_cans, tissue_boxes)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\ncans_of_soup = 10\nboxes_of_tissue = 15\ngreatest_common_divisor = math.gcd(cans_of_soup, boxes_of_tissue)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\ncans_of_soup = 10\nboxes_of_tissue = 15\ngreatest_common_divisor = math.gcd(cans_of_soup, boxes_of_tissue)\nans = greatest_common_divisor"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Matt has two pieces of cord, one 15 feet long and the other 12 feet long. He wants to cut them up to produce many pieces of cord that are all of the same length, with no cord left over. What is the greatest length, in feet, that he can make them?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nimport math\ncord1 = 15\ncord2 = 12\ngreatest_length = math.gcd(cord1, cord2)\nans = greatest_length",
            "# Python code, return ans\nimport math\ncord1 = 15\ncord2 = 12\ngreatest_length = math.gcd(cord1, cord2)\nans = greatest_length",
            "# Python code, return ans\nimport math\ncord1 = 15\ncord2 = 12\ngreatest_length = math.gcd(cord1, cord2)\nans = greatest_length"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Denise is getting older and feels like she should donate her collection of stuffed animals to children who are less fortunate. She has 14 stuffed cats and 7 stuffed dogs, which she wants to divide into identical groups, with no stuffed animals left over. What is the greatest number of groups Denise can place her stuffed animals into?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nstuffed_cats = 14\nstuffed_dogs = 7\ntotal_animals = stuffed_cats + stuffed_dogs\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_group = gcd(stuffed_cats, stuffed_dogs)\nans = greatest_group",
            "# Python code, return ans\nimport math\nstuffed_cats = 14\nstuffed_dogs = 7\ntotal_stuffed_animals = stuffed_cats + stuffed_dogs\ngreatest_number_of_groups = math.gcd(stuffed_cats, stuffed_dogs)\nans = greatest_number_of_groups",
            "# Python code, return ans\nstuffed_cats = 14\nstuffed_dogs = 7\ntotal_animals = stuffed_cats + stuffed_dogs\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_groups = gcd(stuffed_cats, stuffed_dogs)\nans = greatest_groups"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "A family is preparing backpacks filled with school supplies to donate to children in need. They have 9 pencils and 15 notebooks. If they want to make all the backpacks the same, with no school supplies left over, what is the greatest number of backpacks they can fill?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nimport math\npencils = 9\nnotebooks = 15\ngreatest_common_divisor = math.gcd(pencils, notebooks)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\npencils = 9\nnotebooks = 15\ngreatest_common_divisor = math.gcd(pencils, notebooks)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\npencils = 9\nnotebooks = 15\ngreatest_common_divisor = math.gcd(pencils, notebooks)\nans = greatest_common_divisor"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Mrs. Wilson, the math teacher, has 18 logic puzzles and 9 visual puzzles that she wants to group into sets for students who finish their tests early. Mrs. Wilson wants each set to be identical, containing the same combination of logic puzzles and visual puzzles, with no puzzles left over. What is the greatest number of sets she can create?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nimport math\nlogic_puzzles = 18\nvisual_puzzles = 9\ngreatest_common_divisor = math.gcd(logic_puzzles, visual_puzzles)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\nlogic_puzzles = 18\nvisual_puzzles = 9\ngreatest_common_divisor = math.gcd(logic_puzzles, visual_puzzles)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\nlogic_puzzles = 18\nvisual_puzzles = 9\ngreatest_common_divisor = math.gcd(logic_puzzles, visual_puzzles)\nans = greatest_common_divisor"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Philip is buying pens and pencils from the store. Pens come in packages of 12, but pencils are sold in packages of 15. If Philip wishes to purchase the same number of pens as pencils, what is the smallest number of pens that he can buy?",
        "answer": 60,
        "generated": [
            "# Python code, return ans\npen_package = 12\npencil_package = 15\n\n# Find the least common multiple (LCM) of pen_package and pencil_package\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nsmallest_pen_number = lcm(pen_package, pencil_package)\nans = smallest_pen_number\n",
            "# Python code, return ans\npen_package = 12\npencil_package = 15\n\n# Find the least common multiple of pen_package and pencil_package\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nsmallest_number_of_pens = lcm(pen_package, pencil_package)\nans = smallest_number_of_pens",
            "# Python code, return ans\npen_package = 12\npencil_package = 15\n\n# Find the smallest number of pens that can be bought by finding the LCM of 12 and 15\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nans = lcm(pen_package, pencil_package)"
        ],
        "results": [
            60.0,
            60.0,
            60.0
        ],
        "result_counter": {
            "60.0": 3
        },
        "prediction": 60.0
    },
    {
        "question": "Eddie is thinking of a number that is divisible by both 8 and 5. What is the smallest possible number that Eddie could be thinking of?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\ni = 1\nwhile True:\n    num = 8 * 5 * i\n    if num % 8 == 0 and num % 5 == 0:\n        ans = num\n        break\n    i += 1\nans",
            "# Python code, return ans\ni = 1\nwhile True:\n    number = 8 * 5 * i\n    if number % 8 == 0 and number % 5 == 0:\n        ans = number\n        break\n    i += 1\nans",
            "# Python code, return ans\ni = 1\nwhile True:\n    num = 8 * 5 * i\n    if num % 8 == 0 and num % 5 == 0:\n        ans = num\n        break\n    i += 1\nans"
        ],
        "results": [
            40.0,
            40.0,
            40.0
        ],
        "result_counter": {
            "40.0": 3
        },
        "prediction": 40.0
    },
    {
        "question": "Heather enjoys bird-watching and observed two types of birds traveling this season: ducks and seagulls. While the ducks traveled in flocks of 18, the seagulls traveled in flocks of 10. If Heather observed the same total number of ducks and seagulls, what is the smallest number of ducks that she could have observed?",
        "answer": 90,
        "generated": [
            "# Python code, return ans\nducks_per_flock = 18\nseagulls_per_flock = 10\ntotal_birds = 0\n\nwhile True:\n    total_birds += ducks_per_flock\n    if total_birds % seagulls_per_flock == 0:\n        ans = total_birds\n        break\n\nans",
            "# Python code, return ans\nduck_flock = 18\nseagull_flock = 10\ntotal_ducks = 0\n\nwhile True:\n    total_ducks += duck_flock\n    total_seagulls = total_ducks // seagull_flock * seagull_flock\n    if total_ducks == total_seagulls:\n        ans = total_ducks\n        break\n\nans",
            "# Python code, return ans\nducks_per_flock = 18\nseagulls_per_flock = 10\n\nsmallest_ducks = None\nflock_count = 1\n\nwhile smallest_ducks is None:\n    total_ducks = ducks_per_flock * flock_count\n    total_seagulls = seagulls_per_flock * flock_count\n    if total_ducks == total_seagulls:\n        smallest_ducks = total_ducks\n    flock_count += 1\n\nans = smallest_ducks\n"
        ],
        "results": [
            90.0,
            90.0
        ],
        "result_counter": {
            "90.0": 2
        },
        "prediction": 90.0
    },
    {
        "question": "An event has 12 adults and 20 children. The event planner wants to make each table identical, with the same combination of adults and children and no people left over. What is the greatest number of tables the planner can set up?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nimport math\nadults = 12\nchildren = 20\ntotal_people = adults + children\ngreatest_common_divisor = math.gcd(adults, children)\nans = greatest_common_divisor\n\nans",
            "# Python code, return ans\nimport math\n\nadults = 12\nchildren = 20\ngcd = math.gcd(adults, children)\nans = gcd\n\n# Answer: The greatest number of tables the planner can set up is 4.",
            "# Python code, return ans\nimport math\nadults = 12\nchildren = 20\ngcd = math.gcd(adults, children)\ntables = gcd\nans = tables"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Joe's Bath Shop sells bars of soap in boxes of 5 bars and bottles of soap in boxes of 19 bottles. An employee is surprised to discover that the shop sold the same number of bars and bottles last week. What is the smallest number of each type of soap that the shop could have sold?",
        "answer": 95,
        "generated": [
            "# Python code, return ans\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nbars_per_box = 5\nbottles_per_box = 19\nlcm_soap = lcm(bars_per_box, bottles_per_box)\nans = lcm_soap\nans",
            "# Python code, return ans\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nbars_per_box = 5\nbottles_per_box = 19\nlcm_bars_bottles = lcm(bars_per_box, bottles_per_box)\nans = lcm_bars_bottles\nans",
            "# Python code, return ans\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nbars_per_box = 5\nbottles_per_box = 19\nleast_common_multiple = lcm(bars_per_box, bottles_per_box)\nans = least_common_multiple\nans"
        ],
        "results": [],
        "result_counter": {},
        "prediction": null
    },
    {
        "question": "Trevor counted 77 coins in his bank. He counted 29 quarters. The rest are dimes. How many more coints of the total than quarts does Trevor have?",
        "answer": 48,
        "generated": [
            "# Python code, return ans\ntotal_coins = 77\nquarters = 29\ndimes = total_coins - quarters\nans = dimes",
            "# Python code, return ans\ntotal_coins = 77\nquarters = 29\ndimes = total_coins - quarters\nans = dimes - quarters",
            "# Python code, return ans\ntotal_coins = 77\nquarters = 29\ndimes = total_coins - quarters\nans = dimes"
        ],
        "results": [
            48.0,
            19.0,
            48.0
        ],
        "result_counter": {
            "48.0": 2,
            "19.0": 1
        },
        "prediction": 48.0
    },
    {
        "question": "Laurie has 12 more marbles than Kurt. Kurt has 45 marbles less than Dennis. Dennis has 70 marbles. How many marbles does Laurie have?",
        "answer": 37,
        "generated": [
            "# Python code, return ans\nDennis_marbles = 70\nKurt_marbles = Dennis_marbles - 45\nLaurie_marbles = Kurt_marbles + 12\nans = Laurie_marbles",
            "# Python code, return ans\nDennis_marbles = 70\nKurt_marbles = Dennis_marbles - 45\nLaurie_marbles = Kurt_marbles + 12\nans = Laurie_marbles",
            "# Python code, return ans\nDennis_marbles = 70\nKurt_marbles = Dennis_marbles - 45\nLaurie_marbles = Kurt_marbles + 12\nans = Laurie_marbles"
        ],
        "results": [
            37.0,
            37.0,
            37.0
        ],
        "result_counter": {
            "37.0": 3
        },
        "prediction": 37.0
    },
    {
        "question": "Kate, Maggie, and Sue added up their ages. The total was 48. Kate is 19 and Maggie is 17. How old is Sue?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\ntotal_age = 48\nKate_age = 19\nMaggie_age = 17\nSue_age = total_age - Kate_age - Maggie_age\nans = Sue_age",
            "# Python code, return ans\ntotal_age = 48\nKate_age = 19\nMaggie_age = 17\nSue_age = total_age - Kate_age - Maggie_age\nans = Sue_age",
            "# Python code, return ans\ntotal_age = 48\nKate_age = 19\nMaggie_age = 17\nSue_age = total_age - Kate_age - Maggie_age\nans = Sue_age"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Anthony gets 75 cents every day for lunch. He bought a juice box for 27 cents. He also bought a cupcake. Anthony had 8 cents left. How much did the cupcake cost?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\ndaily_lunch_money = 75\njuice_box_cost = 27\nmoney_left = 8\ncupcake_cost = daily_lunch_money - (juice_box_cost + money_left)\nans = cupcake_cost",
            "# Python code, return ans\ndaily_lunch_money = 75\njuice_box_cost = 27\nmoney_left = 8\ncupcake_cost = daily_lunch_money - juice_box_cost - money_left\nans = cupcake_cost",
            "# Python code, return ans\nlunch_money = 75\njuice_box_cost = 27\nmoney_left = 8\ncupcake_cost = lunch_money - juice_box_cost - money_left\nans = cupcake_cost"
        ],
        "results": [
            40.0,
            40.0,
            40.0
        ],
        "result_counter": {
            "40.0": 3
        },
        "prediction": 40.0
    },
    {
        "question": "December is a busy month for the toy store. They had 95 games on the shelf. 68 games were sold the first week. The store got 47 more games from the factory. How many games did they have then?",
        "answer": 74,
        "generated": [
            "# Python code, return ans\ngames_on_shelf = 95\ngames_sold = 68\ngames_from_factory = 47\ngames_left = games_on_shelf - games_sold\ntotal_games = games_left + games_from_factory\nans = total_games",
            "# Python code, return ans\ngames_on_shelf = 95\ngames_sold = 68\ngames_from_factory = 47\ngames_left = games_on_shelf - games_sold\ngames_after_delivery = games_left + games_from_factory\nans = games_after_delivery",
            "# Python code, return ans\ninitial_games = 95\ngames_sold = 68\ngames_received = 47\nremaining_games = initial_games - games_sold + games_received\nans = remaining_games"
        ],
        "results": [
            74.0,
            74.0,
            74.0
        ],
        "result_counter": {
            "74.0": 3
        },
        "prediction": 74.0
    },
    {
        "question": "The third graders are having a fair. They have 90 tickets to sell. They sold 38 tickets the first week and 17 tickets the second week. How many tickets do they have left to sell?",
        "answer": 35,
        "generated": [
            "# Python code, return ans\ntotal_tickets = 90\ntickets_sold_first_week = 38\ntickets_sold_second_week = 17\ntickets_left = total_tickets - (tickets_sold_first_week + tickets_sold_second_week)\nans = tickets_left",
            "# Python code, return ans\ntotal_tickets = 90\ntickets_sold_first_week = 38\ntickets_sold_second_week = 17\ntickets_left = total_tickets - (tickets_sold_first_week + tickets_sold_second_week)\nans = tickets_left",
            "# Python code, return ans\ntotal_tickets = 90\ntickets_sold_first_week = 38\ntickets_sold_second_week = 17\ntickets_left = total_tickets - (tickets_sold_first_week + tickets_sold_second_week)\nans = tickets_left"
        ],
        "results": [
            35.0,
            35.0,
            35.0
        ],
        "result_counter": {
            "35.0": 3
        },
        "prediction": 35.0
    },
    {
        "question": "Kevin collected toys to use as prizes at the fair. He collected 14 stuffed animals. He also collected 18 frisbees and several yo-yos. Kevin has 50 prizes in all. How many yo-yos did Kevin collect?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\nstuffed_animals = 14\nfrisbees = 18\ntotal_prizes = 50\nyoyos = total_prizes - (stuffed_animals + frisbees)\nans = yoyos",
            "# Python code, return ans\nstuffed_animals = 14\nfrisbees = 18\ntotal_prizes = 50\nyo_yos = total_prizes - (stuffed_animals + frisbees)\nans = yo_yos",
            "# Python code, return ans\nstuffed_animals = 14\nfrisbees = 18\ntotal_prizes = 50\nyo_yos = total_prizes - (stuffed_animals + frisbees)\nans = yo_yos"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "Mario made 18 posters to help advertise the fair. Samantha made 15 more posters than Mario. How many posters did they make altogether?",
        "answer": 51,
        "generated": [
            "# Python code, return ans\nMario_posters = 18\nSamantha_posters = Mario_posters + 15\ntotal_posters = Mario_posters + Samantha_posters\nans = total_posters",
            "# Python code, return ans\nMario_posters = 18\nSamantha_posters = Mario_posters + 15\ntotal_posters = Mario_posters + Samantha_posters\nans = total_posters",
            "# Python code, return ans\nMario_posters = 18\nSamantha_posters = Mario_posters + 15\ntotal_posters = Mario_posters + Samantha_posters\nans = total_posters"
        ],
        "results": [
            51.0,
            51.0,
            51.0
        ],
        "result_counter": {
            "51.0": 3
        },
        "prediction": 51.0
    },
    {
        "question": "Jasper is in charge of the refreshments. He sold 27 bags of chips. He sold 8 fewer hot dogs than chips. He sold 12 more drinks than hot dogs. How many drinks did Jasper sell?",
        "answer": 31,
        "generated": [
            "# Python code, return ans\nchips_sold = 27\nhot_dogs_sold = chips_sold - 8\ndrinks_sold = hot_dogs_sold + 12\nans = drinks_sold",
            "# Python code, return ans\nbags_of_chips = 27\nhot_dogs_sold = bags_of_chips - 8\ndrinks_sold = hot_dogs_sold + 12\nans = drinks_sold",
            "# Python code, return ans\nbags_of_chips = 27\nhot_dogs_sold = bags_of_chips - 8\ndrinks_sold = hot_dogs_sold + 12\nans = drinks_sold"
        ],
        "results": [
            31.0,
            31.0,
            31.0
        ],
        "result_counter": {
            "31.0": 3
        },
        "prediction": 31.0
    },
    {
        "question": "Bridget wants to win the giant stuffed panda bear. She needs a total of 75 points to get it. Bridget already scored 35 points at the penny pitch booth. She scored 18 more points on her next try. How many more points does Bridget need?",
        "answer": 22,
        "generated": [
            "# Python code, return ans\ntotal_points_needed = 75\ncurrent_points = 35\npoints_next_try = 18\npoints_after_next_try = current_points + points_next_try\npoints_needed = total_points_needed - points_after_next_try\nans = points_needed",
            "# Python code, return ans\ntotal_points_needed = 75\ncurrent_points = 35\nnext_try_points = 18\npoints_after_next_try = current_points + next_try_points\npoints_needed = total_points_needed - points_after_next_try\nans = points_needed",
            "# Python code, return ans\ncurrent_points = 35\nnext_try_points = 18\ntotal_points_needed = 75\npoints_so_far = current_points + next_try_points\npoints_needed = total_points_needed - points_so_far\nans = points_needed"
        ],
        "results": [
            22.0,
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 3
        },
        "prediction": 22.0
    },
    {
        "question": "The ice rink has 85 pairs of skates to rent. 18 people rented skates when the ice rink opened. 25 more people rented skates during the first hour. How many pairs of skates are left?",
        "answer": 42,
        "generated": [
            "# Python code, return ans\ntotal_skates = 85\nrented_at_opening = 18\nrented_first_hour = 25\ntotal_rented = rented_at_opening + rented_first_hour\nskates_left = total_skates - total_rented\nans = skates_left",
            "# Python code, return ans\ntotal_skates = 85\nrented_skates_opening = 18\nrented_skates_first_hour = 25\ntotal_rented_skates = rented_skates_opening + rented_skates_first_hour\nskates_left = total_skates - total_rented_skates\nans = skates_left",
            "# Python code, return ans\ntotal_skates = 85\nrented_at_opening = 18\nrented_first_hour = 25\ntotal_rented = rented_at_opening + rented_first_hour\nskates_left = total_skates - total_rented\nans = skates_left"
        ],
        "results": [
            42.0,
            42.0,
            42.0
        ],
        "result_counter": {
            "42.0": 3
        },
        "prediction": 42.0
    },
    {
        "question": "Jake set up a candy stand in his front yard. He has 80 pieces of candy to sell. He sold 15 pieces of candy on Monday. He sold much more than that on Tuesday. By Wednesday, Jakes only had 7 pieces left. How many pieces of candy did Jake sell on Tuesday?",
        "answer": 58,
        "generated": [
            "# Python code, return ans\ncandy_total = 80\ncandy_sold_Monday = 15\ncandy_left_Wednesday = 7\ncandy_sold_Tuesday = candy_total - candy_sold_Monday - candy_left_Wednesday\nans = candy_sold_Tuesday",
            "# Python code, return ans\ntotal_candy = 80\nsold_on_Monday = 15\nremaining_candy_on_Wednesday = 7\nsold_on_Tuesday = total_candy - sold_on_Monday - remaining_candy_on_Wednesday\nans = sold_on_Tuesday",
            "# Python code, return ans\ncandy_total = 80\ncandy_sold_Monday = 15\ncandy_left_Wednesday = 7\ncandy_sold_Tuesday = candy_total - candy_sold_Monday - candy_left_Wednesday\nans = candy_sold_Tuesday"
        ],
        "results": [
            58.0,
            58.0,
            58.0
        ],
        "result_counter": {
            "58.0": 3
        },
        "prediction": 58.0
    },
    {
        "question": "The ski resort reported 65 inches of snow in January. They measured 18 inches of snow during the first week. They measured 25 inches of snow the second week. How much snow did they get the rest of the month?",
        "answer": 22,
        "generated": [
            "# Python code, return ans\ntotal_snow_January = 65\nfirst_week_snow = 18\nsecond_week_snow = 25\nsnow_rest_of_month = total_snow_January - (first_week_snow + second_week_snow)\nans = snow_rest_of_month",
            "# Python code, return ans\ntotal_snow_January = 65\nsnow_first_week = 18\nsnow_second_week = 25\nsnow_rest_of_month = total_snow_January - (snow_first_week + snow_second_week)\nans = snow_rest_of_month",
            "# Python code, return ans\ntotal_snow = 65\nfirst_week_snow = 18\nsecond_week_snow = 25\nsnow_rest_of_month = total_snow - (first_week_snow + second_week_snow)\nans = snow_rest_of_month"
        ],
        "results": [
            22.0,
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 3
        },
        "prediction": 22.0
    },
    {
        "question": "Corey earns extra money finding lost golf balls. His goal is to find 48 golfballs every weekend. He found 16 golf balls on Saturday. He found 18 more golf balls on Sunday. How many more golf balls does Corey need to find to reach his goal?",
        "answer": 14,
        "generated": [
            "# Python code, return ans\ngoal_golfballs = 48\nfound_Saturday = 16\nfound_Sunday = 18\ntotal_found = found_Saturday + found_Sunday\nmore_golfballs_needed = goal_golfballs - total_found\nans = more_golfballs_needed",
            "# Python code, return ans\ngoal_golfballs = 48\nfound_on_Saturday = 16\nfound_on_Sunday = 18\ntotal_found = found_on_Saturday + found_on_Sunday\nmore_golfballs_needed = goal_golfballs - total_found\nans = more_golfballs_needed",
            "# Python code, return ans\ngoal_golfballs = 48\nfound_Saturday = 16\nfound_Sunday = 18\ntotal_found = found_Saturday + found_Sunday\nmore_golfballs_needed = goal_golfballs - total_found\nans = more_golfballs_needed"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "The Greene family went to the amusement park. They spent $45 on admission tickets. They spent $13 less than that on food. How much did the Greene family spend in all?",
        "answer": 77,
        "generated": [
            "# Python code, return ans\nadmission_cost = 45\nfood_cost = admission_cost - 13\ntotal_cost = admission_cost + food_cost\nans = total_cost",
            "# Python code, return ans\nadmission_cost = 45\nfood_cost = admission_cost - 13\ntotal_spent = admission_cost + food_cost\nans = total_spent",
            "# Python code, return ans\nadmission_cost = 45\nfood_cost = admission_cost - 13\ntotal_cost = admission_cost + food_cost\nans = total_cost"
        ],
        "results": [
            77.0,
            77.0,
            77.0
        ],
        "result_counter": {
            "77.0": 3
        },
        "prediction": 77.0
    },
    {
        "question": "Ben had 18 marbles and John had 17 marbles. Ben gave half of his marbles to John. How many more marbles did John have than Ben then?",
        "answer": 17,
        "generated": [
            "# Python code, return ans\nBen_marbles = 18\nJohn_marbles = 17\nBen_gave = Ben_marbles // 2\nBen_new = Ben_marbles - Ben_gave\nJohn_new = John_marbles + Ben_gave\nans = John_new - Ben_new\nans",
            "# Python code, return ans\nBen_marbles = 18\nJohn_marbles = 17\nBen_gave = Ben_marbles / 2\nBen_new_total = Ben_marbles - Ben_gave\nJohn_new_total = John_marbles + Ben_gave\nans = John_new_total - Ben_new_total",
            "# Python code, return ans\nBen_marbles = 18\nJohn_marbles = 17\nBen_gave = Ben_marbles / 2\nBen_new = Ben_marbles - Ben_gave\nJohn_new = John_marbles + Ben_gave\nans = John_new - Ben_new"
        ],
        "results": [
            17.0,
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 3
        },
        "prediction": 17.0
    },
    {
        "question": "Carey and Pat are moving chairs to the gym. They agreed to move 74 chairs. Carey moved 28 chairs. Pat has moved 29 chairs. How many more chairs do they have left to move?",
        "answer": 17,
        "generated": [
            "# Python code, return ans\ntotal_chairs = 74\nCarey_moved = 28\nPat_moved = 29\nchairs_left = total_chairs - (Carey_moved + Pat_moved)\nans = chairs_left",
            "# Python code, return ans\ntotal_chairs = 74\nCarey_moved = 28\nPat_moved = 29\nchairs_left = total_chairs - (Carey_moved + Pat_moved)\nans = chairs_left",
            "# Python code, return ans\ntotal_chairs = 74\nCarey_moved = 28\nPat_moved = 29\nchairs_left = total_chairs - (Carey_moved + Pat_moved)\nans = chairs_left"
        ],
        "results": [
            17.0,
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 3
        },
        "prediction": 17.0
    },
    {
        "question": "Jean had a bag of candy. She gave 18 pieces to her friend. Jean ate 7 pieces. Now she has 16 pieces left. How many pieces of candy did Jean have at first?",
        "answer": 41,
        "generated": [
            "# Python code, return ans\ncandy_left = 16\ncandy_given = 18\ncandy_eaten = 7\ncandy_initial = candy_left + candy_given + candy_eaten\nans = candy_initial",
            "# Python code, return ans\ngiven_candy = 18\neaten_candy = 7\nremaining_candy = 16\ninitial_candy = given_candy + eaten_candy + remaining_candy\nans = initial_candy",
            "# Python code, return ans\ncandy_left = 16\ncandy_given = 18\ncandy_eaten = 7\ncandy_initial = candy_left + candy_given + candy_eaten\nans = candy_initial"
        ],
        "results": [
            41.0,
            41.0,
            41.0
        ],
        "result_counter": {
            "41.0": 3
        },
        "prediction": 41.0
    },
    {
        "question": "William sells hot dogs at the ball park. He sold 19 hot dogs during the first three innings. He sold 27 hot dogs during the next three innings. William had 45 hot dogs left to sell. How many hot dogs did William have at first?",
        "answer": 91,
        "generated": [
            "# Python code, return ans\nhot_dogs_sold_first = 19\nhot_dogs_sold_next = 27\nhot_dogs_left = 45\ntotal_hot_dogs = hot_dogs_sold_first + hot_dogs_sold_next + hot_dogs_left\nans = total_hot_dogs",
            "# Python code, return ans\nhot_dogs_sold_first_three = 19\nhot_dogs_sold_next_three = 27\nhot_dogs_left = 45\ntotal_hot_dogs = hot_dogs_sold_first_three + hot_dogs_sold_next_three + hot_dogs_left\nans = total_hot_dogs",
            "# Python code, return ans\nhot_dogs_sold_first_three_innings = 19\nhot_dogs_sold_next_three_innings = 27\nhot_dogs_left = 45\ntotal_hot_dogs = hot_dogs_sold_first_three_innings + hot_dogs_sold_next_three_innings + hot_dogs_left\nans = total_hot_dogs"
        ],
        "results": [
            91.0,
            91.0,
            91.0
        ],
        "result_counter": {
            "91.0": 3
        },
        "prediction": 91.0
    },
    {
        "question": "Charlene made 60 bead necklaces. She sold 16 at a craft fair. She gave 18 to her friends. How many necklaces did Charlene have then?",
        "answer": 26,
        "generated": [
            "# Python code, return ans\nnecklaces_made = 60\nnecklaces_sold = 16\nnecklaces_given = 18\nnecklaces_left = necklaces_made - necklaces_sold - necklaces_given\nans = necklaces_left",
            "# Python code, return ans\nnecklaces_made = 60\nnecklaces_sold = 16\nnecklaces_given = 18\nnecklaces_left = necklaces_made - necklaces_sold - necklaces_given\nans = necklaces_left",
            "# Python code, return ans\nnecklaces_made = 60\nnecklaces_sold = 16\nnecklaces_given = 18\nnecklaces_left = necklaces_made - (necklaces_sold + necklaces_given)\nans = necklaces_left"
        ],
        "results": [
            26.0,
            26.0,
            26.0
        ],
        "result_counter": {
            "26.0": 3
        },
        "prediction": 26.0
    },
    {
        "question": "The coach bought 2 extra large pizzas for the team. There were 32 slices of pizza totally. After the team ate some of the slices, there were 7 slices left. How many slices of pizza did the team eat?",
        "answer": 25,
        "generated": [
            "# Python code, return ans\ntotal_slices = 32\nslices_left = 7\nslices_eaten = total_slices - slices_left\nans = slices_eaten",
            "# Python code, return ans\ntotal_slices = 32\nslices_left = 7\nslices_eaten = total_slices - slices_left\nans = slices_eaten",
            "# Python code, return ans\ntotal_slices = 32\nslices_left = 7\nslices_eaten = total_slices - slices_left\nans = slices_eaten"
        ],
        "results": [
            25.0,
            25.0,
            25.0
        ],
        "result_counter": {
            "25.0": 3
        },
        "prediction": 25.0
    },
    {
        "question": "Amelia works at the candy store. She has to sell 90 Jet Bars each week. She sold 45 on Monday. She sold 16 fewer Jet Bars on Tuesday. How many more Jet Bars does Ameila have to sell?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\njet_bars_weekly_goal = 90\nsold_on_Monday = 45\nsold_on_Tuesday = sold_on_Monday - 16\ntotal_sold = sold_on_Monday + sold_on_Tuesday\nremaining_jet_bars = jet_bars_weekly_goal - total_sold\nans = remaining_jet_bars",
            "# Python code, return ans\nJet_Bars_weekly_goal = 90\nJet_Bars_sold_Monday = 45\nJet_Bars_sold_Tuesday = Jet_Bars_sold_Monday - 16\nJet_Bars_sold_total = Jet_Bars_sold_Monday + Jet_Bars_sold_Tuesday\nJet_Bars_remaining = Jet_Bars_weekly_goal - Jet_Bars_sold_total\nans = Jet_Bars_remaining",
            "# Python code, return ans\nJet_Bars_weekly_goal = 90\nJet_Bars_sold_Monday = 45\nJet_Bars_sold_Tuesday = Jet_Bars_sold_Monday - 16\nJet_Bars_sold_total = Jet_Bars_sold_Monday + Jet_Bars_sold_Tuesday\nJet_Bars_remaining = Jet_Bars_weekly_goal - Jet_Bars_sold_total\nans = Jet_Bars_remaining"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "Ramon works at the supermarket. He put 26 boxes of Choco Delights on the shelf. There were already 15 boxes there. Later that day, Ramon counted 22 boxes on the shelf. How many boxes of Choco Delights were missing?",
        "answer": 19,
        "generated": [
            "# Python code, return ans\nboxes_initial = 15\nboxes_added = 26\nboxes_final = 22\nboxes_missing = (boxes_initial + boxes_added) - boxes_final\nans = boxes_missing",
            "# Python code, return ans\ninitial_boxes = 15\nadded_boxes = 26\ntotal_boxes = initial_boxes + added_boxes\ncounted_boxes = 22\nmissing_boxes = total_boxes - counted_boxes\nans = missing_boxes",
            "# Python code, return ans\nboxes_initial = 15\nboxes_added = 26\nboxes_final = 22\nboxes_missing = (boxes_initial + boxes_added) - boxes_final\nans = boxes_missing"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "Hannah is a professional skater. She practices 8 hours every weekend. She practices 17 more hours than that during the week. How many hours does Hannah practice each week?",
        "answer": 33,
        "generated": [
            "# Python code, return ans\npractice_weekend = 8\npractice_week = practice_weekend + 17\ntotal_practice = practice_weekend + practice_week\nans = total_practice",
            "# Python code, return ans\nweekend_practice = 8\nweekday_practice = weekend_practice + 17\ntotal_practice = weekend_practice + weekday_practice\nans = total_practice",
            "# Python code, return ans\npractice_weekend = 8\npractice_week = practice_weekend + 17\ntotal_practice = practice_weekend + practice_week\nans = total_practice"
        ],
        "results": [
            33.0,
            33.0,
            33.0
        ],
        "result_counter": {
            "33.0": 3
        },
        "prediction": 33.0
    },
    {
        "question": "There are 42 boys in the computer club. There are 9 fewer girls than boys in the club. How many children are in the computer club altogether?",
        "answer": 75,
        "generated": [
            "# Python code, return ans\nboys = 42\ngirls = boys - 9\ntotal_children = boys + girls\nans = total_children",
            "# Python code, return ans\nboys = 42\ngirls = boys - 9\ntotal_children = boys + girls\nans = total_children",
            "# Python code, return ans\nboys = 42\ngirls = boys - 9\ntotal_children = boys + girls\nans = total_children"
        ],
        "results": [
            75.0,
            75.0,
            75.0
        ],
        "result_counter": {
            "75.0": 3
        },
        "prediction": 75.0
    },
    {
        "question": "Amy has 67 balloons. 29 of them are red and 17 are green. The rest of the balloons are blue. How many blue balloons does Amy have?",
        "answer": 21,
        "generated": [
            "# Python code, return ans\ntotal_balloons = 67\nred_balloons = 29\ngreen_balloons = 17\nblue_balloons = total_balloons - red_balloons - green_balloons\nans = blue_balloons",
            "# Python code, return ans\ntotal_balloons = 67\nred_balloons = 29\ngreen_balloons = 17\nblue_balloons = total_balloons - (red_balloons + green_balloons)\nans = blue_balloons",
            "# Python code, return ans\ntotal_balloons = 67\nred_balloons = 29\ngreen_balloons = 17\nblue_balloons = total_balloons - (red_balloons + green_balloons)\nans = blue_balloons"
        ],
        "results": [
            21.0,
            21.0,
            21.0
        ],
        "result_counter": {
            "21.0": 3
        },
        "prediction": 21.0
    },
    {
        "question": "Mr. Lee gave out first place ribbons after each event. He had 38 ribbons at the start. He gave away 14 ribbons in the morning. He gave out 16 ribbons in the afternoon. How many ribbons did Mr. Lee have left?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ninitial_ribbons = 38\nmorning_ribbons = 14\nafternoon_ribbons = 16\nribbons_left = initial_ribbons - (morning_ribbons + afternoon_ribbons)\nans = ribbons_left",
            "# Python code, return ans\nribbons_start = 38\nribbons_given_morning = 14\nribbons_given_afternoon = 16\nribbons_left = ribbons_start - (ribbons_given_morning + ribbons_given_afternoon)\nans = ribbons_left",
            "# Python code, return ans\nribbons_start = 38\nribbons_given_morning = 14\nribbons_given_afternoon = 16\nribbons_left = ribbons_start - (ribbons_given_morning + ribbons_given_afternoon)\nans = ribbons_left"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Alvin had 57 marbles and played two games. He lost 18 marbles during the first game. He won 25 marbles during the second game. How many marbles did Alvin have then?",
        "answer": 64,
        "generated": [
            "# Python code, return ans\ninitial_marbles = 57\nlost_marbles = 18\nwon_marbles = 25\nfinal_marbles = initial_marbles - lost_marbles + won_marbles\nans = final_marbles",
            "# Python code, return ans\ninitial_marbles = 57\nlost_marbles = 18\nwon_marbles = 25\nfinal_marbles = initial_marbles - lost_marbles + won_marbles\nans = final_marbles",
            "# Python code, return ans\ninitial_marbles = 57\nlost_marbles = 18\nwon_marbles = 25\nfinal_marbles = initial_marbles - lost_marbles + won_marbles\nans = final_marbles"
        ],
        "results": [
            64.0,
            64.0,
            64.0
        ],
        "result_counter": {
            "64.0": 3
        },
        "prediction": 64.0
    },
    {
        "question": "Joey checked his pockets for money. He found 17 cents in his pants pocket. He found 24 cents more than that in his jacket pocket. How much money did Joey find altogether?",
        "answer": 58,
        "generated": [
            "# Python code, return ans\npants_pocket = 17\njacket_pocket = pants_pocket + 24\ntotal_money = pants_pocket + jacket_pocket\nans = total_money",
            "# Python code, return ans\npants_pocket = 17\njacket_pocket = pants_pocket + 24\ntotal_money = pants_pocket + jacket_pocket\nans = total_money",
            "# Python code, return ans\npants_pocket = 17\njacket_pocket = pants_pocket + 24\ntotal_money = pants_pocket + jacket_pocket\nans = total_money"
        ],
        "results": [
            58.0,
            58.0,
            58.0
        ],
        "result_counter": {
            "58.0": 3
        },
        "prediction": 58.0
    },
    {
        "question": "Cheryl and Lori started a lemonade stand on Friday. They bought 85 plastic cups. They sold a lot of lemonade and only had 18 cups left. How many cups did Cheryl and Lori use?",
        "answer": 67,
        "generated": [
            "# Python code, return ans\ntotal_cups = 85\ncups_left = 18\ncups_used = total_cups - cups_left\nans = cups_used",
            "# Python code, return ans\ntotal_cups = 85\ncups_left = 18\ncups_used = total_cups - cups_left\nans = cups_used",
            "# Python code, return ans\ntotal_cups = 85\ncups_left = 18\ncups_used = total_cups - cups_left\nans = cups_used"
        ],
        "results": [
            67.0,
            67.0,
            67.0
        ],
        "result_counter": {
            "67.0": 3
        },
        "prediction": 67.0
    },
    {
        "question": "Cheryl counted 16 lemons. Lori bought 28 more lemons. How many lemons do the girls have altogether?",
        "answer": 44,
        "generated": [
            "# Python code, return ans\nCheryl_lemons = 16\nLori_lemons = 28\ntotal_lemons = Cheryl_lemons + Lori_lemons\nans = total_lemons",
            "# Python code, return ans\nCheryl_lemons = 16\nLori_lemons = 28\ntotal_lemons = Cheryl_lemons + Lori_lemons\nans = total_lemons",
            "# Python code, return ans\nCheryl_lemons = 16\nLori_lemons = 28\ntotal_lemons = Cheryl_lemons + Lori_lemons\nans = total_lemons"
        ],
        "results": [
            44.0,
            44.0,
            44.0
        ],
        "result_counter": {
            "44.0": 3
        },
        "prediction": 44.0
    },
    {
        "question": "Coach Mike bought several cups of lemonade. The girls told him it would cost 58 cents. The coach gave the girls 75 cents. How much change did Coach Mike get back?",
        "answer": 17,
        "generated": [
            "# Python code, return ans\nlemonade_cost = 58\ncoach_payment = 75\nchange = coach_payment - lemonade_cost\nans = change",
            "# Python code, return ans\nlemonade_cost = 58\ncoach_paid = 75\nchange = coach_paid - lemonade_cost\nans = change",
            "# Python code, return ans\nlemonade_cost = 58\ncoach_paid = 75\nchange = coach_paid - lemonade_cost\nans = change"
        ],
        "results": [
            17.0,
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 3
        },
        "prediction": 17.0
    },
    {
        "question": "Liz and Jenn had a book sale. They sold 27 detective books and 15 puzzle books. How many books did they sell altogether?",
        "answer": 42,
        "generated": [
            "# Python code, return ans\ndetective_books = 27\npuzzle_books = 15\ntotal_books_sold = detective_books + puzzle_books\nans = total_books_sold",
            "# Python code, return ans\ndetective_books = 27\npuzzle_books = 15\ntotal_books_sold = detective_books + puzzle_books\nans = total_books_sold",
            "# Python code, return ans\ndetective_books = 27\npuzzle_books = 15\ntotal_books_sold = detective_books + puzzle_books\nans = total_books_sold"
        ],
        "results": [
            42.0,
            42.0,
            42.0
        ],
        "result_counter": {
            "42.0": 3
        },
        "prediction": 42.0
    },
    {
        "question": "Scott and Sam decided to sell their old comic books. They had 90 comic books altogether. After the sale, they only had 25 comic books. How many comic books did Scott and Sam sell?",
        "answer": 65,
        "generated": [
            "# Python code, return ans\ntotal_comic_books = 90\nremaining_comic_books = 25\ncomic_books_sold = total_comic_books - remaining_comic_books\nans = comic_books_sold",
            "# Python code, return ans\ntotal_comic_books = 90\nremaining_comic_books = 25\nsold_comic_books = total_comic_books - remaining_comic_books\nans = sold_comic_books",
            "# Python code, return ans\ntotal_comic_books = 90\nremaining_comic_books = 25\ncomic_books_sold = total_comic_books - remaining_comic_books\nans = comic_books_sold"
        ],
        "results": [
            65.0,
            65.0,
            65.0
        ],
        "result_counter": {
            "65.0": 3
        },
        "prediction": 65.0
    },
    {
        "question": "Frankie and Max went trick-or-treating. Frankie got 74 pieces of candy. Max got 92 pieces of candy. How many more pieces of candy did Max get?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\nFrankie_candy = 74\nMax_candy = 92\nmore_candy = Max_candy - Frankie_candy\nans = more_candy",
            "# Python code, return ans\nFrankie_candy = 74\nMax_candy = 92\nmore_candy = Max_candy - Frankie_candy\nans = more_candy",
            "# Python code, return ans\nFrankie_candy = 74\nMax_candy = 92\ncandy_difference = Max_candy - Frankie_candy\nans = candy_difference"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "Connie saved up $39. She wants to buy a watch that costs $55. How much more money does Connie need?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\nsaved_money = 39\nwatch_cost = 55\nmoney_needed = watch_cost - saved_money\nans = money_needed",
            "# Python code, return ans\nsaved_money = 39\nwatch_cost = 55\nmore_money_needed = watch_cost - saved_money\nans = more_money_needed",
            "# Python code, return ans\nsaved_money = 39\nwatch_cost = 55\nmoney_needed = watch_cost - saved_money\nans = money_needed"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "The Book Nook sold 27 computer books last week. The sold 15 more cook books than computer books. How many cook books did the Book Nook sell?",
        "answer": 42,
        "generated": [
            "# Python code, return ans\ncomputer_books_sold = 27\ncook_books_sold = computer_books_sold + 15\nans = cook_books_sold",
            "# Python code, return ans\ncomputer_books = 27\nmore_cook_books = 15\ncook_books = computer_books + more_cook_books\nans = cook_books",
            "# Python code, return ans\ncomputer_books_sold = 27\ncook_books_sold = computer_books_sold + 15\nans = cook_books_sold"
        ],
        "results": [
            42.0,
            42.0,
            42.0
        ],
        "result_counter": {
            "42.0": 3
        },
        "prediction": 42.0
    },
    {
        "question": "Terry and Grace are building a gear machine. Terry used 37 building pieces. Grace used 45 pieces. How many building pieces did they use altogether?",
        "answer": 82,
        "generated": [
            "# Python code, return ans\nTerry_pieces = 37\nGrace_pieces = 45\ntotal_pieces = Terry_pieces + Grace_pieces\nans = total_pieces",
            "# Python code, return ans\nTerry_pieces = 37\nGrace_pieces = 45\ntotal_pieces = Terry_pieces + Grace_pieces\nans = total_pieces",
            "# Python code, return ans\nTerry_pieces = 37\nGrace_pieces = 45\ntotal_pieces = Terry_pieces + Grace_pieces\nans = total_pieces"
        ],
        "results": [
            82.0,
            82.0,
            82.0
        ],
        "result_counter": {
            "82.0": 3
        },
        "prediction": 82.0
    },
    {
        "question": "The Smart Mart sells educational toys. They sold 45 science kits last week. The sold 9 fewer puzzles than science kits. How many puzzles did the Smart Mart sell?",
        "answer": 36,
        "generated": [
            "# Python code, return ans\nscience_kits_sold = 45\npuzzles_sold = science_kits_sold - 9\nans = puzzles_sold",
            "# Python code, return ans\nscience_kits_sold = 45\npuzzles_sold = science_kits_sold - 9\nans = puzzles_sold",
            "# Python code, return ans\nscience_kits = 45\npuzzles = science_kits - 9\nans = puzzles"
        ],
        "results": [
            36.0,
            36.0,
            36.0
        ],
        "result_counter": {
            "36.0": 3
        },
        "prediction": 36.0
    },
    {
        "question": "Richard and Bruno played miniature golf. Richard's score was 62. Bruno's score was 14 points lower than Richard's score. What was Bruno's score?",
        "answer": 48,
        "generated": [
            "# Python code, return ans\nRichard_score = 62\nBruno_score = Richard_score - 14\nans = Bruno_score",
            "# Python code, return ans\nRichard_score = 62\nBruno_score = Richard_score - 14\nans = Bruno_score",
            "# Python code, return ans\nRichard_score = 62\nBruno_score = Richard_score - 14\nans = Bruno_score"
        ],
        "results": [
            48.0,
            48.0,
            48.0
        ],
        "result_counter": {
            "48.0": 3
        },
        "prediction": 48.0
    },
    {
        "question": "Angela won a contest. She gets $90 to spend at Puzzle Palace. She bought many wonderful puzzles. She had $12 left. How much did she spend?",
        "answer": 78,
        "generated": [
            "# Python code, return ans\ntotal_money = 90\nmoney_left = 12\nmoney_spent = total_money - money_left\nans = money_spent",
            "# Python code, return ans\ntotal_money = 90\nmoney_left = 12\nmoney_spent = total_money - money_left\nans = money_spent",
            "# Python code, return ans\ntotal_money = 90\nmoney_left = 12\nmoney_spent = total_money - money_left\nans = money_spent"
        ],
        "results": [
            78.0,
            78.0,
            78.0
        ],
        "result_counter": {
            "78.0": 3
        },
        "prediction": 78.0
    },
    {
        "question": "35 people visited the Statue of Liberty in the morning. 56 more people visited in the afternoon than in the morning. How many people visited the Statue of Liberty in the afternoon?",
        "answer": 91,
        "generated": [
            "# Python code, return ans\nmorning_visitors = 35\nadditional_afternoon_visitors = 56\nafternoon_visitors = morning_visitors + additional_afternoon_visitors\nans = afternoon_visitors",
            "# Python code, return ans\nmorning_visitors = 35\nadditional_afternoon_visitors = 56\nafternoon_visitors = morning_visitors + additional_afternoon_visitors\nans = afternoon_visitors",
            "# Python code, return ans\nmorning_visitors = 35\nadditional_afternoon_visitors = 56\nafternoon_visitors = morning_visitors + additional_afternoon_visitors\nans = afternoon_visitors"
        ],
        "results": [
            91.0,
            91.0,
            91.0
        ],
        "result_counter": {
            "91.0": 3
        },
        "prediction": 91.0
    },
    {
        "question": "The giant Ferris wheel can seat 56 people. There are 92 people waiting in line. How many people won't get on the ride this time?",
        "answer": 36,
        "generated": [
            "# Python code, return ans\nseat_capacity = 56\npeople_waiting = 92\npeople_not_get_on = people_waiting - seat_capacity\nans = people_not_get_on",
            "# Python code, return ans\nseat_capacity = 56\npeople_in_line = 92\npeople_not_getting_on = people_in_line - seat_capacity\nans = people_not_getting_on",
            "# Python code, return ans\ntotal_seats = 56\npeople_waiting = 92\npeople_not_getting_on = people_waiting - total_seats\nans = people_not_getting_on"
        ],
        "results": [
            36.0,
            36.0,
            36.0
        ],
        "result_counter": {
            "36.0": 3
        },
        "prediction": 36.0
    },
    {
        "question": "Erin and Dana finished a two day bike-a-thon. They rode 37 miles the first day The rode 55 miles the second day. How many miles did they ride altogether?",
        "answer": 92,
        "generated": [
            "# Python code, return ans\nfirst_day_miles = 37\nsecond_day_miles = 55\ntotal_miles = first_day_miles + second_day_miles\nans = total_miles",
            "# Python code, return ans\nfirst_day_miles = 37\nsecond_day_miles = 55\ntotal_miles = first_day_miles + second_day_miles\nans = total_miles",
            "# Python code, return ans\nfirst_day_miles = 37\nsecond_day_miles = 55\ntotal_miles = first_day_miles + second_day_miles\nans = total_miles"
        ],
        "results": [
            92.0,
            92.0,
            92.0
        ],
        "result_counter": {
            "92.0": 3
        },
        "prediction": 92.0
    },
    {
        "question": "Greg wants to buy a $90 scooter. He has saved $57 so far. How much more money does Greg need?",
        "answer": 33,
        "generated": [
            "# Python code, return ans\nscooter_cost = 90\nsaved_money = 57\nmoney_needed = scooter_cost - saved_money\nans = money_needed",
            "# Python code, return ans\nscooter_cost = 90\nsaved_money = 57\nmoney_needed = scooter_cost - saved_money\nans = money_needed",
            "# Python code, return ans\nscooter_cost = 90\nsaved_money = 57\nneeded_money = scooter_cost - saved_money\nans = needed_money"
        ],
        "results": [
            33.0,
            33.0,
            33.0
        ],
        "result_counter": {
            "33.0": 3
        },
        "prediction": 33.0
    },
    {
        "question": "Paul and Vinnie deliver newspapers. Paul made $14 in tips. Vinnie made $16 more than Paul. How much did Vinnie make?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\nPaul_tips = 14\nVinnie_tips = Paul_tips + 16\nans = Vinnie_tips",
            "# Python code, return ans\nPaul_tips = 14\nVinnie_tips = Paul_tips + 16\nans = Vinnie_tips",
            "# Python code, return ans\nPaul_tips = 14\nVinnie_tips = Paul_tips + 16\nans = Vinnie_tips"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "Chris has 18 soccer cards. His friend, Charlie, has 32 cards. How many fewer cards does Chris have?",
        "answer": 14,
        "generated": [
            "# Python code, return ans\nChris_cards = 18\nCharlie_cards = 32\ndifference_cards = Charlie_cards - Chris_cards\nans = difference_cards",
            "# Python code, return ans\nChris_cards = 18\nCharlie_cards = 32\nfewer_cards = Charlie_cards - Chris_cards\nans = fewer_cards",
            "# Python code, return ans\nChris_cards = 18\nCharlie_cards = 32\nfewer_cards = Charlie_cards - Chris_cards\nans = fewer_cards"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "Matthew and Billie went apple picking. Matthew found 46 big, red apples. Billie found some as well. Together they found 80 apples. How many apples did Billie find?",
        "answer": 34,
        "generated": [
            "# Python code, return ans\nMatthew_apples = 46\ntotal_apples = 80\nBillie_apples = total_apples - Matthew_apples\nans = Billie_apples",
            "# Python code, return ans\nMatthew_apples = 46\ntotal_apples = 80\nBillie_apples = total_apples - Matthew_apples\nans = Billie_apples",
            "# Python code, return ans\nMatthew_apples = 46\ntotal_apples = 80\nBillie_apples = total_apples - Matthew_apples\nans = Billie_apples"
        ],
        "results": [
            34.0,
            34.0,
            34.0
        ],
        "result_counter": {
            "34.0": 3
        },
        "prediction": 34.0
    },
    {
        "question": "35 campers went rowing in the morning. 27 campers went rowing in the afternoon. How many campers went rowing in all?",
        "answer": 62,
        "generated": [
            "# Python code, return ans\ncampers_morning = 35\ncampers_afternoon = 27\ntotal_campers = campers_morning + campers_afternoon\nans = total_campers",
            "# Python code, return ans\ncampers_morning = 35\ncampers_afternoon = 27\ntotal_campers = campers_morning + campers_afternoon\nans = total_campers",
            "# Python code, return ans\ncampers_morning = 35\ncampers_afternoon = 27\ntotal_campers = campers_morning + campers_afternoon\nans = total_campers"
        ],
        "results": [
            62.0,
            62.0,
            62.0
        ],
        "result_counter": {
            "62.0": 3
        },
        "prediction": 62.0
    },
    {
        "question": "Mrs. Griffin went to the grocery store with $70. She had $16 left after shopping. How much did Mrs. Griffin spend?",
        "answer": 54,
        "generated": [
            "# Python code, return ans\ninitial_money = 70\nmoney_left = 16\nmoney_spent = initial_money - money_left\nans = money_spent",
            "# Python code, return ans\ninitial_money = 70\nmoney_left = 16\nmoney_spent = initial_money - money_left\nans = money_spent",
            "# Python code, return ans\ninitial_money = 70\nmoney_left = 16\nmoney_spent = initial_money - money_left\nans = money_spent"
        ],
        "results": [
            54.0,
            54.0,
            54.0
        ],
        "result_counter": {
            "54.0": 3
        },
        "prediction": 54.0
    },
    {
        "question": "The library has 75 science books. The second graders borrowed 18 of them. How many science books are left?",
        "answer": 57,
        "generated": [
            "# Python code, return ans\ntotal_science_books = 75\nborrowed_books = 18\nremaining_books = total_science_books - borrowed_books\nans = remaining_books",
            "# Python code, return ans\ntotal_science_books = 75\nborrowed_books = 18\nbooks_left = total_science_books - borrowed_books\nans = books_left",
            "# Python code, return ans\ntotal_science_books = 75\nborrowed_books = 18\nremaining_books = total_science_books - borrowed_books\nans = remaining_books"
        ],
        "results": [
            57.0,
            57.0,
            57.0
        ],
        "result_counter": {
            "57.0": 3
        },
        "prediction": 57.0
    },
    {
        "question": "The Wildcats scored 36 points in the first half of the game. The Panthers scored 17 points. How many more points did the Wildcats score?",
        "answer": 19,
        "generated": [
            "# Python code, return ans\nWildcats_points = 36\nPanthers_points = 17\npoint_difference = Wildcats_points - Panthers_points\nans = point_difference",
            "# Python code, return ans\nWildcats_points = 36\nPanthers_points = 17\npoint_difference = Wildcats_points - Panthers_points\nans = point_difference",
            "# Python code, return ans\nWildcats_points = 36\nPanthers_points = 17\npoints_difference = Wildcats_points - Panthers_points\nans = points_difference"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "Brian ran around the school track in 96 seconds. Todd ran around it in 88 seconds. How many fewer seconds did it take Todd to run around the tracl?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nBrian_time = 96\nTodd_time = 88\ntime_difference = Brian_time - Todd_time\nans = time_difference",
            "# Python code, return ans\nBrian_time = 96\nTodd_time = 88\ntime_difference = Brian_time - Todd_time\nans = time_difference",
            "# Python code, return ans\nBrian_time = 96\nTodd_time = 88\ntime_difference = Brian_time - Todd_time\nans = time_difference"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Alexa and Katerina stood on a scale together. The scale read 95 pounds. Alexa knows she weighs 46 pounds. How much does Katerina weigh?",
        "answer": 49,
        "generated": [
            "# Python code, return ans\nscale_total_weight = 95\nAlexa_weight = 46\nKaterina_weight = scale_total_weight - Alexa_weight\nans = Katerina_weight",
            "# Python code, return ans\nscale_total = 95\nAlexa_weight = 46\nKaterina_weight = scale_total - Alexa_weight\nans = Katerina_weight",
            "# Python code, return ans\nAlexa_weight = 46\ntotal_weight = 95\nKaterina_weight = total_weight - Alexa_weight\nans = Katerina_weight"
        ],
        "results": [
            49.0,
            49.0,
            49.0
        ],
        "result_counter": {
            "49.0": 3
        },
        "prediction": 49.0
    },
    {
        "question": "Frannie and Meg are in a jump rope contest. Frannie jumped 53 times without missing. She jumped 18 fewer times than Meg. How many times did Meg jump?",
        "answer": 71,
        "generated": [
            "# Python code, return ans\nFrannie_jumps = 53\nMeg_jumps = Frannie_jumps + 18\nans = Meg_jumps",
            "# Python code, return ans\nFrannie_jumps = 53\nMeg_jumps = Frannie_jumps + 18\nans = Meg_jumps",
            "# Python code, return ans\nFrannie_jumps = 53\nMeg_jumps = Frannie_jumps + 18\nans = Meg_jumps"
        ],
        "results": [
            71.0,
            71.0,
            71.0
        ],
        "result_counter": {
            "71.0": 3
        },
        "prediction": 71.0
    },
    {
        "question": "The difference between two numbers is 24. The smaller number is 46. What is the larger number?",
        "answer": 70,
        "generated": [
            "# Python code, return ans\ndifference = 24\nsmaller_number = 46\nlarger_number = smaller_number + difference\nans = larger_number",
            "# Python code, return ans\ndifference = 24\nsmaller_number = 46\nlarger_number = smaller_number + difference\nans = larger_number",
            "# Python code, return ans\ndifference = 24\nsmaller_number = 46\nlarger_number = smaller_number + difference\nans = larger_number"
        ],
        "results": [
            70.0,
            70.0,
            70.0
        ],
        "result_counter": {
            "70.0": 3
        },
        "prediction": 70.0
    },
    {
        "question": "If you add 45 to a mystery number you will get 92. What is the mystery number?",
        "answer": 47,
        "generated": [
            "# Python code, return ans\nmystery_number = 92 - 45\nans = mystery_number",
            "# Python code, return ans\nmystery_number = 92 - 45\nans = mystery_number",
            "# Python code, return ans\ntotal = 92\nmystery_number = total - 45\nans = mystery_number"
        ],
        "results": [
            47.0,
            47.0,
            47.0
        ],
        "result_counter": {
            "47.0": 3
        },
        "prediction": 47.0
    },
    {
        "question": "Sam and Erica have $91 together. Sam has $38. How does Erica have?",
        "answer": 53,
        "generated": [
            "# Python code, return ans\ntotal_money = 91\nSam_money = 38\nErica_money = total_money - Sam_money\nans = Erica_money",
            "# Python code, return ans\ntotal_money = 91\nSam_money = 38\nErica_money = total_money - Sam_money\nans = Erica_money",
            "# Python code, return ans\ntotal_money = 91\nSam_money = 38\nErica_money = total_money - Sam_money\nans = Erica_money"
        ],
        "results": [
            53.0,
            53.0,
            53.0
        ],
        "result_counter": {
            "53.0": 3
        },
        "prediction": 53.0
    },
    {
        "question": "A book has two chapters. The first chapter is 48 pages long. The second chapter is 46 pages long. How many pages does the book have altogether?",
        "answer": 94,
        "generated": [
            "# Python code, return ans\nfirst_chapter = 48\nsecond_chapter = 46\ntotal_pages = first_chapter + second_chapter\nans = total_pages",
            "# Python code, return ans\nfirst_chapter_pages = 48\nsecond_chapter_pages = 46\ntotal_pages = first_chapter_pages + second_chapter_pages\nans = total_pages",
            "# Python code, return ans\nfirst_chapter = 48\nsecond_chapter = 46\ntotal_pages = first_chapter + second_chapter\nans = total_pages"
        ],
        "results": [
            94.0,
            94.0,
            94.0
        ],
        "result_counter": {
            "94.0": 3
        },
        "prediction": 94.0
    },
    {
        "question": "Ted and Fred measured their height. Their total height is 98 inches. Ted is 39 inches tall. How tall is Fred?",
        "answer": 59,
        "generated": [
            "# Python code, return ans\ntotal_height = 98\nTed_height = 39\nFred_height = total_height - Ted_height\nans = Fred_height",
            "# Python code, return ans\ntotal_height = 98\nTed_height = 39\nFred_height = total_height - Ted_height\nans = Fred_height",
            "# Python code, return ans\ntotal_height = 98\nTed_height = 39\nFred_height = total_height - Ted_height\nans = Fred_height"
        ],
        "results": [
            59.0,
            59.0,
            59.0
        ],
        "result_counter": {
            "59.0": 3
        },
        "prediction": 59.0
    },
    {
        "question": "Wendy bought 84 inches of ribbon. She used 46 inches to wrap presents. How much ribbon did Wendy have left?",
        "answer": 38,
        "generated": [
            "# Python code, return ans\nribbon_total = 84\nribbon_used = 46\nribbon_left = ribbon_total - ribbon_used\nans = ribbon_left",
            "# Python code, return ans\nribbon_bought = 84\nribbon_used = 46\nribbon_left = ribbon_bought - ribbon_used\nans = ribbon_left",
            "# Python code, return ans\nribbon_total = 84\nribbon_used = 46\nribbon_left = ribbon_total - ribbon_used\nans = ribbon_left"
        ],
        "results": [
            38.0,
            38.0,
            38.0
        ],
        "result_counter": {
            "38.0": 3
        },
        "prediction": 38.0
    },
    {
        "question": "The grasshopper and the frog had a jumping contest. The grasshopper jumped 25 inches. The frog jumped 15 inches farther than the grasshopper. How far did the frog jump?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\ngrasshopper_jump = 25\nfrog_jump = grasshopper_jump + 15\nans = frog_jump",
            "# Python code, return ans\ngrasshopper_jump = 25\nfrog_jump = grasshopper_jump + 15\nans = frog_jump",
            "# Python code, return ans\ngrasshopper_jump = 25\nfrog_jump = grasshopper_jump + 15\nans = frog_jump"
        ],
        "results": [
            40.0,
            40.0,
            40.0
        ],
        "result_counter": {
            "40.0": 3
        },
        "prediction": 40.0
    },
    {
        "question": "Marco and his dad went strawberry picking. Together their strawberries weighed 23 pounds. Marco's strawberries weighed 14 pounds. How much did his dad's strawberries weigh?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nMarco_strawberries = 14\ntotal_weight = 23\ndad_strawberries = total_weight - Marco_strawberries\nans = dad_strawberries",
            "# Python code, return ans\nMarco_strawberries = 14\ntotal_strawberries = 23\ndad_strawberries = total_strawberries - Marco_strawberries\nans = dad_strawberries",
            "# Python code, return ans\nMarco_strawberries = 14\ntotal_strawberries = 23\ndad_strawberries = total_strawberries - Marco_strawberries\nans = dad_strawberries"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "The Wholesome Bakery baked 5 loaves of bread on Wednesday, 7 loaves of bread on Thursday, 10 loaves of bread on Friday, 14 loaves of bread on Saturday, and 19 loaves of bread on Sunday. If this pattern continues, how many loaves of bread will they bake on Monday?",
        "answer": 25,
        "generated": [
            "# Python code, return ans\nloaves_Wednesday = 5\nloaves_Thursday = 7\nloaves_Friday = 10\nloaves_Saturday = 14\nloaves_Sunday = 19\n\ndifference_Wed_Thu = loaves_Thursday - loaves_Wednesday\ndifference_Thu_Fri = loaves_Friday - loaves_Thursday\ndifference_Fri_Sat = loaves_Saturday - loaves_Friday\ndifference_Sat_Sun = loaves_Sunday - loaves_Saturday\n\ndifference_Sun_Mon = difference_Sat_Sun + (difference_Sat_Sun - difference_Fri_Sat)\nloaves_Monday = loaves_Sunday + difference_Sun_Mon\nans = loaves_Monday",
            "# Python code, return ans\nloaves_Wednesday = 5\nloaves_Thursday = 7\nloaves_Friday = 10\nloaves_Saturday = 14\nloaves_Sunday = 19\n\n# Find the difference between each day\ndiff_Wed_Thu = loaves_Thursday - loaves_Wednesday\ndiff_Thu_Fri = loaves_Friday - loaves_Thursday\ndiff_Fri_Sat = loaves_Saturday - loaves_Friday\ndiff_Sat_Sun = loaves_Sunday - loaves_Saturday\n\n# Find the pattern in the differences\npattern = diff_Sat_Sun - diff_Fri_Sat\n\n# Calculate the loaves for Monday\nloaves_Monday = loaves_Sunday + diff_Sat_Sun + pattern\nans = loaves_Monday",
            "# Python code, return ans\nloaves_Wednesday = 5\nloaves_Thursday = 7\nloaves_Friday = 10\nloaves_Saturday = 14\nloaves_Sunday = 19\n\n# Find the difference between each day\ndiff_Wed_Thu = loaves_Thursday - loaves_Wednesday\ndiff_Thu_Fri = loaves_Friday - loaves_Thursday\ndiff_Fri_Sat = loaves_Saturday - loaves_Friday\ndiff_Sat_Sun = loaves_Sunday - loaves_Saturday\n\n# Find the difference between the differences\ndiff_diff_Thu_Fri = diff_Thu_Fri - diff_Wed_Thu\ndiff_diff_Fri_Sat = diff_Fri_Sat - diff_Thu_Fri\ndiff_diff_Sat_Sun = diff_Sat_Sun - diff_Fri_Sat\n\n# Find the next difference in the pattern\nnext_diff_diff = diff_diff_Sat_Sun + diff_diff_Fri_Sat\n\n# Find the next difference\nnext_diff = diff_Sat_Sun + next_diff_diff\n\n# Find the number of loaves on Monday\nloaves_Monday = loaves_Sunday + next_diff\nans = loaves_Monday\nans"
        ],
        "results": [
            25.0,
            25.0,
            26.0
        ],
        "result_counter": {
            "25.0": 2,
            "26.0": 1
        },
        "prediction": 25.0
    },
    {
        "question": "Austin is putting stickers in a sticker book. He put 8 stickers on the first page, 16 stickers on the second page, 24 stickers on the third page, and 32 stickers on the fourth page. If this pattern continues, how many stickers will Austin put on the fifth page?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\nstickers_per_page = 8\npage_number = 5\nstickers_on_fifth_page = stickers_per_page * page_number\nans = stickers_on_fifth_page",
            "# Python code, return ans\nstickers_per_page = 8\npage_number = 5\nstickers_on_fifth_page = stickers_per_page * page_number\nans = stickers_on_fifth_page",
            "# Python code, return ans\nstickers_per_page = 8\npage_number = 5\nstickers_on_fifth_page = stickers_per_page * page_number\nans = stickers_on_fifth_page"
        ],
        "results": [
            40.0,
            40.0,
            40.0
        ],
        "result_counter": {
            "40.0": 3
        },
        "prediction": 40.0
    },
    {
        "question": "Sandra is sorting pencils into boxes. She put 78 pencils in the first box, 87 pencils in the second box, 96 pencils in the third box, and 105 pencils in the fourth box. If this pattern continues, how many pencils will Sandra put in the fifth box?",
        "answer": 114,
        "generated": [
            "# Python code, return ans\nfirst_box = 78\nsecond_box = 87\nthird_box = 96\nfourth_box = 105\ndifference = second_box - first_box\nfifth_box = fourth_box + difference\nans = fifth_box",
            "# Python code, return ans\nfirst_box = 78\nsecond_box = 87\nthird_box = 96\nfourth_box = 105\ndifference = second_box - first_box\nfifth_box = fourth_box + difference\nans = fifth_box",
            "# Python code, return ans\npencil_box1 = 78\npencil_box2 = 87\npencil_box3 = 96\npencil_box4 = 105\n\ndifference = pencil_box2 - pencil_box1\npencil_box5 = pencil_box4 + difference\nans = pencil_box5"
        ],
        "results": [
            114.0,
            114.0,
            114.0
        ],
        "result_counter": {
            "114.0": 3
        },
        "prediction": 114.0
    },
    {
        "question": "Oliver is organizing his books and putting them on shelves. He put 2 books on the first shelf, 6 books on the second shelf, 18 books on the third shelf, and 54 books on the fourth shelf. If this pattern continues, how many books will Oliver put on the fifth shelf?",
        "answer": 162,
        "generated": [
            "# Python code, return ans\nfirst_shelf = 2\nsecond_shelf = 6\nthird_shelf = 18\nfourth_shelf = 54\nfifth_shelf = fourth_shelf * 3\nans = fifth_shelf",
            "# Python code, return ans\nbooks_first_shelf = 2\nbooks_second_shelf = 6\nbooks_third_shelf = 18\nbooks_fourth_shelf = 54\n\n# The pattern is multiplying by 3 each time\nbooks_fifth_shelf = books_fourth_shelf * 3\nans = books_fifth_shelf",
            "# Python code, return ans\nfirst_shelf = 2\nsecond_shelf = 6\nthird_shelf = 18\nfourth_shelf = 54\nfifth_shelf = fourth_shelf * 3\nans = fifth_shelf"
        ],
        "results": [
            162.0,
            162.0,
            162.0
        ],
        "result_counter": {
            "162.0": 3
        },
        "prediction": 162.0
    },
    {
        "question": "Kayla got a new video game. She scored 2 points on the first level, 3 points on the second level, 5 points on the third level, 8 points on the fourth level, and 12 points on the fifth level. If this pattern continues, how many points will Kayla score on the sixth level?",
        "answer": 17,
        "generated": [
            "# Python code, return ans\nfirst_level = 2\nsecond_level = 3\nthird_level = 5\nfourth_level = 8\nfifth_level = 12\n\nsixth_level = fifth_level + (fifth_level - fourth_level) + 1\nans = sixth_level",
            "# Python code, return ans\nfirst_level = 2\nsecond_level = 3\nthird_level = 5\nfourth_level = 8\nfifth_level = 12\n\n# Find the difference between each level\ndiff1 = second_level - first_level\ndiff2 = third_level - second_level\ndiff3 = fourth_level - third_level\ndiff4 = fifth_level - fourth_level\n\n# Find the difference between the differences\ndiff_diff1 = diff2 - diff1\ndiff_diff2 = diff3 - diff2\ndiff_diff3 = diff4 - diff3\n\n# Since the difference between the differences is constant (1), we can find the next difference\nnext_diff = diff4 + diff_diff3\n\n# Add the next difference to the fifth level score to find the sixth level score\nsixth_level = fifth_level + next_diff\nans = sixth_level",
            "# Python code, return ans\nfirst_level = 2\nsecond_level = 3\nthird_level = 5\nfourth_level = 8\nfifth_level = 12\n\n# Difference between levels\ndiff_1 = second_level - first_level\ndiff_2 = third_level - second_level\ndiff_3 = fourth_level - third_level\ndiff_4 = fifth_level - fourth_level\n\n# Pattern: difference increases by 1 each level\nsixth_level = fifth_level + (diff_4 + 1)\nans = sixth_level"
        ],
        "results": [
            17.0,
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 3
        },
        "prediction": 17.0
    },
    {
        "question": "Derek is picking flowers in the garden. He picked 18 flowers from the first bush, 22 flowers from the second bush, 26 flowers from the third bush, 30 flowers from the fourth bush, and 34 flowers from the fifth bush. If this pattern continues, how many flowers will Derek pick from the sixth bush?",
        "answer": 38,
        "generated": [
            "# Python code, return ans\nflowers_picked = [18, 22, 26, 30, 34]\ndifference = flowers_picked[1] - flowers_picked[0]\nflowers_sixth_bush = flowers_picked[-1] + difference\nans = flowers_sixth_bush",
            "# Python code, return ans\nflowers_picked = [18, 22, 26, 30, 34]\ndifference = flowers_picked[1] - flowers_picked[0]\nflowers_sixth_bush = flowers_picked[-1] + difference\nans = flowers_sixth_bush",
            "# Python code, return ans\nflowers_picked = [18, 22, 26, 30, 34]\ndifference = flowers_picked[1] - flowers_picked[0]\nflowers_sixth_bush = flowers_picked[-1] + difference\nans = flowers_sixth_bush"
        ],
        "results": [
            38.0,
            38.0,
            38.0
        ],
        "result_counter": {
            "38.0": 3
        },
        "prediction": 38.0
    },
    {
        "question": "Last year, Springtown Hardware ordered 3 hammers in June, 4 hammers in July, 6 hammers in August, and 9 hammers in September. If this pattern continues, how many hammers will the store order in October?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\nhammers_June = 3\nhammers_July = 4\nhammers_August = 6\nhammers_September = 9\n\n# The pattern is increasing by 1, 2, 3, ...\n# So, the next increase will be 4\nhammers_October = hammers_September + 4\nans = hammers_October",
            "# Python code, return ans\nhammer_June = 3\nhammer_July = 4\nhammer_August = 6\nhammer_September = 9\nhammer_increase = hammer_September - hammer_August\nhammer_October = hammer_September + hammer_increase\nans = hammer_October",
            "# Python code, return ans\nhammer_June = 3\nhammer_July = 4\nhammer_August = 6\nhammer_September = 9\n\n# The pattern is increasing by 1, 2, 3, so the next increase will be 4\nhammer_October = hammer_September + 4\nans = hammer_October"
        ],
        "results": [
            13.0,
            12.0,
            13.0
        ],
        "result_counter": {
            "13.0": 2,
            "12.0": 1
        },
        "prediction": 13.0
    },
    {
        "question": "The teacher gave 29 gold stickers to the first student, 35 gold stickers to the second student, 41 gold stickers to the third student, 47 gold stickers to the fourth student, and 53 gold stickers to the fifth student. If this pattern continues, how many gold stickers will the teacher give to the sixth student?",
        "answer": 59,
        "generated": [
            "# Python code, return ans\ngold_stickers = [29, 35, 41, 47, 53]\ndifference = gold_stickers[1] - gold_stickers[0]\nsixth_student_stickers = gold_stickers[-1] + difference\nans = sixth_student_stickers",
            "# Python code, return ans\ngold_stickers_5th = 53\ndifference = 6\ngold_stickers_6th = gold_stickers_5th + difference\nans = gold_stickers_6th",
            "# Python code, return ans\ngold_stickers_5th = 53\ndifference = 6\ngold_stickers_6th = gold_stickers_5th + difference\nans = gold_stickers_6th"
        ],
        "results": [
            59.0,
            59.0,
            59.0
        ],
        "result_counter": {
            "59.0": 3
        },
        "prediction": 59.0
    },
    {
        "question": "Jared owns a hardware store and is looking over his past orders. Jared's hardware store ordered 5 power drills in January, 6 power drills in February, 8 power drills in March, and 11 power drills in April. If this pattern continues, how many power drills will the store order in May?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\nJanuary_drills = 5\nFebruary_drills = 6\nMarch_drills = 8\nApril_drills = 11\n\n# The pattern is an increase of 1, 2, and 3 power drills each month.\n# So, in May, the increase will be 4 power drills.\nMay_drills = April_drills + 4\nans = May_drills",
            "# Python code, return ans\nJanuary_drills = 5\nFebruary_drills = 6\nMarch_drills = 8\nApril_drills = 11\n\n# Find the difference between each month's orders\ndiff_Jan_Feb = February_drills - January_drills\ndiff_Feb_Mar = March_drills - February_drills\ndiff_Mar_Apr = April_drills - March_drills\n\n# Find the difference between the differences\ndiff_of_diff = diff_Mar_Apr - diff_Feb_Mar\n\n# Calculate May's order\nMay_drills = April_drills + diff_Mar_Apr + diff_of_diff\nans = May_drills",
            "# Python code, return ans\nJanuary_drills = 5\nFebruary_drills = 6\nMarch_drills = 8\nApril_drills = 11\n\ndifference_Feb_Jan = February_drills - January_drills\ndifference_Mar_Feb = March_drills - February_drills\ndifference_Apr_Mar = April_drills - March_drills\n\ndifference_May_Apr = difference_Apr_Mar + (difference_Apr_Mar - difference_Mar_Feb)\nMay_drills = April_drills + difference_May_Apr\nans = May_drills"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "Karlene read 3 pages on Tuesday, 6 pages on Wednesday, 12 pages on Thursday, 24 pages on Friday, and 48 pages on Saturday. If this pattern continues, how many pages will Karlene read on Sunday?",
        "answer": 96,
        "generated": [
            "# Python code, return ans\npages_Tuesday = 3\npages_Wednesday = 6\npages_Thursday = 12\npages_Friday = 24\npages_Saturday = 48\npages_Sunday = pages_Saturday * 2\nans = pages_Sunday",
            "# Python code, return ans\npages_Tuesday = 3\npages_Wednesday = 6\npages_Thursday = 12\npages_Friday = 24\npages_Saturday = 48\npages_Sunday = pages_Saturday * 2\nans = pages_Sunday",
            "# Python code, return ans\npages_Tuesday = 3\npages_Wednesday = 6\npages_Thursday = 12\npages_Friday = 24\npages_Saturday = 48\npages_Sunday = pages_Saturday * 2\nans = pages_Sunday"
        ],
        "results": [
            96.0,
            96.0,
            96.0
        ],
        "result_counter": {
            "96.0": 3
        },
        "prediction": 96.0
    },
    {
        "question": "The teacher's helper was putting cookies onto plates. He put 5 cookies on the first plate, 7 cookies on the second plate, 10 cookies on the third plate, 14 cookies on the fourth plate, and 19 cookies on the fifth plate. If this pattern continues, how many cookies will the helper put on the sixth plate?",
        "answer": 25,
        "generated": [
            "# Python code, return ans\nplate_1 = 5\nplate_2 = 7\nplate_3 = 10\nplate_4 = 14\nplate_5 = 19\n\ndifference_1 = plate_2 - plate_1\ndifference_2 = plate_3 - plate_2\ndifference_3 = plate_4 - plate_3\ndifference_4 = plate_5 - plate_4\n\nnext_difference = difference_4 + (difference_4 - difference_3)\nplate_6 = plate_5 + next_difference\nans = plate_6",
            "# Python code, return ans\ncookies_on_plates = [5, 7, 10, 14, 19]\ndifference = [cookies_on_plates[i+1] - cookies_on_plates[i] for i in range(len(cookies_on_plates)-1)]\nnext_difference = difference[-1] + (difference[-1] - difference[-2])\ncookies_on_sixth_plate = cookies_on_plates[-1] + next_difference\nans = cookies_on_sixth_plate",
            "# Python code, return ans\ncookies = [5, 7, 10, 14, 19]\ndifference = [cookies[i+1] - cookies[i] for i in range(len(cookies)-1)]\nnext_difference = difference[-1] + (difference[-1] - difference[-2])\nsixth_plate_cookies = cookies[-1] + next_difference\nans = sixth_plate_cookies"
        ],
        "results": [
            25.0
        ],
        "result_counter": {
            "25.0": 1
        },
        "prediction": 25.0
    },
    {
        "question": "The flower shop displays a different number of roses in the front window every month. It displayed 108 roses in October, 120 roses in November, 132 roses in December, and 144 roses in January. If this pattern continues, how many roses will the flower shop window display in February?",
        "answer": 156,
        "generated": [
            "# Python code, return ans\nroses_october = 108\nroses_november = 120\nroses_december = 132\nroses_january = 144\nroses_increase = 12\n\nroses_february = roses_january + roses_increase\nans = roses_february",
            "# Python code, return ans\nroses_October = 108\nroses_November = 120\nroses_December = 132\nroses_January = 144\n\n# Find the pattern\npattern = roses_November - roses_October\n\n# Calculate the number of roses in February\nroses_February = roses_January + pattern\nans = roses_February",
            "# Python code, return ans\nroses_October = 108\nroses_November = 120\nroses_December = 132\nroses_January = 144\n\nroses_increase = roses_November - roses_October\nroses_February = roses_January + roses_increase\nans = roses_February"
        ],
        "results": [
            156.0,
            156.0,
            156.0
        ],
        "result_counter": {
            "156.0": 3
        },
        "prediction": 156.0
    },
    {
        "question": "A baker is putting cupcakes on trays to cool. She put 3 cupcakes on the first tray, 6 cupcakes on the second tray, 12 cupcakes on the third tray, and 24 cupcakes on the fourth tray. If this pattern continues, how many cupcakes will the baker put on the fifth tray?",
        "answer": 48,
        "generated": [
            "# Python code, return ans\ncupcakes_on_first_tray = 3\ncupcakes_on_second_tray = 6\ncupcakes_on_third_tray = 12\ncupcakes_on_fourth_tray = 24\n\ncupcakes_on_fifth_tray = cupcakes_on_fourth_tray * 2\nans = cupcakes_on_fifth_tray",
            "# Python code, return ans\nfirst_tray = 3\nsecond_tray = 6\nthird_tray = 12\nfourth_tray = 24\n\nfifth_tray = fourth_tray * 2\nans = fifth_tray",
            "# Python code, return ans\nfirst_tray = 3\nsecond_tray = 6\nthird_tray = 12\nfourth_tray = 24\nfifth_tray = fourth_tray * 2\nans = fifth_tray"
        ],
        "results": [
            48.0,
            48.0,
            48.0
        ],
        "result_counter": {
            "48.0": 3
        },
        "prediction": 48.0
    },
    {
        "question": "On a modern art painting, there are 3 green dots in the first row, 6 green dots in the second row, 9 green dots in the third row, and 12 green dots in the fourth row. If this pattern continues, how many green dots will there be in the fifth row?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\ndots_first_row = 3\ndots_second_row = 6\ndots_third_row = 9\ndots_fourth_row = 12\ndots_fifth_row = dots_fourth_row + 3\nans = dots_fifth_row",
            "# Python code, return ans\ngreen_dots_first_row = 3\ngreen_dots_second_row = 6\ngreen_dots_third_row = 9\ngreen_dots_fourth_row = 12\n\n# The pattern is increasing by 3 green dots each row\ngreen_dots_fifth_row = green_dots_fourth_row + 3\nans = green_dots_fifth_row",
            "# Python code, return ans\ndots_in_fourth_row = 12\ndots_in_fifth_row = dots_in_fourth_row + 3\nans = dots_in_fifth_row"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "Steve is stacking cups; he put 17 plastic cups in the first stack, 21 plastic cups in the second stack, 25 plastic cups in the third stack, and 29 plastic cups in the fourth stack. If this pattern continues, how many plastic cups will Steve put in the fifth stack?",
        "answer": 33,
        "generated": [
            "# Python code, return ans\nfirst_stack = 17\nsecond_stack = 21\nthird_stack = 25\nfourth_stack = 29\n\ndifference = second_stack - first_stack\nfifth_stack = fourth_stack + difference\nans = fifth_stack",
            "# Python code, return ans\nfirst_stack = 17\nsecond_stack = 21\nthird_stack = 25\nfourth_stack = 29\n\ndifference = second_stack - first_stack\nfifth_stack = fourth_stack + difference\nans = fifth_stack",
            "# Python code, return ans\nfirst_stack = 17\nsecond_stack = 21\nthird_stack = 25\nfourth_stack = 29\n\ndifference = second_stack - first_stack\nfifth_stack = fourth_stack + difference\nans = fifth_stack"
        ],
        "results": [
            33.0,
            33.0,
            33.0
        ],
        "result_counter": {
            "33.0": 3
        },
        "prediction": 33.0
    },
    {
        "question": "While counting chairs in the lunch room, Marie noticed that there were 14 chairs in the first row, 23 chairs in the second row, 32 chairs in the third row, 41 chairs in the fourth row, and 50 chairs in the fifth row. If this pattern continues, how many chairs will there be in the sixth row?",
        "answer": 50,
        "generated": [
            "# Python code, return ans\nfirst_row = 14\nsecond_row = 23\nthird_row = 32\nfourth_row = 41\nfifth_row = 50\ndifference = second_row - first_row\nsixth_row = fifth_row + difference\nans = sixth_row",
            "# Python code, return ans\nchairs_first_row = 14\nrow_difference = 9\nchairs_sixth_row = chairs_first_row + (5 * row_difference)\nans = chairs_sixth_row",
            "# Python code, return ans\nfirst_row = 14\nsecond_row = 23\nthird_row = 32\nfourth_row = 41\nfifth_row = 50\n\ndifference = second_row - first_row\nsixth_row = fifth_row + difference\nans = sixth_row"
        ],
        "results": [
            59.0,
            59.0,
            59.0
        ],
        "result_counter": {
            "59.0": 3
        },
        "prediction": 59.0
    },
    {
        "question": "A new cookbook is becoming popular. The local bookstore ordered 4 copies in September, 6 copies in October, 8 copies in November, and 10 copies in December. If this pattern continues, how many copies will the bookstore order in January?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nordered_September = 4\nordered_October = 6\nordered_November = 8\nordered_December = 10\nordered_January = ordered_December + 2\nans = ordered_January",
            "# Python code, return ans\nordered_September = 4\nordered_October = 6\nordered_November = 8\nordered_December = 10\nordered_January = ordered_December + 2\nans = ordered_January",
            "# Python code, return ans\nordered_September = 4\nordered_October = 6\nordered_November = 8\nordered_December = 10\nordered_January = ordered_December + 2\nans = ordered_January"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Farmer Singleton has a plot of tomato plants. There are 4 tomato plants in the first row, 8 tomato plants in the second row, 16 tomato plants in the third row, 32 tomato plants in the fourth row, and 64 tomato plants in the fifth row. If this pattern continues, how many tomato plants will there be in the sixth row?",
        "answer": 128,
        "generated": [
            "# Python code, return ans\ntomato_plants_fifth_row = 64\ntomato_plants_sixth_row = tomato_plants_fifth_row * 2\nans = tomato_plants_sixth_row",
            "# Python code, return ans\ntomato_sixth_row = 64 * 2\nans = tomato_sixth_row",
            "# Python code, return ans\ntomato_plants_fifth_row = 64\ntomato_plants_sixth_row = tomato_plants_fifth_row * 2\nans = tomato_plants_sixth_row"
        ],
        "results": [
            128.0,
            128.0,
            128.0
        ],
        "result_counter": {
            "128.0": 3
        },
        "prediction": 128.0
    },
    {
        "question": "There are 22 bicycles and 3 cars in the garage at Gordon's apartment building. How many wheels are there in the garage?",
        "answer": 56,
        "generated": [
            "# Python code, return ans\nbicycles = 22\ncars = 3\nbicycle_wheels = bicycles * 2\ncar_wheels = cars * 4\ntotal_wheels = bicycle_wheels + car_wheels\nans = total_wheels",
            "# Python code, return ans\nbicycles = 22\ncars = 3\nbicycle_wheels = bicycles * 2\ncar_wheels = cars * 4\ntotal_wheels = bicycle_wheels + car_wheels\nans = total_wheels",
            "# Python code, return ans\nbicycles = 22\ncars = 3\nbicycle_wheels = bicycles * 2\ncar_wheels = cars * 4\ntotal_wheels = bicycle_wheels + car_wheels\nans = total_wheels"
        ],
        "results": [
            56.0,
            56.0,
            56.0
        ],
        "result_counter": {
            "56.0": 3
        },
        "prediction": 56.0
    },
    {
        "question": "There are 16 bicycles and 7 tricycles in the storage area at Braden's apartment building. Each bicycle has 2 wheels and each tricycle has 3 wheels. How many wheels are there in all?",
        "answer": 53,
        "generated": [
            "# Python code, return ans\nbicycles = 16\ntricycles = 7\nbicycle_wheels = 2\ntricycle_wheels = 3\ntotal_wheels = (bicycles * bicycle_wheels) + (tricycles * tricycle_wheels)\nans = total_wheels",
            "# Python code, return ans\nbicycles = 16\ntricycles = 7\nbicycle_wheels = bicycles * 2\ntricycle_wheels = tricycles * 3\ntotal_wheels = bicycle_wheels + tricycle_wheels\nans = total_wheels",
            "# Python code, return ans\nbicycles = 16\ntricycles = 7\nbicycle_wheels = bicycles * 2\ntricycle_wheels = tricycles * 3\ntotal_wheels = bicycle_wheels + tricycle_wheels\nans = total_wheels"
        ],
        "results": [
            53.0,
            53.0,
            53.0
        ],
        "result_counter": {
            "53.0": 3
        },
        "prediction": 53.0
    },
    {
        "question": "Miki bought 4 packs of red bouncy balls and 3 packs of yellow bouncy balls. Each package contained 7 bouncy balls. How many more packs of red bouncy balls than yellow bouncy balls did Miki buy?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\nred_bouncy_ball_packs = 4\nyellow_bouncy_ball_packs = 3\nmore_red_packs = red_bouncy_ball_packs - yellow_bouncy_ball_packs\nans = more_red_packs",
            "# Python code, return ans\nred_bouncy_balls_packs = 4\nyellow_bouncy_balls_packs = 3\nmore_red_packs = red_bouncy_balls_packs - yellow_bouncy_balls_packs\nans = more_red_packs",
            "# Python code, return ans\nred_ball_packs = 4\nyellow_ball_packs = 3\nmore_red_packs = red_ball_packs - yellow_ball_packs\nans = more_red_packs"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "Kira has $1.20 in quarters and dimes. She has minimized coins altogether. How many coins does she have?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ntotal_money = 1.20\nquarters = 0.25\ndimes = 0.10\n\n# Minimizing the number of coins means maximizing the number of quarters\nnum_quarters = int(total_money / quarters)\nremaining_money = total_money - (num_quarters * quarters)\n\n# Calculate the number of dimes needed to make up the remaining money\nnum_dimes = int(remaining_money / dimes)\n\nans = num_quarters + num_dimes",
            "# Python code, return ans\ntotal_money = 120  # in cents\nmin_quarters = total_money // 25\nremaining_money = total_money % 25\nmin_dimes = remaining_money // 10\ntotal_coins = min_quarters + min_dimes\nans = total_coins",
            "# Python code, return ans\ntotal_money = 120  # in cents\nmin_quarter = total_money // 25\nremaining_money = total_money % 25\nmin_dime = remaining_money // 10\ntotal_coins = min_quarter + min_dime\nans = total_coins"
        ],
        "results": [
            5.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "5.0": 1,
            "6.0": 2
        },
        "prediction": 6.0
    },
    {
        "question": "Willy has 5,092 crayons. Lucy has 3,971 crayons. How many more crayons does Willy have than Lucy?",
        "answer": 1121,
        "generated": [
            "# Python code, return ans\nWilly_crayons = 5092\nLucy_crayons = 3971\nmore_crayons = Willy_crayons - Lucy_crayons\nans = more_crayons",
            "# Python code, return ans\nWilly_crayons = 5092\nLucy_crayons = 3971\nmore_crayons = Willy_crayons - Lucy_crayons\nans = more_crayons",
            "# Python code, return ans\nWilly_crayons = 5092\nLucy_crayons = 3971\nmore_crayons = Willy_crayons - Lucy_crayons\nans = more_crayons"
        ],
        "results": [
            1121.0,
            1121.0,
            1121.0
        ],
        "result_counter": {
            "1121.0": 3
        },
        "prediction": 1121.0
    },
    {
        "question": "You have $12 in nickels and quarters. If you have the same number of each kind of coin, how many nickels do you have?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\ntotal_money = 12\nnickel_value = 0.05\nquarter_value = 0.25\nnum_of_coins = total_money / (nickel_value + quarter_value)\nnum_of_nickels = num_of_coins // 2\nans = num_of_nickels",
            "# Python code, return ans\ntotal_money = 12\nnickel_value = 0.05\nquarter_value = 0.25\nnum_of_each_coin = total_money / (nickel_value + quarter_value)\nnum_of_nickels = int(num_of_each_coin)\nans = num_of_nickels",
            "# Python code, return ans\ntotal_money = 12\nnickel_value = 0.05\nquarter_value = 0.25\nnum_of_coins = total_money / (nickel_value + quarter_value)\nnickels = num_of_coins / 2\nans = nickels"
        ],
        "results": [
            20.0,
            40.0,
            20.0
        ],
        "result_counter": {
            "20.0": 2,
            "40.0": 1
        },
        "prediction": 20.0
    },
    {
        "question": "A worker at a medical lab is studying blood samples. The first sample contained 1,410 blood cells. The second one contained 6,908 more than the first. About how many blood cells were in the second sample?",
        "answer": 8318,
        "generated": [
            "# Python code, return ans\nfirst_sample = 1410\nsecond_sample = first_sample + 6908\nans = second_sample",
            "# Python code, return ans\nfirst_sample = 1410\nsecond_sample = first_sample + 6908\nans = second_sample",
            "# Python code, return ans\nfirst_sample = 1410\nsecond_sample_more = 6908\nsecond_sample = first_sample + second_sample_more\nans = second_sample"
        ],
        "results": [
            8318.0,
            8318.0,
            8318.0
        ],
        "result_counter": {
            "8318.0": 3
        },
        "prediction": 8318.0
    },
    {
        "question": "During summer break, 564,237 kids from Lawrence County go to camp, and the other 495,718 kids stay home. About how many kids are in Lawrence County?",
        "answer": 1059955,
        "generated": [
            "# Python code, return ans\nkids_at_camp = 564237\nkids_at_home = 495718\ntotal_kids = kids_at_camp + kids_at_home\nans = total_kids",
            "# Python code, return ans\nkids_camp = 564237\nkids_home = 495718\ntotal_kids = kids_camp + kids_home\nans = total_kids",
            "# Python code, return ans\nkids_at_camp = 564237\nkids_at_home = 495718\ntotal_kids = kids_at_camp + kids_at_home\nans = total_kids"
        ],
        "results": [
            1059955.0,
            1059955.0,
            1059955.0
        ],
        "result_counter": {
            "1059955.0": 3
        },
        "prediction": 1059955.0
    },
    {
        "question": "There is a snail problem in Centerville. People work together to get rid 3,482 snails, but 8,278 of them remain. About how many snails were originally in Centerville?",
        "answer": 11760,
        "generated": [
            "# Python code, return ans\nsnails_removed = 3482\nsnails_remaining = 8278\noriginal_snails = snails_removed + snails_remaining\nans = original_snails",
            "# Python code, return ans\nsnails_eliminated = 3482\nsnails_remaining = 8278\noriginal_snails = snails_eliminated + snails_remaining\nans = original_snails",
            "# Python code, return ans\nsnails_removed = 3482\nsnails_remaining = 8278\noriginal_snails = snails_removed + snails_remaining\nans = original_snails"
        ],
        "results": [
            11760.0,
            11760.0,
            11760.0
        ],
        "result_counter": {
            "11760.0": 3
        },
        "prediction": 11760.0
    },
    {
        "question": "Recently, the postal service sold stamps with famous people pictured on them. They sold 578,833 color stamps, as well as 523,776 black-and-white ones. About how many stamps did they sell?",
        "answer": 1102609,
        "generated": [
            "# Python code, return ans\ncolor_stamps = 578833\nbw_stamps = 523776\ntotal_stamps = color_stamps + bw_stamps\nans = total_stamps",
            "# Python code, return ans\ncolor_stamps = 578833\nbw_stamps = 523776\ntotal_stamps = color_stamps + bw_stamps\nans = total_stamps",
            "# Python code, return ans\ncolor_stamps = 578833\nbw_stamps = 523776\ntotal_stamps = color_stamps + bw_stamps\nans = total_stamps"
        ],
        "results": [
            1102609.0,
            1102609.0,
            1102609.0
        ],
        "result_counter": {
            "1102609.0": 3
        },
        "prediction": 1102609.0
    },
    {
        "question": "Ann has $777 and Bill has $1,111. How much does Bill need to give to Ann, so that they would have the same amount of money?",
        "answer": 167,
        "generated": [
            "# Python code, return ans\nAnn_money = 777\nBill_money = 1111\nmoney_to_give = (Bill_money - Ann_money) / 2\nans = money_to_give",
            "# Python code, return ans\nAnn_money = 777\nBill_money = 1111\nmoney_difference = (Bill_money - Ann_money) / 2\nans = money_difference",
            "# Python code, return ans\nAnn_money = 777\nBill_money = 1111\nequal_money = (Ann_money + Bill_money) / 2\nmoney_to_give = equal_money - Ann_money\nans = money_to_give"
        ],
        "results": [
            167.0,
            167.0,
            167.0
        ],
        "result_counter": {
            "167.0": 3
        },
        "prediction": 167.0
    },
    {
        "question": "Tony made 14 L of lemonade for a party. His guests drank 9500 mL of the lemonade. How many milliliters of lemonade did Tony have left over?",
        "answer": 4500,
        "generated": [
            "# Python code, return ans\nlemonade_made = 14 * 1000  # Convert to milliliters\nlemonade_drank = 9500\nlemonade_left = lemonade_made - lemonade_drank\nans = lemonade_left",
            "# Python code, return ans\nlemonade_made = 14 * 1000  # convert to mL\nlemonade_drank = 9500\nlemonade_left = lemonade_made - lemonade_drank\nans = lemonade_left",
            "# Python code, return ans\nlemonade_made = 14 * 1000  # Convert to mL\nlemonade_drank = 9500\nlemonade_left = lemonade_made - lemonade_drank\nans = lemonade_left"
        ],
        "results": [
            4500.0,
            4500.0,
            4500.0
        ],
        "result_counter": {
            "4500.0": 3
        },
        "prediction": 4500.0
    },
    {
        "question": "Susan started her homework at 1:59 p.m. and finished her homework 96 minutes later. Susan had volleyball practice at 4:00 p.m. How much time did Susan have between finishing her homework and the beginning of volleyball practice?",
        "answer": 25,
        "generated": [
            "# Python code, return ans\nstart_time = 1 * 60 + 59  # Convert to minutes\nhomework_duration = 96\nend_time = start_time + homework_duration\nvolleyball_start = 4 * 60  # Convert to minutes\ntime_between = volleyball_start - end_time\nans = time_between",
            "# Python code, return ans\nstart_time = 1 * 60 + 59  # convert to minutes\nhomework_duration = 96\nfinish_time = start_time + homework_duration\nvolleyball_time = 4 * 60  # convert to minutes\ntime_between = volleyball_time - finish_time\nans = time_between",
            "# Python code, return ans\nstart_time = 1 * 60 + 59  # convert to minutes\nhomework_duration = 96\nend_time = start_time + homework_duration\nvolleyball_time = 4 * 60  # convert to minutes\ntime_between = volleyball_time - end_time\nans = time_between"
        ],
        "results": [
            25.0,
            25.0,
            25.0
        ],
        "result_counter": {
            "25.0": 3
        },
        "prediction": 25.0
    },
    {
        "question": "Thomas made 8700 mL of tomato soup. He packed 1.6 L of the soup in his kids' lunches. He then froze half of the remaining soup. How many milliliters of soup did Thomas freeze?",
        "answer": 3550,
        "generated": [
            "# Python code, return ans\ntotal_soup = 8700\nsoup_for_lunch = 1600\nremaining_soup = total_soup - soup_for_lunch\nsoup_to_freeze = remaining_soup / 2\nans = soup_to_freeze",
            "# Python code, return ans\ntotal_soup = 8700\nsoup_for_lunch = 1.6 * 1000\nremaining_soup = total_soup - soup_for_lunch\nfrozen_soup = remaining_soup / 2\nans = frozen_soup",
            "# Python code, return ans\ntotal_soup = 8700\nkids_lunch_soup = 1600\nremaining_soup = total_soup - kids_lunch_soup\nfrozen_soup = remaining_soup / 2\nans = frozen_soup"
        ],
        "results": [
            3550.0,
            3550.0,
            3550.0
        ],
        "result_counter": {
            "3550.0": 3
        },
        "prediction": 3550.0
    },
    {
        "question": "Payton leaves to go on an 85 minute bike ride at 3:27 p.m. Payton's family eats dinner at 5:45 p.m. How much time will Payton have between finishing her bike ride and eating dinner?",
        "answer": 53,
        "generated": [
            "# Python code, return ans\nbike_ride_minutes = 85\nstart_time = (3 * 60) + 27  # Convert 3:27 PM to minutes\nend_time = (5 * 60) + 45  # Convert 5:45 PM to minutes\nfinish_time = start_time + bike_ride_minutes\ntime_between = end_time - finish_time\nans = time_between",
            "# Python code, return ans\nbike_ride_minutes = 85\nstart_time = 3 * 60 + 27  # Convert 3:27 pm to minutes\nend_time = 5 * 60 + 45  # Convert 5:45 pm to minutes\nfinish_time = start_time + bike_ride_minutes\ntime_between = end_time - finish_time\nans = time_between",
            "# Python code, return ans\nbike_ride_minutes = 85\nstart_time = (3 * 60) + 27  # Convert 3:27 PM to minutes\nend_time = start_time + bike_ride_minutes\ndinner_time = (5 * 60) + 45  # Convert 5:45 PM to minutes\ntime_between = dinner_time - end_time\nans = time_between"
        ],
        "results": [
            53.0,
            53.0,
            53.0
        ],
        "result_counter": {
            "53.0": 3
        },
        "prediction": 53.0
    },
    {
        "question": "It is 4:12 p.m. Emma's mom will be home from work in 70 minutes, and Emma has gymnastics lessons at 6:00 p.m. How much time will Emma have between the time that her mom gets home from work and the beginning of gymnastics lessons?",
        "answer": 38,
        "generated": [
            "# Python code, return ans\ncurrent_time = 4 * 60 + 12  # minutes\nmom_arrival_time = current_time + 70\ngymnastics_start_time = 6 * 60\ntime_between = gymnastics_start_time - mom_arrival_time\nans = time_between",
            "# Python code, return ans\ncurrent_time = 4 * 60 + 12  # Convert to minutes\nmom_arrival_time = current_time + 70\ngymnastics_start_time = 6 * 60  # Convert to minutes\ntime_between = gymnastics_start_time - mom_arrival_time\nans = time_between",
            "# Python code, return ans\ncurrent_time = 4 * 60 + 12  # Convert to minutes\nmom_arrival_time = current_time + 70\ngymnastics_start_time = 6 * 60  # Convert to minutes\ntime_between = gymnastics_start_time - mom_arrival_time\nans = time_between"
        ],
        "results": [
            38.0,
            38.0,
            38.0
        ],
        "result_counter": {
            "38.0": 3
        },
        "prediction": 38.0
    },
    {
        "question": "Cora sliced 18 kg of green apples for a party. She divided the apple slices equally between 5 large bowls. How many grams of apple slices did Cora put in each bowl?",
        "answer": 3600,
        "generated": [
            "# Python code, return ans\ngreen_apple_kg = 18\ngreen_apple_g = green_apple_kg * 1000\nbowl_num = 5\napple_per_bowl = green_apple_g / bowl_num\nans = apple_per_bowl",
            "# Python code, return ans\napple_weight_kg = 18\napple_weight_g = apple_weight_kg * 1000\nbowl_num = 5\napple_per_bowl = apple_weight_g / bowl_num\nans = apple_per_bowl",
            "# Python code, return ans\ngreen_apple_weight = 18000  # converting kg to grams\nbowl_num = 5\napple_slices_per_bowl = green_apple_weight / bowl_num\nans = apple_slices_per_bowl"
        ],
        "results": [
            3600.0,
            3600.0,
            3600.0
        ],
        "result_counter": {
            "3600.0": 3
        },
        "prediction": 3600.0
    },
    {
        "question": "Gina mixed paint to make her favorite shade of purple. She filled up one third of the container with red paint. Then she filled the remaining space with 4 L of blue paint. How many milliliters of paint did Gina mix?",
        "answer": 6000,
        "generated": [
            "# Python code, return ans\nblue_paint = 4 * 1000 # convert 4 L to milliliters\nred_paint = blue_paint / 2\ntotal_paint = blue_paint + red_paint\nans = total_paint",
            "# Python code, return ans\nblue_paint = 4 * 1000  # Convert 4 L to ml\ntotal_paint = blue_paint * 3  # Since blue paint is 2/3 of the container, red paint is 1/3\nans = total_paint",
            "# Python code, return ans\nblue_paint = 4 * 1000  # Convert to milliliters\ntotal_paint = blue_paint * 3  # Since blue paint is 2/3 of the container\nans = total_paint"
        ],
        "results": [
            6000.0,
            12000.0,
            12000.0
        ],
        "result_counter": {
            "6000.0": 1,
            "12000.0": 2
        },
        "prediction": 12000.0
    },
    {
        "question": "A restaurant charges 4% service charge. If your order amounted to 450, how much did you pay?",
        "answer": 468,
        "generated": [
            "# Python code, return ans\norder_amount = 450\nservice_charge_percentage = 4\nservice_charge = order_amount * (service_charge_percentage / 100)\ntotal_payment = order_amount + service_charge\nans = total_payment",
            "# Python code, return ans\norder_amount = 450\nservice_charge_percentage = 4\nservice_charge = order_amount * (service_charge_percentage / 100)\ntotal_payment = order_amount + service_charge\nans = total_payment",
            "# Python code, return ans\norder_amount = 450\nservice_charge_percent = 4\nservice_charge = order_amount * (service_charge_percent / 100)\ntotal_payment = order_amount + service_charge\nans = total_payment"
        ],
        "results": [
            468.0,
            468.0,
            468.0
        ],
        "result_counter": {
            "468.0": 3
        },
        "prediction": 468.0
    },
    {
        "question": "Rose bought a blouse at a discount of 18% for 147.60. What was the marked price of the blouse?",
        "answer": 180,
        "generated": [
            "# Python code, return ans\ndiscounted_price = 147.60\ndiscount_percentage = 18\nmarked_price = discounted_price / (1 - discount_percentage / 100)\nans = marked_price",
            "# Python code, return ans\ndiscounted_price = 147.60\ndiscount_percent = 18\nmarked_price = discounted_price / (1 - (discount_percent / 100))\nans = marked_price",
            "# Python code, return ans\ndiscounted_price = 147.60\ndiscount_percentage = 18\noriginal_price = discounted_price / (1 - discount_percentage / 100)\nans = original_price"
        ],
        "results": [
            179.99999999999997,
            179.99999999999997,
            179.99999999999997
        ],
        "result_counter": {
            "179.99999999999997": 3
        },
        "prediction": 179.99999999999997
    },
    {
        "question": "Mila's father has 2 jobs. 1st job pays $375 more than the 2nd job. How much does he get from the 1st job if he gets per week a total of $3,875?",
        "answer": 2125,
        "generated": [
            "# Python code, return ans\ntotal_payment = 3875\nsecond_job_payment = (total_payment - 375) / 2\nfirst_job_payment = second_job_payment + 375\nans = first_job_payment",
            "# Python code, return ans\ntotal_payment = 3875\nsecond_job_payment = (total_payment - 375) / 2\nfirst_job_payment = second_job_payment + 375\nans = first_job_payment",
            "# Python code, return ans\ntotal_income = 3875\nsecond_job_income = (total_income - 375) / 2\nfirst_job_income = second_job_income + 375\nans = first_job_income"
        ],
        "results": [
            2125.0,
            2125.0,
            2125.0
        ],
        "result_counter": {
            "2125.0": 3
        },
        "prediction": 2125.0
    },
    {
        "question": "The ratio of the number correct answers to incorrect answers on Sam's math test is 7:3. The difference between correct and incorrect answers is 20. What was the total number of questions on the test?",
        "answer": 50,
        "generated": [
            "# Python code, return ans\ncorrect_incorrect_ratio = 7/3\ndifference = 20\nincorrect_answers = difference / (correct_incorrect_ratio - 1)\ncorrect_answers = correct_incorrect_ratio * incorrect_answers\ntotal_questions = correct_answers + incorrect_answers\nans = total_questions",
            "# Python code, return ans\ncorrect_ratio = 7\nincorrect_ratio = 3\ndifference = 20\ntotal_ratio = correct_ratio + incorrect_ratio\n\n# Find the value of one ratio unit\none_ratio_unit = difference / (correct_ratio - incorrect_ratio)\n\n# Calculate the total number of questions\ntotal_questions = total_ratio * one_ratio_unit\nans = total_questions",
            "# Python code, return ans\ncorrect_incorrect_ratio = 7 / 3\ndifference = 20\nincorrect_answers = difference / (correct_incorrect_ratio - 1)\ncorrect_answers = correct_incorrect_ratio * incorrect_answers\ntotal_questions = correct_answers + incorrect_answers\nans = total_questions"
        ],
        "results": [
            50.0,
            50.0,
            50.0
        ],
        "result_counter": {
            "50.0": 3
        },
        "prediction": 50.0
    },
    {
        "question": "The ratio of the weight of Meg's cat to the weight of Anne's cat is 5:7. Meg's cat weighs 20 kg. How much more does Anne's cat weigh?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nMeg_cat_weight = 20\nMeg_to_Anne_ratio = 5 / 7\nAnne_cat_weight = Meg_cat_weight / Meg_to_Anne_ratio\nweight_difference = Anne_cat_weight - Meg_cat_weight\nans = weight_difference",
            "# Python code, return ans\nMeg_cat_weight = 20\nMeg_Anne_ratio = 5 / 7\nAnne_cat_weight = Meg_cat_weight / Meg_Anne_ratio\nweight_difference = Anne_cat_weight - Meg_cat_weight\nans = weight_difference",
            "# Python code, return ans\nMeg_cat_weight = 20\nMeg_to_Anne_ratio = 5 / 7\nAnne_cat_weight = Meg_cat_weight / Meg_to_Anne_ratio\ndifference_weight = Anne_cat_weight - Meg_cat_weight\nans = difference_weight"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "The ratio of boys to girls at the basketball game is 8:5. There are 30 girls. How many more boys are there than girls?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\nboys_ratio = 8\ngirls_ratio = 5\ngirls_num = 30\ntotal_ratio = boys_ratio + girls_ratio\nboys_num = (boys_ratio * girls_num) / girls_ratio\nmore_boys = boys_num - girls_num\nans = more_boys",
            "# Python code, return ans\nboys_ratio = 8\ngirls_ratio = 5\ngirls_num = 30\ntotal_ratio = boys_ratio + girls_ratio\nboys_num = (boys_ratio * girls_num) / girls_ratio\nmore_boys = boys_num - girls_num\nans = more_boys",
            "# Python code, return ans\nboys_ratio = 8\ngirls_ratio = 5\ngirls_num = 30\nboys_num = (boys_ratio * girls_num) / girls_ratio\nmore_boys = boys_num - girls_num\nans = more_boys"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "Craig and Brian looked for seashells. For every 9 seashells Craig found, Brian found 7. Craig found 54 seashells. How many fewer seashells did Brian find than Craig?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nCraig_seashells = 54\nCraig_to_Brian_ratio = 9 / 7\nBrian_seashells = int(Craig_seashells / Craig_to_Brian_ratio)\nfewer_seashells = Craig_seashells - Brian_seashells\nans = fewer_seashells",
            "# Python code, return ans\nCraig_seashells = 54\nCraig_to_Brian_ratio = 9 / 7\nBrian_seashells = int(Craig_seashells / Craig_to_Brian_ratio)\nfewer_seashells = Craig_seashells - Brian_seashells\nans = fewer_seashells",
            "# Python code, return ans\nCraig_seashells = 54\nCraig_to_Brian_ratio = 9 / 7\nBrian_seashells = int(Craig_seashells / Craig_to_Brian_ratio)\nfewer_seashells = Craig_seashells - Brian_seashells\nans = fewer_seashells"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "A recipe for fruit punch says to use 8 ounces of orange juice for every 3 ounces of grape juice. Nicky used 72 ounces of orange juice. How many fewer ounces of grape juice were used?",
        "answer": 45,
        "generated": [
            "# Python code, return ans\norange_juice = 72\norange_to_grape_ratio = 8 / 3\ngrape_juice = orange_juice / orange_to_grape_ratio\nfewer_ounces = orange_juice - grape_juice\nans = fewer_ounces",
            "# Python code, return ans\norange_juice = 72\ngrape_juice = (orange_juice * 3) / 8\nfewer_ounces = orange_juice - grape_juice\nans = fewer_ounces",
            "# Python code, return ans\norange_juice = 72\norange_juice_per_grape_juice = 8 / 3\ngrape_juice = orange_juice / orange_juice_per_grape_juice\nfewer_grape_juice = orange_juice - grape_juice\nans = fewer_grape_juice"
        ],
        "results": [
            45.0,
            45.0,
            45.0
        ],
        "result_counter": {
            "45.0": 3
        },
        "prediction": 45.0
    },
    {
        "question": "For every 3 sit-ups Peter does, Greg does 4. Peter did 24 sit-ups. How many sit-ups did Greg do?",
        "answer": 32,
        "generated": [
            "# Python code, return ans\nPeter_situps = 24\nGreg_situps = (4 * Peter_situps) / 3\nans = Greg_situps",
            "# Python code, return ans\nPeter_situps = 24\nGreg_situps = (4 * Peter_situps) / 3\nans = Greg_situps",
            "# Python code, return ans\nPeter_situps = 24\nGreg_situps = (4 * Peter_situps) / 3\nans = Greg_situps"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "Students at Memorial School voted for their favorite snack. For every 5 students that voted for candy, 2 students voted for popcorn. There were a total of 45 votes for candy. How many fewer students voted for popcorn than candy?",
        "answer": 27,
        "generated": [
            "# Python code, return ans\ncandy_votes = 45\ncandy_to_popcorn_ratio = 5 / 2\npopcorn_votes = int(candy_votes / candy_to_popcorn_ratio)\nfewer_votes = candy_votes - popcorn_votes\nans = fewer_votes",
            "# Python code, return ans\ncandy_votes = 45\npopcorn_votes = (2/5) * candy_votes\ndifference = candy_votes - popcorn_votes\nans = difference",
            "# Python code, return ans\ncandy_votes = 45\npopcorn_votes = (candy_votes / 5) * 2\nfewer_votes = candy_votes - popcorn_votes\nans = fewer_votes"
        ],
        "results": [
            27.0,
            27.0,
            27.0
        ],
        "result_counter": {
            "27.0": 3
        },
        "prediction": 27.0
    },
    {
        "question": "Steven and Megan shared some marbles in the ratio 3:4. Megan received 24 marbles. How many marbles did Steven get?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\nMegan_marbles = 24\nMegan_ratio = 4\nSteven_ratio = 3\ntotal_ratio = Megan_ratio + Steven_ratio\nSteven_marbles = (Megan_marbles * Steven_ratio) / Megan_ratio\nans = Steven_marbles",
            "# Python code, return ans\nMegan_marbles = 24\nMegan_ratio = 4\nSteven_ratio = 3\ntotal_ratio = Megan_ratio + Steven_ratio\none_ratio = Megan_marbles / Megan_ratio\nSteven_marbles = one_ratio * Steven_ratio\nans = Steven_marbles",
            "# Python code, return ans\nMegan_marbles = 24\nMegan_ratio = 4\nSteven_ratio = 3\ntotal_ratio = Megan_ratio + Steven_ratio\none_ratio_value = Megan_marbles / Megan_ratio\nSteven_marbles = one_ratio_value * Steven_ratio\nans = Steven_marbles"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "A fence post in Tina's garden is 4 feet tall. When she measured the fence post's shadow, she found that it was 12 feet long. A tree in Tina's yard had a shadow of 72 feet. How tall is the tree?",
        "answer": 24,
        "generated": [
            "# Python code, return ans\nfence_post_height = 4\nfence_post_shadow = 12\ntree_shadow = 72\ntree_height = (fence_post_height / fence_post_shadow) * tree_shadow\nans = tree_height",
            "# Python code, return ans\nfence_post_height = 4\nfence_post_shadow = 12\ntree_shadow = 72\nshadow_ratio = fence_post_shadow / fence_post_height\ntree_height = tree_shadow / shadow_ratio\nans = tree_height",
            "# Python code, return ans\nfence_post_height = 4\nfence_post_shadow = 12\ntree_shadow = 72\ntree_height = (fence_post_height * tree_shadow) / fence_post_shadow\nans = tree_height"
        ],
        "results": [
            24.0,
            24.0,
            24.0
        ],
        "result_counter": {
            "24.0": 3
        },
        "prediction": 24.0
    },
    {
        "question": "The ratio of Kate's stickers to Jenna's stickers is 7:4. Kate has 21 stickers. How many stickers does Jenna have?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nKate_stickers = 21\nKate_Jenna_ratio = 7 / 4\nJenna_stickers = int(Kate_stickers / Kate_Jenna_ratio * 4)\nans = Jenna_stickers",
            "# Python code, return ans\nKate_stickers = 21\nKate_Jenna_ratio = 7 / 4\nJenna_stickers = Kate_stickers / Kate_Jenna_ratio\nans = Jenna_stickers",
            "# Python code, return ans\nKate_stickers = 21\nKate_Jenna_ratio = 7 / 4\nJenna_stickers = Kate_stickers / Kate_Jenna_ratio\nans = Jenna_stickers"
        ],
        "results": [
            48.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "48.0": 1,
            "12.0": 2
        },
        "prediction": 12.0
    },
    {
        "question": "Chef Pillsbury's secret recipe requires 7 eggs for every 2 cups of flour. How many eggs will he need if he uses 8 cups of flour?",
        "answer": 28,
        "generated": [
            "# Python code, return ans\nflour_cups = 8\neggs_per_cup = 7 / 2\ntotal_eggs = flour_cups * eggs_per_cup\nans = total_eggs",
            "# Python code, return ans\nflour_cups = 8\neggs_per_flour = 7 / 2\neggs_needed = flour_cups * eggs_per_flour\nans = eggs_needed",
            "# Python code, return ans\nflour_cups = 8\neggs_per_cup = 7 / 2\ntotal_eggs = flour_cups * eggs_per_cup\nans = total_eggs"
        ],
        "results": [
            28.0,
            28.0,
            28.0
        ],
        "result_counter": {
            "28.0": 3
        },
        "prediction": 28.0
    },
    {
        "question": "Andrew and Jeffrey walk together. When the ratio of Andrew's steps to Jeffrey's steps was 3:4. If Andrew walks 150 steps, how many steps does Jeffrey walk?",
        "answer": 200,
        "generated": [
            "# Python code, return ans\nAndrew_steps = 150\nratio_Andrew = 3\nratio_Jeffrey = 4\nJeffrey_steps = (Andrew_steps * ratio_Jeffrey) / ratio_Andrew\nans = Jeffrey_steps",
            "# Python code, return ans\nAndrew_steps = 150\nratio_Andrew = 3\nratio_Jeffrey = 4\nJeffrey_steps = (Andrew_steps * ratio_Jeffrey) / ratio_Andrew\nans = Jeffrey_steps",
            "# Python code, return ans\nAndrew_steps = 150\nratio_Andrew = 3\nratio_Jeffrey = 4\nJeffrey_steps = (Andrew_steps * ratio_Jeffrey) / ratio_Andrew\nans = Jeffrey_steps"
        ],
        "results": [
            200.0,
            200.0,
            200.0
        ],
        "result_counter": {
            "200.0": 3
        },
        "prediction": 200.0
    },
    {
        "question": "The ratio of the length of Joey's rope to Chad's rope is 8:3. Joey's rope is 56 cm long. How long is Chad's rope?",
        "answer": 21,
        "generated": [
            "# Python code, return ans\nJoey_rope = 56\nratio_Joey_to_Chad = 8 / 3\nChad_rope = Joey_rope * (3 / 8)\nans = Chad_rope",
            "# Python code, return ans\nJoey_rope_length = 56\nratio_Joey_to_Chad = 8 / 3\nChad_rope_length = Joey_rope_length / ratio_Joey_to_Chad\nans = Chad_rope_length",
            "# Python code, return ans\nJoey_rope = 56\nratio_Joey = 8\nratio_Chad = 3\nChad_rope = (Joey_rope * ratio_Chad) / ratio_Joey\nans = Chad_rope"
        ],
        "results": [
            21.0,
            21.0,
            21.0
        ],
        "result_counter": {
            "21.0": 3
        },
        "prediction": 21.0
    },
    {
        "question": "Two numbers are in the ratio 3:8. Their sum is 44. What is the difference between the two numbers?",
        "answer": 20,
        "generated": [
            "# Python code, return ans\ntotal_ratio = 3 + 8\nratio_sum = 44\none_ratio_value = ratio_sum / total_ratio\nfirst_number = 3 * one_ratio_value\nsecond_number = 8 * one_ratio_value\ndifference = abs(first_number - second_number)\nans = difference",
            "# Python code, return ans\nratio1 = 3\nratio2 = 8\ntotal_sum = 44\ntotal_ratio = ratio1 + ratio2\none_unit = total_sum / total_ratio\nnumber1 = one_unit * ratio1\nnumber2 = one_unit * ratio2\ndifference = number2 - number1\nans = difference",
            "# Python code, return ans\nratio1 = 3\nratio2 = 8\ntotal_ratio = ratio1 + ratio2\nsum_of_numbers = 44\none_ratio_value = sum_of_numbers / total_ratio\n\nnumber1 = one_ratio_value * ratio1\nnumber2 = one_ratio_value * ratio2\ndifference = number2 - number1\nans = difference"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "Ben and Matt received votes in the ratio 2:3. The total number of votes cast was 60. How many votes did Ben get?",
        "answer": 24,
        "generated": [
            "# Python code, return ans\ntotal_votes = 60\nratio_Ben = 2\nratio_Matt = 3\nratio_total = ratio_Ben + ratio_Matt\nBen_votes = (ratio_Ben / ratio_total) * total_votes\nans = Ben_votes",
            "# Python code, return ans\ntotal_votes = 60\nBen_votes = (2 / (2 + 3)) * total_votes\nans = Ben_votes",
            "# Python code, return ans\ntotal_votes = 60\nratio_Ben = 2\nratio_Matt = 3\nratio_total = ratio_Ben + ratio_Matt\nBen_votes = (ratio_Ben / ratio_total) * total_votes\nans = Ben_votes"
        ],
        "results": [
            24.0,
            24.0,
            24.0
        ],
        "result_counter": {
            "24.0": 3
        },
        "prediction": 24.0
    },
    {
        "question": "Terry cut a rope 35 inches long into two pieces in the ratio 3:4. What is the length of the longer piece?",
        "answer": 20,
        "generated": [
            "# Python code, return ans\ntotal_length = 35\ntotal_ratio = 3 + 4\nratio_longer_piece = 4\nlength_longer_piece = (total_length * ratio_longer_piece) / total_ratio\nans = length_longer_piece",
            "# Python code, return ans\ntotal_length = 35\nratio_sum = 3 + 4\nlength_per_ratio = total_length / ratio_sum\nlonger_piece = length_per_ratio * 4\nans = longer_piece",
            "# Python code, return ans\ntotal_length = 35\nratio1 = 3\nratio2 = 4\ntotal_ratio = ratio1 + ratio2\nlonger_piece = (ratio2 * total_length) / total_ratio\nans = longer_piece"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "Lavender is making punch for the school dance. She mixes 3 parts lemonade with 5 parts cranberry juice. She wants to fill a 72 cup bowl. How many more cups of cranberry juice will she need than lemonade?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\ntotal_parts = 3 + 5\ntotal_cups = 72\none_part = total_cups / total_parts\nlemonade_cups = 3 * one_part\ncranberry_cups = 5 * one_part\nmore_cranberry = cranberry_cups - lemonade_cups\nans = more_cranberry",
            "# Python code, return ans\ntotal_parts = 3 + 5\ntotal_cups = 72\nlemonade_parts = 3\ncranberry_parts = 5\n\nlemonade_cups = (total_cups / total_parts) * lemonade_parts\ncranberry_cups = (total_cups / total_parts) * cranberry_parts\n\nmore_cranberry_needed = cranberry_cups - lemonade_cups\nans = more_cranberry_needed",
            "# Python code, return ans\ntotal_parts = 3 + 5\nlemonade_part = 3\ncranberry_part = 5\ntotal_cups = 72\nlemonade_cups = (lemonade_part / total_parts) * total_cups\ncranberry_cups = (cranberry_part / total_parts) * total_cups\nmore_cranberry = cranberry_cups - lemonade_cups\nans = more_cranberry"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "Two numbers are in the ratio 5:7. The difference between the numbers is 12. What is the larger number?",
        "answer": 42,
        "generated": [
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x')\ny = Symbol('y')\n\n# x/y = 5/7\n# y - x = 12\neq1 = x - (5/7) * y\neq2 = y - x - 12\n\nsolutions = solve((eq1, eq2), (x, y))\nlarger_number = solutions[y]\nans = larger_number\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x')\ny = Symbol('y')\n\n# equation 1: x/y = 5/7\nequation1 = x - (5/7)*y\n\n# equation 2: x - y = 12\nequation2 = x - y - 12\n\n# solving the equations\nsolution = solve((equation1, equation2), (x, y))\n\nlarger_number = max(solution[x], solution[y])\nans = larger_number\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x')\ny = Symbol('y')\n\n# Given ratio 5:7\nratio_equation = 5*y - 7*x\n\n# Given difference between the numbers is 12\ndifference_equation = y - x - 12\n\n# Solving the equations\nsolutions = solve((ratio_equation, difference_equation), (x, y))\n\n# The larger number is y\nans = solutions[y]\nans"
        ],
        "results": [
            42.0,
            -30.0,
            42.0
        ],
        "result_counter": {
            "42.0": 2,
            "-30.0": 1
        },
        "prediction": 42.0
    },
    {
        "question": "The ratio of the cost of a DVD player to the cost of a movie is 9:2. A DVD player costs $63 more than a movie. What is the cost of a DVD player?",
        "answer": 81,
        "generated": [
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x') # cost of DVD player\ny = Symbol('y') # cost of movie\n\n# equation 1: x = 9y/2\nequation1 = x - 9*y/2\n\n# equation 2: x = y + 63\nequation2 = x - y - 63\n\n# solving the equations\nsolution = solve((equation1, equation2), (x, y))\n\nans = solution[x]",
            "# Python code, return ans\nratio_dvd_player = 9\nratio_movie = 2\ndifference_cost = 63\ncost_dvd_player = (difference_cost / (ratio_dvd_player - ratio_movie)) * ratio_dvd_player\nans = cost_dvd_player",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x')\ny = Symbol('y')\n\neq1 = x - 9 * y\neq2 = x - y - 63\n\n# Solving equations\nsol = solve((eq1, eq2), (x, y))\n\ncost_of_dvd_player = sol[x]\nans = cost_of_dvd_player\nans"
        ],
        "results": [
            81.0,
            81.0,
            70.875
        ],
        "result_counter": {
            "81.0": 2,
            "70.875": 1
        },
        "prediction": 81.0
    },
    {
        "question": "Armand cuts a piece of wire into two smaller pieces that are in a ratio 7:5. The shorter piece is 40 cm. What was the length of the original piece of wire?",
        "answer": 96,
        "generated": [
            "# Python code, return ans\nshorter_piece = 40\nshorter_piece_ratio = 5\nlonger_piece_ratio = 7\ntotal_ratio = shorter_piece_ratio + longer_piece_ratio\noriginal_length = (shorter_piece / shorter_piece_ratio) * total_ratio\nans = original_length",
            "# Python code, return ans\nshorter_piece = 40\nshorter_piece_ratio = 5\nlonger_piece_ratio = 7\ntotal_ratio = shorter_piece_ratio + longer_piece_ratio\noriginal_length = (shorter_piece / shorter_piece_ratio) * total_ratio\nans = original_length",
            "# Python code, return ans\nshorter_piece = 40\nshorter_piece_ratio = 5\ntotal_ratio = 7 + 5\noriginal_length = (shorter_piece / shorter_piece_ratio) * total_ratio\nans = original_length"
        ],
        "results": [
            96.0,
            96.0,
            96.0
        ],
        "result_counter": {
            "96.0": 3
        },
        "prediction": 96.0
    },
    {
        "question": "Juan purchased 6 soccer jerseys for $105, how much would 12 soccer jerseys cost?",
        "answer": 210,
        "generated": [
            "# Python code, return ans\njerseys_purchased = 6\ncost_for_6_jerseys = 105\ncost_per_jersey = cost_for_6_jerseys / jerseys_purchased\njerseys_to_purchase = 12\ncost_for_12_jerseys = jerseys_to_purchase * cost_per_jersey\nans = cost_for_12_jerseys",
            "# Python code, return ans\nprice_for_6_jerseys = 105\nprice_for_1_jersey = price_for_6_jerseys / 6\nprice_for_12_jerseys = price_for_1_jersey * 12\nans = price_for_12_jerseys",
            "# Python code, return ans\njerseys_purchased = 6\ncost_of_jerseys = 105\ncost_per_jersey = cost_of_jerseys / jerseys_purchased\ndesired_jerseys = 12\ntotal_cost = desired_jerseys * cost_per_jersey\nans = total_cost"
        ],
        "results": [
            210.0,
            210.0,
            210.0
        ],
        "result_counter": {
            "210.0": 3
        },
        "prediction": 210.0
    },
    {
        "question": "In 3 seconds, Kevin can dribble a basketball 13 times. If Kevin dribbles at this same rate for 27 seconds, how many times will he dribble the basketball?",
        "answer": 117,
        "generated": [
            "# Python code, return ans\ndribble_per_second = 13 / 3\ntime = 27\ntotal_dribble = dribble_per_second * time\nans = total_dribble",
            "# Python code, return ans\ndribble_per_3_seconds = 13\ntotal_seconds = 27\ndribble_rate = dribble_per_3_seconds / 3\ntotal_dribbles = dribble_rate * total_seconds\nans = total_dribbles",
            "# Python code, return ans\ndribble_per_second = 13 / 3\ntime = 27\ntotal_dribble = dribble_per_second * time\nans = total_dribble"
        ],
        "results": [
            116.99999999999999,
            116.99999999999999,
            116.99999999999999
        ],
        "result_counter": {
            "116.99999999999999": 3
        },
        "prediction": 116.99999999999999
    },
    {
        "question": "Yoda Soda is the intergalactic party drink that will have all your friends saying, \"Mmmmmm, good this is!\" You are throwing a party, and you need 5 liters of Yoda Soda for every 12 guests. If you have 36 guests, how many liters of Yoda Soda do you need?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\nguests = 36\nyoda_soda_per_guest = 5 / 12\ntotal_yoda_soda = guests * yoda_soda_per_guest\nans = total_yoda_soda",
            "# Python code, return ans\nguests = 36\nyoda_soda_per_guest = 5 / 12\ntotal_yoda_soda = guests * yoda_soda_per_guest\nans = total_yoda_soda",
            "# Python code, return ans\nguests = 36\nyoda_soda_per_guest = 5 / 12\ntotal_yoda_soda = guests * yoda_soda_per_guest\nans = total_yoda_soda"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "Cory made 4500 g of candy. He saved 1 kg to eat later. He divided the rest of the candy over 7 bowls to serve at his party. How many grams of candy did Cory serve in each bowl?",
        "answer": 500,
        "generated": [
            "# Python code, return ans\ncandy_total = 4500\ncandy_saved = 1000\ncandy_to_serve = candy_total - candy_saved\nbowl_num = 7\ncandy_per_bowl = candy_to_serve // bowl_num\nans = candy_per_bowl",
            "# Python code, return ans\ncandy_total = 4500\ncandy_saved = 1000\ncandy_for_party = candy_total - candy_saved\nbowls = 7\ncandy_per_bowl = candy_for_party // bowls\nans = candy_per_bowl",
            "# Python code, return ans\ncandy_total = 4500\ncandy_saved = 1000\ncandy_to_serve = candy_total - candy_saved\nbowls = 7\ncandy_per_bowl = candy_to_serve // bowls\nans = candy_per_bowl"
        ],
        "results": [
            500.0,
            500.0,
            500.0
        ],
        "result_counter": {
            "500.0": 3
        },
        "prediction": 500.0
    },
    {
        "question": "Kevin started his science test at 2:34 p.m. and finished the test 75 minutes later. Kevin has football practice at 4:15 p.m. How much time did Kevin have between the end of the test and the beginning of football practice?",
        "answer": 26,
        "generated": [
            "# Python code, return ans\ntest_start_time = 2 * 60 + 34  # in minutes\ntest_duration = 75\ntest_end_time = test_start_time + test_duration\nfootball_start_time = 4 * 60 + 15  # in minutes\ntime_between = football_start_time - test_end_time\nans = time_between",
            "# Python code, return ans\ntest_start_time = 2 * 60 + 34  # Convert to minutes\ntest_duration = 75\ntest_end_time = test_start_time + test_duration\n\npractice_start_time = 4 * 60 + 15  # Convert to minutes\n\ntime_between = practice_start_time - test_end_time\nans = time_between",
            "# Python code, return ans\ntest_start_time = 134 # 2:34 pm in minutes\ntest_duration = 75\ntest_end_time = test_start_time + test_duration\nfootball_practice_start_time = 255 # 4:15 pm in minutes\ntime_between = football_practice_start_time - test_end_time\nans = time_between"
        ],
        "results": [
            26.0,
            26.0,
            46.0
        ],
        "result_counter": {
            "26.0": 2,
            "46.0": 1
        },
        "prediction": 26.0
    },
    {
        "question": "Coach Kelly brought 32 L of water to the football game, and she divided the water equally between 8 coolers. How many milliliters of water did Coach Kelly put in each cooler?",
        "answer": 4000,
        "generated": [
            "# Python code, return ans\nwater_total = 32 * 1000  # Convert liters to milliliters\ncooler_num = 8\nwater_per_cooler = water_total / cooler_num\nans = water_per_cooler",
            "# Python code, return ans\nwater_liters = 32\ncoolers = 8\nwater_per_cooler_liters = water_liters / coolers\nwater_per_cooler_milliliters = water_per_cooler_liters * 1000\nans = water_per_cooler_milliliters",
            "# Python code, return ans\nwater_liters = 32\ncoolers = 8\nwater_per_cooler_liters = water_liters / coolers\nwater_per_cooler_milliliters = water_per_cooler_liters * 1000\nans = water_per_cooler_milliliters"
        ],
        "results": [
            4000.0,
            4000.0,
            4000.0
        ],
        "result_counter": {
            "4000.0": 3
        },
        "prediction": 4000.0
    },
    {
        "question": "The library is 14.2 km away from Daniel's apartment. The bus takes Daniel 11.15 km of the way to the library. He has to walk the remaining distance. How many meters does Daniel have to walk?",
        "answer": 3050,
        "generated": [
            "# Python code, return ans\nlibrary_distance = 14.2\nbus_distance = 11.15\nwalk_distance = library_distance - bus_distance\nans = walk_distance * 1000",
            "# Python code, return ans\nlibrary_distance = 14.2\nbus_distance = 11.15\nwalk_distance = library_distance - bus_distance\nans = walk_distance * 1000",
            "# Python code, return ans\nlibrary_distance = 14.2\nbus_distance = 11.15\nwalk_distance = library_distance - bus_distance\nwalk_distance_meters = walk_distance * 1000\nans = walk_distance_meters"
        ],
        "results": [
            3049.999999999999,
            3049.999999999999,
            3049.999999999999
        ],
        "result_counter": {
            "3049.999999999999": 3
        },
        "prediction": 3049.999999999999
    },
    {
        "question": "Lisa went on a 52 km. She divided the distance traveled evenly over 4 days. How many meters did Lisa walk each day?",
        "answer": 13000,
        "generated": [
            "# Python code, return ans\ntotal_distance_km = 52\ndays = 4\ndistance_per_day_km = total_distance_km / days\ndistance_per_day_m = distance_per_day_km * 1000\nans = distance_per_day_m",
            "# Python code, return ans\ntotal_distance_km = 52\ndays = 4\ndistance_per_day_km = total_distance_km / days\ndistance_per_day_m = distance_per_day_km * 1000\nans = distance_per_day_m",
            "# Python code, return ans\ndistance_km = 52\ndays = 4\ndistance_per_day_km = distance_km / days\ndistance_per_day_m = distance_per_day_km * 1000\nans = distance_per_day_m"
        ],
        "results": [
            13000.0,
            13000.0,
            13000.0
        ],
        "result_counter": {
            "13000.0": 3
        },
        "prediction": 13000.0
    },
    {
        "question": "A carpenter had a board that was 5.28 m long. She used her circular saw to cut 9 cm off the end of the board. How many centimeters long was the board after the carpenter cut it?",
        "answer": 519,
        "generated": [
            "# Python code, return ans\nboard_length_m = 5.28\nboard_length_cm = board_length_m * 100\ncut_length = 9\nboard_after_cut = board_length_cm - cut_length\nans = board_after_cut",
            "# Python code, return ans\nboard_length_m = 5.28\nboard_length_cm = board_length_m * 100\ncut_length = 9\nnew_board_length = board_length_cm - cut_length\nans = new_board_length",
            "# Python code, return ans\nboard_length_m = 5.28\nboard_length_cm = board_length_m * 100\ncut_length_cm = 9\nnew_board_length_cm = board_length_cm - cut_length_cm\nans = new_board_length_cm"
        ],
        "results": [
            519.0,
            519.0,
            519.0
        ],
        "result_counter": {
            "519.0": 3
        },
        "prediction": 519.0
    },
    {
        "question": "Abigail's mom said she will be home from work in 65 minutes. It is 4:27 p.m., and Abigail has dance practice at 6:00 p.m. How much time will Abigail have between the time that her mom gets home from work and the beginning of dance practice?",
        "answer": 28,
        "generated": [
            "# Python code, return ans\nmom_arrival_minutes = 65\ncurrent_time = (4 * 60) + 27  # Convert 4:27 p.m. to minutes\ndance_practice_time = (6 * 60)  # Convert 6:00 p.m. to minutes\nmom_arrival_time = current_time + mom_arrival_minutes\ntime_before_dance = dance_practice_time - mom_arrival_time\nans = time_before_dance",
            "# Python code, return ans\nmom_arrival_in_minutes = 65\ncurrent_time = 4 * 60 + 27 # Convert 4:27 p.m. to minutes\ndance_practice_time = 6 * 60 # Convert 6:00 p.m. to minutes\nmom_arrival_time = current_time + mom_arrival_in_minutes\ntime_between = dance_practice_time - mom_arrival_time\nans = time_between",
            "# Python code, return ans\nmom_arrival_minutes = 65\ncurrent_time = 4 * 60 + 27  # Convert 4:27 p.m. to minutes\ndance_practice_time = 6 * 60  # Convert 6:00 p.m. to minutes\nmom_arrival_time = current_time + mom_arrival_minutes\ntime_between = dance_practice_time - mom_arrival_time\nans = time_between"
        ],
        "results": [
            28.0,
            28.0,
            28.0
        ],
        "result_counter": {
            "28.0": 3
        },
        "prediction": 28.0
    },
    {
        "question": "Noah made 12 kg of trail mix for his family's hiking trip. His family ate 8600 g of the trail mix on the hiking trip. How many grams of trail mix did Noah have left?",
        "answer": 3400,
        "generated": [
            "# Python code, return ans\ntrail_mix_total = 12 * 1000  # Convert kg to grams\ntrail_mix_eaten = 8600\ntrail_mix_left = trail_mix_total - trail_mix_eaten\nans = trail_mix_left",
            "# Python code, return ans\ntrail_mix_total = 12 * 1000  # Convert kg to grams\ntrail_mix_eaten = 8600\ntrail_mix_left = trail_mix_total - trail_mix_eaten\nans = trail_mix_left",
            "# Python code, return ans\ntrail_mix_total = 12 * 1000  # Convert kg to grams\ntrail_mix_eaten = 8600\ntrail_mix_left = trail_mix_total - trail_mix_eaten\nans = trail_mix_left"
        ],
        "results": [
            3400.0,
            3400.0,
            3400.0
        ],
        "result_counter": {
            "3400.0": 3
        },
        "prediction": 3400.0
    },
    {
        "question": "Sweet Time Bakery just opened and is increasing the number of items they bake. For example, the bakery made 19 carrot cakes in October, 21 carrot cakes in November, 23 carrot cakes in December, and 25 carrot cakes in January. If this pattern continues, how many carrot cakes will the bakery make in February?",
        "answer": 27,
        "generated": [
            "# Python code, return ans\ncarrot_cakes_october = 19\ncarrot_cakes_november = 21\ncarrot_cakes_december = 23\ncarrot_cakes_january = 25\npattern_increase = 2\ncarrot_cakes_february = carrot_cakes_january + pattern_increase\nans = carrot_cakes_february",
            "# Python code, return ans\ncarrot_cake_Oct = 19\ncarrot_cake_Nov = 21\ncarrot_cake_Dec = 23\ncarrot_cake_Jan = 25\ncarrot_cake_Feb = carrot_cake_Jan + 2\nans = carrot_cake_Feb",
            "# Python code, return ans\ncarrot_cakes_January = 25\ncarrot_cakes_February = carrot_cakes_January + 2\nans = carrot_cakes_February"
        ],
        "results": [
            27.0,
            27.0,
            27.0
        ],
        "result_counter": {
            "27.0": 3
        },
        "prediction": 27.0
    },
    {
        "question": "Jared is reviewing his cell phone bill. When he gets to the text message part, he notices that he sent 1 text message in November, 2 text messages in December, 4 text messages in January, and 8 text messages in February. If this pattern continues, how many text messages will Jared send in March?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\ntext_Nov = 1\ntext_Dec = 2\ntext_Jan = 4\ntext_Feb = 8\ntext_March = text_Feb * 2\nans = text_March",
            "# Python code, return ans\ntext_November = 1\ntext_December = 2\ntext_January = 4\ntext_February = 8\ntext_March = text_February * 2\nans = text_March",
            "# Python code, return ans\ntext_messages_November = 1\ntext_messages_December = 2\ntext_messages_January = 4\ntext_messages_February = 8\ntext_messages_March = text_messages_February * 2\nans = text_messages_March"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "Malia is picking berries in the berry patch. She picks 3 berries from the first bush, 4 berries from the second bush, 7 berries from the third bush, and 12 berries from the fourth bush. If this pattern continues, how many berries will Malia pick from the fifth bush?",
        "answer": 19,
        "generated": [
            "# Python code, return ans\nfirst_bush = 3\nsecond_bush = 4\nthird_bush = 7\nfourth_bush = 12\n\ndifference_1 = second_bush - first_bush\ndifference_2 = third_bush - second_bush\ndifference_3 = fourth_bush - third_bush\n\nnext_difference = difference_3 + (difference_3 - difference_2)\nfifth_bush = fourth_bush + next_difference\nans = fifth_bush",
            "# Python code, return ans\nfirst_bush = 3\nsecond_bush = 4\nthird_bush = 7\nfourth_bush = 12\nfifth_bush = fourth_bush + (fourth_bush - third_bush)\nans = fifth_bush",
            "# Python code, return ans\nfirst_bush = 3\nsecond_bush = 4\nthird_bush = 7\nfourth_bush = 12\n\ndifference_1 = second_bush - first_bush\ndifference_2 = third_bush - second_bush\ndifference_3 = fourth_bush - third_bush\n\nnext_difference = difference_3 + (difference_3 - difference_2)\nfifth_bush = fourth_bush + next_difference\nans = fifth_bush"
        ],
        "results": [
            19.0,
            17.0,
            19.0
        ],
        "result_counter": {
            "19.0": 2,
            "17.0": 1
        },
        "prediction": 19.0
    },
    {
        "question": "Vivian sent 5 pieces of mail in April, 10 pieces of mail in May, 20 pieces of mail in June, and 40 pieces of mail in July. If this pattern continues, how many pieces of mail will Vivian send in August?",
        "answer": 80,
        "generated": [
            "# Python code, return ans\nmail_April = 5\nmail_May = 10\nmail_June = 20\nmail_July = 40\nmail_August = mail_July * 2\nans = mail_August",
            "# Python code, return ans\nmail_April = 5\nmail_May = 10\nmail_June = 20\nmail_July = 40\nmail_August = mail_July * 2\nans = mail_August",
            "# Python code, return ans\nmail_April = 5\nmail_May = 10\nmail_June = 20\nmail_July = 40\nmail_August = mail_July * 2\nans = mail_August"
        ],
        "results": [
            80.0,
            80.0,
            80.0
        ],
        "result_counter": {
            "80.0": 3
        },
        "prediction": 80.0
    },
    {
        "question": "Warren ran 1 lap on Wednesday, 2 laps on Thursday, 4 laps on Friday, 8 laps on Saturday, and 16 laps on Sunday. If this pattern continues, how many laps will Warren run on Monday?",
        "answer": 32,
        "generated": [
            "# Python code, return ans\nlaps_Sunday = 16\nlaps_Monday = laps_Sunday * 2\nans = laps_Monday",
            "# Python code, return ans\nlaps_Sunday = 16\nlaps_Monday = laps_Sunday * 2\nans = laps_Monday",
            "# Python code, return ans\nlaps_Sunday = 16\nlaps_Monday = laps_Sunday * 2\nans = laps_Monday"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "Andrew found some empty bins to put cans into for recycling. He put 2 empty cans in the first bin, 4 empty cans in the second bin, 7 empty cans in the third bin, 11 empty cans in the fourth bin, and 16 empty cans in the fifth bin. If this pattern continues, how many empty cans will Andrew put in the sixth bin?",
        "answer": 22,
        "generated": [
            "# Python code, return ans\nfirst_bin = 2\nsecond_bin = 4\nthird_bin = 7\nfourth_bin = 11\nfifth_bin = 16\n\ndifference_1 = second_bin - first_bin\ndifference_2 = third_bin - second_bin\ndifference_3 = fourth_bin - third_bin\ndifference_4 = fifth_bin - fourth_bin\n\nnext_difference = difference_4 + (difference_4 - difference_3)\nsixth_bin = fifth_bin + next_difference\nans = sixth_bin",
            "# Python code, return ans\ncans_in_bin = [2, 4, 7, 11, 16]\ndifference = [cans_in_bin[i+1] - cans_in_bin[i] for i in range(len(cans_in_bin)-1)]\nnext_difference = difference[-1] + (difference[-1] - difference[-2])\ncans_in_sixth_bin = cans_in_bin[-1] + next_difference\nans = cans_in_sixth_bin",
            "# Python code, return ans\nfirst_bin = 2\nsecond_bin = 4\nthird_bin = 7\nfourth_bin = 11\nfifth_bin = 16\n\ndifference_first_second = second_bin - first_bin\ndifference_second_third = third_bin - second_bin\ndifference_third_fourth = fourth_bin - third_bin\ndifference_fourth_fifth = fifth_bin - fourth_bin\n\ndifference_fifth_sixth = difference_fourth_fifth + (difference_fourth_fifth - difference_third_fourth)\nsixth_bin = fifth_bin + difference_fifth_sixth\nans = sixth_bin"
        ],
        "results": [
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 2
        },
        "prediction": 22.0
    },
    {
        "question": "Tess is writing a poem. She writes 23 words on the first line, 26 words on the second line, 29 words on the third line, 32 words on the fourth line, and 35 words on the fifth line. If this pattern continues, how many words will Tess write on the sixth line?",
        "answer": 38,
        "generated": [
            "# Python code, return ans\nwords_line1 = 23\nwords_line2 = 26\nwords_line3 = 29\nwords_line4 = 32\nwords_line5 = 35\ndifference = words_line2 - words_line1\nwords_line6 = words_line5 + difference\nans = words_line6",
            "# Python code, return ans\nwords_on_fifth_line = 35\nwords_on_sixth_line = words_on_fifth_line + 3\nans = words_on_sixth_line",
            "# Python code, return ans\nwords_line1 = 23\nwords_line2 = 26\nwords_line3 = 29\nwords_line4 = 32\nwords_line5 = 35\n\ndifference = words_line2 - words_line1\nwords_line6 = words_line5 + difference\nans = words_line6"
        ],
        "results": [
            38.0,
            38.0,
            38.0
        ],
        "result_counter": {
            "38.0": 3
        },
        "prediction": 38.0
    },
    {
        "question": "Carmen did 4 sit-ups on Sunday, 8 sit-ups on Monday, 16 sit-ups on Tuesday, 32 sit-ups on Wednesday, and 64 sit-ups on Thursday. If this pattern continues, how many sit-ups will Carmen do on Friday?",
        "answer": 128,
        "generated": [
            "# Python code, return ans\nsit_ups_Sunday = 4\nsit_ups_Monday = 8\nsit_ups_Tuesday = 16\nsit_ups_Wednesday = 32\nsit_ups_Thursday = 64\nsit_ups_Friday = sit_ups_Thursday * 2\nans = sit_ups_Friday",
            "# Python code, return ans\nsit_ups_thursday = 64\nsit_ups_friday = sit_ups_thursday * 2\nans = sit_ups_friday",
            "# Python code, return ans\nsit_ups_Sunday = 4\nsit_ups_Monday = 8\nsit_ups_Tuesday = 16\nsit_ups_Wednesday = 32\nsit_ups_Thursday = 64\nsit_ups_Friday = sit_ups_Thursday * 2\nans = sit_ups_Friday"
        ],
        "results": [
            128.0,
            128.0,
            128.0
        ],
        "result_counter": {
            "128.0": 3
        },
        "prediction": 128.0
    },
    {
        "question": "Ava bagged the plastic bottles after a recycling drive. She placed 45 bottles in the first bag, 53 bottles in the second bag, 61 bottles in the third bag, and 69 bottles in the fourth bag. If this pattern continues, how many plastic bottles will Ava put in the fifth bag?",
        "answer": 77,
        "generated": [
            "# Python code, return ans\nfirst_bag = 45\nsecond_bag = 53\nthird_bag = 61\nfourth_bag = 69\n\ndifference = second_bag - first_bag\nfifth_bag = fourth_bag + difference\nans = fifth_bag",
            "# Python code, return ans\nfirst_bag = 45\nsecond_bag = 53\nthird_bag = 61\nfourth_bag = 69\n\ndifference_first_second = second_bag - first_bag\ndifference_second_third = third_bag - second_bag\ndifference_third_fourth = fourth_bag - third_bag\n\ndifference_increase = difference_second_third - difference_first_second\n\nfifth_bag_difference = difference_third_fourth + difference_increase\nfifth_bag = fourth_bag + fifth_bag_difference\nans = fifth_bag",
            "# Python code, return ans\nfirst_bag = 45\nsecond_bag = 53\nthird_bag = 61\nfourth_bag = 69\n\ndifference_1 = second_bag - first_bag\ndifference_2 = third_bag - second_bag\ndifference_3 = fourth_bag - third_bag\n\nfifth_bag = fourth_bag + difference_3\nans = fifth_bag"
        ],
        "results": [
            77.0,
            77.0,
            77.0
        ],
        "result_counter": {
            "77.0": 3
        },
        "prediction": 77.0
    },
    {
        "question": "While organizing his DVD collection, Seth put 2 DVDs on the first rack, 4 DVDs on the second rack, 8 DVDs on the third rack, 16 DVDs on the fourth rack, and 32 DVDs on the fifth rack. If this pattern continues, how many DVDs will Seth put on the sixth rack?",
        "answer": 64,
        "generated": [
            "# Python code, return ans\nDVD_sixth_rack = 32 * 2\nans = DVD_sixth_rack",
            "# Python code, return ans\nsixth_rack = 32 * 2\nans = sixth_rack",
            "# Python code, return ans\nDVDs_on_fifth_rack = 32\nDVDs_on_sixth_rack = DVDs_on_fifth_rack * 2\nans = DVDs_on_sixth_rack"
        ],
        "results": [
            64.0,
            64.0,
            64.0
        ],
        "result_counter": {
            "64.0": 3
        },
        "prediction": 64.0
    },
    {
        "question": "The teacher is handing out note cards to her students. She gave 3 note cards to the first student, 12 note cards to the second student, 48 note cards to the third student, and 192 note cards to the fourth student. If this pattern continues, how many note cards will the teacher give to the fifth student?",
        "answer": 768,
        "generated": [
            "# Python code, return ans\nnote_cards_1 = 3\nnote_cards_2 = 12\nnote_cards_3 = 48\nnote_cards_4 = 192\n\nnote_cards_5 = note_cards_4 * 4\nans = note_cards_5\nans",
            "# Python code, return ans\nnote_cards_1 = 3\nnote_cards_2 = 12\nnote_cards_3 = 48\nnote_cards_4 = 192\n\nnote_cards_5 = note_cards_4 * 4\nans = note_cards_5",
            "# Python code, return ans\nnote_cards_1st = 3\nnote_cards_2nd = 12\nnote_cards_3rd = 48\nnote_cards_4th = 192\n\n# The pattern is multiplying by 4 each time\nnote_cards_5th = note_cards_4th * 4\nans = note_cards_5th"
        ],
        "results": [
            768.0,
            768.0,
            768.0
        ],
        "result_counter": {
            "768.0": 3
        },
        "prediction": 768.0
    },
    {
        "question": "While organizing the magazines at the doctor's office, Blanca put 3 magazines in the first pile, 4 magazines in the second pile, 6 magazines in the third pile, and 9 magazines in the fourth pile. If this pattern continues, how many magazines will Blanca put in the fifth pile?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\npile1 = 3\npile2 = 4\npile3 = 6\npile4 = 9\npile5 = pile4 + (pile4 - pile3)\nans = pile5",
            "# Python code, return ans\npile1 = 3\npile2 = 4\npile3 = 6\npile4 = 9\npile5 = pile4 + (pile4 - pile3)\nans = pile5",
            "# Python code, return ans\npile1 = 3\npile2 = 4\npile3 = 6\npile4 = 9\n\ndifference1 = pile2 - pile1\ndifference2 = pile3 - pile2\ndifference3 = pile4 - pile3\n\nnext_difference = difference3 + (difference3 - difference2)\npile5 = pile4 + next_difference\nans = pile5"
        ],
        "results": [
            12.0,
            12.0,
            13.0
        ],
        "result_counter": {
            "12.0": 2,
            "13.0": 1
        },
        "prediction": 12.0
    },
    {
        "question": "While sorting some buttons, Malia put 1 button in the first box, 3 buttons in the second box, 9 buttons in the third box, 27 buttons in the fourth box, and 81 buttons in the fifth box. If this pattern continues, how many buttons will Malia put in the sixth box?",
        "answer": 243,
        "generated": [
            "# Python code, return ans\nbox1 = 1\nbox2 = 3\nbox3 = 9\nbox4 = 27\nbox5 = 81\nbox6 = box5 * 3\nans = box6",
            "# Python code, return ans\nbuttons_in_fifth_box = 81\nbuttons_in_sixth_box = buttons_in_fifth_box * 3\nans = buttons_in_sixth_box",
            "# Python code, return ans\nbuttons_in_fifth_box = 81\nbuttons_in_sixth_box = buttons_in_fifth_box * 3\nans = buttons_in_sixth_box"
        ],
        "results": [
            243.0,
            243.0,
            243.0
        ],
        "result_counter": {
            "243.0": 3
        },
        "prediction": 243.0
    },
    {
        "question": "Christine is dividing cherries among some bowls. She put 35 cherries in the first bowl, 40 cherries in the second bowl, 45 cherries in the third bowl, 50 cherries in the fourth bowl, and 55 cherries in the fifth bowl. If this pattern continues, how many cherries will Christine put in the sixth bowl?",
        "answer": 60,
        "generated": [
            "# Python code, return ans\ncherries_in_fifth_bowl = 55\nincrement = 5\ncherries_in_sixth_bowl = cherries_in_fifth_bowl + increment\nans = cherries_in_sixth_bowl",
            "# Python code, return ans\ncherries_in_fifth_bowl = 55\ndifference_between_bowls = 5\ncherries_in_sixth_bowl = cherries_in_fifth_bowl + difference_between_bowls\nans = cherries_in_sixth_bowl",
            "# Python code, return ans\ncherries_in_fifth_bowl = 55\ndifference = 5\ncherries_in_sixth_bowl = cherries_in_fifth_bowl + difference\nans = cherries_in_sixth_bowl"
        ],
        "results": [
            60.0,
            60.0,
            60.0
        ],
        "result_counter": {
            "60.0": 3
        },
        "prediction": 60.0
    },
    {
        "question": "While sorting some beads, Jenna put 74 beads in the first jar, 83 beads in the second jar, 92 beads in the third jar, and 101 beads in the fourth jar. If this pattern continues, how many beads will Jenna put in the fifth jar?",
        "answer": 110,
        "generated": [
            "# Python code, return ans\nfirst_jar = 74\nsecond_jar = 83\nthird_jar = 92\nfourth_jar = 101\n\ndifference = second_jar - first_jar\nfifth_jar = fourth_jar + difference\nans = fifth_jar",
            "# Python code, return ans\nfirst_jar = 74\nsecond_jar = 83\nthird_jar = 92\nfourth_jar = 101\ndifference = second_jar - first_jar\nfifth_jar = fourth_jar + difference\nans = fifth_jar",
            "# Python code, return ans\njar1 = 74\njar2 = 83\njar3 = 92\njar4 = 101\ndifference = jar2 - jar1\njar5 = jar4 + difference\nans = jar5"
        ],
        "results": [
            110.0,
            110.0,
            110.0
        ],
        "result_counter": {
            "110.0": 3
        },
        "prediction": 110.0
    },
    {
        "question": "While sorting some change into piggy banks, Diane put 72 coins in the first piggy bank, 81 coins in the second piggy bank, 90 coins in the third piggy bank, 99 coins in the fourth piggy bank, and 108 coins in the fifth piggy bank. If this pattern continues, how many coins will Diane put in the sixth piggy bank?",
        "answer": 117,
        "generated": [
            "# Python code, return ans\ncoins_in_fifth_bank = 108\ndifference = 9\ncoins_in_sixth_bank = coins_in_fifth_bank + difference\nans = coins_in_sixth_bank",
            "# Python code, return ans\ncoins_in_fifth_bank = 108\ndifference = 9\ncoins_in_sixth_bank = coins_in_fifth_bank + difference\nans = coins_in_sixth_bank",
            "# Python code, return ans\ncoins_in_fifth_bank = 108\ndifference = 9\ncoins_in_sixth_bank = coins_in_fifth_bank + difference\nans = coins_in_sixth_bank"
        ],
        "results": [
            117.0,
            117.0,
            117.0
        ],
        "result_counter": {
            "117.0": 3
        },
        "prediction": 117.0
    },
    {
        "question": "Alec has a garden and likes to put flowers from his garden into pretty vases. Alec put 5 flowers in the first vase, 7 flowers in the second vase, 10 flowers in the third vase, and 14 flowers in the fourth vase. If this pattern continues, how many flowers will Alec put in the fifth vase?",
        "answer": 19,
        "generated": [
            "# Python code, return ans\nfirst_vase = 5\nsecond_vase = 7\nthird_vase = 10\nfourth_vase = 14\n\n# Find the difference between each vase\ndiff1 = second_vase - first_vase\ndiff2 = third_vase - second_vase\ndiff3 = fourth_vase - third_vase\n\n# Find the next difference in the pattern\nnext_diff = diff3 + (diff3 - diff2)\n\n# Calculate the number of flowers in the fifth vase\nfifth_vase = fourth_vase + next_diff\nans = fifth_vase",
            "# Python code, return ans\nfirst_vase = 5\nsecond_vase = 7\nthird_vase = 10\nfourth_vase = 14\n\nfifth_vase = fourth_vase + (fourth_vase - third_vase)\nans = fifth_vase",
            "# Python code, return ans\nfirst_vase = 5\nsecond_vase = 7\nthird_vase = 10\nfourth_vase = 14\n\ndifference_1 = second_vase - first_vase\ndifference_2 = third_vase - second_vase\ndifference_3 = fourth_vase - third_vase\n\nnext_difference = difference_3 + (difference_3 - difference_2)\nfifth_vase = fourth_vase + next_difference\nans = fifth_vase"
        ],
        "results": [
            19.0,
            18.0,
            19.0
        ],
        "result_counter": {
            "19.0": 2,
            "18.0": 1
        },
        "prediction": 19.0
    },
    {
        "question": "At a party, the cheese pizza is cut into 6 slices and the veggie pizza is cut into 12 slices. If the host wants to serve identical platters that contain the same combination of cheese and veggie slices, with no slices left over, what is the greatest number of platters the host can prepare?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nimport math\ncheese_slices = 6\nveggie_slices = 12\ngreatest_common_divisor = math.gcd(cheese_slices, veggie_slices)\nplatters = cheese_slices // greatest_common_divisor\nans = platters",
            "# Python code, return ans\ncheese_slices = 6\nveggie_slices = 12\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_common_divisor = gcd(cheese_slices, veggie_slices)\nplatters = cheese_slices // greatest_common_divisor\nans = platters\nans",
            "# Python code, return ans\nimport math\ncheese_slices = 6\nveggie_slices = 12\ngreatest_common_divisor = math.gcd(cheese_slices, veggie_slices)\nplatters = cheese_slices // greatest_common_divisor\nans = platters"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "Whitney has collected 4 T-shirts and 20 buttons from her favorite band. She wants to combine them into identical sets to sell, with no pieces left over. What is the greatest number of sets Whitney can make?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nimport math\n\ntshirts = 4\nbuttons = 20\n\ngreatest_common_divisor = math.gcd(tshirts, buttons)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\ntshirts = 4\nbuttons = 20\ngreatest_common_divisor = math.gcd(tshirts, buttons)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\ntshirts = 4\nbuttons = 20\ngreatest_common_divisor = math.gcd(tshirts, buttons)\nans = greatest_common_divisor"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Vondra is putting together bags of groceries to donate to charity. She has 7 boxes of macaroni and cheese and 14 cans of vegetables. Vondra wants to divide them up evenly, so that each bag has the same contents and no items are left over. What is the greatest number of bags of groceries Vondra can put together?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nmacaroni_boxes = 7\nvegetable_cans = 14\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_common_divisor = gcd(macaroni_boxes, vegetable_cans)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nmacaroni_boxes = 7\nvegetable_cans = 14\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_common_divisor = gcd(macaroni_boxes, vegetable_cans)\nans = greatest_common_divisor",
            "# Python code, return ans\nmacaroni_boxes = 7\nvegetable_cans = 14\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ngreatest_common_divisor = gcd(macaroni_boxes, vegetable_cans)\nans = greatest_common_divisor\nans"
        ],
        "results": [
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 2
        },
        "prediction": 7.0
    },
    {
        "question": "Laverne has 20 baseballs and 15 basketballs. If she wants to divide them into identical groups without any balls left over, what is the greatest number of groups Laverne can make?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nimport math\nbaseballs = 20\nbasketballs = 15\ngreatest_common_divisor = math.gcd(baseballs, basketballs)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\nbaseballs = 20\nbasketballs = 15\ngreatest_common_divisor = math.gcd(baseballs, basketballs)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\nbaseballs = 20\nbasketballs = 15\ngreatest_common_divisor = math.gcd(baseballs, basketballs)\nans = greatest_common_divisor"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Lindsey has 16 cans of regular soda and 8 cans of diet soda. She wants to create some identical refreshment tables that will operate during the football game. She also doesn't want to have any sodas left over. What is the greatest number of refreshment tables that Lindsey can stock?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nimport math\nregular_soda = 16\ndiet_soda = 8\ngcd = math.gcd(regular_soda, diet_soda)\nans = gcd",
            "# Python code, return ans\nimport math\nregular_soda = 16\ndiet_soda = 8\ngreatest_common_divisor = math.gcd(regular_soda, diet_soda)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nimport math\nregular_soda = 16\ndiet_soda = 8\ngreatest_common_divisor = math.gcd(regular_soda, diet_soda)\nans = greatest_common_divisor"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Jaden is putting together first-aid kits. He has 39 large bandages and 26 small bandages, and he wants each kit to be identical, with no bandages left over. What is the greatest number of first-aid kits Jaden could put together?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\nimport math\nlarge_bandages = 39\nsmall_bandages = 26\ngreatest_common_divisor = math.gcd(large_bandages, small_bandages)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\nlarge_bandages = 39\nsmall_bandages = 26\ngreatest_common_divisor = math.gcd(large_bandages, small_bandages)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\nlarge_bandages = 39\nsmall_bandages = 26\ngreatest_common_divisor = math.gcd(large_bandages, small_bandages)\nans = greatest_common_divisor"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "Shelley has 12 forks and 16 knives to place in silverware holders at the fast food restaurant where she works. She wants to distribute them equally, with no forks or knives left over. What is the greatest number of silverware holders Shelley can stock?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nimport math\nforks = 12\nknives = 16\ngreatest_common_divisor = math.gcd(forks, knives)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\nforks = 12\nknives = 16\ngreatest_common_divisor = math.gcd(forks, knives)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nimport math\nforks = 12\nknives = 16\ngreatest_common_divisor = math.gcd(forks, knives)\nans = greatest_common_divisor\nans"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Tess is decorating papers with a total of 45 heart stickers and 27 star stickers for the child she is babysitting. If she wants to make all the papers identical, with the same combination of heart and star stickers and no stickers left over, what is the greatest number of pages Tess can decorate?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nimport math\nheart_stickers = 45\nstar_stickers = 27\ngcd = math.gcd(heart_stickers, star_stickers)\nans = gcd",
            "# Python code, return ans\nimport math\nheart_stickers = 45\nstar_stickers = 27\ngcd = math.gcd(heart_stickers, star_stickers)\nans = gcd",
            "# Python code, return ans\nimport math\n\nheart_stickers = 45\nstar_stickers = 27\n\ngcd = math.gcd(heart_stickers, star_stickers)\nans = gcd\nans"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Daniel has 44 commemorative plates and 33 commemorative spoons. He wants to display them in groups throughout his house, each with the same combination of plates and spoons, with none left over. What is the greatest number of groups Daniel can display?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\nimport math\nplates = 44\nspoons = 33\ngreatest_common_divisor = math.gcd(plates, spoons)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\nplates = 44\nspoons = 33\ngreatest_common_divisor = math.gcd(plates, spoons)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\nplates = 44\nspoons = 33\ngreatest_common_divisor = math.gcd(plates, spoons)\nans = greatest_common_divisor"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "Mike is serving vegetables at a soup kitchen. He has 15 carrot sticks and 10 baby potatoes that he wants to divide evenly, with no food left over. What is the greatest number of plates Mike can prepare?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ncarrot_sticks = 15\nbaby_potatoes = 10\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_common_divisor = gcd(carrot_sticks, baby_potatoes)\nans = greatest_common_divisor",
            "# Python code, return ans\ncarrot_sticks = 15\nbaby_potatoes = 10\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_common_divisor = gcd(carrot_sticks, baby_potatoes)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\ncarrot_sticks = 15\nbaby_potatoes = 10\ngreatest_common_divisor = math.gcd(carrot_sticks, baby_potatoes)\nans = greatest_common_divisor"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "At a concert, the band has 20 men's T-shirts and 8 women's T-shirts. The band wants to set up tables to sell the shirts, with an equal number of men's and women's shirts available at each table and no shirts left over. What is the greatest number of tables the band can sell shirts from?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nmen_shirts = 20\nwomen_shirts = 8\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_common_divisor = gcd(men_shirts, women_shirts)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nmen_shirts = 20\nwomen_shirts = 8\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_common_divisor = gcd(men_shirts, women_shirts)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nimport math\nmen_shirts = 20\nwomen_shirts = 8\ngreatest_common_divisor = math.gcd(men_shirts, women_shirts)\nans = greatest_common_divisor\nans"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Amanda has two pieces of ribbon, one 8 inches long and the other 16 inches long. To decorate an album, she wants to cut them up to produce many pieces of ribbon that are all of the same length, with no ribbon left over. What is the greatest length, in inches, that she can make them?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nimport math\nribbon1 = 8\nribbon2 = 16\ngreatest_length = math.gcd(ribbon1, ribbon2)\nans = greatest_length",
            "# Python code, return ans\nimport math\nribbon1 = 8\nribbon2 = 16\ngreatest_length = math.gcd(ribbon1, ribbon2)\nans = greatest_length",
            "# Python code, return ans\nimport math\nribbon1 = 8\nribbon2 = 16\ngreatest_length = math.gcd(ribbon1, ribbon2)\nans = greatest_length"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "A florist has 12 tulips and 18 carnations. If the florist wants to create identical bouquets without any leftover flowers, what is the greatest number of bouquets the florist can make?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nimport math\ntulips = 12\ncarnations = 18\ngreatest_common_divisor = math.gcd(tulips, carnations)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\ntulips = 12\ncarnations = 18\ngreatest_common_divisor = math.gcd(tulips, carnations)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\ntulips = 12\ncarnations = 18\ngreatest_common_divisor = math.gcd(tulips, carnations)\nans = greatest_common_divisor\nans"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "A P.E. teacher needs to divide 14 male students and 7 female students into teams, each with the same combination of male students and female students and nobody left out. What is the greatest number of teams that can be formed?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nimport math\nmale_students = 14\nfemale_students = 7\ngreatest_common_divisor = math.gcd(male_students, female_students)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nmale_students = 14\nfemale_students = 7\nteam_num = min(male_students, female_students)\nans = team_num",
            "# Python code, return ans\nimport math\n\nmale_students = 14\nfemale_students = 7\n\ngreatest_common_divisor = math.gcd(male_students, female_students)\nans = greatest_common_divisor\nans"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Carmen is creating lollipop bouquets using 4 cherry lollipops and 6 orange lollipops. She wants each bouquet to be identical, with no lollipops left over. What is the greatest number of lollipop bouquets Carmen can create?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\nimport math\ncherry_lollipops = 4\norange_lollipops = 6\ngreatest_common_divisor = math.gcd(cherry_lollipops, orange_lollipops)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\ncherry_lollipops = 4\norange_lollipops = 6\ngreatest_common_divisor = math.gcd(cherry_lollipops, orange_lollipops)\nans = greatest_common_divisor",
            "# Python code, return ans\ncherry_lollipops = 4\norange_lollipops = 6\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_common_divisor = gcd(cherry_lollipops, orange_lollipops)\nans = greatest_common_divisor\nans"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Allie has 5 math books and 10 science books. If she wants to distribute them evenly among some bookshelves so that each bookshelf has the same combination of math and science books, with no books left over, what is the greatest number of bookshelves Allie can use?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nimport math\nmath_books = 5\nscience_books = 10\ngreatest_common_divisor = math.gcd(math_books, science_books)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nmath_books = 5\nscience_books = 10\nbookshelves = 1\n\nwhile (math_books % bookshelves == 0) and (science_books % bookshelves == 0):\n    bookshelves += 1\n\nans = bookshelves - 1\nans",
            "# Python code, return ans\nimport math\n\nmath_books = 5\nscience_books = 10\ngreatest_common_divisor = math.gcd(math_books, science_books)\nans = greatest_common_divisor\nans"
        ],
        "results": [
            5.0,
            1.0,
            5.0
        ],
        "result_counter": {
            "5.0": 2,
            "1.0": 1
        },
        "prediction": 5.0
    },
    {
        "question": "Kiera is making trail mix out of 16 bags of nuts and 6 bags of dried fruit. She wants each new portion of trail mix to be identical, containing the same combination of bags of nuts and bags of dried fruit, with no bags left over. What is the greatest number of portions of trail mix Kiera can make?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\nimport math\nbags_of_nuts = 16\nbags_of_dried_fruit = 6\ngreatest_common_divisor = math.gcd(bags_of_nuts, bags_of_dried_fruit)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nimport math\nbags_of_nuts = 16\nbags_of_dried_fruit = 6\ngreatest_common_divisor = math.gcd(bags_of_nuts, bags_of_dried_fruit)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nimport math\nbags_of_nuts = 16\nbags_of_dried_fruit = 6\ngreatest_common_divisor = math.gcd(bags_of_nuts, bags_of_dried_fruit)\nans = greatest_common_divisor"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Sara has 16 red flowers and 24 yellow flowers. She wants to make bouquets with the same number of each color flower in each bouquet. What is the greatest number of bouquets she can make?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nimport math\nred_flowers = 16\nyellow_flowers = 24\ngreatest_common_divisor = math.gcd(red_flowers, yellow_flowers)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\nred_flowers = 16\nyellow_flowers = 24\ngreatest_common_divisor = math.gcd(red_flowers, yellow_flowers)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nimport math\nred_flowers = 16\nyellow_flowers = 24\ngreatest_common_divisor = math.gcd(red_flowers, yellow_flowers)\nans = greatest_common_divisor\nans"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Lisa is making activity baskets to donate to charity. She has 12 coloring books, 28 markers, and 36 crayons. What is the greatest number of baskets she can make if each type of toy is equally distributed among the baskets?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nimport math\ncoloring_books = 12\nmarkers = 28\ncrayons = 36\ngreatest_common_divisor = math.gcd(math.gcd(coloring_books, markers), crayons)\nans = greatest_common_divisor",
            "# Python code, return ans\ncoloring_books = 12\nmarkers = 28\ncrayons = 36\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nlcm_coloring_markers = lcm(coloring_books, markers)\nlcm_all = lcm(lcm_coloring_markers, crayons)\nans = min(coloring_books, markers, crayons) // gcd(coloring_books, markers, crayons)\nans",
            "# Python code, return ans\ncoloring_books = 12\nmarkers = 28\ncrayons = 36\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_common_divisor = gcd(coloring_books, gcd(markers, crayons))\nans = greatest_common_divisor\nans"
        ],
        "results": [
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 2
        },
        "prediction": 4.0
    },
    {
        "question": "Peter has 18 oranges, 27 pears and 12 bananas. He wants to make fruit baskets with the same number of each fruit in each basket. What is the greatest number of fruit baskets he can make?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nimport math\n\noranges = 18\npears = 27\nbananas = 12\n\ngcd_oranges_pears = math.gcd(oranges, pears)\ngcd_all_fruits = math.gcd(gcd_oranges_pears, bananas)\n\nans = gcd_all_fruits",
            "# Python code, return ans\nimport math\n\noranges = 18\npears = 27\nbananas = 12\n\ngreatest_common_divisor = math.gcd(math.gcd(oranges, pears), bananas)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nimport math\noranges = 18\npears = 27\nbananas = 12\ngreatest_common_divisor = math.gcd(math.gcd(oranges, pears), bananas)\nans = greatest_common_divisor"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "At Kentucky Fried Chicken, the kitchen staff baked 96 chicken legs, 144 thighs, and 224 wings. The staff had to prepare platters for a catered lunch at an office. Each platter will have the same number of legs, thighs, and wings. How many platters can the staff make if they want the greatest number of chicken pieces on each platter?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\nimport math\nlegs = 96\nthighs = 144\nwings = 224\ngcd1 = math.gcd(legs, thighs)\ngcd2 = math.gcd(gcd1, wings)\nans = gcd2",
            "# Python code, return ans\nimport math\n\nlegs = 96\nthighs = 144\nwings = 224\n\ngcd_legs_thighs = math.gcd(legs, thighs)\ngcd_all = math.gcd(gcd_legs_thighs, wings)\n\nans = gcd_all\nans",
            "# Python code, return ans\nimport math\n\nlegs = 96\nthighs = 144\nwings = 224\n\ngcd_legs_thighs = math.gcd(legs, thighs)\ngcd_all = math.gcd(gcd_legs_thighs, wings)\n\nans = gcd_all\nans"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "Jeremy has two pieces of wood: one is 90 inches and the other is 72 inches. He wants to cut both pieces of wood into smaller pieces so that all these pieces are the same length. How long does he cut the both pieces of wood?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\nimport math\nwood1 = 90\nwood2 = 72\ncut_length = math.gcd(wood1, wood2)\nans = cut_length",
            "# Python code, return ans\nimport math\n\nwood1_length = 90\nwood2_length = 72\ngcd = math.gcd(wood1_length, wood2_length)\nans = gcd",
            "# Python code, return ans\nimport math\nwood1 = 90\nwood2 = 72\ncut_length = math.gcd(wood1, wood2)\nans = cut_length"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "For a dinner party, Abraham is creating individual servings of starters. He has 9 carrot sticks and 18 celery sticks. If he wants each serving to be identical, with no food left over, what is the greatest number of servings Abraham can create?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ncarrot_sticks = 9\ncelery_sticks = 18\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_common_divisor = gcd(carrot_sticks, celery_sticks)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\ncarrot_sticks = 9\ncelery_sticks = 18\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_common_divisor = gcd(carrot_sticks, celery_sticks)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\ncarrot_sticks = 9\ncelery_sticks = 18\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_common_divisor = gcd(carrot_sticks, celery_sticks)\nans = greatest_common_divisor\nans"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "To encourage public transportation, Russom wants to give some friends envelopes with bus tickets and subway tickets in them. If he has 18 bus tickets and 12 subway tickets to split equally among the envelopes, and wants no tickets left over, what is the greatest number of envelopes Russom can make?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nbus_tickets = 18\nsubway_tickets = 12\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_common_divisor = gcd(bus_tickets, subway_tickets)\nans = greatest_common_divisor",
            "# Python code, return ans\nbus_tickets = 18\nsubway_tickets = 12\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_common_divisor = gcd(bus_tickets, subway_tickets)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nbus_tickets = 18\nsubway_tickets = 12\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_common_divisor = gcd(bus_tickets, subway_tickets)\nans = greatest_common_divisor\nans"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Veronica is making emergency-preparedness kits to share with friends. She has 20 bottles of water and 12 cans of food, which she would like to distribute equally among the kits, with nothing left over. What is the greatest number of kits Veronica can make?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nimport math\nwater_bottles = 20\ncans_of_food = 12\ngreatest_common_divisor = math.gcd(water_bottles, cans_of_food)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\nbottles_of_water = 20\ncans_of_food = 12\ngreatest_common_divisor = math.gcd(bottles_of_water, cans_of_food)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\n\nbottles_of_water = 20\ncans_of_food = 12\ngreatest_common_divisor = math.gcd(bottles_of_water, cans_of_food)\nans = greatest_common_divisor"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Colton has 16 blue marbles and 8 white ones. If he wants to place them in identical groups without any marbles left over, what is the greatest number of groups Colton can make?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nimport math\nblue_marbles = 16\nwhite_marbles = 8\ngreatest_common_divisor = math.gcd(blue_marbles, white_marbles)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\nblue_marbles = 16\nwhite_marbles = 8\ngreatest_common_divisor = math.gcd(blue_marbles, white_marbles)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\nblue_marbles = 16\nwhite_marbles = 8\ngreatest_common_divisor = math.gcd(blue_marbles, white_marbles)\nans = greatest_common_divisor"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Kiara baked 30 oatmeal cookies and 48 chocolate chip cookies to package in plastic containers for her teacher friends at school. She wants to divide the cookies into identical containers so that each container has the same number of each kind of cookie. If she wants each container to have the greatest number of cookies possible, how many plastic containers does she need?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\noatmeal_cookies = 30\nchocolate_chip_cookies = 48\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_common_divisor = gcd(oatmeal_cookies, chocolate_chip_cookies)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\noatmeal_cookies = 30\nchocolate_chip_cookies = 48\ncontainers = 1\n\nwhile (oatmeal_cookies % containers != 0) or (chocolate_chip_cookies % containers != 0):\n    containers += 1\n\nans = containers\nans",
            "# Python code, return ans\noatmeal_cookies = 30\nchocolate_chip_cookies = 48\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_common_divisor = gcd(oatmeal_cookies, chocolate_chip_cookies)\nans = greatest_common_divisor\nans"
        ],
        "results": [
            6.0,
            1.0,
            6.0
        ],
        "result_counter": {
            "6.0": 2,
            "1.0": 1
        },
        "prediction": 6.0
    },
    {
        "question": "There are 40 girls and 32 boys who want to participate in 6th grade intramurals. If each team must have the same number of girls and the same number of boys, what is the greatest number of teams that can participate in intramurals?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ngirls = 40\nboys = 32\nteam_girls = 0\nteam_boys = 0\n\nfor i in range(1, girls+1):\n    if girls % i == 0:\n        team_girls = i\n\nfor i in range(1, boys+1):\n    if boys % i == 0:\n        team_boys = i\n\nans = min(team_girls, team_boys)",
            "# Python code, return ans\ngirls = 40\nboys = 32\nteam_size = 1\n\nwhile girls % team_size == 0 and boys % team_size == 0:\n    team_size += 1\n\ngreatest_teams = (girls // (team_size - 1)) + (boys // (team_size - 1))\nans = greatest_teams",
            "# Python code, return ans\ngirls = 40\nboys = 32\nteam_size = 1\n\nwhile girls % team_size == 0 and boys % team_size == 0:\n    team_size += 1\n\ngreatest_number_of_teams = (girls // (team_size - 1)) + (boys // (team_size - 1))\nans = greatest_number_of_teams"
        ],
        "results": [
            32.0,
            36.0,
            36.0
        ],
        "result_counter": {
            "32.0": 1,
            "36.0": 2
        },
        "prediction": 36.0
    },
    {
        "question": "Shannon is making identical balloon arrangements for a party. She has 32 maroon balloons, 24 white balloons, and 16 orange balloons. She wants each arrangement to have the same number of each color. What is the greatest number of arrangements that she can make if every balloon is used?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nimport math\nmaroon_balloons = 32\nwhite_balloons = 24\norange_balloons = 16\ngcd_maroon_white = math.gcd(maroon_balloons, white_balloons)\ngcd_all = math.gcd(gcd_maroon_white, orange_balloons)\nans = gcd_all",
            "# Python code, return ans\nimport math\nmaroon_balloons = 32\nwhite_balloons = 24\norange_balloons = 16\ngcd_maroon_white = math.gcd(maroon_balloons, white_balloons)\ngcd_all_colors = math.gcd(gcd_maroon_white, orange_balloons)\nans = gcd_all_colors",
            "# Python code, return ans\nimport math\n\nmaroon_balloons = 32\nwhite_balloons = 24\norange_balloons = 16\n\ngcd_maroon_white = math.gcd(maroon_balloons, white_balloons)\ngcd_all_colors = math.gcd(gcd_maroon_white, orange_balloons)\n\nans = gcd_all_colors\nans"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "At a school event, adults are seated in groups of exactly 17 and children are seated in groups of exactly 15. If there are the same number of adults as children, what is the minimum number of adults attending?",
        "answer": 255,
        "generated": [
            "# Python code, return ans\nadults_per_group = 17\nchildren_per_group = 15\n\n# Find the least common multiple (LCM) of adults_per_group and children_per_group\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nminimum_adults = lcm(adults_per_group, children_per_group)\nans = minimum_adults",
            "# Python code, return ans\nadults_per_group = 17\nchildren_per_group = 15\n\n# Find the least common multiple (LCM) of adults_per_group and children_per_group\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm_value = greater\n            break\n        greater += 1\n    return lcm_value\n\nminimum_adults = lcm(adults_per_group, children_per_group)\nans = minimum_adults",
            "# Python code, return ans\nadults_per_group = 17\nchildren_per_group = 15\ni = 1\nwhile True:\n    adults = adults_per_group * i\n    children = children_per_group * i\n    if adults == children:\n        ans = adults\n        break\n    i += 1\nans"
        ],
        "results": [
            255.0,
            255.0
        ],
        "result_counter": {
            "255.0": 2
        },
        "prediction": 255.0
    },
    {
        "question": "Monroe Vitamin Shop sold equal quantities of Vitamin A and Vitamin D supplements this morning, even though the Vitamin A supplements come in packs of 7 and the Vitamin D supplements in packs of 17. What is the smallest number of each type that the store could have sold?",
        "answer": 119,
        "generated": [
            "# Python code, return ans\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nVitamin_A_pack = 7\nVitamin_D_pack = 17\nsmallest_number = lcm(Vitamin_A_pack, Vitamin_D_pack)\nans = smallest_number\nans",
            "# Python code, return ans\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nVitamin_A_pack = 7\nVitamin_D_pack = 17\nans = lcm(Vitamin_A_pack, Vitamin_D_pack)\nans",
            "# Python code, return ans\ndef lcm(x, y):\n    greater = max(x, y)\n    while (greater % x != 0) or (greater % y != 0):\n        greater += 1\n    return greater\n\nvitamin_A_pack = 7\nvitamin_D_pack = 17\nans = lcm(vitamin_A_pack, vitamin_D_pack)\nans"
        ],
        "results": [
            119.0,
            119.0
        ],
        "result_counter": {
            "119.0": 2
        },
        "prediction": 119.0
    },
    {
        "question": "Amanda and Sadie each have a band. Amanda's band plays songs in sets of 2 and Sadie's band plays songs in sets of 9. After performing together, both bands realize that they have played the same number of songs. What is the smallest number of songs each band could have performed?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nAmanda_set = 2\nSadie_set = 9\nans = lcm(Amanda_set, Sadie_set)\nans",
            "# Python code, return ans\ndef lcm(a, b):\n    greater = max(a, b)\n    while True:\n        if greater % a == 0 and greater % b == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nAmanda_set = 2\nSadie_set = 9\nans = lcm(Amanda_set, Sadie_set)",
            "# Python code, return ans\nAmanda_set = 2\nSadie_set = 9\ni = 1\nwhile True:\n    if i % Amanda_set == 0 and i % Sadie_set == 0:\n        ans = i\n        break\n    i += 1\nans"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "This afternoon, Alec noticed that the number of the page assigned for homework is divisible by both 4 and 13. What is the smallest possible page number that could have been assigned?",
        "answer": 52,
        "generated": [
            "# Python code, return ans\ni = 1\nwhile True:\n    page_num = i * 4\n    if page_num % 13 == 0:\n        ans = page_num\n        break\n    i += 1\nans",
            "# Python code, return ans\ni = 1\nwhile True:\n    page_number = i * 4\n    if page_number % 13 == 0:\n        ans = page_number\n        break\n    i += 1\nans",
            "# Python code, return ans\ni = 1\nwhile True:\n    page_number = i * 4\n    if page_number % 13 == 0:\n        ans = page_number\n        break\n    i += 1\nans"
        ],
        "results": [
            52.0,
            52.0,
            52.0
        ],
        "result_counter": {
            "52.0": 3
        },
        "prediction": 52.0
    },
    {
        "question": "Kristen notices an identical number of two types of insects in her neighborhood: butterflies and fireflies. She always seems to observe butterflies in groups of 44 and fireflies in groups of 17. What is the smallest number of butterflies that she could have seen?",
        "answer": 748,
        "generated": [
            "# Python code, return ans\nbutterfly_group = 44\nfirefly_group = 17\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nans = lcm(butterfly_group, firefly_group)\nans",
            "# Python code, return ans\nbutterflies_per_group = 44\nfireflies_per_group = 17\ni = 1\nwhile True:\n    butterflies = butterflies_per_group * i\n    fireflies = fireflies_per_group * i\n    if butterflies == fireflies:\n        ans = butterflies\n        break\n    i += 1\nans",
            "# Python code, return ans\nbutterflies_group = 44\nfireflies_group = 17\ni = 1\nwhile True:\n    if (butterflies_group * i) % fireflies_group == 0:\n        ans = butterflies_group * i\n        break\n    i += 1\nans"
        ],
        "results": [
            748.0
        ],
        "result_counter": {
            "748.0": 1
        },
        "prediction": 748.0
    },
    {
        "question": "Linda buys strawberry gum in packs of 6 pieces and blueberry gum in packs of 5 pieces. If Linda wants to buy the same amount of each type of gum, what is the smallest number of pieces of each flavor that she must buy?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\ndef gcd(x, y):\n    while(y):\n        x, y = y, x % y\n    return x\n\ndef lcm(x, y):\n    return (x * y) // gcd(x, y)\n\nstrawberry_pack = 6\nblueberry_pack = 5\n\nans = lcm(strawberry_pack, blueberry_pack)\nans",
            "# Python code, return ans\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nstrawberry_pack = 6\nblueberry_pack = 5\nans = lcm(strawberry_pack, blueberry_pack)\nans",
            "# Python code, return ans\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nstrawberry_pack = 6\nblueberry_pack = 5\nans = lcm(strawberry_pack, blueberry_pack)\nans"
        ],
        "results": [],
        "result_counter": {},
        "prediction": null
    },
    {
        "question": "By coincidence, Monica's Obedience School trained the same number of dogs and cats last week. The school teaches dogs in groups of 18 and cats in groups of 3. What is the smallest number of cats the school could have had?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\ndogs_per_group = 18\ncats_per_group = 3\ni = 1\nwhile (dogs_per_group * i) % cats_per_group != 0:\n    i += 1\ncats = dogs_per_group * i // cats_per_group\nans = cats\nans",
            "# Python code, return ans\ndogs_per_group = 18\ncats_per_group = 3\nlcm = dogs_per_group * cats_per_group // math.gcd(dogs_per_group, cats_per_group)\nans = lcm // cats_per_group\nans",
            "# Python code, return ans\ndogs_per_group = 18\ncats_per_group = 3\ni = 1\nwhile (dogs_per_group * i) % cats_per_group != 0:\n    i += 1\nans = cats_per_group * i"
        ],
        "results": [
            6.0,
            3.0
        ],
        "result_counter": {
            "6.0": 1,
            "3.0": 1
        },
        "prediction": 6.0
    },
    {
        "question": "The drama club meets in the school auditorium every 3 days, and the choir meets there every 5 days. If the groups are both meeting in the auditorium today, then how many days from now will they next have to share the auditorium?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\ndrama_meet = 3\nchoir_meet = 5\nday = 1\nwhile True:\n    if day % drama_meet == 0 and day % choir_meet == 0:\n        ans = day\n        break\n    day += 1\n\nans",
            "# Python code, return ans\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndrama_meeting_days = 3\nchoir_meeting_days = 5\nans = lcm(drama_meeting_days, choir_meeting_days)\nans",
            "# Python code, return ans\ndrama_meet = 3\nchoir_meet = 5\ni = 1\nwhile True:\n    if i % drama_meet == 0 and i % choir_meet == 0:\n        ans = i\n        break\n    i += 1\nans"
        ],
        "results": [
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 2
        },
        "prediction": 15.0
    },
    {
        "question": "One day, Trent and his friends had lunch while sitting at tables of 2. Another day, they had lunch at tables of 8. What is the smallest number of people that could be in the group?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ntable_2 = 2\ntable_8 = 8\nsmallest_group = lcm(table_2, table_8)\nans = smallest_group",
            "# Python code, return ans\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ntable_2 = 2\ntable_8 = 8\nans = lcm(table_2, table_8)\nans",
            "# Python code, return ans\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ntable_of_2 = 2\ntable_of_8 = 8\nans = lcm(table_of_2, table_of_8)"
        ],
        "results": [],
        "result_counter": {},
        "prediction": null
    },
    {
        "question": "Gabe and Steven make money by walking neighborhood pets. During a conversation about their work, they realize that they are both walking the same total number of pets, even though Gabe walks pets in groups of 2 and Steven walks pets in groups of 10. What is the smallest total number of pets each could be walking?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\ndef lcm(x, y):\n    greater = max(x, y)\n    while(True):\n        if(greater % x == 0 and greater % y == 0):\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nGabe_group = 2\nSteven_group = 10\nans = lcm(Gabe_group, Steven_group)\nans",
            "# Python code, return ans\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nGabe_group = 2\nSteven_group = 10\nans = lcm(Gabe_group, Steven_group)\nans",
            "# Python code, return ans\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nGabe_group = 2\nSteven_group = 10\nans = lcm(Gabe_group, Steven_group)\nans"
        ],
        "results": [
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 2
        },
        "prediction": 10.0
    },
    {
        "question": "Packages of cheddar cheese come with 12 slices, while packages of Swiss cheese come with 28 slices. If Randy bought the same number of slices of each type of cheese, what is the smallest number of slices of each type that Randy could have bought?",
        "answer": 84,
        "generated": [
            "# Python code, return ans\nimport math\n\ncheddar_slices = 12\nswiss_slices = 28\nlcm = cheddar_slices * swiss_slices // math.gcd(cheddar_slices, swiss_slices)\nans = lcm\nans",
            "# Python code, return ans\nimport math\ncheddar_slices = 12\nswiss_slices = 28\nlcm = cheddar_slices * swiss_slices // math.gcd(cheddar_slices, swiss_slices)\nans = lcm\nans",
            "# Python code, return ans\nimport math\n\ncheddar_slices = 12\nswiss_slices = 28\nlcm = cheddar_slices * swiss_slices // math.gcd(cheddar_slices, swiss_slices)\nans = lcm\nans"
        ],
        "results": [
            84.0,
            84.0,
            84.0
        ],
        "result_counter": {
            "84.0": 3
        },
        "prediction": 84.0
    },
    {
        "question": "Karen is packing equal quantities of pretzels and crackers for snacks. Karen bags the pretzels in groups of 5 and the crackers in groups of 7. What is the smallest number of crackers that she can pack?",
        "answer": 35,
        "generated": [
            "# Python code, return ans\ndef lcm(a, b):\n    greater = max(a, b)\n    while (greater % a != 0) or (greater % b != 0):\n        greater += 1\n    return greater\n\npretzels_group = 5\ncrackers_group = 7\nans = lcm(pretzels_group, crackers_group)\nans",
            "# Python code, return ans\ndef lcm(x, y):\n    if x > y:\n        greater = x\n    else:\n        greater = y\n\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n\n    return lcm\n\npretzels_group = 5\ncrackers_group = 7\nans = lcm(pretzels_group, crackers_group)\nans",
            "# Python code, return ans\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\npretzels_group = 5\ncrackers_group = 7\nsmallest_crackers = lcm(pretzels_group, crackers_group)\nans = smallest_crackers"
        ],
        "results": [
            35.0,
            35.0
        ],
        "result_counter": {
            "35.0": 2
        },
        "prediction": 35.0
    },
    {
        "question": "Irene's Bakery sells muffins in packages of 18 and cookies in packages of 5. Going through yesterday's receipts, a store manager notices that the bakery sold the same number of muffins and cookies yesterday afternoon. What is the smallest number of muffins that the bakery could have sold?",
        "answer": 90,
        "generated": [
            "# Python code, return ans\nmuffin_package = 18\ncookie_package = 5\n\ni = 1\nwhile True:\n    if (muffin_package * i) % cookie_package == 0:\n        ans = muffin_package * i\n        break\n    i += 1\n\nans",
            "# Python code, return ans\nmuffins_per_package = 18\ncookies_per_package = 5\n\n# Find the smallest common multiple of muffins_per_package and cookies_per_package\nsmallest_common_multiple = muffins_per_package * cookies_per_package\nfor i in range(max(muffins_per_package, cookies_per_package), smallest_common_multiple + 1):\n    if i % muffins_per_package == 0 and i % cookies_per_package == 0:\n        smallest_common_multiple = i\n        break\n\nans = smallest_common_multiple\n",
            "# Python code, return ans\nmuffins_per_package = 18\ncookies_per_package = 5\n\ni = 1\nwhile True:\n    muffins_sold = muffins_per_package * i\n    cookies_sold = cookies_per_package * i\n    if muffins_sold == cookies_sold:\n        ans = muffins_sold\n        break\n    i += 1\n\nans"
        ],
        "results": [
            90.0,
            90.0
        ],
        "result_counter": {
            "90.0": 2
        },
        "prediction": 90.0
    },
    {
        "question": "Zack tutors students in groups of 14. Meanwhile, Karen tutors students in groups of 10. While discussing their work, the tutors realize that they both work with the same total number of students. What is the smallest number of students each can have?",
        "answer": 70,
        "generated": [
            "# Python code, return ans\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nZack_group = 14\nKaren_group = 10\nans = lcm(Zack_group, Karen_group)",
            "# Python code, return ans\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nZack_group = 14\nKaren_group = 10\nans = lcm(Zack_group, Karen_group)",
            "# Python code, return ans\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nZack_group = 14\nKaren_group = 10\nans = lcm(Zack_group, Karen_group)\nans"
        ],
        "results": [
            70.0,
            70.0
        ],
        "result_counter": {
            "70.0": 2
        },
        "prediction": 70.0
    },
    {
        "question": "Martha's Blossoms sells roses in groups of 9. Across town, Rachel's Blooms sells roses in groups of 19. If a customer wants to buy the same number of roses from both vendors, what is the smallest number of roses the customer will have to buy from each vendor?",
        "answer": 171,
        "generated": [
            "# Python code, return ans\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nMartha_group = 9\nRachel_group = 19\nans = lcm(Martha_group, Rachel_group)",
            "# Python code, return ans\ndef gcd(x, y):\n    while y != 0:\n        (x, y) = (y, x % y)\n    return x\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\nMartha_group = 9\nRachel_group = 19\nans = lcm(Martha_group, Rachel_group)",
            "# Python code, return ans\nimport numpy as np\nMartha_group = 9\nRachel_group = 19\nlcm = np.lcm(Martha_group, Rachel_group)\nans = lcm"
        ],
        "results": [
            171.0
        ],
        "result_counter": {
            "171.0": 1
        },
        "prediction": 171.0
    },
    {
        "question": "Andy is buying AA batteries and D batteries. The store sells AA batteries in packs of 38 and D batteries in packs of 44. If Andy wishes to buy the same number of AA and D batteries, what is the smallest number of each battery type that he can buy?",
        "answer": 836,
        "generated": [
            "# Python code, return ans\nimport math\n\nAA_pack = 38\nD_pack = 44\nlcm = (AA_pack * D_pack) // math.gcd(AA_pack, D_pack)\nans = lcm\nans",
            "# Python code, return ans\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nAA_pack = 38\nD_pack = 44\nleast_common_multiple = lcm(AA_pack, D_pack)\nans = least_common_multiple\nans",
            "# Python code, return ans\ndef gcd(x, y):\n    while y != 0:\n        x, y = y, x % y\n    return x\n\ndef lcm(x, y):\n    return (x*y)//gcd(x,y)\n\nAA_pack = 38\nD_pack = 44\nans = lcm(AA_pack, D_pack)\nans"
        ],
        "results": [
            836.0
        ],
        "result_counter": {
            "836.0": 1
        },
        "prediction": 836.0
    },
    {
        "question": "An airline has 41 pieces of luggage to put away. If each luggage compartment will hold 5 pieces of luggage, how many will be in the compartment that isn't full?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\ntotal_luggage = 41\nluggage_per_compartment = 5\nfull_compartment_luggage = total_luggage // luggage_per_compartment * luggage_per_compartment\nremaining_luggage = total_luggage - full_compartment_luggage\nans = remaining_luggage",
            "# Python code, return ans\ntotal_luggage = 41\nluggage_per_compartment = 5\nfull_compartments = total_luggage // luggage_per_compartment\nremaining_luggage = total_luggage % luggage_per_compartment\nans = remaining_luggage",
            "# Python code, return ans\ntotal_luggage = 41\nluggage_per_compartment = 5\nfull_compartments = total_luggage // luggage_per_compartment\nremaining_luggage = total_luggage - (full_compartments * luggage_per_compartment)\nans = remaining_luggage"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "A coat factory had 29 coats. If they wanted to put them into 3 boxes, with the same number of coats in each box, how many extra coats would they have left over?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ncoat_num = 29\nbox_num = 3\nextra_coats = coat_num % box_num\nans = extra_coats",
            "# Python code, return ans\ntotal_coats = 29\nboxes = 3\nextra_coats = total_coats % boxes\nans = extra_coats",
            "# Python code, return ans\ncoat_num = 29\nbox_num = 3\nextra_coats = coat_num % box_num\nans = extra_coats"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Bianca wanted to drink exactly 5 bottles of water each day, so she bought 47 bottles when they were on sale. How many more bottles will she need to buy on the last day?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\ntotal_bottles_bought = 47\nbottles_per_day = 5\ndays = total_bottles_bought // bottles_per_day\nremaining_bottles = total_bottles_bought - (days * bottles_per_day)\nbottles_to_buy = bottles_per_day - remaining_bottles\nans = bottles_to_buy",
            "# Python code, return ans\ntotal_bought = 47\ndesired_daily = 5\ndays = total_bought // desired_daily\nremaining_bottles = total_bought - (days * desired_daily)\nneeded_bottles = desired_daily - remaining_bottles\nans = needed_bottles",
            "# Python code, return ans\ntotal_bottles_bought = 47\nbottles_per_day = 5\ndays = total_bottles_bought // bottles_per_day\nremaining_bottles = total_bottles_bought % bottles_per_day\nbottles_to_buy = bottles_per_day - remaining_bottles\nans = bottles_to_buy"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Paul had 7 baseball cards he's putting into a binder with 3 on each page. How many cards will he have on the page that isn't full?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\ncards_total = 7\ncards_per_page = 3\ncards_on_last_page = cards_total % cards_per_page\nans = cards_on_last_page",
            "# Python code, return ans\ncards_total = 7\ncards_per_page = 3\ncards_on_last_page = cards_total % cards_per_page\nans = cards_on_last_page",
            "# Python code, return ans\ncards_total = 7\ncards_per_page = 3\ncards_on_last_page = cards_total % cards_per_page\nans = cards_on_last_page"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "A pizza store had 11 pieces of pepperoni to put on their pizzas. If each pizza got 2 pieces, how many extra pieces of pepperoni would they have?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\ntotal_pepperoni = 11\npepperoni_per_pizza = 2\nextra_pepperoni = total_pepperoni % pepperoni_per_pizza\nans = extra_pepperoni",
            "# Python code, return ans\ntotal_pepperoni = 11\npepperoni_per_pizza = 2\nextra_pepperoni = total_pepperoni % pepperoni_per_pizza\nans = extra_pepperoni",
            "# Python code, return ans\ntotal_pepperoni = 11\npepperoni_per_pizza = 2\nextra_pepperoni = total_pepperoni % pepperoni_per_pizza\nans = extra_pepperoni"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "A movie store had 9 movies they were putting on 2 shelves. If the owner wanted to make sure each shelf had the same number of movies, how many more movies would he need?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\nmovies = 9\nshelves = 2\ni = 0\nwhile shelves * i < movies:\n    i += 1\nmovies_needed = shelves * i - movies\nans = movies_needed",
            "# Python code, return ans\nmovies = 9\nshelves = 2\ni = 0\nwhile shelves * i < movies:\n    i += 1\nmovies_needed = shelves * i - movies\nans = movies_needed",
            "# Python code, return ans\nmovies = 9\nshelves = 2\ni = 0\nwhile shelves * i < movies:\n    i += 1\nmovies_needed = shelves * i - movies\nans = movies_needed"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "At the carnival, 6 friends bought 27 tickets. If they wanted to split all the tickets so each friend got the same amount, how many more tickets would they need to buy?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nticket_num = 27\nfriend_num = 6\ni = 0\nwhile friend_num * i < ticket_num:\n    i += 1\ntickets_to_buy = friend_num * i - ticket_num\nans = tickets_to_buy\nans",
            "# Python code, return ans\nticket_num = 27\nfriend_num = 6\ni = 0\nwhile friend_num * i < ticket_num:\n    i += 1\ntickets_to_buy = friend_num * i - ticket_num\nans = tickets_to_buy\nans",
            "# Python code, return ans\nticket_num = 27\nfriend_num = 6\ni = 0\nwhile friend_num * i < ticket_num:\n    i += 1\ntickets_to_buy = friend_num * i - ticket_num\nans = tickets_to_buy\nans"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "An art museum had 15 pictures to split equally into 2 different exhibits. How many more pictures would they need to make sure each exhibit had the same amount?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\npictures = 15\nexhibits = 2\ni = 0\nwhile exhibits * i < pictures:\n    i += 1\npictures_needed = exhibits * i - pictures\nans = pictures_needed",
            "# Python code, return ans\npictures = 15\nexhibits = 2\ni = 0\nwhile exhibits * i < pictures:\n    i += 1\npictures_needed = exhibits * i - pictures\nans = pictures_needed",
            "# Python code, return ans\npictures = 15\nexhibits = 2\ni = 0\nwhile exhibits * i < pictures:\n    i += 1\npictures_needed = exhibits * i - pictures\nans = pictures_needed"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "Luke had 9 pieces of candy. If he wants to split the candy into 2 bags with the same amount of candy in each bag, how many more pieces would he need to make sure each bag had the same amount?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\ncandy_num = 9\nbag_num = 2\ni = 0\nwhile bag_num * i < candy_num:\n    i += 1\ncandy_needed = bag_num * i - candy_num\nans = candy_needed",
            "# Python code, return ans\ncandy_num = 9\nbag_num = 2\ni = 0\nwhile bag_num * i < candy_num:\n    i += 1\ncandy_needed = bag_num * i - candy_num\nans = candy_needed",
            "# Python code, return ans\ncandy_num = 9\nbag_num = 2\ni = 0\nwhile bag_num * i < candy_num:\n    i += 1\ncandy_needed = bag_num * i - candy_num\nans = candy_needed"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "A baker had 7 boxes for donuts. He ended up making 48 donuts and splitting them evenly between the boxes. How many extra donuts did he end up with?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ndonuts_made = 48\nboxes = 7\ndonuts_per_box = donuts_made // boxes\nextra_donuts = donuts_made - (donuts_per_box * boxes)\nans = extra_donuts",
            "# Python code, return ans\ndonuts_made = 48\nboxes = 7\ndonuts_per_box = donuts_made // boxes\nextra_donuts = donuts_made % boxes\nans = extra_donuts",
            "# Python code, return ans\ndonuts = 48\nboxes = 7\ndonuts_per_box = donuts // boxes\nextra_donuts = donuts - (donuts_per_box * boxes)\nans = extra_donuts"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "George bought 17 pieces of candy to give to 5 of his friends. If he wants to give each friend the same amount, how many pieces would he have left over?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ncandy_num = 17\nfriend_num = 5\nleft_over_candy = candy_num % friend_num\nans = left_over_candy",
            "# Python code, return ans\ncandy_num = 17\nfriend_num = 5\nleft_over_candy = candy_num % friend_num\nans = left_over_candy",
            "# Python code, return ans\ncandy_num = 17\nfriend_num = 5\nleft_over_candy = candy_num % friend_num\nans = left_over_candy"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "A school had 14 students sign up for the trivia teams. If they wanted to have 4 team, with the same number of students on each team, how many more students would need to sign up?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\nstudents_signed_up = 14\nteams = 4\ni = 0\nwhile teams * i < students_signed_up:\n    i += 1\nstudents_needed = teams * i - students_signed_up\nans = students_needed",
            "# Python code, return ans\ncurrent_students = 14\ndesired_teams = 4\ni = 0\nwhile desired_teams * i < current_students:\n    i += 1\nstudents_to_signup = desired_teams * i - current_students\nans = students_to_signup",
            "# Python code, return ans\ncurrent_students = 14\ndesired_teams = 4\ni = 0\nwhile desired_teams * i < current_students:\n    i += 1\nstudents_to_signup = desired_teams * i - current_students\nans = students_to_signup"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Robin is making bead necklaces. She wants to use 31 beads to make 4 necklaces. If she wants each necklace to have the same number of beads, how many beads will she have left over?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nbeads = 31\nnecklaces = 4\nbeads_per_necklace = beads // necklaces\nleftover_beads = beads % necklaces\nans = leftover_beads",
            "# Python code, return ans\nbeads = 31\nnecklaces = 4\nbeads_per_necklace = beads // necklaces\nleftover_beads = beads % necklaces\nans = leftover_beads",
            "# Python code, return ans\nbeads = 31\nnecklaces = 4\nbeads_per_necklace = beads // necklaces\nleftover_beads = beads % necklaces\nans = leftover_beads"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Lemon heads come in packages of 5. Ann ate 78 Lemon Heads. How many Lemon Heads does she have left?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\ntotal_lemon_heads = 78\npackage_size = 5\npackages_eaten = total_lemon_heads // package_size\nlemon_heads_left = total_lemon_heads % package_size\nans = lemon_heads_left",
            "# Python code, return ans\npackage_size = 5\ntotal_lemon_heads = 78\nremaining_lemon_heads = total_lemon_heads % package_size\nans = remaining_lemon_heads",
            "# Python code, return ans\ntotal_lemon_heads = 78\npackage_size = 5\nlemon_heads_left = total_lemon_heads % package_size\nans = lemon_heads_left"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Sweettarts come in packages of 7. Stephen ate 64 Sweettarts. How many Sweettarts does he have left?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\ntotal_sweettarts = 64\npackage_size = 7\npackages_eaten = total_sweettarts // package_size\nremaining_sweettarts = total_sweettarts % package_size\nans = remaining_sweettarts",
            "# Python code, return ans\ntotal_sweettarts = 64\nsweettarts_per_package = 7\nremaining_sweettarts = total_sweettarts % sweettarts_per_package\nans = remaining_sweettarts",
            "# Python code, return ans\ntotal_sweettarts = 64\npackage_size = 7\nsweettarts_left = total_sweettarts % package_size\nans = sweettarts_left"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "Candies come in packages of 4. Shirley ate 10 candies. How many candies does she have left?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ncandies_per_package = 4\ntotal_candies = 10\nremaining_candies = total_candies % candies_per_package\nans = remaining_candies",
            "# Python code, return ans\ncandies_per_package = 4\ntotal_candies = 10\ncandies_left = total_candies % candies_per_package\nans = candies_left",
            "# Python code, return ans\ncandies_per_package = 4\ntotal_candies = 10\ncandies_left = total_candies % candies_per_package\nans = candies_left"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Jawbreakers come in packages of 8. Sarah ate 20 Jawbreakers. How many Jawbreakers does she have left?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\njawbreakers_per_package = 8\ntotal_jawbreakers = 20\njawbreakers_left = total_jawbreakers % jawbreakers_per_package\nans = jawbreakers_left",
            "# Python code, return ans\njawbreakers_per_package = 8\ntotal_jawbreakers = 20\njawbreakers_left = total_jawbreakers % jawbreakers_per_package\nans = jawbreakers_left",
            "# Python code, return ans\njawbreakers_per_package = 8\ntotal_jawbreakers = 20\njawbreakers_left = total_jawbreakers % jawbreakers_per_package\nans = jawbreakers_left"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Adam has two oranges. Michele has two oranges. What's the difference of the number of Adam's oranges and Michele's oranges?",
        "answer": 0,
        "generated": [
            "# Python code, return ans\nAdam_oranges = 2\nMichele_oranges = 2\ndifference = Adam_oranges - Michele_oranges\nans = difference",
            "# Python code, return ans\nAdam_oranges = 2\nMichele_oranges = 2\ndifference = Adam_oranges - Michele_oranges\nans = difference",
            "# Python code, return ans\nAdam_oranges = 2\nMichele_oranges = 2\ndifference = Adam_oranges - Michele_oranges\nans = difference"
        ],
        "results": [
            0.0,
            0.0,
            0.0
        ],
        "result_counter": {
            "0.0": 3
        },
        "prediction": 0.0
    },
    {
        "question": "Audrey has 26 peaches. Paul has 48 peaches. What's the difference of the number of Audrey's peaches and Paul's peaches?",
        "answer": 22,
        "generated": [
            "# Python code, return ans\nAudrey_peaches = 26\nPaul_peaches = 48\ndifference_peaches = abs(Audrey_peaches - Paul_peaches)\nans = difference_peaches",
            "# Python code, return ans\nAudrey_peaches = 26\nPaul_peaches = 48\ndifference_peaches = Paul_peaches - Audrey_peaches\nans = difference_peaches",
            "# Python code, return ans\nAudrey_peaches = 26\nPaul_peaches = 48\ndifference_peaches = Paul_peaches - Audrey_peaches\nans = difference_peaches"
        ],
        "results": [
            22.0,
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 3
        },
        "prediction": 22.0
    },
    {
        "question": "Sharon has seven plums. Allan has 10 plums. What's the difference of the number of Sharon's plums and Allan's plums?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nSharon_plums = 7\nAllan_plums = 10\ndifference_plums = Allan_plums - Sharon_plums\nans = difference_plums",
            "# Python code, return ans\nSharon_plums = 7\nAllan_plums = 10\ndifference = Allan_plums - Sharon_plums\nans = difference",
            "# Python code, return ans\nSharon_plums = 7\nAllan_plums = 10\ndifference_plums = Allan_plums - Sharon_plums\nans = difference_plums"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "You have 7 balloons and your friend has 5 balloons. What's the difference of the number of your balloons and your friend's balloons?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\nyour_balloons = 7\nfriend_balloons = 5\ndifference = your_balloons - friend_balloons\nans = difference",
            "# Python code, return ans\nyour_balloons = 7\nfriend_balloons = 5\ndifference = your_balloons - friend_balloons\nans = difference",
            "# Python code, return ans\nyour_balloons = 7\nfriend_balloons = 5\ndifference = your_balloons - friend_balloons\nans = difference"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "There are 6 birds and 3 nests. What's the difference of the number of birds and nests over there?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nbirds = 6\nnests = 3\ndifference = birds - nests\nans = difference",
            "# Python code, return ans\nbirds = 6\nnests = 3\ndifference = birds - nests\nans = difference",
            "# Python code, return ans\nbird_num = 6\nnest_num = 3\ndifference = bird_num - nest_num\nans = difference"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "There are 5 flowers and 3 bees. What's the difference of the number of flowers and bees over there?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\nflowers = 5\nbees = 3\ndifference = flowers - bees\nans = difference",
            "# Python code, return ans\nflowers = 5\nbees = 3\ndifference = flowers - bees\nans = difference",
            "# Python code, return ans\nflowers = 5\nbees = 3\ndifference = flowers - bees\nans = difference"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "There are 4 squirrels in a tree with 2 nuts. What's the difference of the number of squirrels and nuts over there?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\nsquirrels = 4\nnuts = 2\ndifference = squirrels - nuts\nans = difference",
            "# Python code, return ans\nsquirrels = 4\nnuts = 2\ndifference = squirrels - nuts\nans = difference",
            "# Python code, return ans\nsquirrels = 4\nnuts = 2\ndifference = squirrels - nuts\nans = difference"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Alyssa had 129 cookies. Aiyanna has 140. What's the difference of the number of Alyssa's cookies and Aiyanna's cookies?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\nAlyssa_cookies = 129\nAiyanna_cookies = 140\ndifference_cookies = Aiyanna_cookies - Alyssa_cookies\nans = difference_cookies",
            "# Python code, return ans\nAlyssa_cookies = 129\nAiyanna_cookies = 140\ndifference_cookies = Aiyanna_cookies - Alyssa_cookies\nans = difference_cookies",
            "# Python code, return ans\nAlyssa_cookies = 129\nAiyanna_cookies = 140\ndifference_cookies = Aiyanna_cookies - Alyssa_cookies\nans = difference_cookies"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "Mrs. Sheridan has 11 cats. Mrs. Garrett has 24 cats. What's the difference of the number of Mrs. Sheridan's cats and Mrs. Garrett's cats?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\nMrs_Sheridan_cats = 11\nMrs_Garrett_cats = 24\ndifference = abs(Mrs_Sheridan_cats - Mrs_Garrett_cats)\nans = difference",
            "# Python code, return ans\nMrs_Sheridan_cats = 11\nMrs_Garrett_cats = 24\ndifference_cats = abs(Mrs_Sheridan_cats - Mrs_Garrett_cats)\nans = difference_cats",
            "# Python code, return ans\nMrs_Sheridan_cats = 11\nMrs_Garrett_cats = 24\ncat_difference = abs(Mrs_Sheridan_cats - Mrs_Garrett_cats)\nans = cat_difference"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "Mrs. Santiago has 58 red roses. Mrs. Garrett has 24. What's the difference of the number of Mrs. Santiago's red roses and Mrs. Garrett's red roses?",
        "answer": 34,
        "generated": [
            "# Python code, return ans\nMrs_Santiago_red_roses = 58\nMrs_Garrett_red_roses = 24\ndifference_red_roses = Mrs_Santiago_red_roses - Mrs_Garrett_red_roses\nans = difference_red_roses",
            "# Python code, return ans\nMrs_Santiago_roses = 58\nMrs_Garrett_roses = 24\ndifference_roses = Mrs_Santiago_roses - Mrs_Garrett_roses\nans = difference_roses",
            "# Python code, return ans\nMrs_Santiago_red_roses = 58\nMrs_Garrett_red_roses = 24\ndifference_red_roses = Mrs_Santiago_red_roses - Mrs_Garrett_red_roses\nans = difference_red_roses"
        ],
        "results": [
            34.0,
            34.0,
            34.0
        ],
        "result_counter": {
            "34.0": 3
        },
        "prediction": 34.0
    },
    {
        "question": "Bobby has 142 books. Kristi has 78 books. What's the difference of the number of Bobby's books and Kristi's books?",
        "answer": 64,
        "generated": [
            "# Python code, return ans\nBobby_books = 142\nKristi_books = 78\ndifference_books = Bobby_books - Kristi_books\nans = difference_books",
            "# Python code, return ans\nBobby_books = 142\nKristi_books = 78\ndifference_books = Bobby_books - Kristi_books\nans = difference_books",
            "# Python code, return ans\nBobby_books = 142\nKristi_books = 78\ndifference_books = Bobby_books - Kristi_books\nans = difference_books"
        ],
        "results": [
            64.0,
            64.0,
            64.0
        ],
        "result_counter": {
            "64.0": 3
        },
        "prediction": 64.0
    },
    {
        "question": "Diane wants to buy a package of cookies. The cookies cost 65 cents. Diane has 27 cents. What's the difference between the cost of the cookies and the money of Diane?",
        "answer": 38,
        "generated": [
            "# Python code, return ans\ncookie_cost = 65\nDiane_money = 27\ndifference = cookie_cost - Diane_money\nans = difference",
            "# Python code, return ans\ncookie_cost = 65\nDiane_money = 27\ndifference = cookie_cost - Diane_money\nans = difference",
            "# Python code, return ans\ncookie_cost = 65\nDiane_money = 27\ndifference = cookie_cost - Diane_money\nans = difference"
        ],
        "results": [
            38.0,
            38.0,
            38.0
        ],
        "result_counter": {
            "38.0": 3
        },
        "prediction": 38.0
    },
    {
        "question": "There are 45 questions on the math test. 17 questions are word problems. 28 questions are addition and subtraction problems. Steve can only answer 38 questions. What's the difference between the number of all questions on the math test and the number of questions that Steve can answer?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ntotal_questions = 45\nSteve_answers = 38\ndifference = total_questions - Steve_answers\nans = difference",
            "# Python code, return ans\ntotal_questions = 45\nquestions_steve_can_answer = 38\ndifference = total_questions - questions_steve_can_answer\nans = difference",
            "# Python code, return ans\ntotal_questions = 45\nquestions_steve_can_answer = 38\ndifference = total_questions - questions_steve_can_answer\nans = difference"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "At the arcade Billy had won forty-eight tickets. After buying a yoyo he had thirty-two tickets left. What's the difference between the number of Billy's tickets he won and he had the left after buying yoyo?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\ntickets_won = 48\ntickets_left = 32\ndifference = tickets_won - tickets_left\nans = difference",
            "# Python code, return ans\ntickets_won = 48\ntickets_left = 32\ndifference = tickets_won - tickets_left\nans = difference",
            "# Python code, return ans\ntickets_won = 48\ntickets_left = 32\ndifference = tickets_won - tickets_left\nans = difference"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "For Halloween Frank got fifteen pounds of candy. If he gave eight pounds to Nancy, what's the difference between the pounds of Frank's candy before he gave Nancy and he gave to?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ninitial_candy = 15\ngiven_candy = 8\nremaining_candy = initial_candy - given_candy\nans = remaining_candy",
            "# Python code, return ans\ninitial_candy = 15\ncandy_given_to_Nancy = 8\nremaining_candy = initial_candy - candy_given_to_Nancy\nans = remaining_candy",
            "# Python code, return ans\ninitial_candy = 15\ngiven_to_Nancy = 8\ndifference = initial_candy - given_to_Nancy\nans = difference"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Billy was playing basketball with his friend. Billy scored 7 points and his friend scored 9 points. What's the difference between Billy's points and his friend's points?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\nBilly_points = 7\nfriend_points = 9\npoint_difference = friend_points - Billy_points\nans = point_difference",
            "# Python code, return ans\nBilly_points = 7\nfriend_points = 9\npoint_difference = friend_points - Billy_points\nans = point_difference",
            "# Python code, return ans\nBilly_points = 7\nfriend_points = 9\npoint_difference = friend_points - Billy_points\nans = point_difference"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "When Maria got to the fair she had $87. When she left she had $16. What's the difference between the number of dollars when Maria got and left the fair?",
        "answer": 71,
        "generated": [
            "# Python code, return ans\nMaria_money_start = 87\nMaria_money_end = 16\nmoney_difference = Maria_money_start - Maria_money_end\nans = money_difference",
            "# Python code, return ans\nMaria_money_start = 87\nMaria_money_end = 16\ndifference_money = Maria_money_start - Maria_money_end\nans = difference_money",
            "# Python code, return ans\nMaria_initial_money = 87\nMaria_final_money = 16\nmoney_difference = Maria_initial_money - Maria_final_money\nans = money_difference"
        ],
        "results": [
            71.0,
            71.0,
            71.0
        ],
        "result_counter": {
            "71.0": 3
        },
        "prediction": 71.0
    },
    {
        "question": "Haley collected 9 cans for recycling. If she put 7 cans in one bag, what's the difference between the number of recycling cans that Haley collected and put in the bag?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ncans_collected = 9\ncans_in_bag = 7\ndifference = cans_collected - cans_in_bag\nans = difference",
            "# Python code, return ans\ncans_collected = 9\ncans_in_bag = 7\ndifference = cans_collected - cans_in_bag\nans = difference",
            "# Python code, return ans\ncans_collected = 9\ncans_in_bag = 7\ndifference = cans_collected - cans_in_bag\nans = difference"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Paul spent $75. Now he has $11. What's the difference between the number of dollars that he spent and he has now?",
        "answer": 64,
        "generated": [
            "# Python code, return ans\nspent_money = 75\nremaining_money = 11\ndifference_money = spent_money - remaining_money\nans = difference_money",
            "# Python code, return ans\nspent = 75\nremaining = 11\ndifference = spent - remaining\nans = difference",
            "# Python code, return ans\nspent_money = 75\ncurrent_money = 11\ndifference = spent_money - current_money\nans = difference"
        ],
        "results": [
            64.0,
            64.0,
            64.0
        ],
        "result_counter": {
            "64.0": 3
        },
        "prediction": 64.0
    },
    {
        "question": "Paige had 2 pencils in her desk, 2 in her backpack and 15 at home. What's the difference between the number of pencils in Paige's backpack and at Paige's home?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\npencils_desk = 2\npencils_backpack = 2\npencils_home = 15\ndifference = abs(pencils_backpack - pencils_home)\nans = difference",
            "# Python code, return ans\npencils_desk = 2\npencils_backpack = 2\npencils_home = 15\ndifference = abs(pencils_backpack - pencils_home)\nans = difference",
            "# Python code, return ans\npencils_desk = 2\npencils_backpack = 2\npencils_home = 15\ndifference = abs(pencils_backpack - pencils_home)\nans = difference"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "A chef had forty-six apples. After making some pies he had fourteen left. What's the difference between the number of apples before the chef made pies and the after the chef making pies?",
        "answer": 32,
        "generated": [
            "# Python code, return ans\napples_before = 46\napples_after = 14\ndifference = apples_before - apples_after\nans = difference",
            "# Python code, return ans\napples_before = 46\napples_after = 14\ndifference = apples_before - apples_after\nans = difference",
            "# Python code, return ans\napples_before = 46\napples_after = 14\ndifference = apples_before - apples_after\nans = difference"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "Ted and Fred measured their height. Fred's height is 98 inches. Ted is 39 inches tall. What's the difference between Ted's height and Fred's height?",
        "answer": 59,
        "generated": [
            "# Python code, return ans\nFred_height = 98\nTed_height = 39\ndifferent_height = Fred_height - Ted_height\nans = different_height\nans",
            "# Python code, return ans\nFred_height = 98\nTed_height = 39\ndifferent_height = Fred_height - Ted_height\nans = different_height\nans",
            "# Python code, return ans\nFred_height = 98\nTed_height = 39\ndifferent_height = Fred_height - Ted_height\nans = different_height\nans"
        ],
        "results": [
            59.0,
            59.0,
            59.0
        ],
        "result_counter": {
            "59.0": 3
        },
        "prediction": 59.0
    },
    {
        "question": "Oliver was weighing boxes for moving. The first was 2 pounds, the second was 3 pounds and the last was 13 pounds. What's the difference between the weight of the first box and the third box?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\nfirst_box_weight = 2\nthird_box_weight = 13\ndifference_weight = third_box_weight - first_box_weight\nans = difference_weight",
            "# Python code, return ans\nfirst_box_weight = 2\nthird_box_weight = 13\ndifference_weight = third_box_weight - first_box_weight\nans = difference_weight",
            "# Python code, return ans\nfirst_box_weight = 2\nthird_box_weight = 13\ndifference_weight = third_box_weight - first_box_weight\nans = difference_weight"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "Haley had 2 dollars. If she got 13 more dollars in total for doing chores and her birthday, what's the difference between the number of dollars before Haley got money and she got from events?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\ninitial_dollars = 2\ndollars_received = 13\ndifference = dollars_received - initial_dollars\nans = difference",
            "# Python code, return ans\ninitial_amount = 2\nadditional_amount = 13\ndifference = additional_amount - initial_amount\nans = difference",
            "# Python code, return ans\ninitial_dollars = 2\nadditional_dollars = 13\ndifference = additional_dollars - initial_dollars\nans = difference"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "Kale mowed his lawn 8 times total during the spring. If he mowed it 5 times in the summer. What's the difference between the number of times on mowing in the spring and summer?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nmowed_spring = 8\nmowed_summer = 5\ndifference = mowed_spring - mowed_summer\nans = difference",
            "# Python code, return ans\nmowed_spring = 8\nmowed_summer = 5\ndifference = mowed_spring - mowed_summer\nans = difference",
            "# Python code, return ans\nmowed_spring = 8\nmowed_summer = 5\ndifference = mowed_spring - mowed_summer\nans = difference"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "A farmer had seventeen tomatoes from his garden. If he picked nine of them, what's the difference between the number of tomatoes before picking and he picked?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ntotal_tomatoes = 17\npicked_tomatoes = 9\ndifference = total_tomatoes - picked_tomatoes\nans = difference",
            "# Python code, return ans\ntotal_tomatoes = 17\npicked_tomatoes = 9\ndifference = total_tomatoes - picked_tomatoes\nans = difference",
            "# Python code, return ans\ntotal_tomatoes = 17\npicked_tomatoes = 9\ndifference = total_tomatoes - picked_tomatoes\nans = difference"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Dave was picking up sticks from his yard. He picked up fourteen but there were still four left. What's the difference between the number of sticks that Dave picked up and the left?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\npicked_up_sticks = 14\nleft_sticks = 4\ndifference = picked_up_sticks - left_sticks\nans = difference",
            "# Python code, return ans\npicked_up_sticks = 14\nleft_sticks = 4\ndifference_sticks = picked_up_sticks - left_sticks\nans = difference_sticks",
            "# Python code, return ans\npicked_up_sticks = 14\nleft_sticks = 4\ndifference = picked_up_sticks - left_sticks\nans = difference"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "A waiter had nineteen customers. After some left he still had four customers. What's the difference between the number of customers before leaving and after leaving?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\ncustomers_before = 19\ncustomers_after = 4\ndifference = customers_before - customers_after\nans = difference",
            "# Python code, return ans\ncustomers_before = 19\ncustomers_after = 4\ndifference = customers_before - customers_after\nans = difference",
            "# Python code, return ans\ncustomers_before = 19\ncustomers_after = 4\ndifference_customers = customers_before - customers_after\nans = difference_customers"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "While playing a video game Victor lost fourteen lives. Now he has two lives. What's the difference between the number of the lives that Victor lost and now?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nlives_lost = 14\nlives_now = 2\ndifference = lives_lost - lives_now\nans = difference",
            "# Python code, return ans\nlives_lost = 14\ncurrent_lives = 2\ndifference = lives_lost - current_lives\nans = difference",
            "# Python code, return ans\nlives_lost = 14\nlives_now = 2\ndifference = lives_lost - lives_now\nans = difference"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "A pet store had sixty-eight gerbils. If they sold fourteen of them, what's the difference between the number of gerbils that they had before selling and they sold?",
        "answer": 54,
        "generated": [
            "# Python code, return ans\ngerbils_before = 68\ngerbils_sold = 14\ndifference = gerbils_before - gerbils_sold\nans = difference",
            "# Python code, return ans\ntotal_gerbils = 68\nsold_gerbils = 14\ndifference = total_gerbils - sold_gerbils\nans = difference",
            "# Python code, return ans\ninitial_gerbils = 68\nsold_gerbils = 14\ndifference = initial_gerbils - sold_gerbils\nans = difference"
        ],
        "results": [
            54.0,
            54.0,
            54.0
        ],
        "result_counter": {
            "54.0": 3
        },
        "prediction": 54.0
    },
    {
        "question": "Tripp and Charlotte are going on a 36 mile hike. Tripp's backpack weighs 25 pounds. Charlotte's backpack weighs 18 pounds. They hiked 9 miles the first day. What's the difference between the pounds of backpack of Tripp and Charlotte?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nTripp_backpack = 25\nCharlotte_backpack = 18\ndifference_backpack = Tripp_backpack - Charlotte_backpack\nans = difference_backpack",
            "# Python code, return ans\nTripp_backpack_weight = 25\nCharlotte_backpack_weight = 18\nweight_difference = Tripp_backpack_weight - Charlotte_backpack_weight\nans = weight_difference",
            "# Python code, return ans\nTripp_backpack = 25\nCharlotte_backpack = 18\nweight_difference = Tripp_backpack - Charlotte_backpack\nans = weight_difference"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Oliver had sixteen cherries. After eating some, he had six left. What's the difference between the number of cherries that Oliver had before eating and the left after eating?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\ncherries_before_eating = 16\ncherries_left = 6\ncherries_eaten = cherries_before_eating - cherries_left\nans = cherries_eaten",
            "# Python code, return ans\ncherries_before = 16\ncherries_left = 6\ncherries_eaten = cherries_before - cherries_left\nans = cherries_eaten",
            "# Python code, return ans\ncherries_before_eating = 16\ncherries_left = 6\ncherries_eaten = cherries_before_eating - cherries_left\nans = cherries_eaten"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "A furniture store had fifteen chairs. After selling some, there was three left. What's the difference between the number of chairs before selling and the left?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\ninitial_chairs = 15\nchairs_left = 3\nchairs_sold = initial_chairs - chairs_left\nans = chairs_sold",
            "# Python code, return ans\ntotal_chairs = 15\nchairs_left = 3\nchairs_sold = total_chairs - chairs_left\nans = chairs_sold",
            "# Python code, return ans\ntotal_chairs = 15\nleft_chairs = 3\nsold_chairs = total_chairs - left_chairs\nans = sold_chairs"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "A store has forty-nine shirts. After selling some there were twenty-eight left. What's the difference between of the number of shirts before selling and after selling?",
        "answer": 21,
        "generated": [
            "# Python code, return ans\nshirts_before = 49\nshirts_after = 28\nshirts_sold = shirts_before - shirts_after\nans = shirts_sold",
            "# Python code, return ans\nshirts_before = 49\nshirts_after = 28\nshirts_sold = shirts_before - shirts_after\nans = shirts_sold",
            "# Python code, return ans\nshirts_before = 49\nshirts_after = 28\nshirts_sold = shirts_before - shirts_after\nans = shirts_sold"
        ],
        "results": [
            21.0,
            21.0,
            21.0
        ],
        "result_counter": {
            "21.0": 3
        },
        "prediction": 21.0
    },
    {
        "question": "Tom used 2 batteries on his flashlights, 15 in his toys and 2 in his controllers. What's the difference between the number of Tom's batteries on flashlights and in toys?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\nbatteries_flashlights = 2\nbatteries_toys = 15\ndifference_batteries = batteries_toys - batteries_flashlights\nans = difference_batteries",
            "# Python code, return ans\nbatteries_flashlights = 2\nbatteries_toys = 15\ndifference = batteries_toys - batteries_flashlights\nans = difference",
            "# Python code, return ans\nbatteries_flashlights = 2\nbatteries_toys = 15\ndifference_batteries = batteries_toys - batteries_flashlights\nans = difference_batteries"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "The Vance family walked over to the post office. They bought 2 rooster stamps and 2 daffodil stamps. What's the difference between of the number of the two kinds of stamps?",
        "answer": 0,
        "generated": [
            "# Python code, return ans\nrooster_stamps = 2\ndaffodil_stamps = 2\ndifference = abs(rooster_stamps - daffodil_stamps)\nans = difference",
            "# Python code, return ans\nrooster_stamps = 2\ndaffodil_stamps = 2\ndifference = abs(rooster_stamps - daffodil_stamps)\nans = difference",
            "# Python code, return ans\nrooster_stamps = 2\ndaffodil_stamps = 2\ndifference = abs(rooster_stamps - daffodil_stamps)\nans = difference"
        ],
        "results": [
            0.0,
            0.0,
            0.0
        ],
        "result_counter": {
            "0.0": 3
        },
        "prediction": 0.0
    },
    {
        "question": "Zoe picked five apples from her tree. Now the tree has six apples still on it. What's the difference between the number of apples Zoe picked and now the tree has?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\napples_picked = 5\napples_on_tree = 6\ndifference = abs(apples_picked - apples_on_tree)\nans = difference",
            "# Python code, return ans\napples_picked = 5\napples_on_tree = 6\ndifference = abs(apples_picked - apples_on_tree)\nans = difference",
            "# Python code, return ans\napples_picked = 5\napples_on_tree = 6\ndifference = abs(apples_picked - apples_on_tree)\nans = difference"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "A museum had fourteen paintings. After they got rid of some, they had four left. What's the difference between the number of paintings before they got rid of and the left?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\npaintings_before = 14\npaintings_left = 4\ndifference = paintings_before - paintings_left\nans = difference",
            "# Python code, return ans\npaintings_before = 14\npaintings_left = 4\ndifference = paintings_before - paintings_left\nans = difference",
            "# Python code, return ans\npaintings_before = 14\npaintings_left = 4\ndifference = paintings_before - paintings_left\nans = difference"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "A clown had sixteen balloons. He gave four away at a party. What's the difference between the number of balloons the clown had in the beginning and he gave away at a party?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\ninitial_balloons = 16\ngiven_away = 4\ndifference = initial_balloons - given_away\nans = difference",
            "# Python code, return ans\ninitial_balloons = 16\ngiven_away_balloons = 4\ndifference = initial_balloons - given_away_balloons\nans = difference",
            "# Python code, return ans\ninitial_balloons = 16\ngiven_away_balloons = 4\ndifference = initial_balloons - given_away_balloons\nans = difference"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "For a party Janet bought some cupcakes. She bought 2 chocolate, 13 vanilla and 2 strawberry. What's the difference between the number of cupcakes of chocolate flavor and the vanilla flavor?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\nchocolate_cupcakes = 2\nvanilla_cupcakes = 13\nstrawberry_cupcakes = 2\ndifference_cupcakes = vanilla_cupcakes - chocolate_cupcakes\nans = difference_cupcakes",
            "# Python code, return ans\nchocolate_cupcakes = 2\nvanilla_cupcakes = 13\nstrawberry_cupcakes = 2\ndifference = vanilla_cupcakes - chocolate_cupcakes\nans = difference",
            "# Python code, return ans\nchocolate_cupcakes = 2\nvanilla_cupcakes = 13\nstrawberry_cupcakes = 2\ndifference_cupcakes = vanilla_cupcakes - chocolate_cupcakes\nans = difference_cupcakes"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "The library has 75 science books. The second graders borrowed 18 of them. What's the difference between the number of science books the library has in the beginning and the second graders borrowed?",
        "answer": 57,
        "generated": [
            "# Python code, return ans\ntotal_science_books = 75\nborrowed_books = 18\ndifference = total_science_books - borrowed_books\nans = difference",
            "# Python code, return ans\nscience_books_total = 75\nborrowed_books = 18\ndifference = science_books_total - borrowed_books\nans = difference",
            "# Python code, return ans\ntotal_science_books = 75\nborrowed_books = 18\ndifference = total_science_books - borrowed_books\nans = difference"
        ],
        "results": [
            57.0,
            57.0,
            57.0
        ],
        "result_counter": {
            "57.0": 3
        },
        "prediction": 57.0
    },
    {
        "question": "Amy had some candy. She gave her friend six pieces and had five left. What's the difference between of the pieces of candy Amy gave away and the left?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\ncandy_given = 6\ncandy_left = 5\ndifference = candy_given - candy_left\nans = difference",
            "# Python code, return ans\ncandy_given = 6\ncandy_left = 5\ndifference = candy_given - candy_left\nans = difference",
            "# Python code, return ans\ncandy_given = 6\ncandy_left = 5\ndifference = candy_given - candy_left\nans = difference"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "At a bus stop five people got off the bus. Now there were ninety people on the bus. What's the difference between the number of people getting off the bus and still on the bus?",
        "answer": 85,
        "generated": [
            "# Python code, return ans\npeople_got_off = 5\npeople_on_bus = 90\ndifference = people_on_bus - people_got_off\nans = difference",
            "# Python code, return ans\npeople_got_off = 5\npeople_on_bus = 90\ndifference = people_on_bus - people_got_off\nans = difference",
            "# Python code, return ans\npeople_got_off = 5\npeople_on_bus = 90\ndifference = people_on_bus - people_got_off\nans = difference"
        ],
        "results": [
            85.0,
            85.0,
            85.0
        ],
        "result_counter": {
            "85.0": 3
        },
        "prediction": 85.0
    },
    {
        "question": "A fast food restaurant had ninety-one hotdogs. After selling some they had twenty left. What's the difference between the number of hotdogs before selling and after selling?",
        "answer": 71,
        "generated": [
            "# Python code, return ans\nhotdogs_before = 91\nhotdogs_after = 20\ndifference = hotdogs_before - hotdogs_after\nans = difference",
            "# Python code, return ans\nhotdogs_before = 91\nhotdogs_after = 20\ndifference = hotdogs_before - hotdogs_after\nans = difference",
            "# Python code, return ans\nhotdogs_before = 91\nhotdogs_after = 20\nhotdogs_sold = hotdogs_before - hotdogs_after\nans = hotdogs_sold"
        ],
        "results": [
            71.0,
            71.0,
            71.0
        ],
        "result_counter": {
            "71.0": 3
        },
        "prediction": 71.0
    },
    {
        "question": "Miguel is 46 years old. He is 4 years older than thrice his son's age. Find the age of his son.",
        "answer": 14,
        "generated": [
            "# Python code, return ans\nMiguel_age = 46\nson_age = (Miguel_age - 4) / 3\nans = son_age",
            "# Python code, return ans\nMiguel_age = 46\nson_age = (Miguel_age - 4) / 3\nans = son_age",
            "# Python code, return ans\nMiguel_age = 46\nson_age = (Miguel_age - 4) / 3\nans = son_age"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "Pete, Bryan and Philip are cousins. Pete's age is one-third of Bryan and Philip is five years elder than Bryan. If the sum of the age of the cousins is 40, find the ages of each.",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nPete_age, Bryan_age, Philip_age = symbols('Pete_age Bryan_age Philip_age')\n\n# Equations\neq1 = Eq(Pete_age, Bryan_age / 3)\neq2 = Eq(Philip_age, Bryan_age + 5)\neq3 = Eq(Pete_age + Bryan_age + Philip_age, 40)\n\n# Solving equations\nages = solve((eq1, eq2, eq3), (Pete_age, Bryan_age, Philip_age))\n\nans = ages\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nBryan_age = Symbol('Bryan_age')\nPete_age = Bryan_age / 3\nPhilip_age = Bryan_age + 5\nage_sum = Pete_age + Bryan_age + Philip_age\n\nage_equation = age_sum - 40\nBryan_age_solution = solve(age_equation, Bryan_age)[0]\nPete_age_solution = Bryan_age_solution / 3\nPhilip_age_solution = Bryan_age_solution + 5\n\nans = (Pete_age_solution, Bryan_age_solution, Philip_age_solution)\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nBryan_age = Symbol('Bryan_age')\nPete_age = Bryan_age / 3\nPhilip_age = Bryan_age + 5\ntotal_age = Pete_age + Bryan_age + Philip_age\n\nage_equation = total_age - 40\nBryan_age_solution = solve(age_equation, Bryan_age)[0]\n\nPete_age_solution = Bryan_age_solution / 3\nPhilip_age_solution = Bryan_age_solution + 5\n\nans = (Pete_age_solution, Bryan_age_solution, Philip_age_solution)\nans"
        ],
        "results": [
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 2
        },
        "prediction": 5.0
    },
    {
        "question": "Ana is 5 years more than Jack. The sum of their ages is 29. Find the ages of Ana and Jack.",
        "answer": 17,
        "generated": [
            "# Python code, return ans\nsum_of_ages = 29\nage_difference = 5\nJack_age = (sum_of_ages - age_difference) / 2\nAna_age = Jack_age + age_difference\nans = (Ana_age, Jack_age)",
            "# Python code, return ans\ntotal_age = 29\nana_age_more = 5\njack_age = (total_age - ana_age_more) / 2\nana_age = jack_age + ana_age_more\nans = (ana_age, jack_age)",
            "# Python code, return ans\ntotal_age = 29\nAna_age_more_than_Jack = 5\nJack_age = (total_age - Ana_age_more_than_Jack) / 2\nAna_age = Jack_age + Ana_age_more_than_Jack\nans = (Ana_age, Jack_age)"
        ],
        "results": [
            17.0,
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 3
        },
        "prediction": 17.0
    },
    {
        "question": "Tina is 3 years younger than Tom. The ages are in the ratio 2:3. Find their ages.",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x') # Tom's age\ny = Symbol('y') # Tina's age\n\n# Tina is 3 years younger than Tom\nequation1 = y - x + 3\n\n# The ages are in the ratio 2:3\nequation2 = x/y - 2/3\n\n# Solve the system of equations\nages = solve((equation1, equation2), (x, y))\n\nans = ages[x], ages[y]",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x')\ny = Symbol('y')\n\n# Given, Tina is 3 years younger than Tom\neq1 = y - x - 3\n\n# Given, The ages are in the ratio 2:3\neq2 = x/y - 2/3\n\n# Solving the equations\nages = solve((eq1, eq2), (x, y))\n\nans = ages[x], ages[y]",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x')\ny = Symbol('y')\n\n# Given, Tina is 3 years younger than Tom\neq1 = x - y - 3\n\n# Given, the ages are in the ratio 2:3\neq2 = x / y - 2 / 3\n\n# Solving the equations\nages = solve((eq1, eq2), (x, y))\n\nans = ages\nans"
        ],
        "results": [
            -6.0,
            6.0
        ],
        "result_counter": {
            "-6.0": 1,
            "6.0": 1
        },
        "prediction": -6.0
    },
    {
        "question": "George is 8 years more than Christopher and Ford is 2 years younger than Christopher. The sum of their ages is 60. Find the ages of George, Christopher and Ford.",
        "answer": 26,
        "generated": [
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nChristopher_age = Symbol('C')\nGeorge_age = Christopher_age + 8\nFord_age = Christopher_age - 2\n\nage_sum = Christopher_age + George_age + Ford_age\n\nage_equation = age_sum - 60\n\nChristopher_age_solution = solve(age_equation, Christopher_age)[0]\nGeorge_age_solution = George_age.subs(Christopher_age, Christopher_age_solution)\nFord_age_solution = Ford_age.subs(Christopher_age, Christopher_age_solution)\n\nans = (George_age_solution, Christopher_age_solution, Ford_age_solution)\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nChristopher = Symbol('Christopher')\nGeorge = Christopher + 8\nFord = Christopher - 2\n\nage_sum = Christopher + George + Ford\nage_equation = age_sum - 60\n\nChristopher_age = solve(age_equation, Christopher)[0]\nGeorge_age = George.subs(Christopher, Christopher_age)\nFord_age = Ford.subs(Christopher, Christopher_age)\n\nans = (George_age, Christopher_age, Ford_age)\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nChristopher_age = Symbol('Christopher_age')\nGeorge_age = Christopher_age + 8\nFord_age = Christopher_age - 2\n\nage_sum = Christopher_age + George_age + Ford_age\n\nage_equation = age_sum - 60\n\nChristopher_age_solution = solve(age_equation, Christopher_age)[0]\nGeorge_age_solution = George_age.subs(Christopher_age, Christopher_age_solution)\nFord_age_solution = Ford_age.subs(Christopher_age, Christopher_age_solution)\n\nans = (George_age_solution, Christopher_age_solution, Ford_age_solution)\nans"
        ],
        "results": [
            26.0,
            26.0,
            26.0
        ],
        "result_counter": {
            "26.0": 3
        },
        "prediction": 26.0
    },
    {
        "question": "Devon is 12 years old. His age is 2 more than half the age of Steven. Find the age of Steven.",
        "answer": 20,
        "generated": [
            "# Python code, return ans\nDevon_age = 12\nSteven_age = (Devon_age - 2) * 2\nans = Steven_age",
            "# Python code, return ans\nDevon_age = 12\nSteven_age = (Devon_age - 2) * 2\nans = Steven_age",
            "# Python code, return ans\nDevon_age = 12\nhalf_Steven_age = Devon_age - 2\nSteven_age = half_Steven_age * 2\nans = Steven_age"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "Mrs. Smith is 8 years more than twice the age of her son. The ages of son is 12. Find the age of mother and find the difference between their ages.",
        "answer": 32,
        "generated": [
            "# Python code, return ans\nson_age = 12\nmother_age = 8 + 2 * son_age\nage_difference = mother_age - son_age\nans = (mother_age, age_difference)",
            "# Python code, return ans\nson_age = 12\nmother_age = 8 + 2 * son_age\nage_difference = mother_age - son_age\nans = (mother_age, age_difference)",
            "# Python code, return ans\nson_age = 12\nmother_age = 2 * son_age + 8\nage_difference = mother_age - son_age\nans = (mother_age, age_difference)"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "Kate is 12 years old. His age is 4 times the age of Robbie. Find the age of Robbie.",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nKate_age = 12\nRobbie_age = Kate_age / 4\nans = Robbie_age",
            "# Python code, return ans\nKate_age = 12\nRobbie_age = Kate_age / 4\nans = Robbie_age",
            "# Python code, return ans\nKate_age = 12\nRobbie_age = Kate_age / 4\nans = Robbie_age"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "The sum of present age of Abe and the age before 7 years is 31. Find the present age of Abe.",
        "answer": 19,
        "generated": [
            "# Python code, return ans\nsum_of_ages = 31\nage_before_7_years = sum_of_ages - 7\npresent_age_of_Abe = age_before_7_years\nans = present_age_of_Abe",
            "# Python code, return ans\nage_sum = 31\nage_before_7_years = 7\nAbe_present_age = age_sum - age_before_7_years\nans = Abe_present_age",
            "# Python code, return ans\nage_before_7_years = 31 - 7\npresent_age = age_before_7_years * 2\nans = present_age"
        ],
        "results": [
            24.0,
            24.0,
            48.0
        ],
        "result_counter": {
            "24.0": 2,
            "48.0": 1
        },
        "prediction": 24.0
    },
    {
        "question": "Nick and Kane were born on consecutive years and on same date. Nick is younger.  The sum of their ages is 11. Find the age of the brothers.",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nsum_of_ages = 11\n# Let Nick's age be x and Kane's age be x+1\n# x + (x+1) = 11\n# 2x + 1 = 11\nx = (11 - 1) / 2\nNick_age = x\nKane_age = x + 1\nans = (Nick_age, Kane_age)",
            "# Python code, return ans\ntotal_age = 11\nNick_age = total_age // 2\nKane_age = total_age - Nick_age\nans = (Nick_age, Kane_age)",
            "# Python code, return ans\nsum_of_ages = 11\n# Let Nick's age be x, then Kane's age is x+1\n# x + (x+1) = 11\n# 2x + 1 = 11\n# 2x = 10\nx = 10 // 2\nNick_age = x\nKane_age = x + 1\nans = (Nick_age, Kane_age)"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "The ages of Ashley and Mary are in the ratio 4:7. The sum of their ages is 22. Find the ages of Ashley and Mary.",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x')\ny = Symbol('y')\n\n# Equation 1: x/y = 4/7\neq1 = x - (4/7) * y\n\n# Equation 2: x + y = 22\neq2 = x + y - 22\n\n# Solving the equations\nages = solve((eq1, eq2), (x, y))\nans = ages[x], ages[y]\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x')\ny = Symbol('y')\n\n# Equations\neq1 = 4 * x - 7 * y\neq2 = x + y - 22\n\n# Solving equations\nages = solve((eq1, eq2), (x, y))\nans = ages[x], ages[y]",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x')\ny = Symbol('y')\n\n# equation 1: x/y = 4/7\nequation1 = x - (4/7) * y\n\n# equation 2: x + y = 22\nequation2 = x + y - 22\n\n# solving the equations\nages = solve((equation1, equation2), (x, y))\n\nans = ages[x], ages[y]"
        ],
        "results": [
            8.0,
            14.0,
            8.0
        ],
        "result_counter": {
            "8.0": 2,
            "14.0": 1
        },
        "prediction": 8.0
    },
    {
        "question": "The ages of Peter, Margaret and Jack are consecutive odd numbers. The sum of the ages of Peter and Margaret equals Jack's age before 5 years. Find the ages of Peter, Margaret and Jack.",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ndef find_ages():\n    for Peter_age in range(1, 100, 2):\n        Margaret_age = Peter_age + 2\n        Jack_age = Margaret_age + 2\n        if Peter_age + Margaret_age == Jack_age - 5:\n            return Peter_age, Margaret_age, Jack_age\n\nans = find_ages()",
            "# Python code, return ans\ndef find_ages():\n    for Peter_age in range(1, 100, 2):\n        Margaret_age = Peter_age + 2\n        Jack_age = Margaret_age + 2\n        if Peter_age + Margaret_age == Jack_age - 5:\n            return Peter_age, Margaret_age, Jack_age\n\nans = find_ages()",
            "# Python code, return ans\ndef find_ages():\n    for Peter_age in range(1, 100, 2):\n        Margaret_age = Peter_age + 2\n        Jack_age = Margaret_age + 2\n        if Peter_age + Margaret_age == Jack_age - 5:\n            return Peter_age, Margaret_age, Jack_age\n\nans = find_ages()"
        ],
        "results": [],
        "result_counter": {},
        "prediction": null
    },
    {
        "question": "The sum of the ages of Tony and Teddy equals their mother's age. Tony is two years younger than Teddy. If the age of the mother is 42, find the ages of Tony and Teddy?",
        "answer": 20,
        "generated": [
            "# Python code, return ans\nmother_age = 42\nTeddy_age = (mother_age + 2) / 3\nTony_age = Teddy_age - 2\nans = (Tony_age, Teddy_age)",
            "# Python code, return ans\nmother_age = 42\nTeddy_age = (mother_age / 2) + 1\nTony_age = Teddy_age - 2\nans = (Tony_age, Teddy_age)",
            "# Python code, return ans\nmother_age = 42\nTeddy_age = (mother_age + 2) / 3\nTony_age = Teddy_age - 2\nans = (Tony_age, Teddy_age)"
        ],
        "results": [
            12.666666666666666,
            20.0,
            12.666666666666666
        ],
        "result_counter": {
            "12.666666666666666": 2,
            "20.0": 1
        },
        "prediction": 12.666666666666666
    },
    {
        "question": "At present Allen is 10 years younger than Scott. Five years from now, Scott's age will be 2 times the present age of Allen. Find the present age of Allen and Scott.",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x') # Allen's present age\ny = Symbol('y') # Scott's present age\n\n# At present Allen is 10 years younger than Scott\neq1 = x - (y - 10)\n\n# Five years from now, Scott's age will be 2 times the present age of Allen\neq2 = (y + 5) - 2 * (x + 5)\n\n# Solving the equations\nages = solve((eq1, eq2), (x, y))\nans = ages\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x')  # Allen's age\ny = Symbol('y')  # Scott's age\n\n# At present Allen is 10 years younger than Scott\neq1 = x - y + 10\n\n# Five years from now, Scott's age will be 2 times the present age of Allen\neq2 = y + 5 - 2 * (x + 5)\n\n# Solve the equations\nage_solution = solve((eq1, eq2), (x, y))\n\n# Present age of Allen and Scott\nans = age_solution[x], age_solution[y]\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x') # Allen's present age\ny = Symbol('y') # Scott's present age\n\n# At present Allen is 10 years younger than Scott\nequation1 = x - y + 10\n\n# Five years from now, Scott's age will be 2 times the present age of Allen\nequation2 = (y + 5) - 2 * (x + 5)\n\n# Solve the equations\nsolution = solve((equation1, equation2), (x, y))\n\nans = solution\nans"
        ],
        "results": [
            5.0
        ],
        "result_counter": {
            "5.0": 1
        },
        "prediction": 5.0
    },
    {
        "question": "The present ages of Lewis and Brown are in the ratio 1:2. Three years from now, the ages will be in the ratio 3:5. Find the present ages of Lewis and Brown.",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x')\ny = Symbol('y')\n\n# Lewis_age = x, Brown_age = y\n# Present ages ratio: x/y = 1/2\neq1 = x - y/2\n\n# Ages after 3 years: (x+3)/(y+3) = 3/5\neq2 = (x + 3) - 3 * (y + 3) / 5\n\n# Solving the equations\nsolutions = solve((eq1, eq2), (x, y))\nLewis_age = solutions[x]\nBrown_age = solutions[y]\n\nans = (Lewis_age, Brown_age)",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x')\ny = Symbol('y')\n\n# Lewis_age = x, Brown_age = y\n# Present ages ratio: x/y = 1/2 => 2x = y\n# Ages after 3 years: (x+3)/(y+3) = 3/5 => 5(x+3) = 3(y+3)\n\neq1 = 2*x - y\neq2 = 5*(x + 3) - 3*(y + 3)\n\nages = solve((eq1, eq2), (x, y))\nans = ages\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x')\ny = Symbol('y')\n\n# Given: present ages ratio 1:2\neq1 = x - 2 * y\n\n# Given: three years from now, ages ratio 3:5\neq2 = (x + 3) / (y + 3) - 3 / 5\n\n# Solve the equations\nages = solve((eq1, eq2), (x, y))\n\nLewis_age = ages[x]\nBrown_age = ages[y]\nans = (Lewis_age, Brown_age)"
        ],
        "results": [
            6.0,
            -1.7142857142857142
        ],
        "result_counter": {
            "6.0": 1,
            "-1.7142857142857142": 1
        },
        "prediction": 6.0
    },
    {
        "question": "Thrice the sum of a number and 2 equals 24 added with the same number. Write algebraic equation and find the number.",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx = symbols('x')\nequation = Eq(3 * (x + 2) - (24 + x), 0)\nnumber = solve(equation, x)[0]\nans = number",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx = symbols('x')\nequation = Eq(3 * (x + 2) - (24 + x), 0)\nnumber = solve(equation, x)\nans = number[0]\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx = symbols('x')\nequation = Eq(3 * (x + 2), 24 + x)\nnumber = solve(equation, x)[0]\nans = number"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "A number added with thrice a number is 20. Convert this statement into algebraic equations and find the number.",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx = symbols('x')\nequation = Eq(x + 3*x, 20)\nnumber = solve(equation, x)[0]\nans = number",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx = symbols('x')\nequation = Eq(x + 3*x, 20)\nnumber = solve(equation, x)[0]\nans = number",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx = symbols('x')\nequation = Eq(x + 3*x, 20)\nnumber = solve(equation, x)\nans = number[0]\nans"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Sum of a number and 15 is 96. Find the number.",
        "answer": 81,
        "generated": [
            "# Python code, return ans\nsum_result = 96\nnumber = sum_result - 15\nans = number",
            "# Python code, return ans\nsum_with_15 = 96\nnumber = sum_with_15 - 15\nans = number",
            "# Python code, return ans\nsum_of_number_and_15 = 96\nnumber = sum_of_number_and_15 - 15\nans = number"
        ],
        "results": [
            81.0,
            81.0,
            81.0
        ],
        "result_counter": {
            "81.0": 3
        },
        "prediction": 81.0
    },
    {
        "question": "The difference of two numbers is 100. If one of the numbers is 91, find the other number.",
        "answer": 191,
        "generated": [
            "# Python code, return ans\nnumber1 = 91\ndifference = 100\nnumber2 = number1 + difference\nans = number2",
            "# Python code, return ans\nnumber1 = 91\ndifference = 100\nnumber2 = number1 + difference\nans = number2",
            "# Python code, return ans\nnumber1 = 91\ndifference = 100\nnumber2 = number1 + difference\nans = number2"
        ],
        "results": [
            191.0,
            191.0,
            191.0
        ],
        "result_counter": {
            "191.0": 3
        },
        "prediction": 191.0
    },
    {
        "question": "12 less than twice a number is 20. Find the number.",
        "answer": 16,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx = symbols('x')\neq = Eq(2*x - 12, 20)\nans = solve(eq, x)[0]\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx = symbols('x')\nequation = Eq(2 * x - 12, 20)\nans = solve(equation, x)[0]\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx = symbols('x')\nequation = Eq(2*x - 12, 20)\nnumber = solve(equation, x)[0]\nans = number\nans"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "If a number is subtracted from 32, the digits of 32 are interchanged. Find the number.",
        "answer": 55,
        "generated": [
            "# Python code, return ans\noriginal_number = 32\ntens_digit = original_number // 10\nones_digit = original_number % 10\ninterchanged_number = ones_digit * 10 + tens_digit\nnumber_to_subtract = original_number - interchanged_number\nans = number_to_subtract",
            "# Python code, return ans\noriginal_number = 32\ninterchanged_number = int(str(original_number)[::-1])\nnumber_to_subtract = original_number - interchanged_number\nans = number_to_subtract",
            "# Python code, return ans\noriginal_number = 32\ntens_digit = original_number // 10\nones_digit = original_number % 10\ninterchanged_number = ones_digit * 10 + tens_digit\nnumber_to_subtract = original_number - interchanged_number\nans = number_to_subtract"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "One-third of a number minus seven gives eight. Find the number.",
        "answer": 45,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx = symbols('x')\neq = Eq((x/3) - 7, 8)\nnumber = solve(eq, x)[0]\nans = number\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx = symbols('x')\neq = Eq((x/3) - 7, 8)\nnumber = solve(eq, x)[0]\nans = number\nans",
            "# Python code, return ans\nimport sympy as sp\n\nnumber = sp.Symbol('number')\nequation = (number/3) - 7 - 8\nsolution = sp.solve(equation, number)\nans = solution[0]\nans"
        ],
        "results": [
            45.0,
            45.0,
            45.0
        ],
        "result_counter": {
            "45.0": 3
        },
        "prediction": 45.0
    },
    {
        "question": "Consider two-third of number and add up six to it. The result is ten. Find the unknown number.",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx = symbols('x')\nexpr = (2/3)*x + 6 - 10\neq = Eq(expr, 0)\nans = solve(eq, x)[0]\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx = symbols('x')\neq = Eq((2/3) * x + 6, 10)\nunknown_number = solve(eq, x)[0]\nans = unknown_number\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nunknown_number = symbols('x')\neq = Eq((2/3) * unknown_number + 6, 10)\nans = solve(eq, unknown_number)[0]\nans"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "I think of a number. If I subtract 6 from the number and divide it by 13, I will get the result as 2. Find the number in my mind.",
        "answer": 32,
        "generated": [
            "# Python code, return ans\nresult = 2\nsubtract_number = 6\ndivide_number = 13\nnumber_in_mind = (result * divide_number) + subtract_number\nans = number_in_mind\nans",
            "# Python code, return ans\nresult = 2\nsubtract = 6\ndivide = 13\nnumber_in_mind = (result * divide) + subtract\nans = number_in_mind",
            "# Python code, return ans\nresult = 2\nsubtract_value = 6\ndivide_value = 13\nnumber_in_mind = (result * divide_value) + subtract_value\nans = number_in_mind"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "Wilson has a number in mind. If he takes away one-third of the number from it the result is sixteen-third. Find the number.",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nresult = 16/3\noriginal_number = result * (3/2)\nans = original_number",
            "# Python code, return ans\nresult = 16/3\noriginal_number = result / (2/3)\nans = original_number",
            "# Python code, return ans\nresult = 16/3\noriginal_number = result / (2/3)\nans = original_number"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "The sum of three consecutive even numbers is 42. Choose suitable variable and create single variable algebraic equations and find the difference between the greatest and smallest number.",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx = symbols('x')\neq = Eq(x + (x + 2) + (x + 4), 42)\nx_val = solve(eq, x)[0]\nsmallest_number = x_val\nmiddle_number = x_val + 2\ngreatest_number = x_val + 4\ndifference = greatest_number - smallest_number\nans = difference",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx = symbols('x')\neq = Eq(x + (x + 2) + (x + 4), 42)\nx_val = solve(eq, x)[0]\nsmallest_number = x_val\ngreatest_number = x_val + 4\ndifference = greatest_number - smallest_number\nans = difference",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx = symbols('x')\neq = Eq(x + (x + 2) + (x + 4), 42)\nfirst_even_number = solve(eq, x)[0]\nsecond_even_number = first_even_number + 2\nthird_even_number = first_even_number + 4\n\ndifference = third_even_number - first_even_number\nans = difference"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "One-third of certain number added with one-fifth gives eight-fifteenth of the number. Find the number and check your calculation.",
        "answer": 1,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nnumber = symbols('number')\neq = Eq((1/3)*number + (1/5), (8/15)*number)\nans = solve(eq, number)[0]\nans_check = (1/3)*ans + (1/5) == (8/15)*ans\nans, ans_check",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nnumber = symbols('x')\neq = Eq((1/3)*number + (1/5), (8/15)*number)\nsolution = solve(eq, number)\nans = solution[0]\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nnumber = symbols('number')\nequation = Eq((number/3) + (number/5), (8*number/15))\nsolution = solve(equation, number)\nans = solution[0]\nans"
        ],
        "results": [
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 2
        },
        "prediction": 1.0
    },
    {
        "question": "The difference between one-third of a number and 5 is 10. Find the number.",
        "answer": 45,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx = symbols('x')\neq = Eq((x/3) - 5, 10)\nnumber = solve(eq, x)[0]\nans = number\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nnumber = symbols('number')\neq = Eq((number/3) - 5, 10)\nsolution = solve(eq, number)\nans = solution[0]\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx = symbols('x')\neq = Eq((x/3) - 5, 10)\nnumber = solve(eq, x)[0]\nans = number\nans"
        ],
        "results": [
            45.0,
            45.0,
            45.0
        ],
        "result_counter": {
            "45.0": 3
        },
        "prediction": 45.0
    },
    {
        "question": "The sum of the digits of a two digit number is 15. If the digits in the tenth place 8, find the two digit number.",
        "answer": 87,
        "generated": [
            "# Python code, return ans\nsum_of_digits = 15\ntens_place = 8\nones_place = sum_of_digits - tens_place\ntwo_digit_number = tens_place * 10 + ones_place\nans = two_digit_number",
            "# Python code, return ans\nsum_of_digits = 15\ntens_digit = 8\nones_digit = sum_of_digits - tens_digit\ntwo_digit_number = tens_digit * 10 + ones_digit\nans = two_digit_number",
            "# Python code, return ans\nsum_of_digits = 15\ntens_digit = 8\nones_digit = sum_of_digits - tens_digit\ntwo_digit_number = tens_digit * 10 + ones_digit\nans = two_digit_number"
        ],
        "results": [
            87.0,
            87.0,
            87.0
        ],
        "result_counter": {
            "87.0": 3
        },
        "prediction": 87.0
    },
    {
        "question": "A number equals 5 times the difference between the number and 4. Find the number.",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nnumber = symbols('number')\ndifference = number - 4\neq = Eq(number, 5 * difference)\nans = solve(eq, number)[0]\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nnumber = symbols('number')\ndifference = number - 4\neq = Eq(number, 5 * difference)\nans = solve(eq, number)[0]\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx = symbols('x')\neq = Eq(x, 5 * (x - 4))\nans = solve(eq, x)[0]\nans"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "A rectangular cupboard is of length 6 m and perimeter 20 m. Find the width of the cupboard.",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nlength = 6\nperimeter = 20\n# Formula for perimeter of rectangle: P = 2 * (L + W)\n# Solving for width (W): W = (P / 2) - L\nwidth = (perimeter / 2) - length\nans = width",
            "# Python code, return ans\nlength = 6\nperimeter = 20\nwidth = (perimeter - 2 * length) / 2\nans = width",
            "# Python code, return ans\nlength = 6\nperimeter = 20\nwidth = (perimeter - 2 * length) / 2\nans = width"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "The sides of scalene triangle are in the ratio 2:4:3 and its perimeter are 27 inches. Find the sides of the triangle.",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nratio_a = 2\nratio_b = 4\nratio_c = 3\ntotal_ratio = ratio_a + ratio_b + ratio_c\nperimeter = 27\n\nside_a = (ratio_a / total_ratio) * perimeter\nside_b = (ratio_b / total_ratio) * perimeter\nside_c = (ratio_c / total_ratio) * perimeter\n\nans = (side_a, side_b, side_c)",
            "# Python code, return ans\nratio_a = 2\nratio_b = 4\nratio_c = 3\ntotal_ratio = ratio_a + ratio_b + ratio_c\nperimeter = 27\nside_a = (ratio_a / total_ratio) * perimeter\nside_b = (ratio_b / total_ratio) * perimeter\nside_c = (ratio_c / total_ratio) * perimeter\nans = (side_a, side_b, side_c)",
            "# Python code, return ans\nside_ratio = [2, 4, 3]\nperimeter = 27\ntotal_ratio = sum(side_ratio)\nratio_to_length = perimeter / total_ratio\ntriangle_sides = [ratio * ratio_to_length for ratio in side_ratio]\nans = triangle_sides"
        ],
        "results": [
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 2
        },
        "prediction": 6.0
    },
    {
        "question": "The area of trapezium is 84 Sq.cm and height is 8 cm. The parallel sides are in the ratio 2:5. Find the length of the bases.",
        "answer": 6,
        "generated": [
            "# Python code, return ans\narea = 84\nheight = 8\nratio_a = 2\nratio_b = 5\nsum_of_bases = area / height\nbase_a = (sum_of_bases * ratio_a) / (ratio_a + ratio_b)\nbase_b = (sum_of_bases * ratio_b) / (ratio_a + ratio_b)\nans = (base_a, base_b)",
            "# Python code, return ans\nimport sympy\n\narea = 84\nheight = 8\nratio1 = 2\nratio2 = 5\n\n# Let the length of the bases be 2x and 5x\nx = sympy.Symbol('x')\nbase1 = 2 * x\nbase2 = 5 * x\n\n# Area of trapezium = (1/2) * (sum of parallel sides) * height\neq = sympy.Eq((1/2) * (base1 + base2) * height, area)\n\n# Solve for x\nx_value = sympy.solve(eq, x)[0]\n\n# Calculate the length of the bases\nbase1_length = base1.subs(x, x_value)\nbase2_length = base2.subs(x, x_value)\nans = (base1_length, base2_length)\nans",
            "# Python code, return ans\narea = 84\nheight = 8\nratio_side1 = 2\nratio_side2 = 5\ntotal_ratio = ratio_side1 + ratio_side2\n\n# Area of trapezium = (1/2) * height * (side1 + side2)\n# side1 + side2 = (2 * area) / height\nsum_of_sides = (2 * area) / height\n\n# side1 = ratio_side1 * x\n# side2 = ratio_side2 * x\n# side1 + side2 = total_ratio * x\nx = sum_of_sides / total_ratio\n\nside1 = ratio_side1 * x\nside2 = ratio_side2 * x\nans = (side1, side2)"
        ],
        "results": [
            3.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "3.0": 1,
            "6.0": 2
        },
        "prediction": 6.0
    },
    {
        "question": "The perimeter of an equilateral triangle is 54 cm. Find the length of each side of triangle.",
        "answer": 18,
        "generated": [
            "# Python code, return ans\nperimeter = 54\nside_length = perimeter / 3\nans = side_length",
            "# Python code, return ans\nperimeter = 54\nside_length = perimeter / 3\nans = side_length",
            "# Python code, return ans\nperimeter = 54\nside_length = perimeter / 3\nans = side_length"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "Mr. White purchased a carpet for rectangular hall of area 800 sq. yards. The length of the hall is 32 yards. Find the required width of the carpet.",
        "answer": 25,
        "generated": [
            "# Python code, return ans\narea = 800\nlength = 32\nwidth = area / length\nans = width",
            "# Python code, return ans\narea = 800\nlength = 32\nwidth = area / length\nans = width",
            "# Python code, return ans\nhall_area = 800\nhall_length = 32\ncarpet_width = hall_area / hall_length\nans = carpet_width"
        ],
        "results": [
            25.0,
            25.0,
            25.0
        ],
        "result_counter": {
            "25.0": 3
        },
        "prediction": 25.0
    },
    {
        "question": "The area of right angled triangle is 32 sq. cm. If the base is 8 cm, find its height.",
        "answer": 8,
        "generated": [
            "# Python code, return ans\narea = 32\nbase = 8\nheight = (2 * area) / base\nans = height",
            "# Python code, return ans\narea = 32\nbase = 8\nheight = (2 * area) / base\nans = height",
            "# Python code, return ans\narea = 32\nbase = 8\nheight = (2 * area) / base\nans = height"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "The length of the rectangular building is 7 ft more than its width. If the perimeter of the building wall is 98 ft, find its length and width.",
        "answer": 28,
        "generated": [
            "# Python code, return ans\nperimeter = 98\nwidth = (perimeter - 14) / 4\nlength = width + 7\nans = (length, width)",
            "# Python code, return ans\nperimeter = 98\n# Let width be x and length be x + 7\n# Perimeter = 2 * (length + width)\n# 98 = 2 * (x + (x + 7))\n\nwidth = (perimeter - 2 * 7) / 4\nlength = width + 7\nans = (width, length)",
            "# Python code, return ans\nperimeter = 98\nwidth = (perimeter - 14) / 4\nlength = width + 7\nans = (length, width)"
        ],
        "results": [
            28.0,
            21.0,
            28.0
        ],
        "result_counter": {
            "28.0": 2,
            "21.0": 1
        },
        "prediction": 28.0
    },
    {
        "question": "The area of a rectangular garden is 1800 sq. ft. Find the width if its height measures 40 ft.",
        "answer": 45,
        "generated": [
            "# Python code, return ans\narea = 1800\nheight = 40\nwidth = area / height\nans = width",
            "# Python code, return ans\narea = 1800\nheight = 40\nwidth = area / height\nans = width",
            "# Python code, return ans\narea = 1800\nheight = 40\nwidth = area / height\nans = width"
        ],
        "results": [
            45.0,
            45.0,
            45.0
        ],
        "result_counter": {
            "45.0": 3
        },
        "prediction": 45.0
    },
    {
        "question": "The perimeter of a hexagonal display board is 42 cm. The board has to be bordered around with satin ribbon. Find the length of ribbon required to border each side.",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nperimeter_hexagon = 42\nnum_sides = 6\nribbon_per_side = perimeter_hexagon / num_sides\nans = ribbon_per_side",
            "# Python code, return ans\nperimeter = 42\nnum_sides = 6\nribbon_per_side = perimeter / num_sides\nans = ribbon_per_side",
            "# Python code, return ans\nperimeter = 42\nnum_sides = 6\nlength_per_side = perimeter / num_sides\nans = length_per_side"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "In an isosceles triangle one of the angles of a triangle is 54 degrees. Find the base angles of the triangle.",
        "answer": 63,
        "generated": [
            "# Python code, return ans\nangle_1 = 54\nremaining_angle_sum = 180 - angle_1\nbase_angle = remaining_angle_sum / 2\nans = base_angle",
            "# Python code, return ans\nisosceles_angle = 54\nremaining_angle_sum = 180 - isosceles_angle\nbase_angle = remaining_angle_sum / 2\nans = base_angle",
            "# Python code, return ans\nangle_sum_triangle = 180\nisosceles_angle = 54\nbase_angles_sum = angle_sum_triangle - isosceles_angle\nbase_angle = base_angles_sum / 2\nans = base_angle"
        ],
        "results": [
            63.0,
            63.0,
            63.0
        ],
        "result_counter": {
            "63.0": 3
        },
        "prediction": 63.0
    },
    {
        "question": "The zee Theme Park's fountain wall is in the shape of equilateral triangle. The total perimeter of the wall is 51 yards. Find the measure of each side of the wall.",
        "answer": 17,
        "generated": [
            "# Python code, return ans\nperimeter = 51\nside_length = perimeter / 3\nans = side_length",
            "# Python code, return ans\ntotal_perimeter = 51\nside_length = total_perimeter / 3\nans = side_length",
            "# Python code, return ans\ntotal_perimeter = 51\nside_length = total_perimeter / 3\nans = side_length"
        ],
        "results": [
            17.0,
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 3
        },
        "prediction": 17.0
    },
    {
        "question": "A rectangular swimming pool was constructed for Kids at Hotel Park. The length of the swimming pool is twice its width. If the length is 16 ft, find the width and area of the pool.",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nlength = 16\nwidth = length / 2\narea = length * width\nans = (width, area)",
            "# Python code, return ans\nlength = 16\nwidth = length / 2\narea = length * width\nans = (width, area)",
            "# Python code, return ans\nlength = 16\nwidth = length / 2\narea = length * width\nans = (width, area)"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "The base of the parallelogram is 11 inches and its area is 132 Sq. inches. Find the height of the parallelogram.",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nbase = 11\narea = 132\nheight = area / base\nans = height",
            "# Python code, return ans\nbase = 11\narea = 132\nheight = area / base\nans = height",
            "# Python code, return ans\nbase = 11\narea = 132\nheight = area / base\nans = height"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "The angles of a triangle are in the ratio 1:2:3. Find each angle of the triangle.",
        "answer": 30,
        "generated": [
            "# Python code, return ans\nangle_ratio = [1, 2, 3]\ntotal_ratio = sum(angle_ratio)\nangle_sum = 180  # The sum of the angles of a triangle is always 180 degrees\nangle_list = [angle_sum * ratio / total_ratio for ratio in angle_ratio]\nans = angle_list",
            "# Python code, return ans\nangle_ratio = [1, 2, 3]\ntotal_ratio = sum(angle_ratio)\nangle_sum = 180  # Sum of angles in a triangle\nangles = [ratio * angle_sum / total_ratio for ratio in angle_ratio]\nans = angles",
            "# Python code, return ans\nangle_ratio = [1, 2, 3]\ntotal_ratio = sum(angle_ratio)\nangle_sum = 180  # The sum of angles in a triangle is 180 degrees\nangle_1 = (angle_ratio[0] / total_ratio) * angle_sum\nangle_2 = (angle_ratio[1] / total_ratio) * angle_sum\nangle_3 = (angle_ratio[2] / total_ratio) * angle_sum\nans = (angle_1, angle_2, angle_3)\nans"
        ],
        "results": [
            30.0
        ],
        "result_counter": {
            "30.0": 1
        },
        "prediction": 30.0
    },
    {
        "question": "If the second angle is 32 degree less than thrice the first angle and the third angle is 28 degree less than twice the first angle. Find the angles of the triangle.",
        "answer": 40,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nangle1, angle2, angle3 = symbols('angle1 angle2 angle3')\n\neq1 = Eq(angle2, 3 * angle1 - 32)\neq2 = Eq(angle3, 2 * angle1 - 28)\neq3 = Eq(angle1 + angle2 + angle3, 180)\n\nsolution = solve((eq1, eq2, eq3), (angle1, angle2, angle3))\n\nans = solution\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nangle1, angle2, angle3 = symbols('angle1 angle2 angle3')\n\n# Given conditions\nangle2_expr = 3 * angle1 - 32\nangle3_expr = 2 * angle1 - 28\n\n# Sum of angles in a triangle is 180 degrees\neq = Eq(angle1 + angle2_expr + angle3_expr, 180)\n\n# Solving for angle1\nangle1_val = solve(eq, angle1)[0]\n\n# Calculating angle2 and angle3\nangle2_val = angle2_expr.subs(angle1, angle1_val)\nangle3_val = angle3_expr.subs(angle1, angle1_val)\n\nans = angle1_val, angle2_val, angle3_val\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nangle1, angle2, angle3 = symbols('angle1 angle2 angle3')\n\n# Given conditions\neq1 = Eq(angle2, 3 * angle1 - 32)\neq2 = Eq(angle3, 2 * angle1 - 28)\n\n# Sum of angles in a triangle is 180 degrees\neq3 = Eq(angle1 + angle2 + angle3, 180)\n\n# Solving the equations\nangles = solve((eq1, eq2, eq3), (angle1, angle2, angle3))\n\nans = angles\nans"
        ],
        "results": [
            40.0
        ],
        "result_counter": {
            "40.0": 1
        },
        "prediction": 40.0
    },
    {
        "question": "A field is in the shape of an equilateral triangle attached to the width of the rectangular region where width of the rectangle and side of the triangle measures the same. The length of rectangular region is 76 ft and the side of triangular region measures 42 ft. Find the perimeter of the field.",
        "answer": 90,
        "generated": [
            "# Python code, return ans\nrectangle_length = 76\nrectangle_width = 42\ntriangle_side = 42\n\nrectangle_perimeter = 2 * (rectangle_length + rectangle_width)\ntriangle_perimeter = 3 * triangle_side\n\n# Subtract one side of the triangle and one width of the rectangle, as they are attached\ntotal_perimeter = rectangle_perimeter + triangle_perimeter - rectangle_width - triangle_side\nans = total_perimeter",
            "# Python code, return ans\nrectangle_width = 42\nrectangle_length = 76\ntriangle_side = 42\n\nrectangle_perimeter = 2 * (rectangle_width + rectangle_length)\ntriangle_perimeter = 3 * triangle_side\n\n# Subtract one side of the triangle, since it's attached to the rectangle\ntotal_perimeter = rectangle_perimeter + triangle_perimeter - triangle_side\nans = total_perimeter",
            "# Python code, return ans\nrectangle_length = 76\nrectangle_width = 42\ntriangle_side = 42\n\nrectangle_perimeter = 2 * (rectangle_length + rectangle_width)\ntriangle_perimeter = 3 * triangle_side\n\n# Subtract one side of the triangle and one width of the rectangle since they overlap\ntotal_perimeter = rectangle_perimeter + triangle_perimeter - triangle_side - rectangle_width\nans = total_perimeter"
        ],
        "results": [
            278.0,
            320.0,
            278.0
        ],
        "result_counter": {
            "278.0": 2,
            "320.0": 1
        },
        "prediction": 278.0
    },
    {
        "question": "If one pack of gum costs $2, how many packs of gum can you buy with $16?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ngum_cost = 2\nmoney_available = 16\ngum_packs = money_available // gum_cost\nans = gum_packs",
            "# Python code, return ans\ngum_cost = 2\ntotal_money = 16\nnum_of_packs = total_money // gum_cost\nans = num_of_packs",
            "# Python code, return ans\ngum_cost = 2\ntotal_money = 16\nnum_packs = total_money // gum_cost\nans = num_packs"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "John was given $14.00 in order to buy a gift. This covered half of the cost. How much did the gift cost?",
        "answer": 28,
        "generated": [
            "# Python code, return ans\nmoney_given = 14\ngift_cost = money_given * 2\nans = gift_cost",
            "# Python code, return ans\ngiven_money = 14\ngift_cost = given_money * 2\nans = gift_cost",
            "# Python code, return ans\ngiven_money = 14\ngift_cost = given_money * 2\nans = gift_cost"
        ],
        "results": [
            28.0,
            28.0,
            28.0
        ],
        "result_counter": {
            "28.0": 3
        },
        "prediction": 28.0
    },
    {
        "question": "Your dog ate 12 of your notecards for school. That was 3/4 of your notecards that you need to turn in. How many notecards had you completed?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\nnotecards_eaten = 12\nfraction_eaten = 3/4\ntotal_notecards = notecards_eaten / fraction_eaten\nans = total_notecards",
            "# Python code, return ans\nnotecards_eaten = 12\nfraction_completed = 3/4\ntotal_notecards = notecards_eaten / fraction_completed\nans = total_notecards",
            "# Python code, return ans\ncards_eaten = 12\nfraction_eaten = 3/4\ncompleted_cards = cards_eaten / fraction_eaten\nans = completed_cards"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "Bob and his four friends decided to divide the pizza bill evenly. If each person paid $8, then what was the total price for the pizza?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\npayment_per_person = 8\ntotal_friends = 5\ntotal_price = payment_per_person * total_friends\nans = total_price",
            "# Python code, return ans\nprice_per_person = 8\ntotal_friends = 5\ntotal_price = price_per_person * total_friends\nans = total_price",
            "# Python code, return ans\npayment_per_person = 8\ntotal_friends = 5\ntotal_price = payment_per_person * total_friends\nans = total_price"
        ],
        "results": [
            40.0,
            40.0,
            40.0
        ],
        "result_counter": {
            "40.0": 3
        },
        "prediction": 40.0
    },
    {
        "question": "If one round costs $80, how many rounds of golf can you play with $400?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nround_cost = 80\ntotal_money = 400\nrounds_played = total_money // round_cost\nans = rounds_played",
            "# Python code, return ans\nround_cost = 80\ntotal_money = 400\nrounds_played = total_money // round_cost\nans = rounds_played",
            "# Python code, return ans\nround_cost = 80\ntotal_money = 400\nnum_rounds = total_money // round_cost\nans = num_rounds"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Last Thursday Drew had $30. Over the weekend he received some money for cutting the grass. He now has $61. How much money did he get paid for cutting the grass?",
        "answer": 31,
        "generated": [
            "# Python code, return ans\nDrew_initial_money = 30\nDrew_final_money = 61\nmoney_received = Drew_final_money - Drew_initial_money\nans = money_received",
            "# Python code, return ans\nDrew_money_before = 30\nDrew_money_after = 61\nmoney_earned = Drew_money_after - Drew_money_before\nans = money_earned",
            "# Python code, return ans\nDrew_money_thursday = 30\nDrew_money_now = 61\ngrass_cutting_payment = Drew_money_now - Drew_money_thursday\nans = grass_cutting_payment"
        ],
        "results": [
            31.0,
            31.0,
            31.0
        ],
        "result_counter": {
            "31.0": 3
        },
        "prediction": 31.0
    },
    {
        "question": "Last week Adam ran 25 miles more than Katie. Adam ran 35 miles. How many miles did Katie run?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\nAdam_miles = 35\nKatie_miles = Adam_miles - 25\nans = Katie_miles",
            "# Python code, return ans\nAdam_miles = 35\nKatie_miles = Adam_miles - 25\nans = Katie_miles",
            "# Python code, return ans\nAdam_miles = 35\nKatie_miles = Adam_miles - 25\nans = Katie_miles"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "Last week Howard had 26 dollars. He washed windows over the weekend and now has 52 dollars. How much money did he make washing windows?",
        "answer": 26,
        "generated": [
            "# Python code, return ans\ninitial_money = 26\nfinal_money = 52\nmoney_made = final_money - initial_money\nans = money_made",
            "# Python code, return ans\nlast_week_money = 26\ncurrent_money = 52\nmoney_made = current_money - last_week_money\nans = money_made",
            "# Python code, return ans\nlast_week_money = 26\ncurrent_money = 52\nmoney_made = current_money - last_week_money\nans = money_made"
        ],
        "results": [
            26.0,
            26.0,
            26.0
        ],
        "result_counter": {
            "26.0": 3
        },
        "prediction": 26.0
    },
    {
        "question": "There were 6 soccer balls in the bag. Coach B. found several additional soccer balls, and placed them in the bag. There are now 24 balls in the bag. How many soccer balls did he pick up?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\ninitial_balls = 6\nfinal_balls = 24\nballs_picked_up = final_balls - initial_balls\nans = balls_picked_up",
            "# Python code, return ans\ninitial_balls = 6\nfinal_balls = 24\nballs_picked_up = final_balls - initial_balls\nans = balls_picked_up",
            "# Python code, return ans\ninitial_balls = 6\nfinal_balls = 24\nadditional_balls = final_balls - initial_balls\nans = additional_balls"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "There were 22 bales of hay in the barn. Keith stacked more bales in the barn today. There are now 89 bales of hay in the barn. How many bales did he store in the barn ?",
        "answer": 67,
        "generated": [
            "# Python code, return ans\ninitial_bales = 22\nfinal_bales = 89\nbales_stored = final_bales - initial_bales\nans = bales_stored",
            "# Python code, return ans\ninitial_bales = 22\nfinal_bales = 89\nbales_stored = final_bales - initial_bales\nans = bales_stored",
            "# Python code, return ans\ninitial_bales = 22\nfinal_bales = 89\nbales_stored = final_bales - initial_bales\nans = bales_stored"
        ],
        "results": [
            67.0,
            67.0,
            67.0
        ],
        "result_counter": {
            "67.0": 3
        },
        "prediction": 67.0
    },
    {
        "question": "There are thirty-eight dogwood trees currently in the park. Park workers will plant more dogwood trees today. When the workers are finished there will be fifty-six dogwood trees in the park. How many dogwood trees did the workers plant today ?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\ncurrent_dogwood_trees = 38\nfinal_dogwood_trees = 56\ntrees_planted_today = final_dogwood_trees - current_dogwood_trees\nans = trees_planted_today",
            "# Python code, return ans\ncurrent_dogwood_trees = 38\nfinal_dogwood_trees = 56\ndogwood_trees_planted = final_dogwood_trees - current_dogwood_trees\nans = dogwood_trees_planted",
            "# Python code, return ans\ncurrent_trees = 38\nfinal_trees = 56\ntrees_planted = final_trees - current_trees\nans = trees_planted"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "Joan is baking a cake. The recipe calls for 7 cups of flour. She already put in 3 cups. How many more cups does she need to add ?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nflour_needed = 7\nflour_added = 3\nflour_remaining = flour_needed - flour_added\nans = flour_remaining",
            "# Python code, return ans\nflour_needed = 7\nflour_added = 3\nflour_to_add = flour_needed - flour_added\nans = flour_to_add",
            "# Python code, return ans\nflour_needed = 7\nflour_added = 3\nflour_to_add = flour_needed - flour_added\nans = flour_to_add"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Alyssa has 30 books in her library. She bought several books at a yard sale over the weekend. She now has 88 books in her library. How many books did she buy at the yard sale ?",
        "answer": 58,
        "generated": [
            "# Python code, return ans\ninitial_books = 30\nfinal_books = 88\nbooks_bought = final_books - initial_books\nans = books_bought",
            "# Python code, return ans\ninitial_books = 30\nfinal_books = 88\nbooks_bought = final_books - initial_books\nans = books_bought",
            "# Python code, return ans\ninitial_books = 30\nfinal_books = 88\nbooks_bought = final_books - initial_books\nans = books_bought"
        ],
        "results": [
            58.0,
            58.0,
            58.0
        ],
        "result_counter": {
            "58.0": 3
        },
        "prediction": 58.0
    },
    {
        "question": "There were six roses in the vase. Jessica cut some more roses from her flower garden. There are now eighteen roses in the vase. How many roses did she cut ?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nroses_in_vase_initial = 6\nroses_in_vase_final = 18\nroses_cut = roses_in_vase_final - roses_in_vase_initial\nans = roses_cut",
            "# Python code, return ans\nroses_in_vase = 6\ntotal_roses = 18\nroses_cut = total_roses - roses_in_vase\nans = roses_cut",
            "# Python code, return ans\nroses_in_vase = 6\ntotal_roses = 18\nroses_cut = total_roses - roses_in_vase\nans = roses_cut"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Sam received eighty-seven dollars for his birthday. He went to a sporting goods store and bought a baseball glove, baseball, and bat. He had twenty-three dollars left over, how much did he spent on the baseball gear ?",
        "answer": 64,
        "generated": [
            "# Python code, return ans\nreceived_money = 87\nleft_over_money = 23\nspent_money = received_money - left_over_money\nans = spent_money",
            "# Python code, return ans\nreceived_money = 87\nleft_over_money = 23\nspent_money = received_money - left_over_money\nans = spent_money",
            "# Python code, return ans\nreceived_money = 87\nleft_over_money = 23\nspent_money = received_money - left_over_money\nans = spent_money"
        ],
        "results": [
            64.0,
            64.0,
            64.0
        ],
        "result_counter": {
            "64.0": 3
        },
        "prediction": 64.0
    },
    {
        "question": "If one cartridge costs 15 dollars, how many ink cartridges can you buy with 180 dollars?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\ncartridge_cost = 15\ntotal_money = 180\nnum_cartridges = total_money // cartridge_cost\nans = num_cartridges",
            "# Python code, return ans\ncartridge_cost = 15\ntotal_money = 180\ncartridges_to_buy = total_money // cartridge_cost\nans = cartridges_to_buy",
            "# Python code, return ans\ncartridge_cost = 15\ntotal_money = 180\nnum_cartridges = total_money // cartridge_cost\nans = num_cartridges"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "After paying 6 dollars for the pie, Sandy has 57 dollars left. How much money did she have before buying the pie ?",
        "answer": 63,
        "generated": [
            "# Python code, return ans\npie_cost = 6\nmoney_left = 57\ninitial_money = money_left + pie_cost\nans = initial_money",
            "# Python code, return ans\npie_cost = 6\nmoney_left = 57\ninitial_money = money_left + pie_cost\nans = initial_money",
            "# Python code, return ans\npie_cost = 6\nmoney_left = 57\ninitial_money = money_left + pie_cost\nans = initial_money"
        ],
        "results": [
            63.0,
            63.0,
            63.0
        ],
        "result_counter": {
            "63.0": 3
        },
        "prediction": 63.0
    },
    {
        "question": "There were eight red roses and two white roses in the vase. Melanie cut some more roses from her flower garden. There are now fourteen red roses in the vase. How many red roses did she cut ?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ninitial_red_roses = 8\nfinal_red_roses = 14\ncut_red_roses = final_red_roses - initial_red_roses\nans = cut_red_roses",
            "# Python code, return ans\ninitial_red_roses = 8\nfinal_red_roses = 14\ncut_red_roses = final_red_roses - initial_red_roses\nans = cut_red_roses",
            "# Python code, return ans\ninitial_red_roses = 8\nfinal_red_roses = 14\nred_roses_cut = final_red_roses - initial_red_roses\nans = red_roses_cut"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Jason had 27 peaches and 17 pears left at his roadside fruit stand. He went to the orchard and picked more peaches to stock up the stand. There are now 90 peaches at the stand, how many did he pick ?",
        "answer": 63,
        "generated": [
            "# Python code, return ans\ninitial_peaches = 27\nfinal_peaches = 90\npicked_peaches = final_peaches - initial_peaches\nans = picked_peaches",
            "# Python code, return ans\ninitial_peaches = 27\nfinal_peaches = 90\npicked_peaches = final_peaches - initial_peaches\nans = picked_peaches",
            "# Python code, return ans\ninitial_peaches = 27\nfinal_peaches = 90\npicked_peaches = final_peaches - initial_peaches\nans = picked_peaches"
        ],
        "results": [
            63.0,
            63.0,
            63.0
        ],
        "result_counter": {
            "63.0": 3
        },
        "prediction": 63.0
    },
    {
        "question": "Mike found sixty-two seashells on the beach, he gave Tom some of his seashells. He has thirteen seashell left. How many seashells did he give to Tom ?",
        "answer": 49,
        "generated": [
            "# Python code, return ans\nMike_seashells = 62\nMike_remaining_seashells = 13\nseashells_given_to_Tom = Mike_seashells - Mike_remaining_seashells\nans = seashells_given_to_Tom",
            "# Python code, return ans\nMike_seashells = 62\nMike_remaining_seashells = 13\nseashells_given_to_Tom = Mike_seashells - Mike_remaining_seashells\nans = seashells_given_to_Tom",
            "# Python code, return ans\nMike_seashells = 62\nMike_remaining_seashells = 13\nseashells_given_to_Tom = Mike_seashells - Mike_remaining_seashells\nans = seashells_given_to_Tom"
        ],
        "results": [
            49.0,
            49.0,
            49.0
        ],
        "result_counter": {
            "49.0": 3
        },
        "prediction": 49.0
    },
    {
        "question": "If one pack costs 11 dollars, how many packs of DVD's can you buy with 110 dollars?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\npack_cost = 11\ntotal_money = 110\nnum_packs = total_money // pack_cost\nans = num_packs",
            "# Python code, return ans\npack_cost = 11\ntotal_money = 110\nnum_packs = total_money // pack_cost\nans = num_packs",
            "# Python code, return ans\npack_cost = 11\ntotal_money = 110\nnum_packs = total_money // pack_cost\nans = num_packs"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "Last week Fred had 46 dollars and Jason had 13 dollars. Fred washed cars over the weekend and now has 57 dollars. How much money did Fred make washing cars ?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\nFred_money_before = 46\nFred_money_after = 57\nmoney_made_washing_cars = Fred_money_after - Fred_money_before\nans = money_made_washing_cars",
            "# Python code, return ans\nFred_initial_money = 46\nFred_final_money = 57\nmoney_made_washing_cars = Fred_final_money - Fred_initial_money\nans = money_made_washing_cars",
            "# Python code, return ans\nFred_initial_money = 46\nFred_final_money = 57\nmoney_made_washing_cars = Fred_final_money - Fred_initial_money\nans = money_made_washing_cars"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "There were forty-seven bales of hay in the barn and forty bales in the shed. Benny stacked more bales in the barn today. There are now eighty-two bales of hay in the barn. How many bales did he store in the barn ?",
        "answer": 35,
        "generated": [
            "# Python code, return ans\ninitial_barn_bales = 47\nfinal_barn_bales = 82\nbales_stored = final_barn_bales - initial_barn_bales\nans = bales_stored",
            "# Python code, return ans\ninitial_bales_barn = 47\nfinal_bales_barn = 82\nbales_stored = final_bales_barn - initial_bales_barn\nans = bales_stored",
            "# Python code, return ans\ninitial_barn_bales = 47\nfinal_barn_bales = 82\nbales_stored = final_barn_bales - initial_barn_bales\nans = bales_stored"
        ],
        "results": [
            35.0,
            35.0,
            35.0
        ],
        "result_counter": {
            "35.0": 3
        },
        "prediction": 35.0
    },
    {
        "question": "The company has large and small ink cartridges in stock. How many ink cartridges can you buy with 182 dollars if one cartridge costs 14 dollars ?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\ntotal_money = 182\ncartridge_cost = 14\ncartridges_to_buy = total_money // cartridge_cost\nans = cartridges_to_buy",
            "# Python code, return ans\ntotal_money = 182\ncartridge_cost = 14\nnum_cartridges = total_money // cartridge_cost\nans = num_cartridges",
            "# Python code, return ans\ntotal_money = 182\ncartridge_cost = 14\nnumber_of_cartridges = total_money // cartridge_cost\nans = number_of_cartridges"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "Mary is baking a cake. The recipe calls for 9 cups of flour and 3 cups of sugar. She already put in 2 cups of flour. How many more cups of flour does she need to add ?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ntotal_flour_needed = 9\nflour_already_added = 2\nflour_to_add = total_flour_needed - flour_already_added\nans = flour_to_add",
            "# Python code, return ans\nrequired_flour = 9\nalready_added_flour = 2\nmore_flour_needed = required_flour - already_added_flour\nans = more_flour_needed",
            "# Python code, return ans\ntotal_flour_needed = 9\nflour_already_added = 2\nflour_to_add = total_flour_needed - flour_already_added\nans = flour_to_add"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "The store has CD's and DVD's that you need. How many packs of DVD's can you buy with 132 dollars if one pack costs 12 dollars ?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\ntotal_money = 132\ncost_per_pack = 12\nnum_packs = total_money // cost_per_pack\nans = num_packs",
            "# Python code, return ans\ntotal_money = 132\ncost_per_pack = 12\nnumber_of_packs = total_money // cost_per_pack\nans = number_of_packs",
            "# Python code, return ans\ntotal_money = 132\ncost_per_pack = 12\nnum_packs = total_money // cost_per_pack\nans = num_packs"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "There are thirty-three rose bushes and thirty-seven oak trees currently in the park. Park workers will plant more rose bushes today. When the workers are finished there will be ninety-eight rose bushes in the park. How many rose bushes did the workers plant today ?",
        "answer": 65,
        "generated": [
            "# Python code, return ans\ncurrent_rose_bushes = 33\nfinal_rose_bushes = 98\nrose_bushes_planted = final_rose_bushes - current_rose_bushes\nans = rose_bushes_planted",
            "# Python code, return ans\ncurrent_rose_bushes = 33\nfinal_rose_bushes = 98\nrose_bushes_planted = final_rose_bushes - current_rose_bushes\nans = rose_bushes_planted",
            "# Python code, return ans\ncurrent_rose_bushes = 33\nfinal_rose_bushes = 98\nrose_bushes_planted = final_rose_bushes - current_rose_bushes\nans = rose_bushes_planted"
        ],
        "results": [
            65.0,
            65.0,
            65.0
        ],
        "result_counter": {
            "65.0": 3
        },
        "prediction": 65.0
    },
    {
        "question": "Dan's high school played eighteen baseball games this year and two were at night. The team won most of their games. They were defeated during three games. How many games did they win ?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\ntotal_games = 18\nnight_games = 2\ngames_lost = 3\ngames_won = total_games - games_lost\nans = games_won",
            "# Python code, return ans\ntotal_games = 18\nnight_games = 2\nlost_games = 3\nwon_games = total_games - lost_games\nans = won_games",
            "# Python code, return ans\ntotal_games = 18\nnight_games = 2\nlost_games = 3\nwon_games = total_games - lost_games\nans = won_games"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "After eating at the restaurant, Mary, Nancy, and Fred decided to divide the bill evenly. Nancy did not have dessert. If each person paid 33 dollars, what was the total of the bill ?",
        "answer": 99,
        "generated": [
            "# Python code, return ans\nperson_paid = 33\ntotal_people = 3\ntotal_bill = person_paid * total_people\nans = total_bill",
            "# Python code, return ans\nindividual_payment = 33\npeople_num = 3\ntotal_bill = individual_payment * people_num\nans = total_bill",
            "# Python code, return ans\npayment_per_person = 33\ntotal_people = 3\ntotal_bill = payment_per_person * total_people\nans = total_bill"
        ],
        "results": [
            99.0,
            99.0,
            99.0
        ],
        "result_counter": {
            "99.0": 3
        },
        "prediction": 99.0
    },
    {
        "question": "On Monday, three hundred ninety-six students went on a trip to the zoo. All seven buses were filled and four students had to travel in cars. How many students were in each bus ?",
        "answer": 56,
        "generated": [
            "# Python code, return ans\ntotal_students = 396\nstudents_in_cars = 4\nstudents_in_buses = total_students - students_in_cars\nbuses = 7\nstudents_per_bus = students_in_buses // buses\nans = students_per_bus",
            "# Python code, return ans\nstudents_total = 396\nstudents_in_cars = 4\nstudents_in_buses = students_total - students_in_cars\nbuses = 7\nstudents_per_bus = students_in_buses / buses\nans = students_per_bus",
            "# Python code, return ans\ntotal_students = 396\nstudents_in_cars = 4\nstudents_in_buses = total_students - students_in_cars\nnum_buses = 7\nstudents_per_bus = students_in_buses // num_buses\nans = students_per_bus"
        ],
        "results": [
            56.0,
            56.0,
            56.0
        ],
        "result_counter": {
            "56.0": 3
        },
        "prediction": 56.0
    },
    {
        "question": "Benny sold half of his comic books and then bought 6 more. He now has 17. How many did he begin with ?",
        "answer": 22,
        "generated": [
            "# Python code, return ans\ncomic_books_after_purchase = 17\ncomic_books_bought = 6\ncomic_books_before_purchase = comic_books_after_purchase - comic_books_bought\ncomic_books_initial = comic_books_before_purchase * 2\nans = comic_books_initial",
            "# Python code, return ans\ncomic_books_now = 17\ncomic_books_bought = 6\ncomic_books_before_buying = comic_books_now - comic_books_bought\ncomic_books_initial = comic_books_before_buying * 2\nans = comic_books_initial",
            "# Python code, return ans\ncomic_books_after_purchase = 17\ncomic_books_bought = 6\ncomic_books_before_purchase = comic_books_after_purchase - comic_books_bought\ncomic_books_initial = comic_books_before_purchase * 2\nans = comic_books_initial"
        ],
        "results": [
            22.0,
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 3
        },
        "prediction": 22.0
    },
    {
        "question": "Fred bought five new baseball trading cards to add to his collection. The next day his dog ate half of his collection. There are now only twenty-six cards left. How many cards did Fred start with ?",
        "answer": 47,
        "generated": [
            "# Python code, return ans\ncards_after_dog_ate = 26\ncards_before_dog_ate = cards_after_dog_ate * 2\ncards_before_buying = cards_before_dog_ate - 5\nans = cards_before_buying",
            "# Python code, return ans\ncards_after_dog_ate = 26\ncards_bought = 5\ncards_before_dog_ate = cards_after_dog_ate * 2\ncards_initial = cards_before_dog_ate - cards_bought\nans = cards_initial",
            "# Python code, return ans\ncards_after_dog_ate = 26\ncards_bought = 5\ncards_before_dog_ate = cards_after_dog_ate * 2\ncards_initial = cards_before_dog_ate - cards_bought\nans = cards_initial"
        ],
        "results": [
            47.0,
            47.0,
            47.0
        ],
        "result_counter": {
            "47.0": 3
        },
        "prediction": 47.0
    },
    {
        "question": "Jessica spent half of her allowance going to the movies. She washed the family car and earned six dollars. What is her weekly allowance if she ended with eleven dollars ?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\nearned_from_car_wash = 6\ntotal_money = 11\nmoney_after_movie = total_money - earned_from_car_wash\nweekly_allowance = money_after_movie * 2\nans = weekly_allowance",
            "# Python code, return ans\nmoney_earned = 6\nmoney_left = 11\nmoney_spent_on_movies = money_left - money_earned\nweekly_allowance = money_spent_on_movies * 2\nans = weekly_allowance",
            "# Python code, return ans\nearned_from_car_wash = 6\ntotal_money_after_movies = 11\nmoney_spent_on_movies = total_money_after_movies - earned_from_car_wash\nweekly_allowance = money_spent_on_movies * 2\nans = weekly_allowance"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "Melanie had 276 dollars to spend on 9 books. After buying them she had 15 dollars. How much did each book cost ?",
        "answer": 29,
        "generated": [
            "# Python code, return ans\ninitial_money = 276\nremaining_money = 15\ntotal_money_spent = initial_money - remaining_money\nbooks = 9\ncost_per_book = total_money_spent / books\nans = cost_per_book",
            "# Python code, return ans\ntotal_money = 276\nmoney_left = 15\ntotal_spent = total_money - money_left\nbook_cost = total_spent / 9\nans = book_cost",
            "# Python code, return ans\ntotal_money = 276\nmoney_left = 15\nmoney_spent = total_money - money_left\nnum_books = 9\ncost_per_book = money_spent / num_books\nans = cost_per_book"
        ],
        "results": [
            29.0,
            29.0,
            29.0
        ],
        "result_counter": {
            "29.0": 3
        },
        "prediction": 29.0
    },
    {
        "question": "The sum of three consecutive odd numbers is one hundred twenty-three. What is the smallest of the three numbers ?",
        "answer": 39,
        "generated": [
            "# Python code, return ans\nsum_of_numbers = 123\n# Let the smallest odd number be x\n# Then the next two consecutive odd numbers are x+2 and x+4\n# x + (x+2) + (x+4) = 123\n# 3x + 6 = 123\n# 3x = 117\nx = 117 // 3\nans = x",
            "# Python code, return ans\ntotal_sum = 123\naverage = total_sum // 3\nsmallest_odd_number = average - 2\nans = smallest_odd_number",
            "# Python code, return ans\ntotal_sum = 123\naverage = total_sum // 3\nsmallest_odd_number = average - 2\nans = smallest_odd_number"
        ],
        "results": [
            39.0,
            39.0,
            39.0
        ],
        "result_counter": {
            "39.0": 3
        },
        "prediction": 39.0
    },
    {
        "question": "The sum of three consecutive numbers is 90. What is the smallest of the three numbers ?",
        "answer": 29,
        "generated": [
            "# Python code, return ans\nsum_of_numbers = 90\nnum1 = (sum_of_numbers - 3) // 3\nans = num1",
            "# Python code, return ans\nsum_of_numbers = 90\naverage = sum_of_numbers / 3\nsmallest_number = average - 1\nans = smallest_number",
            "# Python code, return ans\nsum_of_numbers = 90\nnumber_of_consecutive = 3\nsmallest_number = (sum_of_numbers / number_of_consecutive) - 1\nans = smallest_number\nans"
        ],
        "results": [
            29.0,
            29.0,
            29.0
        ],
        "result_counter": {
            "29.0": 3
        },
        "prediction": 29.0
    },
    {
        "question": "Nancy bought a soft drink for 4 dollars and 6 candy bars. She spent a total of 28 dollars. How much did each candy bar cost ?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nsoft_drink_cost = 4\ntotal_spent = 28\ncandy_bar_cost = (total_spent - soft_drink_cost) / 6\nans = candy_bar_cost",
            "# Python code, return ans\nsoft_drink_cost = 4\ntotal_spent = 28\ncandy_bars = 6\ncandy_bar_cost = (total_spent - soft_drink_cost) / candy_bars\nans = candy_bar_cost",
            "# Python code, return ans\ntotal_spent = 28\nsoft_drink_cost = 4\ncandy_bars = 6\ncandy_bar_total_cost = total_spent - soft_drink_cost\ncandy_bar_cost = candy_bar_total_cost / candy_bars\nans = candy_bar_cost"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Oceanside Bike Rental Shop charges a 17 dollar fixed fee plus 7 dollars an hour for renting a bike. Mary paid 80 dollars to rent a bike. How many hours did she pay to have the bike checked out ?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nfixed_fee = 17\nhourly_rate = 7\ntotal_paid = 80\nhours_rented = (total_paid - fixed_fee) / hourly_rate\nans = hours_rented",
            "# Python code, return ans\nfixed_fee = 17\nhourly_rate = 7\ntotal_paid = 80\nhours_rented = (total_paid - fixed_fee) / hourly_rate\nans = hours_rented",
            "# Python code, return ans\nfixed_fee = 17\nhourly_rate = 7\ntotal_paid = 80\nhours_rented = (total_paid - fixed_fee) / hourly_rate\nans = hours_rented"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "There are 650 students in a school. If the number of girls is 106 more than the boys, how many boys are there in the school?",
        "answer": 272,
        "generated": [
            "# Python code, return ans\ntotal_students = 650\ngirls_more_than_boys = 106\nboys = (total_students - girls_more_than_boys) / 2\nans = boys",
            "# Python code, return ans\ntotal_students = 650\ngirls_more_than_boys = 106\nboys = (total_students - girls_more_than_boys) / 2\nans = boys",
            "# Python code, return ans\ntotal_students = 650\ngirls_more_than_boys = 106\nboys = (total_students - girls_more_than_boys) / 2\nans = boys"
        ],
        "results": [
            272.0,
            272.0,
            272.0
        ],
        "result_counter": {
            "272.0": 3
        },
        "prediction": 272.0
    },
    {
        "question": "A man is thrice as old as his son. After 12 years, he will be twice as old as his son. Find their present ages.",
        "answer": 36,
        "generated": [
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x') # son's age\ny = Symbol('y') # man's age\n\n# equation 1: y = 3x\n# equation 2: y + 12 = 2(x + 12)\n\neq1 = y - 3*x\neq2 = y + 12 - 2*(x + 12)\n\nages = solve((eq1, eq2), (x, y))\nans = ages\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x')  # son's age\ny = Symbol('y')  # man's age\n\n# Equations\neq1 = y - 3*x\neq2 = (y + 12) - 2*(x + 12)\n\n# Solving equations\nages = solve((eq1, eq2), (x, y))\n\nans = ages\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x') # son's age\ny = Symbol('y') # man's age\n\n# equation 1: y = 3x\neq1 = y - 3*x\n\n# equation 2: y + 12 = 2*(x + 12)\neq2 = y + 12 - 2*(x + 12)\n\n# solving the equations\nages = solve((eq1, eq2), (x, y))\n\nans = ages\nans"
        ],
        "results": [],
        "result_counter": {},
        "prediction": null
    },
    {
        "question": "Vidya's mother's age is 5 years more than the three times of Vidya's present age. Find Vidya's present age, if her mother is 44 years old.",
        "answer": 13,
        "generated": [
            "# Python code, return ans\nmother_age = 44\nVidya_age = (mother_age - 5) / 3\nans = Vidya_age",
            "# Python code, return ans\nmother_age = 44\nVidya_age = (mother_age - 5) / 3\nans = Vidya_age",
            "# Python code, return ans\nmother_age = 44\nVidya_age = (mother_age - 5) / 3\nans = Vidya_age"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "Sachin says that he has 6 books more than the 6 times of the books Priyanka has. Sachin has 42 books. How many books does Priyanka have?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nSachin_books = 42\nPriyanka_books = (Sachin_books - 6)/6\nans = Priyanka_books\nans",
            "# Python code, return ans\nSachin_books = 42\nPriyanka_books = (Sachin_books - 6) / 6\nans = Priyanka_books\nans",
            "# Python code, return ans\nSachin_books = 42\nPriyanka_books = (Sachin_books - 6)/6\nans = Priyanka_books\nans"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Sushi's father bought x lollipops. 5 were eaten by the the children. If 7 lollipops are left, how many lollipops did sushi's father bring?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nlollipops_left = 7\nlollipops_eaten = 5\nlollipops_bought = lollipops_left + lollipops_eaten\nans = lollipops_bought",
            "# Python code, return ans\nlollipops_left = 7\nlollipops_eaten = 5\ntotal_lollipops = lollipops_left + lollipops_eaten\nans = total_lollipops",
            "# Python code, return ans\nlollipops_left = 7\nlollipops_eaten = 5\ntotal_lollipops = lollipops_left + lollipops_eaten\nans = total_lollipops"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "If 10 years ago he was 25 years old, how old is Rojer now?",
        "answer": 35,
        "generated": [
            "# Python code, return ans\nten_years_ago_age = 25\ncurrent_age = ten_years_ago_age + 10\nans = current_age\nans",
            "# Python code, return ans\nten_years_ago_age = 25\ncurrent_age = ten_years_ago_age + 10\nans = current_age\nans",
            "# Python code, return ans\nten_years_ago_age = 25\ncurrent_age = ten_years_ago_age + 10\nans = current_age\nans"
        ],
        "results": [
            35.0,
            35.0,
            35.0
        ],
        "result_counter": {
            "35.0": 3
        },
        "prediction": 35.0
    },
    {
        "question": "After 15 years, Ariel will be four times as old as she is now. Determine her present age.",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nage_after_15_years = 4\npresent_age = 15 / (age_after_15_years - 1)\nans = present_age",
            "# Python code, return ans\nage_after_15_years = 4\ncurrent_age = 15 / (age_after_15_years - 1)\nans = current_age",
            "# Python code, return ans\nage_after_15_years = 4\npresent_age = 15 / (age_after_15_years - 1)\nans = present_age"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Mrs.Martin is 27 years older than her daughter Neil. After 8 years she will be twice as old as Neil. Find their present ages.",
        "answer": 46,
        "generated": [
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x')\ny = Symbol('y')\n\n# Equation 1: y = x + 27 (Mrs. Martin's age is 27 years older than Neil's age)\n# Equation 2: y + 8 = 2 * (x + 8) (After 8 years, Mrs. Martin's age will be twice Neil's age)\n\neq1 = y - x - 27\neq2 = y + 8 - 2 * (x + 8)\n\n# Solving the equations\nages = solve((eq1, eq2), (x, y))\n\nNeil_age = ages[x]\nMrs_Martin_age = ages[y]\n\nans = (Neil_age, Mrs_Martin_age)\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\n# Let x be the present age of Mrs. Martin and y be the present age of Neil\nx = Symbol('x')\ny = Symbol('y')\n\n# Equation 1: x = y + 27 (Mrs. Martin is 27 years older than Neil)\n# Equation 2: x + 8 = 2 * (y + 8) (After 8 years, Mrs. Martin will be twice as old as Neil)\n\neq1 = x - y - 27\neq2 = x + 8 - 2 * (y + 8)\n\n# Solving the equations\nsolutions = solve((eq1, eq2), (x, y))\n\n# Present ages of Mrs. Martin and Neil\nans = solutions[x], solutions[y]\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x') # Neil's age\ny = Symbol('y') # Mrs. Martin's age\n\n# Equation 1: y = x + 27 (Mrs. Martin is 27 years older than Neil)\n# Equation 2: y + 8 = 2 * (x + 8) (After 8 years, Mrs. Martin will be twice as old as Neil)\n\neq1 = y - x - 27\neq2 = y + 8 - 2 * (x + 8)\n\n# Solving the equations\nsolution = solve((eq1, eq2), (x, y))\n\n# Present ages\nNeil_age = solution[x]\nMrs_Martin_age = solution[y]\nans = (Neil_age, Mrs_Martin_age)\nans"
        ],
        "results": [
            19.0,
            46.0,
            19.0
        ],
        "result_counter": {
            "19.0": 2,
            "46.0": 1
        },
        "prediction": 19.0
    },
    {
        "question": "In an isosceles triangle, the base angles are equal. The vertex angle is twice either base angle. What are the angles of the triangle?",
        "answer": 45,
        "generated": [
            "# Python code, return ans\nvertex_angle = 2 * (180/5)\nbase_angle = (180 - vertex_angle) / 2\nans = (base_angle, base_angle, vertex_angle)",
            "# Python code, return ans\nvertex_angle = 2 * (180 / (2 + 2))\nbase_angle = 180 - vertex_angle\nans = (base_angle, base_angle, vertex_angle)",
            "# Python code, return ans\nvertex_angle = 2 * (180 / (2 + 2))\nbase_angle = 180 - vertex_angle\nans = (base_angle, base_angle, vertex_angle)"
        ],
        "results": [
            54.0,
            90.0,
            90.0
        ],
        "result_counter": {
            "54.0": 1,
            "90.0": 2
        },
        "prediction": 90.0
    },
    {
        "question": "Two boys have 480 marbles between them. One arranges them in heaps of 6 marbles and the other in heaps of 9 each. If the total number of heaps is 72, how many marbles does each have?",
        "answer": 336,
        "generated": [
            "# Python code, return ans1, ans2\ntotal_marbles = 480\ntotal_heaps = 72\n\n# Let x be the number of heaps of 6 marbles and y be the number of heaps of 9 marbles\n# x + y = 72 (total_heaps)\n# 6x + 9y = 480 (total_marbles)\n\n# Solving the system of linear equations\nfor x in range(total_heaps + 1):\n    y = total_heaps - x\n    if 6 * x + 9 * y == total_marbles:\n        break\n\nboy1_marbles = 6 * x\nboy2_marbles = 9 * y\n\nans1 = boy1_marbles\nans2 = boy2_marbles\n\nans1, ans2",
            "# Python code, return ans1, ans2\ntotal_marbles = 480\ntotal_heaps = 72\nheap1 = 6\nheap2 = 9\n\n# Let x be the number of heaps for the first boy and y be the number of heaps for the second boy\n# x + y = total_heaps\n# heap1 * x + heap2 * y = total_marbles\n\n# Solving the linear equations\nfor x in range(1, total_heaps):\n    y = total_heaps - x\n    if heap1 * x + heap2 * y == total_marbles:\n        break\n\nmarbles1 = heap1 * x\nmarbles2 = heap2 * y\nans1, ans2 = marbles1, marbles2\nans1, ans2",
            "# Python code, return ans1, ans2\ntotal_marbles = 480\ntotal_heaps = 72\n\n# Let x be the number of heaps of 6 marbles and y be the number of heaps of 9 marbles\n# x + y = 72 (total heaps)\n# 6x + 9y = 480 (total marbles)\n\n# We can solve this system of equations to find the values of x and y\nfor x in range(1, total_heaps):\n    y = total_heaps - x\n    if 6 * x + 9 * y == total_marbles:\n        break\n\n# Now we can find the number of marbles each boy has\nboy1_marbles = 6 * x\nboy2_marbles = 9 * y\n\nans1 = boy1_marbles\nans2 = boy2_marbles\nans1, ans2"
        ],
        "results": [],
        "result_counter": {},
        "prediction": null
    },
    {
        "question": "The present age of Jacob's father is three times that of Jacob. After 5 years, sum of their ages would be 70 years. Find their present ages.",
        "answer": 45,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nJacob_age, father_age = symbols('Jacob_age father_age')\neq1 = Eq(father_age, 3 * Jacob_age)\neq2 = Eq(Jacob_age + 5 + father_age + 5, 70)\n\nages = solve((eq1, eq2), (Jacob_age, father_age))\nans = ages\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x') # Jacob's age\ny = Symbol('y') # Father's age\n\n# Equations\neq1 = y - 3*x\neq2 = (x + 5) + (y + 5) - 70\n\n# Solving equations\nages = solve((eq1, eq2), (x, y))\nans = ages\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\njacob_age = Symbol('j')\nfather_age = 3 * jacob_age\njacob_age_future = jacob_age + 5\nfather_age_future = father_age + 5\n\n# equation: jacob_age_future + father_age_future = 70\nequation = jacob_age_future + father_age_future - 70\njacob_present_age = solve(equation, jacob_age)[0]\nfather_present_age = 3 * jacob_present_age\n\nans = (jacob_present_age, father_present_age)"
        ],
        "results": [
            15.0
        ],
        "result_counter": {
            "15.0": 1
        },
        "prediction": 15.0
    },
    {
        "question": "Length of a rectangle is 8 m less than twice its width. If the perimeter of the rectangle is 56 m, find its length and width.",
        "answer": 16,
        "generated": [
            "# Python code, return ans\nperimeter = 56\nwidth = perimeter / 4\nlength = 2 * width - 8\nans = (length, width)",
            "# Python code, return ans\nperimeter = 56\n# Let width be w and length be l\n# l = 2w - 8\n# Perimeter = 2l + 2w\n# 56 = 2(2w - 8) + 2w\n# 56 = 4w - 16 + 2w\n# 56 = 6w - 16\n# 72 = 6w\nw = 72 / 6\nl = 2 * w - 8\nans = (l, w)",
            "# Python code, return ans\nperimeter = 56\nwidth = 0\nlength = 0\n\nfor i in range(1, perimeter//2):\n    if (2 * i) + (2 * (2 * i - 8)) == perimeter:\n        width = i\n        length = 2 * i - 8\n        break\n\nans = (length, width)"
        ],
        "results": [
            20.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "20.0": 1,
            "16.0": 2
        },
        "prediction": 16.0
    },
    {
        "question": "Five years hence, the age of Jacob will be three times that of his son. Five years ago, Jacob's age was seven times that of his son. What are their present ages?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x')  # Jacob's present age\ny = Symbol('y')  # Son's present age\n\n# Equation 1: (x + 5) = 3 * (y + 5)\n# Equation 2: (x - 5) = 7 * (y - 5)\n\neq1 = x + 5 - 3 * (y + 5)\neq2 = x - 5 - 7 * (y - 5)\n\n# Solving the equations\nsolutions = solve((eq1, eq2), (x, y))\n\nans = solutions\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x')  # Jacob's present age\ny = Symbol('y')  # Son's present age\n\n# Five years hence, Jacob's age will be three times that of his son\neq1 = x + 5 - 3 * (y + 5)\n\n# Five years ago, Jacob's age was seven times that of his son\neq2 = x - 5 - 7 * (y - 5)\n\n# Solving the equations\nages = solve((eq1, eq2), (x, y))\n\nans = ages\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\njacob_current_age = Symbol('j')\nson_current_age = Symbol('s')\n\n# Equations\neq1 = jacob_current_age + 5 - 3 * (son_current_age + 5)\neq2 = jacob_current_age - 5 - 7 * (son_current_age - 5)\n\n# Solving equations\nages = solve((eq1, eq2), (jacob_current_age, son_current_age))\n\nans = ages[jacob_current_age], ages[son_current_age]\nans"
        ],
        "results": [
            40.0
        ],
        "result_counter": {
            "40.0": 1
        },
        "prediction": 40.0
    },
    {
        "question": "Five years ago, I was thrice as old as my son and ten years later I shall be twice as old as my son. How old are we now?",
        "answer": 50,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nI_age, son_age = symbols('I_age son_age')\neq1 = Eq(I_age - 5, 3 * (son_age - 5))\neq2 = Eq(I_age + 10, 2 * (son_age + 10))\n\nans = solve((eq1, eq2), (I_age, son_age))\nans",
            "# Python code, return my_age, son_age\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nmy_age = Symbol('my_age')\nson_age = Symbol('son_age')\n\n# Five years ago, I was thrice as old as my son\neq1 = my_age - 5 - 3 * (son_age - 5)\n\n# Ten years later, I shall be twice as old as my son\neq2 = my_age + 10 - 2 * (son_age + 10)\n\n# Solve the equations\nsolution = solve((eq1, eq2), (my_age, son_age))\n\nmy_age = solution[my_age]\nson_age = solution[son_age]\n\nans = my_age, son_age\nans",
            "# Python code, return my_age, son_age\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nmy_age = Symbol('my_age')\nson_age = Symbol('son_age')\n\n# Five years ago, I was thrice as old as my son\neq1 = my_age - 5 - 3 * (son_age - 5)\n\n# Ten years later I shall be twice as old as my son\neq2 = my_age + 10 - 2 * (son_age + 10)\n\n# Solving the equations\nages = solve((eq1, eq2), (my_age, son_age))\nmy_age = ages[my_age]\nson_age = ages[son_age]\n\nans = my_age, son_age\nans"
        ],
        "results": [
            50.0,
            50.0
        ],
        "result_counter": {
            "50.0": 2
        },
        "prediction": 50.0
    },
    {
        "question": "A is two years older than B. A's father D is twice as old as A and B is twice old as his sister C. The ages of D and C differ by 40 years. Find the ages of A and B.",
        "answer": 26,
        "generated": [
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nA = Symbol('A')\nB = Symbol('B')\nC = Symbol('C')\nD = Symbol('D')\n\n# A is two years older than B\neq1 = A - B - 2\n\n# A's father D is twice as old as A\neq2 = D - 2 * A\n\n# B is twice old as his sister C\neq3 = B - 2 * C\n\n# The ages of D and C differ by 40 years\neq4 = D - C - 40\n\n# Solve the equations\nsolution = solve((eq1, eq2, eq3, eq4), (A, B, C, D))\n\nans_A = solution[A]\nans_B = solution[B]\nans = (ans_A, ans_B)\nans",
            "# Python code, return ans_A, ans_B\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nA = Symbol('A')\nB = Symbol('B')\nC = Symbol('C')\nD = Symbol('D')\n\n# A is two years older than B\neq1 = A - B - 2\n\n# A's father D is twice as old as A\neq2 = D - 2 * A\n\n# B is twice old as his sister C\neq3 = B - 2 * C\n\n# The ages of D and C differ by 40 years\neq4 = D - C - 40\n\n# Solve the equations\nsolution = solve((eq1, eq2, eq3, eq4), (A, B, C, D))\n\nans_A = solution[A]\nans_B = solution[B]\nans_A, ans_B",
            "# Python code, return ans_A, ans_B\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nA = Symbol('A')\nB = Symbol('B')\nC = Symbol('C')\nD = Symbol('D')\n\n# A is two years older than B\neq1 = A - B - 2\n\n# A's father D is twice as old as A\neq2 = D - 2 * A\n\n# B is twice old as his sister C\neq3 = B - 2 * C\n\n# The ages of D and C differ by 40 years\neq4 = D - C - 40\n\n# Solving the equations\nsolutions = solve((eq1, eq2, eq3, eq4), (A, B, C, D))\n\nans_A = solutions[A]\nans_B = solutions[B]\nans_A, ans_B"
        ],
        "results": [
            26.0
        ],
        "result_counter": {
            "26.0": 1
        },
        "prediction": 26.0
    },
    {
        "question": "Two years ago, a father was five times as old as his son. Two years later, his age will be 8 more than the age of the son. Find the present ages of father and son.",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x') # father's present age\ny = Symbol('y') # son's present age\n\n# Two years ago, father was 5 times as old as his son\neq1 = x - 2 - 5 * (y - 2)\n\n# Two years later, father's age will be 8 more than the age of the son\neq2 = x + 2 - (y + 2 + 8)\n\n# Solving the equations\nages = solve((eq1, eq2), (x, y))\nans = ages\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x') # father's age\ny = Symbol('y') # son's age\n\n# Two years ago, father was 5 times as old as son\neq1 = x - 2 - 5*(y - 2)\n\n# Two years later, father's age will be 8 more than son's age\neq2 = x + 2 - (y + 2 + 8)\n\n# Solve the equations\nages = solve((eq1, eq2), (x, y))\n\nans = ages\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x')  # father's present age\ny = Symbol('y')  # son's present age\n\n# Two years ago, father's age was 5 times son's age\neq1 = x - 2 - 5 * (y - 2)\n\n# Two years later, father's age will be 8 more than son's age\neq2 = x + 2 - (y + 2) - 8\n\n# Solve the equations\nsolutions = solve((eq1, eq2), (x, y))\nans = solutions\nans"
        ],
        "results": [],
        "result_counter": {},
        "prediction": null
    },
    {
        "question": "Father's age is three times the sum of the ages of his two children. After 5 years his age will be twice the sum of age of two children. Find the age of father.",
        "answer": 15,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nfather_age = symbols('father_age')\nchild1_age = symbols('child1_age')\nchild2_age = symbols('child2_age')\n\neq1 = Eq(father_age, 3 * (child1_age + child2_age))\neq2 = Eq(father_age + 5, 2 * (child1_age + child2_age + 10))\n\n# We can eliminate one variable by solving eq1 for father_age and substituting it in eq2\nfather_age_from_eq1 = 3 * (child1_age + child2_age)\neq2_substituted = eq2.subs(father_age, father_age_from_eq1)\n\n# Now we can solve the equation for one of the children's ages\nchild1_age_solution = solve(eq2_substituted, child1_age)\n\n# We can substitute the solution back into eq1 to find the father's age\nfather_age_solution = father_age_from_eq1.subs(child1_age, child1_age_solution[0])\n\nans = father_age_solution\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nfather_age = Symbol('f')\nchildren_age_sum = Symbol('c')\n\n# Given: Father's age is three times the sum of the ages of his two children\nequation1 = father_age - 3 * children_age_sum\n\n# After 5 years, father's age will be twice the sum of age of two children\nequation2 = (father_age + 5) - 2 * (children_age_sum + 5)\n\n# Solving the equations\nsolutions = solve((equation1, equation2), (father_age, children_age_sum))\n\nans = solutions[father_age]\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nfather_age, child1_age, child2_age = symbols('father_age child1_age child2_age')\n\neq1 = Eq(father_age, 3 * (child1_age + child2_age))\neq2 = Eq(father_age + 5, 2 * (child1_age + child2_age + 10))\n\n# Solving the equations\nsolutions = solve((eq1, eq2), (father_age, child1_age, child2_age))\n\nans = solutions[father_age]\nans"
        ],
        "results": [
            45.0,
            15.0,
            45.0
        ],
        "result_counter": {
            "45.0": 2,
            "15.0": 1
        },
        "prediction": 45.0
    },
    {
        "question": "5 years hence the age of a father shall be three times the age of his son while 5 years earlier the age of father was 7 times the age of his son. Find the present ages.",
        "answer": 40,
        "generated": [
            "# Python code, return father_age, son_age\nfrom sympy import symbols, Eq, solve\n\nfather_age_now, son_age_now = symbols('father_age_now son_age_now')\n\n# 5 years hence\nfather_age_future = father_age_now + 5\nson_age_future = son_age_now + 5\n\n# 5 years earlier\nfather_age_past = father_age_now - 5\nson_age_past = son_age_now - 5\n\n# Equations\neq1 = Eq(father_age_future, 3 * son_age_future)\neq2 = Eq(father_age_past, 7 * son_age_past)\n\n# Solve\nage_solution = solve((eq1, eq2), (father_age_now, son_age_now))\nfather_age, son_age = age_solution[father_age_now], age_solution[son_age_now]\nans = father_age, son_age\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nfather_age = Symbol('f')\nson_age = Symbol('s')\n\n# equation 1: f + 5 = 3 * (s + 5)\n# equation 2: f - 5 = 7 * (s - 5)\n\neq1 = father_age + 5 - 3 * (son_age + 5)\neq2 = father_age - 5 - 7 * (son_age - 5)\n\n# Solving the equations\nsolutions = solve((eq1, eq2), (father_age, son_age))\n\nans = solutions\nans",
            "# Python code, return ans_father, ans_son\nfrom sympy import symbols, Eq, solve\n\nfather_age, son_age = symbols('father_age son_age')\neq1 = Eq(father_age + 5, 3 * (son_age + 5))\neq2 = Eq(father_age - 5, 7 * (son_age - 5))\nsolution = solve((eq1, eq2), (father_age, son_age))\nans_father = solution[father_age]\nans_son = solution[son_age]\nans_father, ans_son"
        ],
        "results": [
            40.0
        ],
        "result_counter": {
            "40.0": 1
        },
        "prediction": 40.0
    },
    {
        "question": "The age of a father is equal to the sum of the ages of his 5 children. After 15 years sum of the ages of the children will be twice the age of the father. Find the age of the father.",
        "answer": 75,
        "generated": [
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nfather_age = Symbol('x')\nchildren_age_sum = father_age\nchildren_age_sum_future = 2 * (father_age + 15)\nfuture_age_sum = 5 * (children_age_sum / 5 + 15)\n\nequation = children_age_sum_future - future_age_sum\nans = solve(equation, father_age)[0]\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nfather_age = Symbol('x')\nchildren_age_sum = father_age\nchildren_age_sum_after_15_years = 2 * (father_age + 15)\n\n# After 15 years, each child's age will increase by 15 years\n# So, the sum of their ages will increase by 15 * 5 = 75 years\nnew_children_age_sum = children_age_sum + 75\n\n# Equation: new_children_age_sum = children_age_sum_after_15_years\nequation = new_children_age_sum - children_age_sum_after_15_years\n\nfather_age_solution = solve(equation, father_age)\nans = father_age_solution[0]\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nfather_age = Symbol('father_age')\nchildren_age_sum = father_age\nchildren_age_sum_after_15 = 2 * (father_age + 15)\n\n# After 15 years, each child's age will increase by 15 years, so the sum of their ages will increase by 15 * 5 = 75.\nchildren_age_sum_after_15_years = children_age_sum + 75\n\n# Equating both expressions for the sum of children's ages after 15 years\nequation = children_age_sum_after_15 - children_age_sum_after_15_years\n\n# Solving the equation for the father's age\nans = solve(equation, father_age)[0]\nans"
        ],
        "results": [
            45.0,
            45.0,
            45.0
        ],
        "result_counter": {
            "45.0": 3
        },
        "prediction": 45.0
    },
    {
        "question": "Ten years ago, the sum of the ages of two sons was one-third of their father's age. One son is two years older than the other and sum of their present ages is 14 years less than the father's present age. Find the present ages of all.",
        "answer": 21,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nfather_age_10_years_ago, son1_age_10_years_ago, son2_age_10_years_ago = symbols('father_age_10_years_ago son1_age_10_years_ago son2_age_10_years_ago')\n\n# Ten years ago, the sum of the ages of two sons was one-third of their father's age\neq1 = Eq(son1_age_10_years_ago + son2_age_10_years_ago, father_age_10_years_ago / 3)\n\n# One son is two years older than the other\neq2 = Eq(son1_age_10_years_ago, son2_age_10_years_ago + 2)\n\n# Sum of their present ages is 14 years less than the father's present age\nfather_age = father_age_10_years_ago + 10\nson1_age = son1_age_10_years_ago + 10\nson2_age = son2_age_10_years_ago + 10\neq3 = Eq(son1_age + son2_age, father_age - 14)\n\n# Solving the equations\nsolutions = solve((eq1, eq2, eq3), (father_age_10_years_ago, son1_age_10_years_ago, son2_age_10_years_ago))\nfather_age_present = solutions[father_age_10_years_ago] + 10\nson1_age_present = solutions[son1_age_10_years_ago] + 10\nson2_age_present = solutions[son2_age_10_years_ago] + 10\n\nans = (father_age_present, son1_age_present, son2_age_present)\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x') # father's present age\ny = Symbol('y') # younger son's present age\nz = Symbol('z') # older son's present age\n\n# Ten years ago\n# (y-10) + (z-10) = 1/3 * (x-10)\n# z = y + 2\n# y + z = x - 14\n\n# Substituting z = y + 2\neq1 = (y - 10) + (y + 2 - 10) - (x - 10) / 3\neq2 = y + (y + 2) - (x - 14)\n\n# Solving the equations\nsolution = solve((eq1, eq2), (x, y))\n\n# Finding z\nz = solution[y] + 2\n\nans = (solution[x], solution[y], z)\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x')  # father's present age\ny = Symbol('y')  # younger son's present age\nz = Symbol('z')  # older son's present age\n\n# Ten years ago\nfather_age_10_years_ago = x - 10\nyounger_son_age_10_years_ago = y - 10\nolder_son_age_10_years_ago = z - 10\n\n# One son is two years older than the other\nolder_son_age_difference = z - y - 2\n\n# Sum of their present ages is 14 years less than the father's present age\nsum_present_ages = x - (y + z) - 14\n\n# Ten years ago, the sum of the ages of two sons was one-third of their father's age\nsum_ages_10_years_ago = (younger_son_age_10_years_ago + older_son_age_10_years_ago) - (father_age_10_years_ago / 3)\n\n# Solving the equations\nages = solve((older_son_age_difference, sum_present_ages, sum_ages_10_years_ago), (x, y, z))\n\nans = ages\nans"
        ],
        "results": [
            46.0,
            46.0
        ],
        "result_counter": {
            "46.0": 2
        },
        "prediction": 46.0
    },
    {
        "question": "If twice the son's age is added to the father's, the sum is 70. But if twice the father's age is added to the son's age, the sum is 95. Find the ages of father and son.",
        "answer": 40,
        "generated": [
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nfather_age = Symbol('father_age')\nson_age = Symbol('son_age')\n\n# equation 1: 2 * son_age + father_age = 70\n# equation 2: son_age + 2 * father_age = 95\n\nequation1 = 2 * son_age + father_age - 70\nequation2 = son_age + 2 * father_age - 95\n\nages = solve((equation1, equation2), (father_age, son_age))\nans = ages\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nfather_age = Symbol('f')\nson_age = Symbol('s')\n\n# equation 1: 2 * son_age + father_age = 70\nequation1 = 2 * son_age + father_age - 70\n\n# equation 2: son_age + 2 * father_age = 95\nequation2 = son_age + 2 * father_age - 95\n\n# solving the equations\nages = solve((equation1, equation2), (father_age, son_age))\nans = ages\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nson_age = Symbol('x')\nfather_age = Symbol('y')\n\n# equation 1: 2 * son_age + father_age = 70\nequation1 = 2 * son_age + father_age - 70\n\n# equation 2: son_age + 2 * father_age = 95\nequation2 = son_age + 2 * father_age - 95\n\n# Solving the equations\nages = solve((equation1, equation2), (son_age, father_age))\nans = ages\nans"
        ],
        "results": [],
        "result_counter": {},
        "prediction": null
    },
    {
        "question": "I am three times as old as my son. Five years later, I shall be two and a half times as old as my son. How old am I and how old is my son?",
        "answer": 45,
        "generated": [
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x') # my age\ny = Symbol('y') # my son's age\n\n# equation 1: x = 3y\n# equation 2: (x + 5) = 2.5 * (y + 5)\n\neq1 = x - 3*y\neq2 = x + 5 - 2.5*(y + 5)\n\nsolution = solve((eq1, eq2), (x, y))\nans = solution\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x') # my age\ny = Symbol('y') # son's age\n\n# equation 1: x = 3y\n# equation 2: (x + 5) = 2.5 * (y + 5)\n\neq1 = x - 3 * y\neq2 = x + 5 - 2.5 * (y + 5)\n\n# solving the equations\nsolutions = solve((eq1, eq2), (x, y))\nans = solutions[x], solutions[y]\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x') # my_age\ny = Symbol('y') # son_age\n\n# equation 1: my_age = 3 * son_age\neq1 = x - 3 * y\n\n# equation 2: (my_age + 5) = 2.5 * (son_age + 5)\neq2 = (x + 5) - 2.5 * (y + 5)\n\n# solving the equations\nage_solution = solve((eq1, eq2), (x, y))\n\nans = age_solution\nans"
        ],
        "results": [
            45.0
        ],
        "result_counter": {
            "45.0": 1
        },
        "prediction": 45.0
    },
    {
        "question": "The sum total of the ages of father and the son is 55 years. If the father was to live till his son's age equals his present age. The total of their ages would be 93 years. Find their present ages.",
        "answer": 37,
        "generated": [
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nfather_age = Symbol('f')\nson_age = Symbol('s')\n\n# Equation 1: f + s = 55\neq1 = father_age + son_age - 55\n\n# Equation 2: (f - s) + (s + (f - s)) = 93\neq2 = (father_age - son_age) + (son_age + (father_age - son_age)) - 93\n\n# Solve the equations\nages = solve((eq1, eq2), (father_age, son_age))\nans = ages[father_age], ages[son_age]\nans",
            "# Python code, return ans\nsum_of_ages = 55\nfuture_sum_of_ages = 93\ndifference_in_ages = future_sum_of_ages - sum_of_ages\n\nfather_age = (sum_of_ages + difference_in_ages) // 2\nson_age = sum_of_ages - father_age\n\nans = (father_age, son_age)",
            "# Python code, return father_age, son_age\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nfather_age = Symbol('father_age')\nson_age = Symbol('son_age')\n\n# equation 1: father_age + son_age = 55\nequation1 = father_age + son_age - 55\n\n# equation 2: (father_age - son_age) + (son_age * 2) = 93\nequation2 = (father_age - son_age) + (son_age * 2) - 93\n\n# Solve the equations\nages = solve((equation1, equation2), (father_age, son_age))\nans = ages[father_age], ages[son_age]\nans"
        ],
        "results": [
            49.333333333333336,
            46.0
        ],
        "result_counter": {
            "49.333333333333336": 1,
            "46.0": 1
        },
        "prediction": 49.333333333333336
    },
    {
        "question": "The ages of two friends Anna and Ben differ by 3 years. Anna's father Denver is twice as old as Anna and Ben is twice as old as his sister Cathy. The ages of Cathy and Denver differ by 30 years. Find the ages of Anna and Ben.",
        "answer": 19,
        "generated": [
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nAnna_age = Symbol('Anna_age')\nBen_age = Symbol('Ben_age')\nCathy_age = Symbol('Cathy_age')\nDenver_age = Symbol('Denver_age')\n\n# Given equations\neq1 = Anna_age - Ben_age - 3\neq2 = Denver_age - 2 * Anna_age\neq3 = Ben_age - 2 * Cathy_age\neq4 = Denver_age - Cathy_age - 30\n\n# Solving equations\nages = solve((eq1, eq2, eq3, eq4), (Anna_age, Ben_age, Cathy_age, Denver_age))\n\nans = ages[Anna_age], ages[Ben_age]\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\n# Let x be Anna's age and y be Ben's age\nx = Symbol('x')\ny = Symbol('y')\n\n# Anna and Ben's age difference\neq1 = x - y - 3\n\n# Denver's age is twice Anna's age\nDenver_age = 2 * x\n\n# Ben is twice as old as his sister Cathy\nCathy_age = y / 2\n\n# Cathy and Denver's age difference\neq2 = Denver_age - Cathy_age - 30\n\n# Solve the equations\nages = solve((eq1, eq2), (x, y))\n\nans = ages\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nAnna_age = Symbol('Anna_age')\nBen_age = Symbol('Ben_age')\nCathy_age = Symbol('Cathy_age')\nDenver_age = Symbol('Denver_age')\n\n# Given equations\neq1 = Anna_age - Ben_age - 3\neq2 = Denver_age - 2 * Anna_age\neq3 = Ben_age - 2 * Cathy_age\neq4 = Denver_age - Cathy_age - 30\n\n# Solving the equations\nages = solve((eq1, eq2, eq3, eq4), (Anna_age, Ben_age, Cathy_age, Denver_age))\n\nans = ages[Anna_age], ages[Ben_age]\nans"
        ],
        "results": [
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 2
        },
        "prediction": 19.0
    },
    {
        "question": "Five years ago, Nancy was thrice as old as Sam. Ten years later, Nancy will be twice as old as Sam. How old are Nancy and Sam?",
        "answer": 50,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nNancy_age, Sam_age = symbols('Nancy_age Sam_age')\n\neq1 = Eq(Nancy_age - 5, 3 * (Sam_age - 5))\neq2 = Eq(Nancy_age + 10, 2 * (Sam_age + 10))\n\nsolution = solve((eq1, eq2), (Nancy_age, Sam_age))\n\nans = solution\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nNancy_age = Symbol('Nancy_age')\nSam_age = Symbol('Sam_age')\n\n# Five years ago, Nancy was thrice as old as Sam\neq1 = Nancy_age - 5 - 3 * (Sam_age - 5)\n\n# Ten years later, Nancy will be twice as old as Sam\neq2 = Nancy_age + 10 - 2 * (Sam_age + 10)\n\n# Solving the equations\nages = solve((eq1, eq2), (Nancy_age, Sam_age))\nans = ages[Nancy_age], ages[Sam_age]\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nNancy_age = Symbol('n')\nSam_age = Symbol('s')\n\n# Five years ago, Nancy was thrice as old as Sam\neq1 = Nancy_age - 5 - 3 * (Sam_age - 5)\n\n# Ten years later, Nancy will be twice as old as Sam\neq2 = Nancy_age + 10 - 2 * (Sam_age + 10)\n\n# Solving the equations\nages = solve((eq1, eq2), (Nancy_age, Sam_age))\n\nans = ages[Nancy_age], ages[Sam_age]\nans"
        ],
        "results": [
            50.0,
            50.0
        ],
        "result_counter": {
            "50.0": 2
        },
        "prediction": 50.0
    },
    {
        "question": "Seven times a two digit is equal to four times the number obtained by reversing the order of digits and the sum of the digits is 3. Find the number.",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nfor i in range(10, 100):\n    first_digit = i // 10\n    second_digit = i % 10\n    reversed_number = second_digit * 10 + first_digit\n    if 7 * i == 4 * reversed_number and first_digit + second_digit == 3:\n        ans = i\n        break\nans",
            "# Python code, return ans\nfor i in range(10, 100):\n    first_digit = i // 10\n    second_digit = i % 10\n    reversed_number = second_digit * 10 + first_digit\n    if (7 * i == 4 * reversed_number) and (first_digit + second_digit == 3):\n        ans = i\n        break\n\nans",
            "# Python code, return ans\nfor i in range(10, 100):\n    num1 = i\n    num2 = int(str(i)[::-1])\n    if 7 * num1 == 4 * num2 and sum(int(digit) for digit in str(i)) == 3:\n        ans = num1\n        break\n\nans"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "A two digit number is four times the sum of its digits and twice the product of the digits. Find the number.",
        "answer": 36,
        "generated": [
            "# Python code, return ans\nfor i in range(10, 100):\n    digit_sum = sum(int(d) for d in str(i))\n    digit_product = int(str(i)[0]) * int(str(i)[1])\n    if i == 4 * digit_sum and i == 2 * digit_product:\n        ans = i\n        break\nans",
            "# Python code, return ans\ndef find_number():\n    for i in range(10, 100):\n        tens_digit = i // 10\n        ones_digit = i % 10\n        sum_digits = tens_digit + ones_digit\n        product_digits = tens_digit * ones_digit\n        if i == 4 * sum_digits and i == 2 * product_digits:\n            return i\n\nans = find_number()",
            "# Python code, return ans\nfor i in range(10, 100):\n    digit_sum = sum(int(d) for d in str(i))\n    digit_product = int(str(i)[0]) * int(str(i)[1])\n    if i == 4 * digit_sum and i == 2 * digit_product:\n        ans = i\n        break\n\nans"
        ],
        "results": [
            36.0,
            36.0,
            36.0
        ],
        "result_counter": {
            "36.0": 3
        },
        "prediction": 36.0
    },
    {
        "question": "A number consisting of two digits, is equal to 7 times the sum of its digits. When 27 is subtracted from the number, the digits interchange places. Find the number.",
        "answer": 63,
        "generated": [
            "# Python code, return ans\nfor i in range(10, 100):\n    digit_sum = sum(map(int, str(i)))\n    if i == 7 * digit_sum:\n        new_number = i - 27\n        if int(str(i)[::-1]) == new_number:\n            ans = i\n            break\n\nans",
            "# Python code, return ans\nfor i in range(10, 100):\n    digit_sum = sum(int(d) for d in str(i))\n    if i == 7 * digit_sum:\n        reversed_number = int(str(i)[1] + str(i)[0])\n        if i - 27 == reversed_number:\n            ans = i\n            break\n\nans",
            "# Python code, return ans\nfor i in range(10, 100):\n    digit_sum = sum(int(d) for d in str(i))\n    if i == 7 * digit_sum:\n        if i - 27 == int(str(i)[::-1]):\n            ans = i\n            break\n\nans"
        ],
        "results": [
            63.0,
            63.0,
            63.0
        ],
        "result_counter": {
            "63.0": 3
        },
        "prediction": 63.0
    },
    {
        "question": "In a two digit number, the sum of the two digits is 9. If the digits are reversed , the number is increased by 9. Find the number.",
        "answer": 45,
        "generated": [
            "# Python code, return ans\ndef find_number():\n    for i in range(1, 10):\n        for j in range(1, 10):\n            if i + j == 9 and int(str(j) + str(i)) - int(str(i) + str(j)) == 9:\n                return int(str(i) + str(j))\n\nans = find_number()",
            "# Python code, return ans\nfor i in range(1, 9):\n    first_digit = i\n    second_digit = 9 - i\n    original_number = first_digit * 10 + second_digit\n    reversed_number = second_digit * 10 + first_digit\n    if reversed_number == original_number + 9:\n        ans = original_number\n        break\n\nans",
            "# Python code, return ans\nfor i in range(1, 10):\n    for j in range(1, 10):\n        if i + j == 9:\n            original_number = i * 10 + j\n            reversed_number = j * 10 + i\n            if reversed_number == original_number + 9:\n                ans = original_number\n                break\n\nans"
        ],
        "results": [
            45.0,
            45.0,
            45.0
        ],
        "result_counter": {
            "45.0": 3
        },
        "prediction": 45.0
    },
    {
        "question": "The sum of the digits of a two number is 15. The number is decreased by 27 the digits are reversed. Find the number.",
        "answer": 96,
        "generated": [
            "# Python code, return ans\ndef find_number():\n    for i in range(10):\n        for j in range(10):\n            if i + j == 15:\n                original_number = i * 10 + j\n                reversed_number = j * 10 + i\n                if original_number - 27 == reversed_number:\n                    return original_number\n\nans = find_number()",
            "# Python code, return ans\ndef find_number():\n    for i in range(1, 10):\n        for j in range(1, 10):\n            if i + j == 15:\n                original_number = int(str(i) + str(j))\n                reversed_number = int(str(j) + str(i))\n                if original_number - 27 == reversed_number:\n                    return original_number\n\nans = find_number()",
            "# Python code, return ans\ndef find_number():\n    for i in range(1, 10):\n        for j in range(10):\n            if i + j == 15:\n                num = int(str(i) + str(j))\n                reversed_num = int(str(j) + str(i))\n                if num - 27 == reversed_num:\n                    return num\n\nans = find_number()"
        ],
        "results": [
            96.0,
            96.0,
            96.0
        ],
        "result_counter": {
            "96.0": 3
        },
        "prediction": 96.0
    },
    {
        "question": "In a two digit number, the tens digit is three times the unit digit. When the number is decreased by 54, the digits are reversed. Find the number.",
        "answer": 93,
        "generated": [
            "# Python code, return ans\nfor tens_digit in range(1, 10):\n    unit_digit = tens_digit // 3\n    original_number = tens_digit * 10 + unit_digit\n    reversed_number = unit_digit * 10 + tens_digit\n    if original_number - reversed_number == 54:\n        ans = original_number\n        break\n\nans",
            "# Python code, return ans\nfor i in range(10, 100):\n    tens_digit = i // 10\n    unit_digit = i % 10\n    if tens_digit == 3 * unit_digit:\n        reversed_number = int(str(unit_digit) + str(tens_digit))\n        if i - 54 == reversed_number:\n            ans = i\n            break\n\nans",
            "# Python code, return ans\ndef find_number():\n    for tens_digit in range(1, 10):\n        unit_digit = tens_digit // 3\n        number = tens_digit * 10 + unit_digit\n        reversed_number = unit_digit * 10 + tens_digit\n        if number - reversed_number == 54:\n            return number\n\nans = find_number()"
        ],
        "results": [
            82.0,
            93.0,
            82.0
        ],
        "result_counter": {
            "82.0": 2,
            "93.0": 1
        },
        "prediction": 82.0
    },
    {
        "question": "The sum of the digits of a two digit number is 8 and the difference between the number and that formed by reversing the digits is 18. Find the number.",
        "answer": 53,
        "generated": [
            "# Python code, return ans\nfor i in range(10, 100):\n    tens_digit = i // 10\n    ones_digit = i % 10\n    if tens_digit + ones_digit == 8:\n        reversed_number = ones_digit * 10 + tens_digit\n        if abs(i - reversed_number) == 18:\n            ans = i\n            break\nans",
            "# Python code, return ans\nfor i in range(10, 100):\n    tens = i // 10\n    ones = i % 10\n    if tens + ones == 8:\n        reversed_number = ones * 10 + tens\n        if abs(i - reversed_number) == 18:\n            ans = i\n            break\n\nans",
            "# Python code, return ans\nfor i in range(10, 100):\n    digit_sum = sum(int(d) for d in str(i))\n    reversed_num = int(str(i)[::-1])\n    if digit_sum == 8 and abs(i - reversed_num) == 18:\n        ans = i\n        break\nans"
        ],
        "results": [
            35.0,
            35.0,
            35.0
        ],
        "result_counter": {
            "35.0": 3
        },
        "prediction": 35.0
    },
    {
        "question": "A boat goes 30 km upstream and 44 km downstream in 10 hours. In 13 hours, it can go 40 km upstream and 55 km downstream. Determine the speed of the stream and that of boat in still water.",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx, y = symbols('x y')\n\n# Let x be the speed of the boat in still water and y be the speed of the stream.\n# Upstream speed = x - y\n# Downstream speed = x + y\n\n# Time taken to go upstream and downstream in the first case\neq1 = Eq((30 / (x - y)) + (44 / (x + y)), 10)\n\n# Time taken to go upstream and downstream in the second case\neq2 = Eq((40 / (x - y)) + (55 / (x + y)), 13)\n\n# Solve the equations\nsolutions = solve((eq1, eq2), (x, y))\n\nboat_speed = solutions[x]\nstream_speed = solutions[y]\n\nans = boat_speed, stream_speed\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx, y = symbols('x y')\n\n# Let x be the speed of the boat in still water and y be the speed of the stream.\n# Upstream speed: (x - y)\n# Downstream speed: (x + y)\n\n# Equation 1: Time taken to go upstream and downstream in 10 hours\neq1 = Eq(30 / (x - y) + 44 / (x + y), 10)\n\n# Equation 2: Time taken to go upstream and downstream in 13 hours\neq2 = Eq(40 / (x - y) + 55 / (x + y), 13)\n\n# Solve the system of equations\nsolutions = solve((eq1, eq2), (x, y))\n\nboat_speed_still_water = solutions[x]\nstream_speed = solutions[y]\nans = boat_speed_still_water, stream_speed\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx, y = symbols('x y')\neq1 = Eq(30 / (x - y) + 44 / (x + y), 10)\neq2 = Eq(40 / (x - y) + 55 / (x + y), 13)\n\nsolutions = solve((eq1, eq2), (x, y))\nboat_speed, stream_speed = solutions[x], solutions[y]\nans = boat_speed, stream_speed\nans"
        ],
        "results": [],
        "result_counter": {},
        "prediction": null
    },
    {
        "question": "Tara can row downstream 20 km in 2 hours, and upstream 4 km in 2 hours. Find her speed of rowing in still water and the speed of the current.",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ndownstream_distance = 20\ndownstream_time = 2\nupstream_distance = 4\nupstream_time = 2\n\ndownstream_speed = downstream_distance / downstream_time\nupstream_speed = upstream_distance / upstream_time\n\nspeed_in_still_water = (downstream_speed + upstream_speed) / 2\nspeed_of_current = (downstream_speed - upstream_speed) / 2\n\nans = (speed_in_still_water, speed_of_current)",
            "# Python code, return ans\ndownstream_distance = 20\ndownstream_time = 2\nupstream_distance = 4\nupstream_time = 2\n\ndownstream_speed = downstream_distance / downstream_time\nupstream_speed = upstream_distance / upstream_time\n\n# Let x be the speed of rowing in still water and y be the speed of the current.\n# downstream_speed = x + y\n# upstream_speed = x - y\n\n# Solving the system of equations\nx = (downstream_speed + upstream_speed) / 2\ny = (downstream_speed - upstream_speed) / 2\n\nans = (x, y)",
            "# Python code, return ans\ndownstream_distance = 20\ndownstream_time = 2\nupstream_distance = 4\nupstream_time = 2\n\ndownstream_speed = downstream_distance / downstream_time\nupstream_speed = upstream_distance / upstream_time\n\nspeed_of_rowing = (downstream_speed + upstream_speed) / 2\nspeed_of_current = (downstream_speed - upstream_speed) / 2\n\nans = (speed_of_rowing, speed_of_current)"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "A sailor goes 8 km downstream in 40 minutes and comes back in 1 hour. Determine the speed of the sailor in still water and the speed of current.",
        "answer": 10,
        "generated": [
            "# Python code, return ans\ndownstream_distance = 8\ndownstream_time = 40 / 60  # converting minutes to hours\nupstream_time = 1\n\ndownstream_speed = downstream_distance / downstream_time\nupstream_speed = downstream_distance / upstream_time\n\n# Let x be the speed of the sailor in still water and y be the speed of the current\n# downstream_speed = x + y\n# upstream_speed = x - y\n\n# Solving the system of linear equations\nfrom sympy import symbols, Eq, solve\n\nx, y = symbols('x y')\n\neq1 = Eq(downstream_speed, x + y)\neq2 = Eq(upstream_speed, x - y)\n\nsolutions = solve((eq1, eq2), (x, y))\n\nans = solutions\nans",
            "# Python code, return ans\ndownstream_distance = 8\ndownstream_time = 40 / 60  # converting minutes to hours\nupstream_time = 1\n\ndownstream_speed = downstream_distance / downstream_time\nupstream_speed = downstream_distance / upstream_time\n\n# Let x be the speed of the sailor in still water and y be the speed of the current\n# downstream_speed = x + y\n# upstream_speed = x - y\n\n# Solving the linear equations\nspeed_sailor_still_water = (downstream_speed + upstream_speed) / 2\nspeed_current = (downstream_speed - upstream_speed) / 2\n\nans = (speed_sailor_still_water, speed_current)",
            "# Python code, return ans\ndownstream_distance = 8\ndownstream_time = 40 / 60  # converting minutes to hours\nupstream_time = 1\n\n# Let x be the speed of the sailor in still water and y be the speed of the current\n# downstream_speed = x + y\n# upstream_speed = x - y\n\n# downstream_distance = downstream_speed * downstream_time\n# upstream_distance = upstream_speed * upstream_time\n\n# Since downstream_distance = upstream_distance, we can write the equation as:\n# (x + y) * downstream_time = (x - y) * upstream_time\n\n# Solving for x and y:\nfrom sympy import symbols, Eq, solve\n\nx, y = symbols('x y')\neq1 = Eq((x + y) * downstream_time, (x - y) * upstream_time)\nsol = solve((eq1), (x, y))\n\nsailor_speed_still_water = sol[x]\nspeed_of_current = sol[y]\nans = (sailor_speed_still_water, speed_of_current)\nans"
        ],
        "results": [
            10.0
        ],
        "result_counter": {
            "10.0": 1
        },
        "prediction": 10.0
    },
    {
        "question": "Points A and B are 70 km apart on a highway. A car starts from A and another car starts from B at the same time. If they travel in the same direction, they meet in 7 hours, but if they travel towards each other they meet in one hour. What are their respective speeds?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\ndistance_apart = 70\ntime_same_direction = 7\ntime_opposite_direction = 1\n\n# Let the speed of car A be x and the speed of car B be y\n# When they travel in the same direction, the relative speed is (x - y)\n# When they travel towards each other, the relative speed is (x + y)\n\n# Using the formula distance = speed * time\n# In the same direction: 70 = (x - y) * 7\n# In the opposite direction: 70 = (x + y) * 1\n\n# Solving the equations\nfrom sympy import symbols, Eq, solve\n\nx, y = symbols('x y')\neq1 = Eq(70, (x - y) * 7)\neq2 = Eq(70, (x + y) * 1)\n\nspeeds = solve((eq1, eq2), (x, y))\n\nans = speeds\nans",
            "# Python code, return ans\ndistance_AB = 70\ntime_same_direction = 7\ntime_opposite_direction = 1\n\n# Let the speed of car A be x km/h and the speed of car B be y km/h\n# When they travel in the same direction, their relative speed is (x - y) km/h\n# When they travel towards each other, their relative speed is (x + y) km/h\n\n# Distance = Speed * Time\n# In the same direction: 70 = (x - y) * 7\n# In the opposite direction: 70 = (x + y) * 1\n\n# Solving the equations:\n# 70 = 7x - 7y\n# 70 = x + y\n\n# Rearranging the first equation: 7x - 7y = 70\n# Dividing both sides by 7: x - y = 10\n\n# Adding the two equations:\n# x - y = 10\n# x + y = 70\n# -----------\n# 2x = 80\n# x = 40\n\n# Now we can find y:\n# x + y = 70\n# 40 + y = 70\n# y = 30\n\nans = (40, 30) # Car A has a speed of 40 km/h and Car B has a speed of 30 km/h.",
            "# Python code, return ans\ndistance = 70\ntime_same_direction = 7\ntime_opposite_direction = 1\n\n# Let the speed of car A be x km/h and the speed of car B be y km/h\n# When they travel in the same direction, the relative speed is (y - x) km/h\n# When they travel towards each other, the relative speed is (x + y) km/h\n\n# Using the formula distance = speed * time\n# In the same direction: 70 = (y - x) * 7\n# In the opposite direction: 70 = (x + y) * 1\n\n# Solving the equations\nfrom sympy import symbols, Eq, solve\n\nx, y = symbols('x y')\neq1 = Eq(70, 7 * (y - x))\neq2 = Eq(70, x + y)\n\nspeeds = solve((eq1, eq2), (x, y))\n\nans = speeds\nans"
        ],
        "results": [
            40.0
        ],
        "result_counter": {
            "40.0": 1
        },
        "prediction": 40.0
    },
    {
        "question": "Amy travelled 300 km by train and 200 km by taxi, it took him 5 hours 30 minutes. But if he travels 260 km by train and 240 km by taxi he takes 6 minutes longer. Find the speed of train and taxi.",
        "answer": 100,
        "generated": [
            "# Python code, return train_speed, taxi_speed\n\nfrom sympy import symbols, Eq, solve\n\ntrain_distance1 = 300\ntaxi_distance1 = 200\ntime1 = 5.5\n\ntrain_distance2 = 260\ntaxi_distance2 = 240\ntime2 = 5.5 + 6/60\n\ntrain_speed, taxi_speed = symbols('train_speed taxi_speed')\n\neq1 = Eq(train_distance1/train_speed + taxi_distance1/taxi_speed, time1)\neq2 = Eq(train_distance2/train_speed + taxi_distance2/taxi_speed, time2)\n\nsolution = solve((eq1, eq2), (train_speed, taxi_speed))\n\ntrain_speed, taxi_speed = solution[train_speed], solution[taxi_speed]\ntrain_speed, taxi_speed",
            "# Python code, return train_speed, taxi_speed\nfrom sympy import symbols, Eq, solve\n\ntrain_distance1 = 300\ntaxi_distance1 = 200\ntime1 = 5.5\n\ntrain_distance2 = 260\ntaxi_distance2 = 240\ntime2 = 5.5 + 6/60\n\ntrain_speed, taxi_speed = symbols('train_speed taxi_speed')\n\neq1 = Eq(train_distance1/train_speed + taxi_distance1/taxi_speed, time1)\neq2 = Eq(train_distance2/train_speed + taxi_distance2/taxi_speed, time2)\n\nsolution = solve((eq1, eq2), (train_speed, taxi_speed))\n\ntrain_speed = solution[train_speed]\ntaxi_speed = solution[taxi_speed]\n\ntrain_speed, taxi_speed",
            "# Python code, return train_speed, taxi_speed\nfrom sympy import symbols, Eq, solve\n\ntrain_distance1 = 300\ntaxi_distance1 = 200\ntime1 = 5.5 # in hours\n\ntrain_distance2 = 260\ntaxi_distance2 = 240\ntime2 = 5.5 + 6/60 # in hours\n\ntrain_speed, taxi_speed = symbols('train_speed taxi_speed')\n\neq1 = Eq(train_distance1/train_speed + taxi_distance1/taxi_speed, time1)\neq2 = Eq(train_distance2/train_speed + taxi_distance2/taxi_speed, time2)\n\nspeeds = solve((eq1, eq2), (train_speed, taxi_speed))\n\ntrain_speed = speeds[train_speed]\ntaxi_speed = speeds[taxi_speed]\n\ntrain_speed, taxi_speed"
        ],
        "results": [],
        "result_counter": {},
        "prediction": null
    },
    {
        "question": "A man travels 600 km partly by train and partly by car. If he covers 400 km by train and the rest by car, it takes him 6 hours and 30 minutes. But if he travels 200 km by train and rest by car, he takes 30 minutes longer. Find the speed of train and that of car.",
        "answer": 100,
        "generated": [
            "# Python code, return train_speed, car_speed\nfrom sympy import symbols, Eq, solve\n\ntrain_distance1 = 400\ncar_distance1 = 600 - train_distance1\ntime1 = 6.5\n\ntrain_distance2 = 200\ncar_distance2 = 600 - train_distance2\ntime2 = 7\n\ntrain_speed, car_speed = symbols('train_speed car_speed')\n\neq1 = Eq(train_distance1/train_speed + car_distance1/car_speed, time1)\neq2 = Eq(train_distance2/train_speed + car_distance2/car_speed, time2)\n\nsolution = solve((eq1, eq2), (train_speed, car_speed))\n\ntrain_speed = solution[train_speed]\ncar_speed = solution[car_speed]\n\ntrain_speed, car_speed",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\n# Let x be the speed of the train and y be the speed of the car\nx = Symbol('x')\ny = Symbol('y')\n\n# Equations based on the given information\n# 400/x + 200/y = 6.5 (6 hours and 30 minutes)\n# 200/x + 400/y = 7 (6 hours and 30 minutes + 30 minutes)\neq1 = 400/x + 200/y - 6.5\neq2 = 200/x + 400/y - 7\n\n# Solving the equations\nsolutions = solve((eq1, eq2), (x, y))\n\nans = solutions\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\ntrain_distance1 = 400\ncar_distance1 = 200\ntime1 = 6.5 * 60  # in minutes\n\ntrain_distance2 = 200\ncar_distance2 = 400\ntime2 = time1 + 30\n\ntrain_speed, car_speed = symbols('train_speed car_speed')\n\n# Equations\neq1 = Eq(train_distance1 / train_speed + car_distance1 / car_speed, time1)\neq2 = Eq(train_distance2 / train_speed + car_distance2 / car_speed, time2)\n\n# Solve equations\nspeeds = solve((eq1, eq2), (train_speed, car_speed))\nans = speeds[train_speed], speeds[car_speed]\nans"
        ],
        "results": [],
        "result_counter": {},
        "prediction": null
    },
    {
        "question": "The taxi charges in a city comprise of a fixed charge together with the charge for the distance covered. For a journey of 10 km, the charge paid is $75 and for a journey of 15 km, the charge paid is $110. What will a person have to pay for traveling a distance of 25 km?",
        "answer": 180,
        "generated": [
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x')\ny = Symbol('y')\n\n# equation 1: x + 10y = 75\n# equation 2: x + 15y = 110\n\neq1 = x + 10*y - 75\neq2 = x + 15*y - 110\n\nfixed_charge = solve(eq1, x)[0]  # x = 75 - 10y\ncharge_per_km = solve(eq2.subs(x, fixed_charge), y)[0]\n\ndistance_25km = 25\ntotal_charge = fixed_charge + charge_per_km * distance_25km\nans = total_charge\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x')  # fixed charge\ny = Symbol('y')  # charge per km\n\n# Equations\neq1 = x + 10 * y - 75\neq2 = x + 15 * y - 110\n\n# Solve the equations\ncharges = solve((eq1, eq2), (x, y))\n\nfixed_charge = charges[x]\ncharge_per_km = charges[y]\n\n# Calculate the charge for 25 km\ncharge_25_km = fixed_charge + 25 * charge_per_km\nans = charge_25_km\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x')  # fixed charge\ny = Symbol('y')  # charge per km\n\n# equation 1: x + 10y = 75\n# equation 2: x + 15y = 110\n\neq1 = x + 10 * y - 75\neq2 = x + 15 * y - 110\n\nsolutions = solve((eq1, eq2), (x, y))\n\nfixed_charge = solutions[x]\ncharge_per_km = solutions[y]\n\ndistance_to_travel = 25\ntotal_cost = fixed_charge + charge_per_km * distance_to_travel\nans = total_cost\nans"
        ],
        "results": [
            180.0,
            180.0
        ],
        "result_counter": {
            "180.0": 2
        },
        "prediction": 180.0
    },
    {
        "question": "A railway half ticket costs half the full fare and the reservation charge is the same on half ticket as on full ticket. One reserved first class from Michigan to Massachusetts costs $216 and one full and one half reserved first class tickets cost $327. What is the basic first class full fare and what is the reservation charge?",
        "answer": 210,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx, y = symbols('x y')\n\n# x is the basic first class full fare\n# y is the reservation charge\n\n# One reserved first class ticket cost\neq1 = Eq(x + y, 216)\n\n# One full and one half reserved first class tickets cost\neq2 = Eq(x + y + (x / 2) + y, 327)\n\n# Solving the equations\nans = solve((eq1, eq2), (x, y))\n\nbasic_first_class_full_fare = ans[x]\nreservation_charge = ans[y]\n\nbasic_first_class_full_fare, reservation_charge",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nfull_fare, reservation_charge = symbols('full_fare reservation_charge')\n\n# One reserved first class from Michigan to Massachusetts costs $216\neq1 = Eq(full_fare + reservation_charge, 216)\n\n# One full and one half reserved first class tickets cost $327\neq2 = Eq(full_fare + (full_fare/2) + 2 * reservation_charge, 327)\n\n# Solving the equations\nsolution = solve((eq1, eq2), (full_fare, reservation_charge))\n\nans = solution\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx, y = symbols('x y')\n\n# x is the basic first class full fare\n# y is the reservation charge\n\n# Full fare equation: x + y = 216\neq1 = Eq(x + y, 216)\n\n# Full fare and half fare equation: x + y + (1/2)x + y = 327\neq2 = Eq(x + y + (1/2)*x + y, 327)\n\n# Solve the equations\nsolutions = solve((eq1, eq2), (x, y))\n\nans = solutions\nans"
        ],
        "results": [],
        "result_counter": {},
        "prediction": null
    },
    {
        "question": "A man walks certain distance with certain speed. If he walks 1/2 km/hr faster, he takes 1 hr less. But if he walks 1 km/hr slower, he takes 3 more hours. Find the distance covered by the man and his original rate of walking.",
        "answer": 36,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\ndistance, original_speed = symbols('distance original_speed')\nfaster_speed = original_speed + 1/2\nslower_speed = original_speed - 1\n\nfaster_time = distance / faster_speed\nslower_time = distance / slower_speed\noriginal_time = distance / original_speed\n\neq1 = Eq(original_time - faster_time, 1)\neq2 = Eq(slower_time - original_time, 3)\n\nsolutions = solve((eq1, eq2), (distance, original_speed))\n\nans = solutions\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\ndistance, original_speed = symbols('distance original_speed')\nfaster_speed = original_speed + 1/2\nslower_speed = original_speed - 1\n\neq1 = Eq(distance / original_speed - distance / faster_speed, 1)\neq2 = Eq(distance / slower_speed - distance / original_speed, 3)\n\nsolution = solve((eq1, eq2), (distance, original_speed))\nans = solution\nans",
            "# Python code, return distance, original_speed\n\nfrom sympy import symbols, Eq, solve\n\ndistance, original_speed = symbols('distance original_speed')\nfaster_speed = original_speed + 1/2\nslower_speed = original_speed - 1\ntime_difference_faster = 1\ntime_difference_slower = 3\n\n# Time = Distance/Speed\neq1 = Eq(distance/original_speed - distance/faster_speed, time_difference_faster)\neq2 = Eq(distance/slower_speed - distance/original_speed, time_difference_slower)\n\nsolutions = solve((eq1, eq2), (distance, original_speed))\n\ndistance = solutions[distance]\noriginal_speed = solutions[original_speed]\n\nans_distance = distance\nans_original_speed = original_speed\nans_distance, ans_original_speed"
        ],
        "results": [],
        "result_counter": {},
        "prediction": null
    },
    {
        "question": "A car goes uphill at the rate of 30 km an hour and downhill at the rate of 50 km an hour after 15 hours it has covered 650 km. How long did it go downhill and uphill respectively?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx, y = symbols('x y')\nuphill_speed = 30\ndownhill_speed = 50\ntotal_time = 15\ntotal_distance = 650\n\neq1 = Eq(x + y, total_time)\neq2 = Eq(uphill_speed * x + downhill_speed * y, total_distance)\n\nsol = solve((eq1, eq2), (x, y))\n\nuphill_time = sol[x]\ndownhill_time = sol[y]\n\nans = (uphill_time, downhill_time)\nans",
            "# Python code, return ans_uphill, ans_downhill\nfrom sympy import symbols, Eq, solve\n\nuphill_time = symbols('x')\ndownhill_time = symbols('y')\n\neq1 = Eq(30 * uphill_time + 50 * downhill_time, 650)\neq2 = Eq(uphill_time + downhill_time, 15)\n\nsolution = solve((eq1, eq2), (uphill_time, downhill_time))\n\nans_uphill = solution[uphill_time]\nans_downhill = solution[downhill_time]\n\nans_uphill, ans_downhill",
            "# Python code, return ans_uphill, ans_downhill\nfrom sympy import symbols, Eq, solve\n\nx, y = symbols('x y')\nuphill_speed = 30\ndownhill_speed = 50\ntotal_distance = 650\ntotal_time = 15\n\neq1 = Eq(x * uphill_speed + y * downhill_speed, total_distance)\neq2 = Eq(x + y, total_time)\n\nsol = solve((eq1, eq2), (x, y))\nans_uphill = sol[x]\nans_downhill = sol[y]\nans_uphill, ans_downhill"
        ],
        "results": [
            5.0
        ],
        "result_counter": {
            "5.0": 1
        },
        "prediction": 5.0
    },
    {
        "question": "Ronnie travels 300 km to her home partly by train and partly by bus. She takes 4 hours if she travels 60 km by train and the remaining by bus. If she travels 100 km by train and the remaining by bus, she takes 10 minutes longer. Find the speed of the train and bus separately.",
        "answer": 60,
        "generated": [
            "# Python code, return train_speed, bus_speed\nfrom sympy import symbols, Eq, solve\n\nx, y = symbols('x y')\n# Let x be the speed of the train and y be the speed of the bus\n\n# Equations based on given information\neq1 = Eq(60/x + (300 - 60)/y, 4)  # Time taken when 60 km by train\neq2 = Eq(100/x + (300 - 100)/y, 4 + 10/60)  # Time taken when 100 km by train, 10 minutes longer\n\n# Solving the equations\nspeeds = solve((eq1, eq2), (x, y))\n\ntrain_speed = speeds[x]\nbus_speed = speeds[y]\n\ntrain_speed, bus_speed",
            "# Python code, return train_speed, bus_speed\nfrom sympy import symbols, Eq, solve\n\ntrain_distance1 = 60\ntrain_distance2 = 100\ntotal_distance = 300\nbus_distance1 = total_distance - train_distance1\nbus_distance2 = total_distance - train_distance2\ntime1 = 4 * 60  # in minutes\ntime2 = time1 + 10  # in minutes\n\ntrain_speed, bus_speed = symbols('train_speed bus_speed')\neq1 = Eq(train_distance1/train_speed + bus_distance1/bus_speed, time1/60)\neq2 = Eq(train_distance2/train_speed + bus_distance2/bus_speed, time2/60)\n\nsol = solve((eq1, eq2), (train_speed, bus_speed))\ntrain_speed, bus_speed = sol[train_speed], sol[bus_speed]\ntrain_speed, bus_speed",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\ntrain_speed, bus_speed = symbols('train_speed bus_speed')\n\n# Let x be the distance traveled by train and y be the distance traveled by bus\n# x + y = 300\n# Time taken in the first scenario: x/train_speed + y/bus_speed = 4\n# Time taken in the second scenario: (x+40)/train_speed + (y-40)/bus_speed = 4 + 10/60\n\n# Equations\neq1 = Eq((60/train_speed) + (240/bus_speed), 4)\neq2 = Eq((100/train_speed) + (200/bus_speed), 4 + 10/60)\n\n# Solve the equations\nans = solve((eq1, eq2), (train_speed, bus_speed))\nans"
        ],
        "results": [],
        "result_counter": {},
        "prediction": null
    },
    {
        "question": "A train covered a certain distance at a uniform speed. If the train would have been 6 km/hr faster it would have 8 hours less than the scheduled time, and if the train were slower by 6 km/hr,it would have taken 12 hours more than the scheduled time. Find the length of the journey.",
        "answer": 1440,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\ndistance, speed, time = symbols('distance speed time')\neq1 = Eq(distance, speed * time)\neq2 = Eq(distance, (speed + 6) * (time - 8))\neq3 = Eq(distance, (speed - 6) * (time + 12))\n\n# Solving the equations\nsol = solve((eq1, eq2, eq3), (distance, speed, time))\nans = sol[0][0]\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx, y = symbols('x y')\n\n# x is the speed of the train\n# y is the scheduled time\n\n# (x+6)(y-8) = xy\n# (x-6)(y+12) = xy\n\neq1 = Eq((x+6)*(y-8), x*y)\neq2 = Eq((x-6)*(y+12), x*y)\n\nsol = solve((eq1, eq2), (x, y))\n\nspeed = sol[0][0]\ntime = sol[0][1]\n\n# Length of the journey = speed * time\nlength_of_journey = speed * time\nans = length_of_journey\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx, y = symbols('x y')\n\n# x = distance\n# y = original speed\n\n# x = y * t\n# x = (y + 6) * (t - 8)\n# x = (y - 6) * (t + 12)\n\neq1 = Eq(x - y * 8, (y + 6) * 8)\neq2 = Eq(x - y * 12, (y - 6) * 12)\n\n# Solve the equations\nsolution = solve((eq1, eq2), (x, y))\nans = solution[x]\nans"
        ],
        "results": [
            1440.0,
            288.0
        ],
        "result_counter": {
            "1440.0": 1,
            "288.0": 1
        },
        "prediction": 1440.0
    },
    {
        "question": "The coach of a cricket team buys 7 bats and 6 balls for $3800. Later, he buys 3 bats and 5 balls for $1750. Find the cost of each bat and each ball.",
        "answer": 500,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nbat_cost, ball_cost = symbols('bat_cost ball_cost')\n\n# 7 bats and 6 balls for $3800\neq1 = Eq(7 * bat_cost + 6 * ball_cost, 3800)\n\n# 3 bats and 5 balls for $1750\neq2 = Eq(3 * bat_cost + 5 * ball_cost, 1750)\n\n# Solve the equations\nsolution = solve((eq1, eq2), (bat_cost, ball_cost))\n\nans = solution\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nbat_cost, ball_cost = symbols('bat_cost ball_cost')\n\neq1 = Eq(7 * bat_cost + 6 * ball_cost, 3800)\neq2 = Eq(3 * bat_cost + 5 * ball_cost, 1750)\n\nsolutions = solve((eq1, eq2), (bat_cost, ball_cost))\n\nans = solutions\nans",
            "# Python code, return bat_cost, ball_cost\nfrom sympy import symbols, Eq, solve\n\nbat_cost, ball_cost = symbols('bat_cost ball_cost')\n\neq1 = Eq(7 * bat_cost + 6 * ball_cost, 3800)\neq2 = Eq(3 * bat_cost + 5 * ball_cost, 1750)\n\nsol = solve((eq1, eq2), (bat_cost, ball_cost))\n\nbat_cost = sol[bat_cost]\nball_cost = sol[ball_cost]\nbat_cost, ball_cost"
        ],
        "results": [],
        "result_counter": {},
        "prediction": null
    },
    {
        "question": "The sum of the digits of a two-digit number is 9. Also, nine times this number is twice the number obtained by reversing the order of the digits. Find the number.",
        "answer": 18,
        "generated": [
            "# Python code, return ans\ndef find_number():\n    for i in range(10, 100):\n        num1 = i // 10\n        num2 = i % 10\n        if num1 + num2 == 9:\n            reversed_num = num2 * 10 + num1\n            if 9 * i == 2 * reversed_num:\n                return i\n\nans = find_number()",
            "# Python code, return ans\nfor i in range(10, 100):\n    sum_of_digits = sum(map(int, str(i)))\n    if sum_of_digits == 9:\n        reversed_number = int(str(i)[::-1])\n        if 9 * i == 2 * reversed_number:\n            ans = i\n            break\n\nans",
            "# Python code, return ans\ndef find_number():\n    for i in range(10, 100):\n        num_sum = sum(int(digit) for digit in str(i))\n        if num_sum == 9:\n            reverse_num = int(str(i)[::-1])\n            if 9 * i == 2 * reverse_num:\n                return i\n\nans = find_number()"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "A person invested some amount at 12% simple interest and some amount at 10% simple interest. He received an annual interest of $130. But, if he had interchanged and invested he would have received $4 more. How much amount did he invest at the two rates?",
        "answer": 500,
        "generated": [
            "# Python code, return ans1, ans2\nfrom sympy import symbols, Eq, solve\n\nx, y = symbols('x y')\n\n# x is the amount invested at 12% and y is the amount invested at 10%\n# Equation 1: 0.12x + 0.10y = 130\neq1 = Eq(0.12 * x + 0.10 * y, 130)\n\n# Equation 2: If the amounts are interchanged, he would have received $4 more\n# 0.10x + 0.12y = 130 + 4\neq2 = Eq(0.10 * x + 0.12 * y, 134)\n\n# Solving the system of linear equations\nsolution = solve((eq1, eq2), (x, y))\n\nans1 = solution[x]\nans2 = solution[y]\n\nans1, ans2",
            "# Python code, return ans1, ans2\nfrom sympy import symbols, Eq, solve\n\nx, y = symbols('x y')\n\n# x is the amount invested at 12% and y is the amount invested at 10%\n# Equation 1: 0.12x + 0.10y = 130\n# Equation 2: 0.10x + 0.12y = 134\n\neq1 = Eq(0.12*x + 0.10*y, 130)\neq2 = Eq(0.10*x + 0.12*y, 134)\n\nans1, ans2 = solve((eq1, eq2), (x, y))\n\nans1, ans2",
            "# Python code, return ans1, ans2\nfrom sympy import symbols, Eq, solve\nx, y = symbols('x y')\n\n# x is the amount invested at 12% and y is the amount invested at 10%\neq1 = Eq(0.12 * x + 0.10 * y, 130)\neq2 = Eq(0.10 * x + 0.12 * y, 134)\n\n# Solving the equations\nsolution = solve((eq1, eq2), (x, y))\n\nans1 = solution[x]\nans2 = solution[y]\n\nans1, ans2"
        ],
        "results": [],
        "result_counter": {},
        "prediction": null
    },
    {
        "question": "At present a father is three times as old as his son. After 12 years his age will be twice the age of his son. Find their present ages?",
        "answer": 36,
        "generated": [
            "# Python code, return father_age, son_age\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nfather_age = Symbol('father_age')\nson_age = Symbol('son_age')\n\n# At present a father is three times as old as his son\neq1 = father_age - 3 * son_age\n\n# After 12 years his age will be twice the age of his son\neq2 = (father_age + 12) - 2 * (son_age + 12)\n\n# Solving the equations\nages = solve((eq1, eq2), (father_age, son_age))\n\nfather_age = ages[father_age]\nson_age = ages[son_age]\nans = father_age, son_age\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x')  # father's age\ny = Symbol('y')  # son's age\n\n# equation 1: father's age = 3 * son's age\nequation1 = x - 3 * y\n\n# equation 2: father's age + 12 = 2 * (son's age + 12)\nequation2 = x + 12 - 2 * (y + 12)\n\n# solving the equations\nsolutions = solve((equation1, equation2), (x, y))\n\nans = solutions\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nfather_age, son_age = symbols('father_age son_age')\neq1 = Eq(father_age, 3 * son_age)\neq2 = Eq(father_age + 12, 2 * (son_age + 12))\n\nages = solve((eq1, eq2), (father_age, son_age))\nans = ages\nans"
        ],
        "results": [
            36.0
        ],
        "result_counter": {
            "36.0": 1
        },
        "prediction": 36.0
    },
    {
        "question": "The larger of two supplementary angles exceeds the smaller by 18 degrees. Find them.",
        "answer": 99,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nangle1, angle2 = symbols('angle1 angle2')\n\neq1 = Eq(angle1 + angle2, 180) # Supplementary angles add up to 180 degrees\neq2 = Eq(angle1 - angle2, 18) # The larger angle exceeds the smaller by 18 degrees\n\nsolutions = solve((eq1, eq2), (angle1, angle2))\nans = solutions\nans",
            "# Python code, return ans1, ans2\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x')\ny = Symbol('y')\n\n# Supplementary angles add up to 180 degrees\neq1 = x + y - 180\n\n# The larger angle exceeds the smaller by 18 degrees\neq2 = x - y - 18\n\n# Solving the equations\nangles = solve((eq1, eq2), (x, y))\n\nans1 = angles[x]\nans2 = angles[y]\nans1, ans2",
            "# Python code, return ans1, ans2\nfrom sympy import symbols, Eq, solve\n\nangle1, angle2 = symbols('angle1 angle2')\neq1 = Eq(angle1 + angle2, 180)  # Supplementary angles sum to 180 degrees\neq2 = Eq(angle1 - angle2, 18)  # Larger angle exceeds the smaller by 18 degrees\n\nangles = solve((eq1, eq2), (angle1, angle2))\nans1, ans2 = angles[angle1], angles[angle2]"
        ],
        "results": [],
        "result_counter": {},
        "prediction": null
    },
    {
        "question": "The area of a rectangle gets reduced by 9 square units, if its length is reduced by 5 units and breadth is increased by 3 units. If we increase the length by 3 units and the breadth by 2 units, the area increases by 67 square units. Find the dimensions of the rectangle.",
        "answer": 17,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nlength, breadth = symbols('length breadth')\n\n# Area of rectangle = length * breadth\n# Area after reducing length and increasing breadth = (length - 5) * (breadth + 3)\n# Area after increasing length and breadth = (length + 3) * (breadth + 2)\n\n# Area reduced by 9 square units\neq1 = Eq((length - 5) * (breadth + 3) + 9, length * breadth)\n\n# Area increased by 67 square units\neq2 = Eq((length + 3) * (breadth + 2) - 67, length * breadth)\n\n# Solving the equations\nsolutions = solve((eq1, eq2), (length, breadth))\n\nans = solutions[0]\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nlength, breadth = symbols('length breadth')\n\neq1 = Eq((length - 5) * (breadth + 3) - (length * breadth), -9)\neq2 = Eq((length + 3) * (breadth + 2) - (length * breadth), 67)\n\nsolution = solve((eq1, eq2), (length, breadth))\n\nans = solution[length], solution[breadth]\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nlength, breadth = symbols('length breadth')\n\neq1 = Eq((length - 5) * (breadth + 3) - length * breadth, -9)\neq2 = Eq((length + 3) * (breadth + 2) - length * breadth, 67)\n\nsolution = solve((eq1, eq2), (length, breadth))\n\nans = solution[length], solution[breadth]\nans"
        ],
        "results": [
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 2
        },
        "prediction": 17.0
    },
    {
        "question": "In a 2-digit number, the tens digit is 4 times the units digit. When the digits are reversed, the new number formed is 54 less than the original number. Find the original number.",
        "answer": 82,
        "generated": [
            "# Python code, return ans\nfor i in range(1, 10):\n    tens_digit = 4 * i\n    original_number = tens_digit * 10 + i\n    reversed_number = i * 10 + tens_digit\n    if original_number - reversed_number == 54:\n        ans = original_number\n        break\nans",
            "# Python code, return ans\nfor i in range(1, 10):\n    tens_digit = 4 * i\n    original_number = tens_digit * 10 + i\n    reversed_number = i * 10 + tens_digit\n    if original_number - reversed_number == 54:\n        ans = original_number\n        break\n\nans",
            "# Python code, return ans\nfor i in range(1, 10):\n    tens_digit = 4 * i\n    original_number = tens_digit * 10 + i\n    reversed_number = i * 10 + tens_digit\n    if original_number - reversed_number == 54:\n        ans = original_number\n        break\n\nans"
        ],
        "results": [
            82.0,
            82.0,
            82.0
        ],
        "result_counter": {
            "82.0": 3
        },
        "prediction": 82.0
    },
    {
        "question": "Anil is 9 years older than Ajith. In 10 years, Anil will be twice as old as Ajith was 10 years ago. Find their present ages.",
        "answer": 48,
        "generated": [
            "# Python code, return Anil_age, Ajith_age\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nAnil_age = Symbol('Anil_age')\nAjith_age = Symbol('Ajith_age')\n\n# Anil is 9 years older than Ajith\nequation1 = Anil_age - Ajith_age - 9\n\n# In 10 years, Anil will be twice as old as Ajith was 10 years ago\nequation2 = (Anil_age + 10) - 2 * (Ajith_age - 10)\n\n# Solving the equations\nages = solve((equation1, equation2), (Anil_age, Ajith_age))\n\nans = ages[Anil_age], ages[Ajith_age]\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nAnil_age = Symbol('Anil_age')\nAjith_age = Symbol('Ajith_age')\n\n# Anil is 9 years older than Ajith\nequation1 = Anil_age - Ajith_age - 9\n\n# In 10 years, Anil will be twice as old as Ajith was 10 years ago\nequation2 = (Anil_age + 10) - 2 * (Ajith_age - 10)\n\n# Solving the equations\nequations = [equation1, equation2]\nans = solve(equations)\n\nans",
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nAnil_age = Symbol('Anil_age')\nAjith_age = Symbol('Ajith_age')\n\neq1 = Anil_age - Ajith_age - 9\neq2 = Anil_age + 10 - 2 * (Ajith_age - 10)\n\nages = solve((eq1, eq2), (Anil_age, Ajith_age))\nans = ages\nans"
        ],
        "results": [
            48.0
        ],
        "result_counter": {
            "48.0": 1
        },
        "prediction": 48.0
    },
    {
        "question": "If 28 less than five times a certain number is 232. What is the number?",
        "answer": 52,
        "generated": [
            "# Python code, return ans\nnumber = (232 + 28) / 5\nans = number",
            "# Python code, return ans\nnumber = (232 + 28) / 5\nans = number",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx = symbols('x')\neq = Eq(5*x - 28, 232)\nnumber = solve(eq, x)[0]\nans = number\nans"
        ],
        "results": [
            52.0,
            52.0,
            52.0
        ],
        "result_counter": {
            "52.0": 3
        },
        "prediction": 52.0
    },
    {
        "question": "The second angle of a triangle is double the first. The third angle is 40 less than the first. Find the three angles.",
        "answer": 88,
        "generated": [
            "# Python code, return ans\nfrom sympy import Eq, solve, symbols\n\nfirst_angle = symbols('x')\nsecond_angle = 2 * first_angle\nthird_angle = first_angle - 40\n\n# Sum of angles in a triangle is 180 degrees\ntriangle_sum = Eq(first_angle + second_angle + third_angle, 180)\n\n# Solve for the first angle\nfirst_angle_solution = solve(triangle_sum, first_angle)[0]\n\n# Calculate the second and third angles\nsecond_angle_solution = 2 * first_angle_solution\nthird_angle_solution = first_angle_solution - 40\n\nans = first_angle_solution, second_angle_solution, third_angle_solution\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nangle1, angle2, angle3 = symbols('angle1 angle2 angle3')\n\neq1 = Eq(angle2, 2 * angle1)\neq2 = Eq(angle3, angle1 - 40)\neq3 = Eq(angle1 + angle2 + angle3, 180)\n\nangles = solve((eq1, eq2, eq3), (angle1, angle2, angle3))\n\nans = angles[angle1], angles[angle2], angles[angle3]",
            "# Python code, return ans1, ans2, ans3\nfrom sympy import symbols, Eq, solve\n\nangle1, angle2, angle3 = symbols('angle1 angle2 angle3')\n\neq1 = Eq(angle2, 2 * angle1)\neq2 = Eq(angle3, angle1 - 40)\neq3 = Eq(angle1 + angle2 + angle3, 180)\n\nangles = solve((eq1, eq2, eq3), (angle1, angle2, angle3))\n\nans1 = angles[angle1]\nans2 = angles[angle2]\nans3 = angles[angle3]\n\nans1, ans2, ans3"
        ],
        "results": [
            55.0,
            55.0
        ],
        "result_counter": {
            "55.0": 2
        },
        "prediction": 55.0
    },
    {
        "question": "A sofa and a love seat together costs $444. The sofa costs double the love seat. How much do they each cost?",
        "answer": 148,
        "generated": [
            "# Python code, return ans\ntotal_cost = 444\nlove_seat_cost = total_cost / (2 + 1)\nsofa_cost = love_seat_cost * 2\nans = (sofa_cost, love_seat_cost)",
            "# Python code, return ans_sofa, ans_loveseat\ntotal_cost = 444\nsofa_cost = 2 * total_cost / 3\nloveseat_cost = total_cost / 3\nans_sofa = sofa_cost\nans_loveseat = loveseat_cost",
            "# Python code, return ans\ntotal_cost = 444\nsofa_cost = 0\nlove_seat_cost = 0\n\nfor i in range(1, total_cost):\n    sofa_cost = i\n    love_seat_cost = total_cost - sofa_cost\n    if sofa_cost == 2 * love_seat_cost:\n        break\n\nans_sofa = sofa_cost\nans_love_seat = love_seat_cost\n(ans_sofa, ans_love_seat)"
        ],
        "results": [
            296.0
        ],
        "result_counter": {
            "296.0": 1
        },
        "prediction": 296.0
    },
    {
        "question": "A horse and a saddle cost 5000 dollars. If the horse cost 4 times as much as the saddle, what was the cost of each?",
        "answer": 1000,
        "generated": [
            "# Python code, return horse_cost, saddle_cost\ntotal_cost = 5000\nsaddle_cost = total_cost / (4 + 1)\nhorse_cost = 4 * saddle_cost\nans = (horse_cost, saddle_cost)",
            "# Python code, return ans\ntotal_cost = 5000\nhorse_cost_multiplier = 4\nsaddle_cost = total_cost / (horse_cost_multiplier + 1)\nhorse_cost = saddle_cost * horse_cost_multiplier\nans = (horse_cost, saddle_cost)",
            "# Python code, return horse_cost, saddle_cost\ntotal_cost = 5000\nsaddle_cost = total_cost / (4 + 1)\nhorse_cost = 4 * saddle_cost\nans = (horse_cost, saddle_cost)"
        ],
        "results": [
            4000.0,
            4000.0,
            4000.0
        ],
        "result_counter": {
            "4000.0": 3
        },
        "prediction": 4000.0
    },
    {
        "question": "A bicycle and a bicycle helmet cost 240 dollars. How much did each cost, if the bicycle cost 5 times as much as the helmet?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\ntotal_cost = 240\nratio_bike_to_helmet = 5\nhelmet_cost = total_cost / (ratio_bike_to_helmet + 1)\nbike_cost = helmet_cost * ratio_bike_to_helmet\nans = (bike_cost, helmet_cost)",
            "# Python code, return ans\ntotal_cost = 240\nbicycle_to_helmet_ratio = 5\nhelmet_cost = total_cost / (bicycle_to_helmet_ratio + 1)\nbicycle_cost = helmet_cost * bicycle_to_helmet_ratio\nans = (bicycle_cost, helmet_cost)",
            "# Python code, return ans\ntotal_cost = 240\nbicycle_to_helmet_ratio = 5\nhelmet_cost = total_cost / (bicycle_to_helmet_ratio + 1)\nbicycle_cost = helmet_cost * bicycle_to_helmet_ratio\nans = (bicycle_cost, helmet_cost)"
        ],
        "results": [
            200.0,
            200.0,
            200.0
        ],
        "result_counter": {
            "200.0": 3
        },
        "prediction": 200.0
    },
    {
        "question": "In a room containing 45 students there were twice as many girls as boys. How many of each, were there?",
        "answer": 30,
        "generated": [
            "# Python code, return boys, girls\ntotal_students = 45\ngirls = total_students * 2/3\nboys = total_students - girls\nans = boys, girls",
            "# Python code, return girls, boys\ntotal_students = 45\nboys = total_students / 3\ngirls = total_students - boys\nans_girls = girls\nans_boys = boys\n(ans_girls, ans_boys)",
            "# Python code, return ans\ntotal_students = 45\n# Let x be the number of boys\n# Then 2x is the number of girls\n# x + 2x = 45\n# 3x = 45\nx = 45 // 3\nboys = x\ngirls = 2 * x\nans = (boys, girls)"
        ],
        "results": [
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 2
        },
        "prediction": 15.0
    },
    {
        "question": "An electrician cuts a 30 ft piece of wire into two pieces. One piece is 2 ft longer than the other. How long are the pieces?",
        "answer": 14,
        "generated": [
            "# Python code, return ans1, ans2\ntotal_wire = 30\nlonger_piece = (total_wire / 2) + 1\nshorter_piece = (total_wire / 2) - 1\nans1 = longer_piece\nans2 = shorter_piece",
            "# Python code, return ans1, ans2\ntotal_wire = 30\nlonger_piece = (total_wire + 2) / 2\nshorter_piece = total_wire - longer_piece\nans1 = longer_piece\nans2 = shorter_piece\nans1, ans2",
            "# Python code, return ans1, ans2\ntotal_wire_length = 30\nlonger_piece = (total_wire_length + 2) / 2\nshorter_piece = total_wire_length - longer_piece\nans1 = longer_piece\nans2 = shorter_piece\nans1, ans2"
        ],
        "results": [],
        "result_counter": {},
        "prediction": null
    },
    {
        "question": "When five is added to three more than a certain number, the result is 19. What is the number?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\nnumber = 19 - 5 - 3\nans = number",
            "# Python code, return ans\nresult = 19\nnumber = result - 5 - 3\nans = number",
            "# Python code, return ans\nresult = 19\nnumber = result - 5 - 3\nans = number"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "If five is subtracted from three times a certain number, the result is 10. What is the number?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nnumber = symbols('x')\neq = Eq(3 * number - 5, 10)\nans = solve(eq, number)[0]\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx = symbols('x')\neq = Eq(3*x - 5, 10)\nnumber = solve(eq, x)[0]\nans = number",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx = symbols('x')\neq = Eq(3*x - 5, 10)\nans = solve(eq, x)[0]\nans"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "A certain number added twice to itself equals 96. What is the number?",
        "answer": 32,
        "generated": [
            "# Python code, return ans\nnumber = 96 / 3\nans = number",
            "# Python code, return ans\nnumber = 96 / 3\nans = number",
            "# Python code, return ans\nnumber = 96 / 3\nans = number"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "A number plus itself, plus twice itself, plus 4 times itself, is equal to 104. What is the number?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx = symbols('x')\nequation = Eq(x + x + 2*x + 4*x, 104)\nnumber = solve(equation, x)\nans = number[0]\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx = symbols('x')\nequation = Eq(x + x + 2*x + 4*x, 104)\nnumber = solve(equation, x)[0]\nans = number\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx = symbols('x')\nequation = Eq(x + x + 2*x + 4*x, 104)\nnumber = solve(equation, x)[0]\nans = number\nans"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "Two angles of a triangle are the same size. The third angle is 12 degrees smaller than the first angle. Find the measure the angles.",
        "answer": 64,
        "generated": [
            "# Python code, return ans1, ans2, ans3\nfrom sympy import symbols, Eq, solve\n\nangle1, angle2, angle3 = symbols('angle1 angle2 angle3')\neq1 = Eq(angle1 + angle2 + angle3, 180)\neq2 = Eq(angle1, angle2)\neq3 = Eq(angle3, angle1 - 12)\n\nangles = solve((eq1, eq2, eq3), (angle1, angle2, angle3))\nans1, ans2, ans3 = angles[angle1], angles[angle2], angles[angle3]\nans1, ans2, ans3",
            "# Python code, return ans1, ans2, ans3\nfrom sympy import symbols, Eq, solve\n\nangle1 = symbols('angle1')\nangle2 = angle1\nangle3 = angle1 - 12\n\neq = Eq(angle1 + angle2 + angle3, 180)\nangle1_solution = solve(eq, angle1)[0]\nangle2_solution = angle1_solution\nangle3_solution = angle1_solution - 12\n\nans1 = angle1_solution\nans2 = angle2_solution\nans3 = angle3_solution\nans1, ans2, ans3",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nangle1, angle2, angle3 = symbols('angle1 angle2 angle3')\n\n# Two angles of a triangle are the same size\neq1 = Eq(angle1, angle2)\n\n# The third angle is 12 degrees smaller than the first angle\neq2 = Eq(angle3, angle1 - 12)\n\n# The sum of angles in a triangle is 180 degrees\neq3 = Eq(angle1 + angle2 + angle3, 180)\n\n# Solve the equations\nangles = solve((eq1, eq2, eq3), (angle1, angle2, angle3))\nans = angles[angle1], angles[angle2], angles[angle3]\nans"
        ],
        "results": [
            64.0
        ],
        "result_counter": {
            "64.0": 1
        },
        "prediction": 64.0
    },
    {
        "question": "Two angles of a triangle are the same size. The third angle is 3 times as large as the first. How large are the angles?",
        "answer": 36,
        "generated": [
            "# Python code, return ans\nfrom sympy.solvers import solve\nfrom sympy import Symbol\n\nx = Symbol('x')\nfirst_angle = x\nsecond_angle = x\nthird_angle = 3 * x\n\n# Sum of angles in a triangle is 180 degrees\nangle_sum = first_angle + second_angle + third_angle - 180\n\n# Solve for x\nangle_size = solve(angle_sum, x)[0]\n\n# Calculate the angles\nfirst_angle = angle_size\nsecond_angle = angle_size\nthird_angle = 3 * angle_size\n\nans = (first_angle, second_angle, third_angle)",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nangle1, angle2, angle3 = symbols('angle1 angle2 angle3')\n\neq1 = Eq(angle1, angle2)\neq2 = Eq(angle3, 3 * angle1)\neq3 = Eq(angle1 + angle2 + angle3, 180)\n\nangles = solve((eq1, eq2, eq3), (angle1, angle2, angle3))\n\nans = angles\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nx, y = symbols('x y')\neq1 = Eq(x + y, 180)\neq2 = Eq(y, 3 * x)\nangles = solve((eq1, eq2), (x, y))\nans = angles[x], angles[y], angles[y]\n\nans"
        ],
        "results": [
            36.0,
            45.0
        ],
        "result_counter": {
            "36.0": 1,
            "45.0": 1
        },
        "prediction": 36.0
    },
    {
        "question": "The third angle of a triangle is the same size as the first. The second angle is 4 times the third. Find the measure of the angles.",
        "answer": 30,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nangle1, angle2, angle3 = symbols('angle1 angle2 angle3')\n\n# The sum of angles in a triangle is 180 degrees\neq1 = Eq(angle1 + angle2 + angle3, 180)\n\n# The third angle is the same size as the first\neq2 = Eq(angle3, angle1)\n\n# The second angle is 4 times the third\neq3 = Eq(angle2, 4 * angle3)\n\n# Solve the equations\nsolution = solve((eq1, eq2, eq3), (angle1, angle2, angle3))\n\nans = solution\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nangle1, angle2, angle3 = symbols('angle1 angle2 angle3')\neq1 = Eq(angle1, angle3)\neq2 = Eq(angle2, 4 * angle3)\neq3 = Eq(angle1 + angle2 + angle3, 180)\n\nangles = solve((eq1, eq2, eq3), (angle1, angle2, angle3))\nans = angles\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nangle1, angle2, angle3 = symbols('angle1 angle2 angle3')\neq1 = Eq(angle1 + angle2 + angle3, 180)\neq2 = Eq(angle3, angle1)\neq3 = Eq(angle2, 4 * angle3)\n\nangles = solve((eq1, eq2, eq3), (angle1, angle2, angle3))\nans = angles\nans"
        ],
        "results": [],
        "result_counter": {},
        "prediction": null
    },
    {
        "question": "The second angle of a triangle is five times as large as the first. The measure of the third angle is 12 degrees greater than that of the first angle. How large are the angles?",
        "answer": 24,
        "generated": [
            "# Python code, return ans\nfrom sympy import Eq, solve, symbols\n\nfirst_angle = symbols('x')\nsecond_angle = 5 * first_angle\nthird_angle = first_angle + 12\n\n# The sum of the angles in a triangle is 180 degrees\nangle_sum = Eq(first_angle + second_angle + third_angle, 180)\n\n# Solve for the first angle\nfirst_angle_solution = solve(angle_sum, first_angle)[0]\n\n# Calculate the second and third angles\nsecond_angle_solution = 5 * first_angle_solution\nthird_angle_solution = first_angle_solution + 12\n\nans = (first_angle_solution, second_angle_solution, third_angle_solution)\nans",
            "# Python code, return ans1, ans2, ans3\nfirst_angle = x\nsecond_angle = 5 * x\nthird_angle = x + 12\n# The sum of angles in a triangle is 180 degrees\ntriangle_sum = x + 5 * x + (x + 12)\n\nfrom sympy import symbols, Eq, solve\nx = symbols('x')\neq = Eq(triangle_sum, 180)\nfirst_angle_solution = solve(eq, x)[0]\n\nfirst_angle = first_angle_solution\nsecond_angle = 5 * first_angle_solution\nthird_angle = first_angle_solution + 12\n\nans1 = first_angle\nans2 = second_angle\nans3 = third_angle\n\nans1, ans2, ans3",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nfirst_angle, second_angle, third_angle = symbols('first_angle second_angle third_angle')\n\neq1 = Eq(second_angle, 5 * first_angle)\neq2 = Eq(third_angle, first_angle + 12)\neq3 = Eq(first_angle + second_angle + third_angle, 180)\n\nangles = solve((eq1, eq2, eq3), (first_angle, second_angle, third_angle))\nans = angles\nans"
        ],
        "results": [
            24.0
        ],
        "result_counter": {
            "24.0": 1
        },
        "prediction": 24.0
    },
    {
        "question": "The second angle of a triangle is three times the first, and the third is 12 degrees less than twice the first. Find the measures of the angles.",
        "answer": 32,
        "generated": [
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nfirst_angle = symbols('x')\nsecond_angle = 3 * first_angle\nthird_angle = 2 * first_angle - 12\n\n# Sum of angles in a triangle is 180 degrees\neq = Eq(first_angle + second_angle + third_angle, 180)\n\n# Solve for the first angle\nfirst_angle_solution = solve(eq, first_angle)[0]\n\n# Calculate the second and third angles\nsecond_angle_solution = 3 * first_angle_solution\nthird_angle_solution = 2 * first_angle_solution - 12\n\nans = (first_angle_solution, second_angle_solution, third_angle_solution)\nans",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nfirst_angle = symbols('x')\nsecond_angle = 3 * first_angle\nthird_angle = 2 * first_angle - 12\n\n# The sum of angles in a triangle is 180 degrees\neq = Eq(first_angle + second_angle + third_angle, 180)\n\n# Solve for the first angle\nfirst_angle_solution = solve(eq, first_angle)[0]\n\n# Calculate the second and third angles\nsecond_angle_solution = 3 * first_angle_solution\nthird_angle_solution = 2 * first_angle_solution - 12\n\nans = (first_angle_solution, second_angle_solution, third_angle_solution)",
            "# Python code, return ans\nfrom sympy import symbols, Eq, solve\n\nfirst_angle = symbols('x')\nsecond_angle = 3 * first_angle\nthird_angle = 2 * first_angle - 12\n\n# Sum of angles in a triangle is 180 degrees\nangle_sum_eq = Eq(first_angle + second_angle + third_angle, 180)\nfirst_angle_solution = solve(angle_sum_eq, first_angle)[0]\n\nsecond_angle_solution = 3 * first_angle_solution\nthird_angle_solution = 2 * first_angle_solution - 12\n\nans = (first_angle_solution, second_angle_solution, third_angle_solution)"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "The perimeter of a rectangle is 150 cm. The length is 15 cm greater than the width. Find the dimensions.",
        "answer": 45,
        "generated": [
            "# Python code, return ans\nperimeter = 150\nwidth = (perimeter / 2 - 15) / 2\nlength = width + 15\nans = (width, length)",
            "# Python code, return ans\nperimeter = 150\nwidth = (perimeter / 2) / (1 + 1.5)\nlength = width + 15\nans = (width, length)",
            "# Python code, return ans\nperimeter = 150\nwidth = (perimeter / 2 - 15) / 2\nlength = width + 15\nans = (width, length)"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "The perimeter of a college basketball court is 96 meters and the length is 14 meters more than the width. What are the dimensions?",
        "answer": 17,
        "generated": [
            "# Python code, return ans\nperimeter = 96\nwidth = (perimeter - 2 * 14) / 4\nlength = width + 14\nans = (length, width)",
            "# Python code, return ans_width, ans_length\nperimeter = 96\nwidth = 0\nlength = 0\n\nfor i in range(1, perimeter//2):\n    possible_width = i\n    possible_length = (perimeter - 2 * possible_width) / 2\n    if possible_length == possible_width + 14:\n        width = possible_width\n        length = possible_length\n        break\n\nans_width = width\nans_length = length",
            "# Python code, return ans\nperimeter = 96\nwidth = (perimeter - 2 * 14) / 4\nlength = width + 14\nans = (length, width)"
        ],
        "results": [
            31.0,
            31.0
        ],
        "result_counter": {
            "31.0": 2
        },
        "prediction": 31.0
    },
    {
        "question": "A mountain cabin on 1 acre of land costs $30,000. If the land cost 4 times as much as the cabin, what was the cost of each?",
        "answer": 6000,
        "generated": [
            "# Python code, return ans\ntotal_cost = 30000\nland_cost_multiplier = 4\ncabin_cost = total_cost / (land_cost_multiplier + 1)\nland_cost = cabin_cost * land_cost_multiplier\nans = (cabin_cost, land_cost)",
            "# Python code, return ans_cabin, ans_land\ntotal_cost = 30000\ncost_ratio = 1/4\ncabin_cost = total_cost * cost_ratio\nland_cost = total_cost - cabin_cost\nans_cabin = cabin_cost\nans_land = land_cost",
            "# Python code, return ans\ntotal_cost = 30000\nland_cabin_ratio = 4\ncabin_cost = total_cost / (land_cabin_ratio + 1)\nland_cost = cabin_cost * land_cabin_ratio\nans = (cabin_cost, land_cost)"
        ],
        "results": [
            6000.0,
            6000.0
        ],
        "result_counter": {
            "6000.0": 2
        },
        "prediction": 6000.0
    },
    {
        "question": "Of 240 stamps that Harry and his sister collected, Harry collected 3 times as many as his sisters. How many did each collect?",
        "answer": 60,
        "generated": [
            "# Python code, return ans\ntotal_stamps = 240\nsister_stamps = total_stamps / 4\nHarry_stamps = sister_stamps * 3\nans = (Harry_stamps, sister_stamps)",
            "# Python code, return ans\ntotal_stamps = 240\nsister_stamps = total_stamps / 4\nHarry_stamps = sister_stamps * 3\nans = (Harry_stamps, sister_stamps)",
            "# Python code, return ans\ntotal_stamps = 240\nsister_stamps = total_stamps / 4\nHarry_stamps = sister_stamps * 3\nans = (Harry_stamps, sister_stamps)"
        ],
        "results": [
            180.0,
            180.0,
            180.0
        ],
        "result_counter": {
            "180.0": 3
        },
        "prediction": 180.0
    },
    {
        "question": "If Mr. Brown and his son together had $220, and Mr. Brown had 10 times as much as his son, how much money had each?",
        "answer": 20,
        "generated": [
            "# Python code, return ans\ntotal_money = 220\nmr_brown_money_ratio = 10\nson_money_ratio = 1\ncombined_ratio = mr_brown_money_ratio + son_money_ratio\nson_money = total_money / combined_ratio\nmr_brown_money = total_money - son_money\nans = (mr_brown_money, son_money)",
            "# Python code, return ans\ntotal_money = 220\nratio_brown_son = 10\nson_money = total_money / (ratio_brown_son + 1)\nbrown_money = son_money * ratio_brown_son\nans = (brown_money, son_money)",
            "# Python code, return ans\ntotal_money = 220\nratio_mr_brown = 10\nratio_son = 1\ncombined_ratio = ratio_mr_brown + ratio_son\nson_money = total_money / combined_ratio * ratio_son\nmr_brown_money = total_money / combined_ratio * ratio_mr_brown\nans = (mr_brown_money, son_money)"
        ],
        "results": [
            200.0,
            200.0,
            200.0
        ],
        "result_counter": {
            "200.0": 3
        },
        "prediction": 200.0
    },
    {
        "question": "Aaron had 7 times as many sheep as Beth, and both together had 608. How many sheep had each?",
        "answer": 76,
        "generated": [
            "# Python code, return ans_Aaron, ans_Beth\ntotal_sheep = 608\nratio_Aaron = 7\nratio_Beth = 1\ntotal_ratio = ratio_Aaron + ratio_Beth\n\nsheep_per_ratio = total_sheep / total_ratio\nAaron_sheep = sheep_per_ratio * ratio_Aaron\nBeth_sheep = sheep_per_ratio * ratio_Beth\n\nans_Aaron = Aaron_sheep\nans_Beth = Beth_sheep",
            "# Python code, return ans\ntotal_sheep = 608\nBeth_sheep = total_sheep / (7 + 1)\nAaron_sheep = 7 * Beth_sheep\nans = (Aaron_sheep, Beth_sheep)",
            "# Python code, return ans\ntotal_sheep = 608\nbeth_sheep = total_sheep / (7 + 1)\naaron_sheep = 7 * beth_sheep\nans = (aaron_sheep, beth_sheep)"
        ],
        "results": [
            532.0,
            532.0
        ],
        "result_counter": {
            "532.0": 2
        },
        "prediction": 532.0
    },
    {
        "question": "A man bought a cow and a calf for $990, paying 8 times as much for the cow as for the calf. What was the cost of each?",
        "answer": 110,
        "generated": [
            "# Python code, return ans_cow, ans_calf\ntotal_cost = 990\ncost_ratio = 8\n\ncalf_cost = total_cost / (cost_ratio + 1)\ncow_cost = cost_ratio * calf_cost\n\nans_cow = cow_cost\nans_calf = calf_cost\n\n(ans_cow, ans_calf)",
            "# Python code, return cow_cost, calf_cost\ntotal_cost = 990\ncow_to_calf_ratio = 8\ncalf_cost = total_cost / (cow_to_calf_ratio + 1)\ncow_cost = calf_cost * cow_to_calf_ratio\nans = (cow_cost, calf_cost)\nans",
            "# Python code, return cow_cost, calf_cost\ntotal_cost = 990\ncow_cost_multiplied = 8\ncalf_cost = total_cost / (cow_cost_multiplied + 1)\ncow_cost = cow_cost_multiplied * calf_cost\nans = (cow_cost, calf_cost)"
        ],
        "results": [
            880.0,
            880.0
        ],
        "result_counter": {
            "880.0": 2
        },
        "prediction": 880.0
    },
    {
        "question": "Jamal and Moshe began a business with a capital of $7500. If Jamal furnished half as much capital as Moshe, how much did each furnish?",
        "answer": 2500,
        "generated": [
            "# Python code, return ans\ntotal_capital = 7500\nMoshe_capital = total_capital * (2/3)\nJamal_capital = total_capital - Moshe_capital\nans = (Jamal_capital, Moshe_capital)",
            "# Python code, return ans_Jamal, ans_Moshe\ntotal_capital = 7500\nMoshe_capital = 2/3 * total_capital\nJamal_capital = total_capital - Moshe_capital\nans_Jamal = Jamal_capital\nans_Moshe = Moshe_capital",
            "# Python code, return ans_Jamal, ans_Moshe\ntotal_capital = 7500\nMoshe_capital = total_capital * 2/3\nJamal_capital = total_capital - Moshe_capital\nans_Jamal = Jamal_capital\nans_Moshe = Moshe_capital"
        ],
        "results": [
            2500.0
        ],
        "result_counter": {
            "2500.0": 1
        },
        "prediction": 2500.0
    },
    {
        "question": "A lab technician cuts a 12 inch piece of tubing into two pieces in such a way that one piece is 2 times longer than the other. How long are the pieces?",
        "answer": 4,
        "generated": [
            "# Python code, return ans1, ans2\ntotal_length = 12\nshorter_piece = total_length / 3\nlonger_piece = 2 * shorter_piece\nans1 = shorter_piece\nans2 = longer_piece",
            "# Python code, return ans1, ans2\ntotal_length = 12\nshorter_piece = total_length / 3\nlonger_piece = 2 * shorter_piece\nans1 = shorter_piece\nans2 = longer_piece",
            "# Python code, return ans\ntotal_length = 12\nshort_piece = total_length / 3\nlong_piece = short_piece * 2\nans = (short_piece, long_piece)"
        ],
        "results": [
            4.0
        ],
        "result_counter": {
            "4.0": 1
        },
        "prediction": 4.0
    },
    {
        "question": "A 6 ft board is cut into two pieces, one twice as long as the other. How long are the pieces?",
        "answer": 2,
        "generated": [
            "# Python code, return ans1, ans2\nboard_length = 6\nshort_piece = board_length / 3\nlong_piece = short_piece * 2\nans1 = short_piece\nans2 = long_piece",
            "# Python code, return ans1, ans2\ntotal_length = 6\nshort_piece = total_length / 3\nlong_piece = short_piece * 2\nans1 = short_piece\nans2 = long_piece",
            "# Python code, return ans\ntotal_length = 6\nshort_piece = total_length / 3\nlong_piece = short_piece * 2\nans = (short_piece, long_piece)"
        ],
        "results": [
            2.0
        ],
        "result_counter": {
            "2.0": 1
        },
        "prediction": 2.0
    },
    {
        "question": "An eight ft board is cut into two pieces. One piece is 2 ft longer than the other. How long are the pieces?",
        "answer": 3,
        "generated": [
            "# Python code, return ans1, ans2\nboard_length = 8\npiece1_length = (board_length - 2) / 2\npiece2_length = piece1_length + 2\nans1 = piece1_length\nans2 = piece2_length",
            "# Python code, return ans1, ans2\nboard_length = 8\nshorter_piece = (board_length - 2) / 2\nlonger_piece = shorter_piece + 2\nans1 = shorter_piece\nans2 = longer_piece",
            "# Python code, return ans1, ans2\ntotal_length = 8\n# Let x be the length of the shorter piece\n# Then, x + (x + 2) = 8\n# 2x + 2 = 8\n# 2x = 6\nx = 6 / 2\nshorter_piece = x\nlonger_piece = x + 2\nans1 = shorter_piece\nans2 = longer_piece"
        ],
        "results": [],
        "result_counter": {},
        "prediction": null
    },
    {
        "question": "The total cost for tuition plus room and board at State University is $2,584. Tuition costs $704 more than room and board. What is the tuition fee?",
        "answer": 1644,
        "generated": [
            "# Python code, return ans\ntotal_cost = 2584\ntuition_more_than_room_board = 704\nroom_board_cost = (total_cost - tuition_more_than_room_board) / 2\ntuition_fee = room_board_cost + tuition_more_than_room_board\nans = tuition_fee",
            "# Python code, return ans\ntotal_cost = 2584\ntuition_more_than_room_board = 704\nroom_and_board_cost = (total_cost - tuition_more_than_room_board) / 2\ntuition_fee = room_and_board_cost + tuition_more_than_room_board\nans = tuition_fee",
            "# Python code, return ans\ntotal_cost = 2584\ntuition_more_than_board = 704\nroom_and_board = (total_cost - tuition_more_than_board) / 2\ntuition_fee = room_and_board + tuition_more_than_board\nans = tuition_fee"
        ],
        "results": [
            1644.0,
            1644.0,
            1644.0
        ],
        "result_counter": {
            "1644.0": 3
        },
        "prediction": 1644.0
    },
    {
        "question": "The cost of a private pilot course is $1,275. The flight portion costs $625 more than the ground school portion. What is the cost of each?",
        "answer": 325,
        "generated": [
            "# Python code, return ans_ground_school, ans_flight_portion\ntotal_cost = 1275\nflight_portion_more = 625\nground_school_cost = (total_cost - flight_portion_more) / 2\nflight_portion_cost = ground_school_cost + flight_portion_more\nans_ground_school = ground_school_cost\nans_flight_portion = flight_portion_cost\n(ans_ground_school, ans_flight_portion)",
            "# Python code, return ans_ground_school, ans_flight_portion\ntotal_cost = 1275\nground_school_cost = (total_cost - 625) / 2\nflight_portion_cost = ground_school_cost + 625\nans_ground_school = ground_school_cost\nans_flight_portion = flight_portion_cost\n\nans_ground_school, ans_flight_portion",
            "# Python code, return ans_ground_school, ans_flight_portion\ntotal_cost = 1275\nflight_portion_more = 625\nground_school_cost = (total_cost - flight_portion_more) / 2\nflight_portion_cost = ground_school_cost + flight_portion_more\nans_ground_school = ground_school_cost\nans_flight_portion = flight_portion_cost\n\n(ans_ground_school, ans_flight_portion)"
        ],
        "results": [],
        "result_counter": {},
        "prediction": null
    },
    {
        "question": "Mrs. Hilt owns a house on a lot shaped like a rectangle. The width is twice its length. The perimeter of the lot is 60 feet. What is the length and the width of the lot?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\nperimeter = 60\n# Let x be the length\n# width = 2 * length\n# Perimeter = 2 * (length + width)\n# 60 = 2 * (x + 2x)\n# 30 = 3x\nlength = 30 / 3\nwidth = 2 * length\nans = (length, width)",
            "# Python code, return ans\nperimeter = 60\n# Let the length be x, then the width is 2x\n# Perimeter = 2(length + width)\n# 60 = 2(x + 2x)\n# 30 = 3x\nlength = 30 / 3\nwidth = 2 * length\nans = (length, width)",
            "# Python code, return ans\nperimeter = 60\n# Let the length be x, then the width is 2x\n# Perimeter = 2 * (length + width)\n# 60 = 2 * (x + 2x)\n# 30 = 3x\nlength = 30 / 3\nwidth = 2 * length\nans = (length, width)"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "A square has a perimeter of 24 inches. What is the area of the square?",
        "answer": 36,
        "generated": [
            "# Python code, return ans\nperimeter = 24\nside_length = perimeter / 4\narea = side_length * side_length\nans = area",
            "# Python code, return ans\nperimeter = 24\nside_length = perimeter / 4\narea = side_length * side_length\nans = area",
            "# Python code, return ans\nperimeter = 24\nside_length = perimeter / 4\narea = side_length * side_length\nans = area"
        ],
        "results": [
            36.0,
            36.0,
            36.0
        ],
        "result_counter": {
            "36.0": 3
        },
        "prediction": 36.0
    },
    {
        "question": "A square kitchen has an area of 100 square feet. What is the kitchen's perimeter?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\nimport math\narea = 100\nside_length = math.sqrt(area)\nperimeter = 4 * side_length\nans = perimeter",
            "# Python code, return ans\nimport math\narea = 100\nside_length = math.sqrt(area)\nperimeter = side_length * 4\nans = perimeter",
            "# Python code, return ans\nimport math\narea = 100\nside_length = math.sqrt(area)\nperimeter = 4 * side_length\nans = perimeter\n"
        ],
        "results": [
            40.0,
            40.0,
            40.0
        ],
        "result_counter": {
            "40.0": 3
        },
        "prediction": 40.0
    },
    {
        "question": "The length of a rectangular field is 75 meters. Its width is 15 meters. Sofie ran around the track 3 times. How far did she run?",
        "answer": 540,
        "generated": [
            "# Python code, return ans\nlength = 75\nwidth = 15\nperimeter = 2 * (length + width)\nlaps = 3\ntotal_distance = perimeter * laps\nans = total_distance",
            "# Python code, return ans\nlength = 75\nwidth = 15\nperimeter = 2 * (length + width)\nlaps = 3\ntotal_distance = perimeter * laps\nans = total_distance",
            "# Python code, return ans\nlength = 75\nwidth = 15\nperimeter = 2 * (length + width)\nlaps = 3\ndistance_run = perimeter * laps\nans = distance_run"
        ],
        "results": [
            540.0,
            540.0,
            540.0
        ],
        "result_counter": {
            "540.0": 3
        },
        "prediction": 540.0
    },
    {
        "question": "The area of square photo is 25 square inches. Angie decided to enlarge the photo by doubling the sides. What will the new area be?",
        "answer": 100,
        "generated": [
            "# Python code, return ans\noriginal_area = 25\nside_length = original_area ** 0.5\nnew_side_length = side_length * 2\nnew_area = new_side_length ** 2\nans = new_area",
            "# Python code, return ans\noriginal_area = 25\nside_length = original_area ** 0.5\nnew_side_length = side_length * 2\nnew_area = new_side_length ** 2\nans = new_area",
            "# Python code, return ans\noriginal_area = 25\noriginal_side = original_area ** 0.5\nenlarged_side = original_side * 2\nnew_area = enlarged_side ** 2\nans = new_area"
        ],
        "results": [
            100.0,
            100.0,
            100.0
        ],
        "result_counter": {
            "100.0": 3
        },
        "prediction": 100.0
    },
    {
        "question": "Bridget needs to make rectangular cards measuring 2 inches by 3 inches. She will cut them from a square sheet of poster board measuring 1 foot on each side. What is the greatest number of cards that Bridget can make?",
        "answer": 24,
        "generated": [
            "# Python code, return ans\nposter_board_inches = 12 * 12\ncard_area = 2 * 3\nmax_cards = poster_board_inches // card_area\nans = max_cards",
            "# Python code, return ans\nposter_board_inches = 12 * 12 # converting 1 foot to inches and getting the area\ncard_area = 2 * 3\nmax_cards = poster_board_inches // card_area\nans = max_cards",
            "# Python code, return ans\nimport math\n\nposter_board_inches = 12  # 1 foot = 12 inches\ncard_width = 2\ncard_height = 3\n\ncards_per_row = math.floor(poster_board_inches / card_width)\ncards_per_column = math.floor(poster_board_inches / card_height)\n\nans = cards_per_row * cards_per_column\nans"
        ],
        "results": [
            24.0,
            24.0,
            24.0
        ],
        "result_counter": {
            "24.0": 3
        },
        "prediction": 24.0
    },
    {
        "question": "The dance troupe used ribbob to form a rectangle. The rectangle was 20 feet long and 15 feet wide. How long was the piece of ribbon?",
        "answer": 70,
        "generated": [
            "# Python code, return ans\nlength = 20\nwidth = 15\nperimeter = 2 * (length + width)\nans = perimeter",
            "# Python code, return ans\nrectangle_length = 20\nrectangle_width = 15\nribbon_length = 2 * (rectangle_length + rectangle_width)\nans = ribbon_length",
            "# Python code, return ans\nlength = 20\nwidth = 15\nperimeter = 2 * (length + width)\nans = perimeter"
        ],
        "results": [
            70.0,
            70.0,
            70.0
        ],
        "result_counter": {
            "70.0": 3
        },
        "prediction": 70.0
    },
    {
        "question": "Doug built a tent in the shape of a regular pentagon. Its perimeter is 60 feet. What is the length of each side of the tent?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nperimeter = 60\npentagon_sides = 5\nside_length = perimeter / pentagon_sides\nans = side_length",
            "# Python code, return ans\nperimeter = 60\npentagon_sides = 5\nside_length = perimeter / pentagon_sides\nans = side_length",
            "# Python code, return ans\nperimeter = 60\nnum_sides = 5\nside_length = perimeter / num_sides\nans = side_length"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Math Magazine charges $8 per square inch for advertising. Jason decides to order a half page ad. Each page of the magazine measures 9 inches by 12 inches. How much will Jason have to pay?",
        "answer": 432,
        "generated": [
            "# Python code, return ans\nprice_per_sq_inch = 8\npage_width = 9\npage_height = 12\npage_area = page_width * page_height\nhalf_page_area = page_area / 2\ncost = half_page_area * price_per_sq_inch\nans = cost",
            "# Python code, return ans\nprice_per_square_inch = 8\npage_width = 9\npage_height = 12\npage_area = page_width * page_height\nhalf_page_area = page_area / 2\ncost = half_page_area * price_per_square_inch\nans = cost",
            "# Python code, return ans\nprice_per_square_inch = 8\npage_width = 9\npage_height = 12\npage_area = page_width * page_height\nhalf_page_area = page_area / 2\ncost = half_page_area * price_per_square_inch\nans = cost"
        ],
        "results": [
            432.0,
            432.0,
            432.0
        ],
        "result_counter": {
            "432.0": 3
        },
        "prediction": 432.0
    },
    {
        "question": "The distance around a rectangular garden is 36 feet. One side measures 10 feet. What is the area of the garden?",
        "answer": 80,
        "generated": [
            "# Python code, return ans\nperimeter = 36\none_side = 10\nother_side = (perimeter - 2 * one_side) / 2\narea = one_side * other_side\nans = area",
            "# Python code, return ans\nperimeter = 36\none_side = 10\nother_side = (perimeter - 2 * one_side) / 2\narea = one_side * other_side\nans = area",
            "# Python code, return ans\nperimeter = 36\none_side = 10\nother_side = (perimeter - 2 * one_side) / 2\narea = one_side * other_side\nans = area"
        ],
        "results": [
            80.0,
            80.0,
            80.0
        ],
        "result_counter": {
            "80.0": 3
        },
        "prediction": 80.0
    },
    {
        "question": "Mrs. Garvey's bathroom measures 6 feet by 10 feet. She wants to cover the floor with square tiles. The sides of the tiles are 6 inches. How many tiles will Mrs. Garvey need?",
        "answer": 240,
        "generated": [
            "# Python code, return ans\nbathroom_length = 6 * 12  # feet to inches\nbathroom_width = 10 * 12  # feet to inches\ntile_side = 6  # inches\n\nbathroom_area = bathroom_length * bathroom_width\ntile_area = tile_side * tile_side\n\nnum_tiles = bathroom_area // tile_area\nans = num_tiles",
            "# Python code, return ans\nbathroom_length = 6 * 12  # Convert feet to inches\nbathroom_width = 10 * 12  # Convert feet to inches\ntile_side = 6  # inches\ntile_area = tile_side * tile_side\nbathroom_area = bathroom_length * bathroom_width\ntiles_needed = bathroom_area // tile_area\nans = tiles_needed",
            "# Python code, return ans\nbathroom_length = 6 * 12  # convert feet to inches\nbathroom_width = 10 * 12  # convert feet to inches\ntile_side = 6  # inches\ntiles_needed = (bathroom_length * bathroom_width) / (tile_side * tile_side)\nans = tiles_needed"
        ],
        "results": [
            240.0,
            240.0,
            240.0
        ],
        "result_counter": {
            "240.0": 3
        },
        "prediction": 240.0
    },
    {
        "question": "Mr. Johnson used 80 meters of fencing to enclose a rectangular garden. The length of the garden is 25 meters. How wide is the garden?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\nfencing_length = 80\ngarden_length = 25\ngarden_perimeter = fencing_length\ngarden_width = (garden_perimeter - 2 * garden_length) / 2\nans = garden_width",
            "# Python code, return ans\nfencing_length = 80\ngarden_length = 25\ngarden_width = (fencing_length - 2 * garden_length) / 2\nans = garden_width",
            "# Python code, return ans\nfencing_length = 80\ngarden_length = 25\ngarden_width = (fencing_length - 2 * garden_length) / 2\nans = garden_width"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "A rectangle has an area of 360 square centimeters. It is 20 centimeters long. What is its perimeter?",
        "answer": 76,
        "generated": [
            "# Python code, return ans\narea = 360\nlength = 20\nwidth = area / length\nperimeter = 2 * (length + width)\nans = perimeter",
            "# Python code, return ans\narea = 360\nlength = 20\nwidth = area / length\nperimeter = 2 * (length + width)\nans = perimeter",
            "# Python code, return ans\narea = 360\nlength = 20\nwidth = area / length\nperimeter = 2 * (length + width)\nans = perimeter"
        ],
        "results": [
            76.0,
            76.0,
            76.0
        ],
        "result_counter": {
            "76.0": 3
        },
        "prediction": 76.0
    },
    {
        "question": "A square garden has a perimeter of 48 meters. A pond inside the garden has an area of 20 square meters. What is the area of the garden that is not taken up by the pond?",
        "answer": 124,
        "generated": [
            "# Python code, return ans\ngarden_perimeter = 48\ngarden_side = garden_perimeter / 4\ngarden_area = garden_side * garden_side\npond_area = 20\nremaining_area = garden_area - pond_area\nans = remaining_area",
            "# Python code, return ans\ngarden_perimeter = 48\nside_length = garden_perimeter / 4\ngarden_area = side_length * side_length\npond_area = 20\nremaining_area = garden_area - pond_area\nans = remaining_area",
            "# Python code, return ans\ngarden_perimeter = 48\npond_area = 20\ngarden_side_length = garden_perimeter / 4\ngarden_area = garden_side_length * garden_side_length\narea_without_pond = garden_area - pond_area\nans = area_without_pond"
        ],
        "results": [
            124.0,
            124.0,
            124.0
        ],
        "result_counter": {
            "124.0": 3
        },
        "prediction": 124.0
    },
    {
        "question": "A rectangular living room measures 12 feet by 10 feet. A carpet placed on the floor leaves a border 2 feet wide all around it. What is the area of the border?",
        "answer": 72,
        "generated": [
            "# Python code, return ans\nroom_length = 12\nroom_width = 10\nborder_width = 2\n\ncarpet_length = room_length - 2 * border_width\ncarpet_width = room_width - 2 * border_width\n\nroom_area = room_length * room_width\ncarpet_area = carpet_length * carpet_width\n\nborder_area = room_area - carpet_area\nans = border_area",
            "# Python code, return ans\nlength = 12\nwidth = 10\nborder_width = 2\n\n# Calculate the area of the entire living room\ntotal_area = length * width\n\n# Calculate the area of the carpet (subtracting the border)\ncarpet_length = length - 2 * border_width\ncarpet_width = width - 2 * border_width\ncarpet_area = carpet_length * carpet_width\n\n# Calculate the area of the border\nborder_area = total_area - carpet_area\nans = border_area",
            "# Python code, return ans\nliving_room_length = 12\nliving_room_width = 10\nborder_width = 2\n\ncarpet_length = living_room_length - 2 * border_width\ncarpet_width = living_room_width - 2 * border_width\n\nliving_room_area = living_room_length * living_room_width\ncarpet_area = carpet_length * carpet_width\n\nborder_area = living_room_area - carpet_area\nans = border_area"
        ],
        "results": [
            72.0,
            72.0,
            72.0
        ],
        "result_counter": {
            "72.0": 3
        },
        "prediction": 72.0
    },
    {
        "question": "A square has sides that measure 15 cm. A rectangle has a length of 18 cm. The perimeter of the square is equal to the perimeter of the rectangle. What is the area of the rectangle?",
        "answer": 216,
        "generated": [
            "# Python code, return ans\nsquare_side = 15\nrectangle_length = 18\nsquare_perimeter = 4 * square_side\nrectangle_perimeter = square_perimeter\nrectangle_width = (rectangle_perimeter - 2 * rectangle_length) / 2\nrectangle_area = rectangle_length * rectangle_width\nans = rectangle_area",
            "# Python code, return ans\nsquare_side = 15\nrectangle_length = 18\nsquare_perimeter = 4 * square_side\nrectangle_perimeter = square_perimeter\nrectangle_width = (rectangle_perimeter - 2 * rectangle_length) / 2\nrectangle_area = rectangle_length * rectangle_width\nans = rectangle_area",
            "# Python code, return ans\nsquare_side = 15\nrectangle_length = 18\nsquare_perimeter = 4 * square_side\nrectangle_perimeter = square_perimeter\nrectangle_width = (rectangle_perimeter - 2 * rectangle_length) / 2\nrectangle_area = rectangle_length * rectangle_width\nans = rectangle_area"
        ],
        "results": [
            216.0,
            216.0,
            216.0
        ],
        "result_counter": {
            "216.0": 3
        },
        "prediction": 216.0
    },
    {
        "question": "Kevin can mow a square lawn that is 30 meters of each side in 45 minutes. If he works at the same rate, how many minutes will it take Kevin to mow a square lawn that measures 60 meters on each side?",
        "answer": 180,
        "generated": [
            "# Python code, return ans\nsmall_lawn_side = 30\nsmall_lawn_area = small_lawn_side ** 2\nsmall_lawn_time = 45\n\nbig_lawn_side = 60\nbig_lawn_area = big_lawn_side ** 2\n\ntime_per_area = small_lawn_time / small_lawn_area\nbig_lawn_time = time_per_area * big_lawn_area\nans = big_lawn_time",
            "# Python code, return ans\nsmall_lawn_side = 30\nsmall_lawn_area = small_lawn_side ** 2\nsmall_lawn_time = 45\n\nlarge_lawn_side = 60\nlarge_lawn_area = large_lawn_side ** 2\n\narea_ratio = large_lawn_area / small_lawn_area\nlarge_lawn_time = small_lawn_time * area_ratio\nans = large_lawn_time",
            "# Python code, return ans\nside_30m_lawn = 30\ntime_30m_lawn = 45\n\nside_60m_lawn = 60\narea_ratio = (side_60m_lawn / side_30m_lawn) ** 2\n\ntime_60m_lawn = time_30m_lawn * area_ratio\nans = time_60m_lawn"
        ],
        "results": [
            180.0,
            180.0,
            180.0
        ],
        "result_counter": {
            "180.0": 3
        },
        "prediction": 180.0
    },
    {
        "question": "Chloe agreed to wash all of the windows in Todd's giant art studio. There are 400 square panes of glass each measuring 2.5 feet on each side. Todd offered to pay 10 cents per square foot. Chloe said she would rather get paid 60 cents a pane. Todd agreed and was happy that he was actually going to save money. How much money will Todd save?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\nsquare_pane_side = 2.5\nsquare_feet_per_pane = square_pane_side * square_pane_side\ntotal_panes = 400\nrate_per_square_foot = 0.10\nrate_per_pane = 0.60\n\ncost_per_square_foot = total_panes * square_feet_per_pane * rate_per_square_foot\ncost_per_pane = total_panes * rate_per_pane\n\nmoney_saved = cost_per_square_foot - cost_per_pane\nans = money_saved",
            "# Python code, return ans\nsquare_pane_side = 2.5\nsquare_feet_per_pane = square_pane_side * square_pane_side\npane_num = 400\nprice_per_square_foot = 0.10\nprice_per_pane = 0.60\n\ncost_square_foot = square_feet_per_pane * pane_num * price_per_square_foot\ncost_pane = pane_num * price_per_pane\n\nTodd_saving = cost_square_foot - cost_pane\nans = Todd_saving",
            "# Python code, return ans\npane_side_length = 2.5\nsquare_foot_per_pane = pane_side_length ** 2\ntotal_panes = 400\nrate_per_square_foot = 0.10\nrate_per_pane = 0.60\n\ncost_per_square_foot = total_panes * square_foot_per_pane * rate_per_square_foot\ncost_per_pane = total_panes * rate_per_pane\n\nsavings = cost_per_square_foot - cost_per_pane\nans = savings"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "Grandma has an old family recipe for blueberry pancakes. She can make 8 pancakes that are each 10 inches in diameter. Grandma decided that the pancakes were way too large for her grandchildren and decided to make pancakes that were only 2 inches in diameter. How many small pancakes will Grandma's recipe make?",
        "answer": 200,
        "generated": [
            "# Python code, return ans\nlarge_pancake_diameter = 10\nsmall_pancake_diameter = 2\nlarge_pancake_num = 8\n\nlarge_pancake_area = 3.14 * (large_pancake_diameter / 2)**2 * large_pancake_num\nsmall_pancake_area = 3.14 * (small_pancake_diameter / 2)**2\n\nsmall_pancake_num = large_pancake_area / small_pancake_area\nans = round(small_pancake_num)",
            "# Python code, return ans\nlarge_pancakes = 8\nlarge_diameter = 10\nsmall_diameter = 2\n\nlarge_area = 3.14 * (large_diameter / 2)**2\nsmall_area = 3.14 * (small_diameter / 2)**2\n\ntotal_large_area = large_pancakes * large_area\nsmall_pancakes = total_large_area / small_area\nans = small_pancakes",
            "# Python code, return ans\nlarge_pancakes = 8\nlarge_diameter = 10\nsmall_diameter = 2\nlarge_area = (large_diameter / 2) ** 2 * 3.14 * large_pancakes\nsmall_area = (small_diameter / 2) ** 2 * 3.14\nsmall_pancakes = large_area / small_area\nans = small_pancakes\n"
        ],
        "results": [
            200.0,
            200.0,
            200.0
        ],
        "result_counter": {
            "200.0": 3
        },
        "prediction": 200.0
    },
    {
        "question": "Ben draws a circle inside a square piece of paper whose area is 400 square inches. He makes sure than the circle touches each side of the square. What is the area of the circle?",
        "answer": 314,
        "generated": [
            "# Python code, return ans\nimport math\n\nsquare_area = 400\nsquare_side = math.sqrt(square_area)\ncircle_diameter = square_side\ncircle_radius = circle_diameter / 2\ncircle_area = math.pi * (circle_radius ** 2)\nans = circle_area",
            "# Python code, return ans\nimport math\nsquare_area = 400\nsquare_side = math.sqrt(square_area)\ncircle_diameter = square_side\ncircle_radius = circle_diameter / 2\ncircle_area = math.pi * circle_radius**2\nans = circle_area",
            "# Python code, return ans\nimport math\n\nsquare_area = 400\nsquare_side = math.sqrt(square_area)\ncircle_diameter = square_side\ncircle_radius = circle_diameter / 2\ncircle_area = math.pi * (circle_radius ** 2)\nans = circle_area"
        ],
        "results": [
            314.1592653589793,
            314.1592653589793,
            314.1592653589793
        ],
        "result_counter": {
            "314.1592653589793": 3
        },
        "prediction": 314.1592653589793
    },
    {
        "question": "A piece of square paper has a perimeter of 32 centimeters. Nicky's dog, Rocky, tore off 1/4 of the paper. What is the area of the remaining paper?",
        "answer": 48,
        "generated": [
            "# Python code, return ans\nperimeter = 32\nside_length = perimeter / 4\narea_full_square = side_length * side_length\narea_torn_off = area_full_square * 1/4\nremaining_area = area_full_square - area_torn_off\nans = remaining_area",
            "# Python code, return ans\nperimeter = 32\nside_length = perimeter // 4\narea = side_length * side_length\ntorn_area = area * (1/4)\nremaining_area = area - torn_area\nans = remaining_area",
            "# Python code, return ans\nperimeter = 32\nside_length = perimeter / 4\ntotal_area = side_length * side_length\ntorn_area = total_area / 4\nremaining_area = total_area - torn_area\nans = remaining_area"
        ],
        "results": [
            48.0,
            48.0,
            48.0
        ],
        "result_counter": {
            "48.0": 3
        },
        "prediction": 48.0
    },
    {
        "question": "A length of wire is cut into several smaller pieces. Each of the smaller pieces are bent into squares. Each square has a side that measures 2 centimeters. The total area of the smaller squares is 92 square centimeters. What was the original length of wire?",
        "answer": 184,
        "generated": [
            "# Python code, return ans\nsquare_area = 92\nside_length = 2\ntotal_squares = square_area / (side_length ** 2)\nwire_length = total_squares * (side_length * 4)\nans = wire_length",
            "# Python code, return ans\nsquare_area = 92\nside_length = 2\ntotal_squares = square_area / (side_length * side_length)\noriginal_length = total_squares * side_length * 4\nans = original_length",
            "# Python code, return ans\nsquare_area = 92\nside_length = 2\ntotal_squares = square_area / (side_length * side_length)\noriginal_length = total_squares * side_length * 4\nans = original_length"
        ],
        "results": [
            184.0,
            184.0,
            184.0
        ],
        "result_counter": {
            "184.0": 3
        },
        "prediction": 184.0
    },
    {
        "question": "A triangle has a perimeter of 90 cm. The lengths of the three sides are in the ratio 5:12:13. What is the length of the shortest side?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\nperimeter = 90\nratio_sum = 5 + 12 + 13\nshortest_side_ratio = 5\nshortest_side_length = (shortest_side_ratio / ratio_sum) * perimeter\nans = shortest_side_length",
            "# Python code, return ans\nperimeter = 90\nratio_sum = 5 + 12 + 13\nunit_length = perimeter / ratio_sum\nshortest_side = 5 * unit_length\nans = shortest_side",
            "# Python code, return ans\nperimeter = 90\nratio_sum = 5 + 12 + 13\nshortest_side_ratio = 5\nshortest_side_length = (perimeter / ratio_sum) * shortest_side_ratio\nans = shortest_side_length"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "The ratio of the area of a rectangle to the area of a triangle is 2:5. The rectangle has a length of 6 cm and a width of 4 cm. What is the area of the triangle?",
        "answer": 60,
        "generated": [
            "# Python code, return ans\nrectangle_area = 6 * 4\nratio_rectangle = 2\nratio_triangle = 5\ntriangle_area = (rectangle_area * ratio_triangle) / ratio_rectangle\nans = triangle_area",
            "# Python code, return ans\nrectangle_area = 6 * 4\nratio_rectangle = 2\nratio_triangle = 5\ntotal_ratio = ratio_rectangle + ratio_triangle\ntriangle_area = (rectangle_area * ratio_triangle) / ratio_rectangle\nans = triangle_area",
            "# Python code, return ans\nrectangle_area = 6 * 4\nratio_rectangle = 2\nratio_triangle = 5\ntriangle_area = (rectangle_area * ratio_triangle) / ratio_rectangle\nans = triangle_area"
        ],
        "results": [
            60.0,
            60.0,
            60.0
        ],
        "result_counter": {
            "60.0": 3
        },
        "prediction": 60.0
    },
    {
        "question": "The ratio of the length of a rectangle to its width is 6:5. Its length is 24 inches. What is its width?",
        "answer": 20,
        "generated": [
            "# Python code, return ans\nlength = 24\nlength_ratio = 6\nwidth_ratio = 5\nwidth = (length * width_ratio) / length_ratio\nans = width",
            "# Python code, return ans\nlength = 24\nlength_ratio = 6\nwidth_ratio = 5\nwidth = (length * width_ratio) / length_ratio\nans = width",
            "# Python code, return ans\nlength = 24\nlength_ratio = 6\nwidth_ratio = 5\nwidth = (width_ratio * length) / length_ratio\nans = width"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "Mika measures the lens on a magnifying glass and calculates that it has a circumference of 31.4 centimeters. What is the lens's diameter?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\nimport math\ncircumference = 31.4\ndiameter = circumference / math.pi\nans = diameter",
            "# Python code, return ans\nimport math\ncircumference = 31.4\ndiameter = circumference / math.pi\nans = diameter",
            "# Python code, return ans\nimport math\ncircumference = 31.4\ndiameter = circumference / math.pi\nans = diameter"
        ],
        "results": [
            9.994930426171027,
            9.994930426171027,
            9.994930426171027
        ],
        "result_counter": {
            "9.994930426171027": 3
        },
        "prediction": 9.994930426171027
    },
    {
        "question": "In Mrs. Hutchinson's kindergarten class, children make handprints in a round clay mold for their parents. The mold has a diameter of 4 inches. What is the mold's radius?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ndiameter = 4\nradius = diameter / 2\nans = radius",
            "# Python code, return ans\ndiameter = 4\nradius = diameter / 2\nans = radius",
            "# Python code, return ans\ndiameter = 4\nradius = diameter / 2\nans = radius"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "An experienced ice skater spins on the ice, creating a perfect circle. Afterwards, she calculates that it must have a circumference of 6.28 yards. What is the circle's diameter?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\nimport math\ncircumference = 6.28\ndiameter = circumference / math.pi\nans = diameter",
            "# Python code, return ans\nimport math\ncircumference = 6.28\ndiameter = circumference / math.pi\nans = diameter",
            "# Python code, return ans\nimport math\ncircumference = 6.28\ndiameter = circumference / math.pi\nans = diameter"
        ],
        "results": [
            1.9989860852342056,
            1.9989860852342056,
            1.9989860852342056
        ],
        "result_counter": {
            "1.9989860852342056": 3
        },
        "prediction": 1.9989860852342056
    },
    {
        "question": "Frank has a round tablecloth with a diameter of 10 feet. What is the tablecloth's radius?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ndiameter = 10\nradius = diameter / 2\nans = radius",
            "# Python code, return ans\ndiameter = 10\nradius = diameter / 2\nans = radius",
            "# Python code, return ans\ndiameter = 10\nradius = diameter / 2\nans = radius"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "A rectangular roof shingle is 10 inches long and 7 inches wide. What is its area?",
        "answer": 70,
        "generated": [
            "# Python code, return ans\nshingle_length = 10\nshingle_width = 7\nshingle_area = shingle_length * shingle_width\nans = shingle_area",
            "# Python code, return ans\nlength = 10\nwidth = 7\narea = length * width\nans = area",
            "# Python code, return ans\nshingle_length = 10\nshingle_width = 7\nshingle_area = shingle_length * shingle_width\nans = shingle_area"
        ],
        "results": [
            70.0,
            70.0,
            70.0
        ],
        "result_counter": {
            "70.0": 3
        },
        "prediction": 70.0
    },
    {
        "question": "Each side of a square newspaper ad is 8 centimeters long. What is the newspaper ad's perimeter?",
        "answer": 32,
        "generated": [
            "# Python code, return ans\nside_length = 8\nperimeter = side_length * 4\nans = perimeter",
            "# Python code, return ans\nside_length = 8\nperimeter = side_length * 4\nans = perimeter",
            "# Python code, return ans\nside_length = 8\nperimeter = 4 * side_length\nans = perimeter"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "The perimeter of a rectangular cutting board is 50 inches. It is 10 inches wide. How long is it?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\nperimeter = 50\nwidth = 10\nlength = (perimeter - 2 * width) / 2\nans = length",
            "# Python code, return ans\nperimeter = 50\nwidth = 10\nlength = (perimeter - 2 * width) / 2\nans = length",
            "# Python code, return ans\nperimeter = 50\nwidth = 10\nlength = (perimeter - 2 * width) / 2\nans = length"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "A rectangular piece of metal is 16 centimeters wide and 19 centimeters long. What is its perimeter?",
        "answer": 70,
        "generated": [
            "# Python code, return ans\nwidth = 16\nlength = 19\nperimeter = 2 * (width + length)\nans = perimeter",
            "# Python code, return ans\nwidth = 16\nlength = 19\nperimeter = 2 * (width + length)\nans = perimeter",
            "# Python code, return ans\nwidth = 16\nlength = 19\nperimeter = 2 * (width + length)\nans = perimeter"
        ],
        "results": [
            70.0,
            70.0,
            70.0
        ],
        "result_counter": {
            "70.0": 3
        },
        "prediction": 70.0
    },
    {
        "question": "A square piece of glass has an area of 64 square centimeters. How long is each side?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nimport math\narea = 64\nside_length = math.sqrt(area)\nans = side_length",
            "# Python code, return ans\nimport math\narea = 64\nside_length = math.sqrt(area)\nans = side_length",
            "# Python code, return ans\nimport math\narea = 64\nside_length = math.sqrt(area)\nans = side_length"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Each side of a square kitchen tile is 7 inches long. What is the tile's area?",
        "answer": 49,
        "generated": [
            "# Python code, return ans\nside_length = 7\ntile_area = side_length * side_length\nans = tile_area",
            "# Python code, return ans\nside_length = 7\ntile_area = side_length * side_length\nans = tile_area",
            "# Python code, return ans\nside_length = 7\ntile_area = side_length * side_length\nans = tile_area"
        ],
        "results": [
            49.0,
            49.0,
            49.0
        ],
        "result_counter": {
            "49.0": 3
        },
        "prediction": 49.0
    },
    {
        "question": "A square traffic sign has a perimeter of 16 feet. How long is each side of the traffic sign?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nperimeter = 16\nside_length = perimeter / 4\nans = side_length",
            "# Python code, return ans\nperimeter = 16\nside_length = perimeter / 4\nans = side_length",
            "# Python code, return ans\nperimeter = 16\nside_length = perimeter / 4\nans = side_length"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Each side of a square piece of sheet metal is 7 meters long. What is the sheet metal's perimeter?",
        "answer": 28,
        "generated": [
            "# Python code, return ans\nside_length = 7\nperimeter = side_length * 4\nans = perimeter",
            "# Python code, return ans\nside_length = 7\nperimeter = side_length * 4\nans = perimeter",
            "# Python code, return ans\nside_length = 7\nperimeter = side_length * 4\nans = perimeter"
        ],
        "results": [
            28.0,
            28.0,
            28.0
        ],
        "result_counter": {
            "28.0": 3
        },
        "prediction": 28.0
    },
    {
        "question": "The perimeter of a postcard is 20 inches. The postcard is 6 inches wide. How tall is it?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nperimeter = 20\nwidth = 6\nheight = (perimeter - 2 * width) / 2\nans = height",
            "# Python code, return ans\nperimeter = 20\nwidth = 6\nheight = (perimeter - 2 * width) / 2\nans = height",
            "# Python code, return ans\nperimeter = 20\nwidth = 6\nheight = (perimeter - 2 * width) / 2\nans = height"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "A square name tag has sides that are 9 centimeters long. What is the name tag's perimeter?",
        "answer": 36,
        "generated": [
            "# Python code, return ans\nside_length = 9\nperimeter = side_length * 4\nans = perimeter",
            "# Python code, return ans\nside_length = 9\nperimeter = side_length * 4\nans = perimeter",
            "# Python code, return ans\nside_length = 9\nperimeter = side_length * 4\nans = perimeter"
        ],
        "results": [
            36.0,
            36.0,
            36.0
        ],
        "result_counter": {
            "36.0": 3
        },
        "prediction": 36.0
    },
    {
        "question": "A box of cupcakes cost $six. If you had eight hundred twenty-one dollars and bought as many boxes as you could, how much money would you have left?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ncupcake_cost = 6\ntotal_money = 821\nnum_boxes = total_money // cupcake_cost\nmoney_left = total_money - (num_boxes * cupcake_cost)\nans = money_left",
            "# Python code, return ans\ncost_of_cupcake_box = 6\ntotal_money = 821\nboxes_bought = total_money // cost_of_cupcake_box\nmoney_left = total_money - (boxes_bought * cost_of_cupcake_box)\nans = money_left",
            "# Python code, return ans\ncupcake_cost = 6\nmoney_available = 821\nboxes_bought = money_available // cupcake_cost\nmoney_left = money_available - (boxes_bought * cupcake_cost)\nans = money_left"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "A box can hold seven brownies. If a baker made three hundred forty-nine brownies, how many full boxes of brownies did he make?",
        "answer": 49,
        "generated": [
            "# Python code, return ans\nbrownies = 349\nbox_capacity = 7\nfull_boxes = brownies // box_capacity\nans = full_boxes",
            "# Python code, return ans\nbrownies = 349\nbox_capacity = 7\nfull_boxes = brownies // box_capacity\nans = full_boxes",
            "# Python code, return ans\nbrownies = 349\nbox_capacity = 7\nfull_boxes = brownies // box_capacity\nans = full_boxes"
        ],
        "results": [
            49.0,
            49.0,
            49.0
        ],
        "result_counter": {
            "49.0": 3
        },
        "prediction": 49.0
    },
    {
        "question": "At the carnival, nine friends bought eight hundred sixty-five tickets. If they wanted to split all the tickets so each friend got the same amount, how many more tickets would they need to buy?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nticket_num = 865\nfriend_num = 9\ni = 0\nwhile friend_num * i < ticket_num:\n    i += 1\ntickets_to_buy = friend_num * i - ticket_num\nans = tickets_to_buy",
            "# Python code, return ans\nticket_num = 865\nfriend_num = 9\ni = 0\nwhile friend_num * i < ticket_num:\n    i += 1\ntickets_to_buy = friend_num * i - ticket_num\nans = tickets_to_buy",
            "# Python code, return ans\nticket_num = 865\nfriend_num = 9\ni = 0\nwhile friend_num * i < ticket_num:\n    i += 1\ntickets_to_buy = friend_num * i - ticket_num\nans = tickets_to_buy"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Tom has to sell eight hundred forty-nine chocolate bars to win a trip. If each box contains five chocolate bars, how many boxes will he need to sell to win the trip?",
        "answer": 170,
        "generated": [
            "# Python code, return ans\nchocolate_bars = 849\nbars_per_box = 5\nboxes_needed = chocolate_bars / bars_per_box\nans = int(boxes_needed)",
            "# Python code, return ans\nchocolate_bars_to_sell = 849\nchocolate_bars_per_box = 5\nboxes_needed = chocolate_bars_to_sell / chocolate_bars_per_box\nans = round(boxes_needed)",
            "# Python code, return ans\nchocolate_bars_to_sell = 849\nchocolate_bars_per_box = 5\nboxes_to_sell = chocolate_bars_to_sell / chocolate_bars_per_box\nans = round(boxes_to_sell)"
        ],
        "results": [
            169.0,
            170.0,
            170.0
        ],
        "result_counter": {
            "169.0": 1,
            "170.0": 2
        },
        "prediction": 170.0
    },
    {
        "question": "Vanessa received six hundred twenty-two dollars for her birthday. Later she found some toys that cost nine dollars each. How much money would she have left if she bought as many as she could?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\nVanessa_money = 622\ntoy_cost = 9\ntoys_to_buy = Vanessa_money // toy_cost\nmoney_left = Vanessa_money - (toys_to_buy * toy_cost)\nans = money_left",
            "# Python code, return ans\nVanessa_money = 622\ntoy_cost = 9\ntoys_bought = Vanessa_money // toy_cost\nmoney_left = Vanessa_money - (toys_bought * toy_cost)\nans = money_left",
            "# Python code, return ans\nVanessa_money = 622\ntoy_cost = 9\ntoys_to_buy = Vanessa_money // toy_cost\nmoney_left = Vanessa_money - (toys_to_buy * toy_cost)\nans = money_left"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "Robin wanted to drink exactly nine bottles of water each day, so she bought six hundred seventeen bottles when they were on sale. How many more bottles will she need to buy on the last day?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ntotal_bottles = 617\nbottles_per_day = 9\ndays = total_bottles // bottles_per_day\nremaining_bottles = total_bottles % bottles_per_day\nbottles_to_buy = bottles_per_day - remaining_bottles\nans = bottles_to_buy",
            "# Python code, return ans\ntotal_bottles_bought = 617\nbottles_per_day = 9\ndays = total_bottles_bought // bottles_per_day\nremaining_bottles = total_bottles_bought - (days * bottles_per_day)\nbottles_to_buy_on_last_day = bottles_per_day - remaining_bottles\nans = bottles_to_buy_on_last_day",
            "# Python code, return ans\ntotal_bottles = 617\ndaily_goal = 9\ndays = total_bottles // daily_goal\nremaining_bottles = total_bottles % daily_goal\nbottles_to_buy = daily_goal - remaining_bottles\nans = bottles_to_buy"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "John's dad bought four hundred fourteen meters of string. If he wanted to cut the string into pieces with each piece being seven meters long, how many full sized pieces could he make?",
        "answer": 59,
        "generated": [
            "# Python code, return ans\nstring_length = 414\npiece_length = 7\nfull_sized_pieces = string_length // piece_length\nans = full_sized_pieces",
            "# Python code, return ans\nstring_length = 414\npiece_length = 7\nfull_sized_pieces = string_length // piece_length\nans = full_sized_pieces",
            "# Python code, return ans\nstring_length = 414\npiece_length = 7\nfull_sized_pieces = string_length // piece_length\nans = full_sized_pieces"
        ],
        "results": [
            59.0,
            59.0,
            59.0
        ],
        "result_counter": {
            "59.0": 3
        },
        "prediction": 59.0
    },
    {
        "question": "A vat of orange juice was one hundred fifty-three pints. If you wanted to pour the vat into five glasses with the same amount in each glass, how many pints would be in each glass?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\nvat_of_oj = 153\nnum_of_glasses = 5\npints_per_glass = vat_of_oj / num_of_glasses\nans = pints_per_glass",
            "# Python code, return ans\ntotal_pints = 153\nglasses = 5\npints_per_glass = total_pints / glasses\nans = pints_per_glass",
            "# Python code, return ans\nvat_of_orange_juice = 153\nnum_of_glasses = 5\npints_per_glass = vat_of_orange_juice / num_of_glasses\nans = pints_per_glass"
        ],
        "results": [
            30.6,
            30.6,
            30.6
        ],
        "result_counter": {
            "30.6": 3
        },
        "prediction": 30.6
    },
    {
        "question": "A librarian had to pack five hundred ninety books into boxes. If each box can hold three books, how many boxes did she need?",
        "answer": 197,
        "generated": [
            "# Python code, return ans\nbooks = 590\nbooks_per_box = 3\nboxes_needed = books // books_per_box\nif books % books_per_box != 0:\n    boxes_needed += 1\nans = boxes_needed",
            "# Python code, return ans\nbooks = 590\nbooks_per_box = 3\nboxes_needed = books // books_per_box\nif books % books_per_box != 0:\n    boxes_needed += 1\nans = boxes_needed",
            "# Python code, return ans\nbooks = 590\nbooks_per_box = 3\nboxes_needed = books // books_per_box\nif books % books_per_box != 0:\n    boxes_needed += 1\nans = boxes_needed"
        ],
        "results": [
            197.0,
            197.0,
            197.0
        ],
        "result_counter": {
            "197.0": 3
        },
        "prediction": 197.0
    },
    {
        "question": "Megan had three hundred seventy-two songs on her mp3 player. If she wanted to put the songs equally into nine different playlists, how many songs would she have left over?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\ntotal_songs = 372\nplaylist_num = 9\nsongs_left_over = total_songs % playlist_num\nans = songs_left_over",
            "# Python code, return ans\ntotal_songs = 372\nplaylist_num = 9\nleftover_songs = total_songs % playlist_num\nans = leftover_songs",
            "# Python code, return ans\ntotal_songs = 372\nplaylist_num = 9\nsongs_left_over = total_songs % playlist_num\nans = songs_left_over"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Robin had seven hundred thirty-six photos to put into a photo album. If each page holds six photos, how many full pages will she have?",
        "answer": 122,
        "generated": [
            "# Python code, return ans\ntotal_photos = 736\nphotos_per_page = 6\nfull_pages = total_photos // photos_per_page\nans = full_pages",
            "# Python code, return ans\ntotal_photos = 736\nphotos_per_page = 6\nfull_pages = total_photos // photos_per_page\nans = full_pages",
            "# Python code, return ans\ntotal_photos = 736\nphotos_per_page = 6\nfull_pages = total_photos // photos_per_page\nans = full_pages"
        ],
        "results": [
            122.0,
            122.0,
            122.0
        ],
        "result_counter": {
            "122.0": 3
        },
        "prediction": 122.0
    },
    {
        "question": "A container can hold four orange slices. If a company had three hundred twenty-nine orange slices to put into containers, how many more slices would they need to fill up the last container?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\ntotal_slices = 329\ncontainer_capacity = 4\nremaining_slices = total_slices % container_capacity\nslices_needed = container_capacity - remaining_slices\nans = slices_needed",
            "# Python code, return ans\ntotal_slices = 329\ncontainer_capacity = 4\ncontainers_needed = total_slices // container_capacity\nremaining_slices = total_slices % container_capacity\nslices_needed = container_capacity - remaining_slices\nans = slices_needed",
            "# Python code, return ans\ntotal_slices = 329\ncontainer_capacity = 4\nremaining_slices = total_slices % container_capacity\nslices_needed = container_capacity - remaining_slices\nans = slices_needed"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "There are five hundred fifty-four students going to a trivia competition. If each school van can hold nine students, how many vans will they need?",
        "answer": 62,
        "generated": [
            "# Python code, return ans\ntotal_students = 554\nvan_capacity = 9\nvans_needed = total_students // van_capacity + (1 if total_students % van_capacity > 0 else 0)\nans = vans_needed",
            "# Python code, return ans\ntotal_students = 554\nstudents_per_van = 9\nvans_needed = total_students // students_per_van\nif total_students % students_per_van != 0:\n    vans_needed += 1\nans = vans_needed",
            "# Python code, return ans\nstudents = 554\nvan_capacity = 9\nvans_needed = students // van_capacity + (1 if students % van_capacity > 0 else 0)\nans = vans_needed"
        ],
        "results": [
            62.0,
            62.0,
            62.0
        ],
        "result_counter": {
            "62.0": 3
        },
        "prediction": 62.0
    },
    {
        "question": "Billy had six hundred fifty pieces of candy. If he wants to split the candy into three bags with the same amount of candy in each bag, how many more pieces would he need to make sure each bag had the same amount?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\ntotal_candy = 650\nbag_num = 3\ni = 0\nwhile bag_num * i < total_candy:\n    i += 1\ncandy_needed = bag_num * i - total_candy\nans = candy_needed",
            "# Python code, return ans\ncandy_total = 650\nbags = 3\ni = 0\nwhile bags * i < candy_total:\n    i += 1\ncandy_needed = bags * i - candy_total\nans = candy_needed",
            "# Python code, return ans\ntotal_candy = 650\nbags = 3\ni = 0\nwhile bags * i < total_candy:\n    i += 1\nmore_candy_needed = bags * i - total_candy\nans = more_candy_needed"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "Megan had five hundred sixteen pennies. She wanted to place the pennies into nine stacks, with the same amount in each stack. How many more pennies would she need so all the stacks would be equal?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\npennies = 516\nstacks = 9\ni = 0\nwhile stacks * i < pennies:\n    i += 1\nmore_pennies_needed = stacks * i - pennies\nans = more_pennies_needed",
            "# Python code, return ans\npennies = 516\nstacks = 9\ni = 0\nwhile stacks * i < pennies:\n    i += 1\npennies_needed = stacks * i - pennies\nans = pennies_needed",
            "# Python code, return ans\npennies = 516\nstacks = 9\ni = 0\nwhile stacks * i < pennies:\n    i += 1\nadditional_pennies_needed = stacks * i - pennies\nans = additional_pennies_needed"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "A truck can hold four boxes. If you needed to move eight hundred seventy-one boxes across town, how many trips would you need to make?",
        "answer": 218,
        "generated": [
            "# Python code, return ans\nboxes_to_move = 871\ntruck_capacity = 4\ntrips_needed = -(-boxes_to_move // truck_capacity)  # ceil division\nans = trips_needed",
            "# Python code, return ans\ntotal_boxes = 871\ntruck_capacity = 4\ntrips_needed = total_boxes // truck_capacity\nif total_boxes % truck_capacity != 0:\n    trips_needed += 1\nans = trips_needed",
            "# Python code, return ans\nboxes = 871\ntruck_capacity = 4\ntrips_needed = boxes // truck_capacity\nif boxes % truck_capacity != 0:\n    trips_needed += 1\nans = trips_needed"
        ],
        "results": [
            218.0,
            218.0,
            218.0
        ],
        "result_counter": {
            "218.0": 3
        },
        "prediction": 218.0
    },
    {
        "question": "A restaurant needs to buy three hundred eighty-seven new plates. If each box has five plates in it, how many boxes will they need to buy?",
        "answer": 78,
        "generated": [
            "# Python code, return ans\ntotal_plates = 387\nplates_per_box = 5\nboxes_needed = total_plates // plates_per_box + (1 if total_plates % plates_per_box > 0 else 0)\nans = boxes_needed",
            "# Python code, return ans\nplates_needed = 387\nplates_per_box = 5\nboxes_needed = (plates_needed + plates_per_box - 1) // plates_per_box\nans = boxes_needed",
            "# Python code, return ans\nplates_needed = 387\nplates_per_box = 5\nboxes_needed = (plates_needed + plates_per_box - 1) // plates_per_box\nans = boxes_needed"
        ],
        "results": [
            78.0,
            78.0,
            78.0
        ],
        "result_counter": {
            "78.0": 3
        },
        "prediction": 78.0
    },
    {
        "question": "A post office has five hundred eighty-two pieces of junk mail they want to split evenly between seven mail trucks. How many extra pieces of junk mail will they have if they give each truck the same amount?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\njunk_mail = 582\nmail_trucks = 7\nextra_junk_mail = junk_mail % mail_trucks\nans = extra_junk_mail",
            "# Python code, return ans\njunk_mail = 582\nmail_trucks = 7\nextra_junk_mail = junk_mail % mail_trucks\nans = extra_junk_mail",
            "# Python code, return ans\njunk_mail = 582\nmail_trucks = 7\nextra_junk_mail = junk_mail % mail_trucks\nans = extra_junk_mail"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "A cafeteria was putting milk cartons into stacks. They had seven hundred ninety-nine cartons and were putting them into stacks with six cartons in each stack. How many full stacks could they make?",
        "answer": 133,
        "generated": [
            "# Python code, return ans\ntotal_cartons = 799\ncartons_per_stack = 6\nfull_stacks = total_cartons // cartons_per_stack\nans = full_stacks",
            "# Python code, return ans\ntotal_cartons = 799\ncartons_per_stack = 6\nfull_stacks = total_cartons // cartons_per_stack\nans = full_stacks",
            "# Python code, return ans\ntotal_cartons = 799\ncartons_per_stack = 6\nfull_stacks = total_cartons // cartons_per_stack\nans = full_stacks"
        ],
        "results": [
            133.0,
            133.0,
            133.0
        ],
        "result_counter": {
            "133.0": 3
        },
        "prediction": 133.0
    },
    {
        "question": "A store owner had six employees and bought five hundred eighty-three uniforms for them. If he wanted to give each employee the same number of uniforms, how many more should he buy so he doesn't have any extra?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nuniforms = 583\nemployees = 6\ni = 0\nwhile employees * i < uniforms:\n    i += 1\nuniforms_to_buy = employees * i - uniforms\nans = uniforms_to_buy",
            "# Python code, return ans\ntotal_uniforms = 583\nemployee_num = 6\ni = 0\nwhile employee_num * i < total_uniforms:\n    i += 1\nuniforms_to_buy = employee_num * i - total_uniforms\nans = uniforms_to_buy",
            "# Python code, return ans\nuniforms = 583\nemployees = 6\ni = 0\nwhile employees * i < uniforms:\n    i += 1\nuniforms_to_buy = employees * i - uniforms\nans = uniforms_to_buy"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "A grocery store needed eight hundred ten cans of peas. If the peas come in boxes with four cans in each box, how many boxes would they need to order?",
        "answer": 203,
        "generated": [
            "# Python code, return ans\ncans_needed = 810\ncans_per_box = 4\nboxes_needed = cans_needed // cans_per_box\nif cans_needed % cans_per_box != 0:\n    boxes_needed += 1\nans = boxes_needed",
            "# Python code, return ans\ncans_needed = 810\ncans_per_box = 4\nboxes_needed = cans_needed / cans_per_box\nans = boxes_needed",
            "# Python code, return ans\ncans_needed = 810\ncans_per_box = 4\nboxes_needed = cans_needed // cans_per_box + (1 if cans_needed % cans_per_box != 0 else 0)\nans = boxes_needed"
        ],
        "results": [
            203.0,
            202.5,
            203.0
        ],
        "result_counter": {
            "203.0": 2,
            "202.5": 1
        },
        "prediction": 203.0
    },
    {
        "question": "An industrial machine can make three hundred sixty-one crayons a day. If each box of crayons has four crayons in it, how many full boxes does the machine make a day?",
        "answer": 90,
        "generated": [
            "# Python code, return ans\ncrayons_per_day = 361\ncrayons_per_box = 4\nfull_boxes_per_day = crayons_per_day // crayons_per_box\nans = full_boxes_per_day",
            "# Python code, return ans\ncrayons_per_day = 361\ncrayons_per_box = 4\nfull_boxes_per_day = crayons_per_day // crayons_per_box\nans = full_boxes_per_day",
            "# Python code, return ans\ncrayons_per_day = 361\ncrayons_per_box = 4\nfull_boxes_per_day = crayons_per_day // crayons_per_box\nans = full_boxes_per_day"
        ],
        "results": [
            90.0,
            90.0,
            90.0
        ],
        "result_counter": {
            "90.0": 3
        },
        "prediction": 90.0
    },
    {
        "question": "A clown needed two hundred twenty-seven balloons for a party he was going to, but the balloons only came in packs of two. How many packs of balloons would he need to buy?",
        "answer": 114,
        "generated": [
            "# Python code, return ans\nneeded_balloons = 227\nballoons_per_pack = 2\npacks_needed = (needed_balloons + balloons_per_pack - 1) // balloons_per_pack\nans = packs_needed",
            "# Python code, return ans\nballoons_needed = 227\nballoons_per_pack = 2\npacks_needed = balloons_needed // balloons_per_pack + (1 if balloons_needed % balloons_per_pack > 0 else 0)\nans = packs_needed",
            "# Python code, return ans\nballoons_needed = 227\nballoons_per_pack = 2\npacks_needed = balloons_needed // balloons_per_pack + (1 if balloons_needed % balloons_per_pack != 0 else 0)\nans = packs_needed"
        ],
        "results": [
            114.0,
            114.0,
            114.0
        ],
        "result_counter": {
            "114.0": 3
        },
        "prediction": 114.0
    },
    {
        "question": "A botanist picked six hundred one flowers. She wanted to put them into eight bouquets with the same number of flowers in each. How many more should she pick so she doesn't have any extra?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nflowers_picked = 601\nbouquets = 8\ni = 0\nwhile bouquets * i < flowers_picked:\n    i += 1\nflowers_to_pick = bouquets * i - flowers_picked\nans = flowers_to_pick",
            "# Python code, return ans\nflowers_picked = 601\nbouquets = 8\ni = 0\nwhile bouquets * i < flowers_picked:\n    i += 1\nflowers_to_pick = bouquets * i - flowers_picked\nans = flowers_to_pick",
            "# Python code, return ans\nflowers_picked = 601\nbouquets = 8\ni = 0\nwhile bouquets * i < flowers_picked:\n    i += 1\nflowers_to_pick = bouquets * i - flowers_picked\nans = flowers_to_pick"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Each house a carpenter builds needs six sinks. If he bought two hundred sixty-six sinks, how many houses would that cover?",
        "answer": 44,
        "generated": [
            "# Python code, return ans\nsinks_needed_per_house = 6\ntotal_sinks_bought = 266\nhouses_covered = total_sinks_bought // sinks_needed_per_house\nans = houses_covered",
            "# Python code, return ans\nsinks_needed_per_house = 6\ntotal_sinks_bought = 266\nhouses_covered = total_sinks_bought // sinks_needed_per_house\nans = houses_covered",
            "# Python code, return ans\nsinks_needed_per_house = 6\ntotal_sinks_bought = 266\nhouses_covered = total_sinks_bought // sinks_needed_per_house\nans = houses_covered"
        ],
        "results": [
            44.0,
            44.0,
            44.0
        ],
        "result_counter": {
            "44.0": 3
        },
        "prediction": 44.0
    },
    {
        "question": "A movie theater needed four hundred twenty-six popcorn buckets. If each package has eight buckets in it, how many packages will they need to buy?",
        "answer": 54,
        "generated": [
            "# Python code, return ans\nneeded_buckets = 426\nbuckets_per_package = 8\npackages_needed = needed_buckets / buckets_per_package\nans = int(packages_needed) if packages_needed.is_integer() else int(packages_needed) + 1\nans",
            "# Python code, return ans\nneeded_popcorn_buckets = 426\nbuckets_per_package = 8\npackages_needed = needed_popcorn_buckets // buckets_per_package + (1 if needed_popcorn_buckets % buckets_per_package > 0 else 0)\nans = packages_needed",
            "# Python code, return ans\npopcorn_buckets_needed = 426\nbuckets_per_package = 8\npackages_needed = popcorn_buckets_needed // buckets_per_package + (1 if popcorn_buckets_needed % buckets_per_package > 0 else 0)\nans = packages_needed"
        ],
        "results": [
            54.0,
            54.0,
            54.0
        ],
        "result_counter": {
            "54.0": 3
        },
        "prediction": 54.0
    },
    {
        "question": "Vanessa had saved up eight hundred fifty-five quarters and decided to spend them on sodas. If it costs seven quarters for each soda from a soda machine, how many more quarters would she need to buy the final soda?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nsaved_quarters = 855\nquarters_per_soda = 7\nsodas_bought = saved_quarters // quarters_per_soda\nremaining_quarters = saved_quarters % quarters_per_soda\nquarters_needed = quarters_per_soda - remaining_quarters\nans = quarters_needed",
            "# Python code, return ans\nquarters_saved = 855\nquarters_per_soda = 7\nsodas_bought = quarters_saved // quarters_per_soda\nquarters_remaining = quarters_saved % quarters_per_soda\nquarters_needed = quarters_per_soda - quarters_remaining\nans = quarters_needed",
            "# Python code, return ans\nquarters_saved = 855\nquarters_per_soda = 7\nsodas_bought = quarters_saved // quarters_per_soda\nquarters_left = quarters_saved % quarters_per_soda\nquarters_needed = quarters_per_soda - quarters_left\nans = quarters_needed"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Victor wanted to give each of his six friends an equal amount of candy. At the store he bought three hundred seventy-nine pieces total to give to them. How many more pieces should he have bought so he didn't have any extra?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ntotal_candy = 379\nfriend_num = 6\ni = 0\nwhile friend_num * i < total_candy:\n    i += 1\nextra_candy = friend_num * i - total_candy\nans = extra_candy",
            "# Python code, return ans\ntotal_candy = 379\nfriend_num = 6\ni = 0\nwhile friend_num * i < total_candy:\n    i += 1\nextra_candy = friend_num * i - total_candy\nans = extra_candy",
            "# Python code, return ans\ntotal_candy = 379\nfriend_num = 6\ni = 0\nwhile friend_num * i < total_candy:\n    i += 1\nextra_candy = friend_num * i - total_candy\nans = extra_candy"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "A vase can hold seven flowers. If a florist had nine hundred five flowers she wanted to put equally into vases, how many flowers would be in the last vase that isn't full?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ntotal_flowers = 905\nflowers_per_vase = 7\nremaining_flowers = total_flowers % flowers_per_vase\nans = remaining_flowers",
            "# Python code, return ans\ntotal_flowers = 905\nflowers_per_vase = 7\nflowers_in_last_vase = total_flowers % flowers_per_vase\nans = flowers_in_last_vase",
            "# Python code, return ans\ntotal_flowers = 905\nflowers_per_vase = 7\nremaining_flowers = total_flowers % flowers_per_vase\nans = remaining_flowers"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "A food company has seven hundred seventy-seven kilograms of food to put into boxes. If each box gets exactly two kilograms, how many full boxes will they have?",
        "answer": 388,
        "generated": [
            "# Python code, return ans\ntotal_food = 777\nfood_per_box = 2\nfull_boxes = total_food // food_per_box\nans = full_boxes",
            "# Python code, return ans\ntotal_food = 777\nfood_per_box = 2\nfull_boxes = total_food // food_per_box\nans = full_boxes",
            "# Python code, return ans\ntotal_food = 777\nfood_per_box = 2\nfull_boxes = total_food // food_per_box\nans = full_boxes"
        ],
        "results": [
            388.0,
            388.0,
            388.0
        ],
        "result_counter": {
            "388.0": 3
        },
        "prediction": 388.0
    },
    {
        "question": "The roller coaster at the state fair costs six tickets per ride. If you had eight hundred sixty-eight tickets, how many tickets would you have left if you rode it as many times as you could?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ntotal_tickets = 868\ntickets_per_ride = 6\nrides = total_tickets // tickets_per_ride\ntickets_left = total_tickets % tickets_per_ride\nans = tickets_left",
            "# Python code, return ans\ntotal_tickets = 868\ntickets_per_ride = 6\nrides = total_tickets // tickets_per_ride\ntickets_left = total_tickets - (rides * tickets_per_ride)\nans = tickets_left",
            "# Python code, return ans\ntotal_tickets = 868\ntickets_per_ride = 6\nrides = total_tickets // tickets_per_ride\nremaining_tickets = total_tickets % tickets_per_ride\nans = remaining_tickets"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "A flash drive could hold nine gigs of data. If you needed to store four hundred sixty-two gigs, how many flash drive would you need?",
        "answer": 52,
        "generated": [
            "# Python code, return ans\nflash_drive_capacity = 9\ndata_to_store = 462\nflash_drives_needed = data_to_store // flash_drive_capacity + (1 if data_to_store % flash_drive_capacity > 0 else 0)\nans = flash_drives_needed",
            "# Python code, return ans\ngigs_per_flash_drive = 9\ntotal_gigs_needed = 462\nnum_flash_drives = total_gigs_needed // gigs_per_flash_drive + (1 if total_gigs_needed % gigs_per_flash_drive != 0 else 0)\nans = num_flash_drives",
            "# Python code, return ans\nflash_drive_capacity = 9\ndata_to_store = 462\nnum_flash_drives = data_to_store // flash_drive_capacity + (1 if data_to_store % flash_drive_capacity > 0 else 0)\nans = num_flash_drives"
        ],
        "results": [
            52.0,
            52.0,
            52.0
        ],
        "result_counter": {
            "52.0": 3
        },
        "prediction": 52.0
    },
    {
        "question": "A new video game console needs five computer chips. If a machine can create four hundred sixty-seven computer chips a day, how many video game consoles can be created in a day?",
        "answer": 93,
        "generated": [
            "# Python code, return ans\nchips_per_day = 467\nchips_per_console = 5\nconsoles_per_day = chips_per_day // chips_per_console\nans = consoles_per_day",
            "# Python code, return ans\nchips_per_day = 467\nchips_needed = 5\nconsoles_created = chips_per_day // chips_needed\nans = consoles_created",
            "# Python code, return ans\nchips_per_day = 467\nchips_needed_per_console = 5\nconsoles_created_per_day = chips_per_day // chips_needed_per_console\nans = consoles_created_per_day"
        ],
        "results": [
            93.0,
            93.0,
            93.0
        ],
        "result_counter": {
            "93.0": 3
        },
        "prediction": 93.0
    },
    {
        "question": "An industrial machine can make three hundred twenty-one crayons a day. If each box of crayons has seven crayons in it, how many full boxes does the machine make a day?",
        "answer": 45,
        "generated": [
            "# Python code, return ans\ncrayons_per_day = 321\ncrayons_per_box = 7\nfull_boxes_per_day = crayons_per_day // crayons_per_box\nans = full_boxes_per_day",
            "# Python code, return ans\ncrayons_per_day = 321\ncrayons_per_box = 7\nfull_boxes_per_day = crayons_per_day // crayons_per_box\nans = full_boxes_per_day",
            "# Python code, return ans\ncrayons_per_day = 321\ncrayons_per_box = 7\nfull_boxes_per_day = crayons_per_day // crayons_per_box\nans = full_boxes_per_day"
        ],
        "results": [
            45.0,
            45.0,
            45.0
        ],
        "result_counter": {
            "45.0": 3
        },
        "prediction": 45.0
    },
    {
        "question": "A box of computer paper has two hundred twenty-one sheets left in it. If each printer in a computer lab needed seven sheets, how many printers would the box fill up?",
        "answer": 31,
        "generated": [
            "# Python code, return ans\nsheets_left = 221\nsheets_needed_per_printer = 7\nnum_of_printers = sheets_left // sheets_needed_per_printer\nans = num_of_printers",
            "# Python code, return ans\nsheets_left = 221\nsheets_needed_per_printer = 7\nnum_of_printers = sheets_left // sheets_needed_per_printer\nans = num_of_printers",
            "# Python code, return ans\nsheets_left = 221\nsheets_needed_per_printer = 7\nnum_of_printers = sheets_left // sheets_needed_per_printer\nans = num_of_printers"
        ],
        "results": [
            31.0,
            31.0,
            31.0
        ],
        "result_counter": {
            "31.0": 3
        },
        "prediction": 31.0
    },
    {
        "question": "A builder needed to buy one hundred fifty-four boards for his latest project. If the boards he needs come in packs of three, how many packages will he need to buy?",
        "answer": 52,
        "generated": [
            "# Python code, return ans\nboards_needed = 154\nboards_per_pack = 3\npackages_needed = (boards_needed + boards_per_pack - 1) // boards_per_pack\nans = packages_needed",
            "# Python code, return ans\nboards_needed = 154\nboards_per_package = 3\npackages_needed = boards_needed // boards_per_package + (1 if boards_needed % boards_per_package > 0 else 0)\nans = packages_needed",
            "# Python code, return ans\nboards_needed = 154\nboards_per_package = 3\npackages_needed = (boards_needed + boards_per_package - 1) // boards_per_package\nans = packages_needed"
        ],
        "results": [
            52.0,
            52.0,
            52.0
        ],
        "result_counter": {
            "52.0": 3
        },
        "prediction": 52.0
    },
    {
        "question": "Billy was trying to beat his old score of seven hundred twenty-five points in a video game. If he scores exactly two points each round, how many rounds would he need to play to beat his old score?",
        "answer": 363,
        "generated": [
            "# Python code, return ans\nold_score = 725\npoints_per_round = 2\nrounds_needed = (old_score + 1) // points_per_round\nans = rounds_needed",
            "# Python code, return ans\nold_score = 725\npoints_per_round = 2\nrounds_to_beat_score = (old_score + 1) / points_per_round\nans = rounds_to_beat_score",
            "# Python code, return ans\nold_score = 725\npoints_per_round = 2\nrounds_needed = (old_score + 1) // points_per_round\nans = rounds_needed"
        ],
        "results": [
            363.0,
            363.0,
            363.0
        ],
        "result_counter": {
            "363.0": 3
        },
        "prediction": 363.0
    },
    {
        "question": "A store owner had two employees and bought nine hundred twenty-seven uniforms for them. If he wanted to give each employee the same number of uniforms, how many more should he buy so he doesn't have any extra?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\nuniforms = 927\nemployees = 2\ni = 0\nwhile employees * i < uniforms:\n    i += 1\nuniforms_to_buy = employees * i - uniforms\nans = uniforms_to_buy",
            "# Python code, return ans\nuniforms = 927\nemployees = 2\ni = 0\nwhile employees * i < uniforms:\n    i += 1\nuniforms_to_buy = employees * i - uniforms\nans = uniforms_to_buy",
            "# Python code, return ans\nuniforms = 927\nemployees = 2\ni = 0\nwhile employees * i < uniforms:\n    i += 1\nmore_uniforms = employees * i - uniforms\nans = more_uniforms"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "George is trying to earn one hundred nineteen dollars for some new toys. If he charges three dollars to mow a lawn, how many lawns will he need to mow to earn the money?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\ngoal_money = 119\ncharge_per_lawn = 3\nlawns_to_mow = goal_money / charge_per_lawn\nans = lawns_to_mow",
            "# Python code, return ans\ngoal_money = 119\ncharge_per_lawn = 3\nlawns_to_mow = goal_money // charge_per_lawn\nans = lawns_to_mow",
            "# Python code, return ans\ngoal_money = 119\ncharge_per_lawn = 3\nlawns_to_mow = goal_money / charge_per_lawn\nans = lawns_to_mow"
        ],
        "results": [
            39.666666666666664,
            39.0,
            39.666666666666664
        ],
        "result_counter": {
            "39.666666666666664": 2,
            "39.0": 1
        },
        "prediction": 39.666666666666664
    },
    {
        "question": "It takes eight grams of plastic to make a ruler. If a company had eight hundred twenty-eight grams of plastic, how many entire rulers could they make?",
        "answer": 103,
        "generated": [
            "# Python code, return ans\nplastic_amount = 828\nplastic_per_ruler = 8\nrulers_made = plastic_amount // plastic_per_ruler\nans = rulers_made",
            "# Python code, return ans\nplastic_weight = 828\nruler_weight = 8\ntotal_rulers = plastic_weight // ruler_weight\nans = total_rulers",
            "# Python code, return ans\nplastic_amount = 828\nplastic_per_ruler = 8\ntotal_rulers = plastic_amount // plastic_per_ruler\nans = total_rulers"
        ],
        "results": [
            103.0,
            103.0,
            103.0
        ],
        "result_counter": {
            "103.0": 3
        },
        "prediction": 103.0
    },
    {
        "question": "A movie store had nine hundred ninety-nine movies they were putting on five shelves. If the owner wanted to make sure each shelf had the same number of movies, how many more movies would he need?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\nmovies = 999\nshelves = 5\ni = 0\nwhile shelves * i < movies:\n    i += 1\nmovies_needed = shelves * i - movies\nans = movies_needed",
            "# Python code, return ans\nmovies = 999\nshelves = 5\ni = 0\nwhile shelves * i < movies:\n    i += 1\nmovies_needed = shelves * i - movies\nans = movies_needed",
            "# Python code, return ans\ntotal_movies = 999\nshelf_num = 5\ni = 0\nwhile shelf_num * i < total_movies:\n    i += 1\nmovies_to_add = shelf_num * i - total_movies\nans = movies_to_add"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "A school had nine hundred thirty-five students sign up for the trivia teams. If they wanted to have six team, with the same number of students on each team, how many more students would need to sign up?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\nstudents_signed_up = 935\nteams = 6\ni = 0\nwhile teams * i < students_signed_up:\n    i += 1\nstudents_needed = teams * i - students_signed_up\nans = students_needed",
            "# Python code, return ans\nstudents_signed_up = 935\nteams = 6\ni = 0\nwhile teams * i < students_signed_up:\n    i += 1\nstudents_needed = teams * i - students_signed_up\nans = students_needed",
            "# Python code, return ans\nstudents_signed_up = 935\nteams = 6\ni = 0\nwhile teams * i < students_signed_up:\n    i += 1\nstudents_needed = teams * i - students_signed_up\nans = students_needed"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "There are two hundred eighty-seven people attending a luncheon. If a table can hold nine people, how many tables do they need?",
        "answer": 32,
        "generated": [
            "# Python code, return ans\npeople = 287\ntable_capacity = 9\ntables_needed = (people + table_capacity - 1) // table_capacity\nans = tables_needed",
            "# Python code, return ans\npeople_attending = 287\ntable_capacity = 9\ntables_needed = (people_attending + table_capacity - 1) // table_capacity\nans = tables_needed",
            "# Python code, return ans\npeople_attending = 287\ntable_capacity = 9\ntables_needed = (people_attending + table_capacity - 1) // table_capacity\nans = tables_needed"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "At the carnival, 6 friends bought 234 tickets total. If they each bought the same amount, how many tickets did each person buy?",
        "answer": 39,
        "generated": [
            "# Python code, return ans\ntotal_tickets = 234\nnum_friends = 6\ntickets_per_person = total_tickets // num_friends\nans = tickets_per_person",
            "# Python code, return ans\ntotal_tickets = 234\nnum_friends = 6\ntickets_per_person = total_tickets // num_friends\nans = tickets_per_person",
            "# Python code, return ans\ntotal_tickets = 234\nnum_friends = 6\ntickets_per_person = total_tickets // num_friends\nans = tickets_per_person"
        ],
        "results": [
            39.0,
            39.0,
            39.0
        ],
        "result_counter": {
            "39.0": 3
        },
        "prediction": 39.0
    },
    {
        "question": "Sarah is making bead necklaces. She has 945 beads and is making 7 necklaces with each necklace using the same number of beads. How many beads will each necklace use?",
        "answer": 135,
        "generated": [
            "# Python code, return ans\ntotal_beads = 945\nnecklaces = 7\nbeads_per_necklace = total_beads // necklaces\nans = beads_per_necklace",
            "# Python code, return ans\ntotal_beads = 945\nnum_of_necklaces = 7\nbeads_per_necklace = total_beads // num_of_necklaces\nans = beads_per_necklace",
            "# Python code, return ans\ntotal_beads = 945\nnecklaces = 7\nbeads_per_necklace = total_beads // necklaces\nans = beads_per_necklace"
        ],
        "results": [
            135.0,
            135.0,
            135.0
        ],
        "result_counter": {
            "135.0": 3
        },
        "prediction": 135.0
    },
    {
        "question": "George had 648 pieces of candy. If he split the candy into 8 bags with the same amount of candy in each bag, how many pieces would each bag have in it?",
        "answer": 81,
        "generated": [
            "# Python code, return ans\ntotal_candy = 648\nbags = 8\ncandy_per_bag = total_candy // bags\nans = candy_per_bag",
            "# Python code, return ans\ntotal_candy = 648\nbags = 8\ncandy_per_bag = total_candy // bags\nans = candy_per_bag",
            "# Python code, return ans\ntotal_candy = 648\nbags = 8\ncandy_per_bag = total_candy // bags\nans = candy_per_bag"
        ],
        "results": [
            81.0,
            81.0,
            81.0
        ],
        "result_counter": {
            "81.0": 3
        },
        "prediction": 81.0
    },
    {
        "question": "A pallet of boxes weighed 267 kilograms. If there were 3 boxes on the pallet and each box weighed the same amount, how much did each weigh?",
        "answer": 89,
        "generated": [
            "# Python code, return ans\npallet_weight = 267\nbox_num = 3\nbox_weight = pallet_weight / box_num\nans = box_weight",
            "# Python code, return ans\ntotal_weight = 267\nbox_num = 3\nbox_weight = total_weight / box_num\nans = box_weight",
            "# Python code, return ans\npallet_weight = 267\nbox_num = 3\nbox_weight = pallet_weight / box_num\nans = box_weight"
        ],
        "results": [
            89.0,
            89.0,
            89.0
        ],
        "result_counter": {
            "89.0": 3
        },
        "prediction": 89.0
    },
    {
        "question": "Edward had 763 baseball cards in 7 binders. If each binder has the same number of cards, how many cards are in each binder?",
        "answer": 109,
        "generated": [
            "# Python code, return ans\ntotal_cards = 763\nbinder_num = 7\ncards_per_binder = total_cards // binder_num\nans = cards_per_binder",
            "# Python code, return ans\ntotal_cards = 763\nbinder_num = 7\ncards_per_binder = total_cards // binder_num\nans = cards_per_binder",
            "# Python code, return ans\ntotal_cards = 763\nnum_binders = 7\ncards_per_binder = total_cards // num_binders\nans = cards_per_binder"
        ],
        "results": [
            109.0,
            109.0,
            109.0
        ],
        "result_counter": {
            "109.0": 3
        },
        "prediction": 109.0
    },
    {
        "question": "There are 234 people attending a luncheon. If a table can hold 9 people, how many tables do they need?",
        "answer": 26,
        "generated": [
            "# Python code, return ans\npeople = 234\ntable_capacity = 9\ntables_needed = people // table_capacity\nif people % table_capacity != 0:\n    tables_needed += 1\nans = tables_needed",
            "# Python code, return ans\npeople = 234\ntable_capacity = 9\ntables_needed = people // table_capacity\nif people % table_capacity != 0:\n    tables_needed += 1\nans = tables_needed",
            "# Python code, return ans\npeople_attending = 234\ntable_capacity = 9\ntables_needed = people_attending // table_capacity\nif people_attending % table_capacity != 0:\n    tables_needed += 1\nans = tables_needed"
        ],
        "results": [
            26.0,
            26.0,
            26.0
        ],
        "result_counter": {
            "26.0": 3
        },
        "prediction": 26.0
    },
    {
        "question": "Kaleb has to sell 710 chocolate bars to get a prize. If each box contains 5 chocolate bars, how many boxes does he need to sell?",
        "answer": 142,
        "generated": [
            "# Python code, return ans\nchocolate_bars = 710\nchocolate_per_box = 5\nboxes_needed = chocolate_bars / chocolate_per_box\nans = boxes_needed",
            "# Python code, return ans\nchocolate_bars_needed = 710\nbars_per_box = 5\nboxes_needed = chocolate_bars_needed / bars_per_box\nans = boxes_needed",
            "# Python code, return ans\nchocolate_bars_to_sell = 710\nchocolate_bars_per_box = 5\nboxes_to_sell = chocolate_bars_to_sell / chocolate_bars_per_box\nans = boxes_to_sell"
        ],
        "results": [
            142.0,
            142.0,
            142.0
        ],
        "result_counter": {
            "142.0": 3
        },
        "prediction": 142.0
    },
    {
        "question": "An industrial machine made 196 shirts. If it made one minute to make 7 shirts, how many minutes was it working?",
        "answer": 28,
        "generated": [
            "# Python code, return ans\nshirts_made = 196\nshirts_per_minute = 7\nworking_minutes = shirts_made / shirts_per_minute\nans = working_minutes",
            "# Python code, return ans\nshirts_made = 196\nshirts_per_minute = 7\nminutes_working = shirts_made / shirts_per_minute\nans = minutes_working",
            "# Python code, return ans\nshirts_made = 196\nshirts_per_minute = 7\nminutes_working = shirts_made / shirts_per_minute\nans = minutes_working"
        ],
        "results": [
            28.0,
            28.0,
            28.0
        ],
        "result_counter": {
            "28.0": 3
        },
        "prediction": 28.0
    },
    {
        "question": "Debby bought 355 bottles of water when they were on sale. If she drank 5 bottles a day, how many days would they last her?",
        "answer": 71,
        "generated": [
            "# Python code, return ans\nbottles = 355\ndaily_consumption = 5\ndays = bottles / daily_consumption\nans = days",
            "# Python code, return ans\nbottles = 355\ndaily_consumption = 5\ndays = bottles / daily_consumption\nans = days",
            "# Python code, return ans\nbottles_of_water = 355\nbottles_per_day = 5\ndays_to_last = bottles_of_water / bottles_per_day\nans = days_to_last"
        ],
        "results": [
            71.0,
            71.0,
            71.0
        ],
        "result_counter": {
            "71.0": 3
        },
        "prediction": 71.0
    },
    {
        "question": "Debby had 873 quarters. If it costs 3 quarters for each coke from a coke machine, how many could she buy?",
        "answer": 291,
        "generated": [
            "# Python code, return ans\nquarters = 873\nquarters_per_coke = 3\ncoke_num = quarters // quarters_per_coke\nans = coke_num",
            "# Python code, return ans\nquarters = 873\nquarters_per_coke = 3\ncoke_num = quarters // quarters_per_coke\nans = coke_num",
            "# Python code, return ans\nquarters = 873\nquarters_per_coke = 3\ncoke_num = quarters // quarters_per_coke\nans = coke_num"
        ],
        "results": [
            291.0,
            291.0,
            291.0
        ],
        "result_counter": {
            "291.0": 3
        },
        "prediction": 291.0
    },
    {
        "question": "There are 270 seats in a movie theater. If the movie theater has 9 sections with the same number of seats in each section, how many seats are in each section?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\ntotal_seats = 270\nsections = 9\nseats_per_section = total_seats // sections\nans = seats_per_section",
            "# Python code, return ans\ntotal_seats = 270\nsections = 9\nseats_per_section = total_seats // sections\nans = seats_per_section",
            "# Python code, return ans\ntotal_seats = 270\nsections = 9\nseats_per_section = total_seats / sections\nans = seats_per_section"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "Zoe's school sold 620 dollars in raffle tickets. If each ticket cost 4 dollars, how many tickets did they sell?",
        "answer": 155,
        "generated": [
            "# Python code, return ans\ntotal_money = 620\nticket_cost = 4\ntickets_sold = total_money / ticket_cost\nans = tickets_sold",
            "# Python code, return ans\ntotal_money = 620\nticket_cost = 4\ntickets_sold = total_money / ticket_cost\nans = tickets_sold",
            "# Python code, return ans\ntotal_money = 620\nticket_cost = 4\ntickets_sold = total_money / ticket_cost\nans = tickets_sold"
        ],
        "results": [
            155.0,
            155.0,
            155.0
        ],
        "result_counter": {
            "155.0": 3
        },
        "prediction": 155.0
    },
    {
        "question": "Edward's dad bought 459 centimeters of string. If he cut the string into 9 equal pieces, what would be the length of each piece?",
        "answer": 51,
        "generated": [
            "# Python code, return ans\nstring_length = 459\nnum_pieces = 9\nlength_each_piece = string_length / num_pieces\nans = length_each_piece",
            "# Python code, return ans\nstring_length = 459\nnum_pieces = 9\nlength_each_piece = string_length / num_pieces\nans = length_each_piece",
            "# Python code, return ans\nstring_length = 459\nnum_pieces = 9\nlength_each_piece = string_length / num_pieces\nans = length_each_piece"
        ],
        "results": [
            51.0,
            51.0,
            51.0
        ],
        "result_counter": {
            "51.0": 3
        },
        "prediction": 51.0
    },
    {
        "question": "Frank was reading through his favorite book. The book had 672 pages and it took Frank 2 days to finish the book. How many pages did he read per day?",
        "answer": 336,
        "generated": [
            "# Python code, return ans\ntotal_pages = 672\ndays_to_finish = 2\npages_per_day = total_pages / days_to_finish\nans = pages_per_day",
            "# Python code, return ans\ntotal_pages = 672\ndays_to_finish = 2\npages_per_day = total_pages / days_to_finish\nans = pages_per_day",
            "# Python code, return ans\ntotal_pages = 672\ndays_to_finish = 2\npages_per_day = total_pages / days_to_finish\nans = pages_per_day"
        ],
        "results": [
            336.0,
            336.0,
            336.0
        ],
        "result_counter": {
            "336.0": 3
        },
        "prediction": 336.0
    },
    {
        "question": "There are 396 students going to a trivia competition. If each school van can hold 9 students, how many vans will they need?",
        "answer": 44,
        "generated": [
            "# Python code, return ans\nstudents = 396\nvan_capacity = 9\nvans_needed = students // van_capacity\nif students % van_capacity != 0:\n    vans_needed += 1\nans = vans_needed",
            "# Python code, return ans\ntotal_students = 396\nstudents_per_van = 9\nvans_needed = total_students // students_per_van\nif total_students % students_per_van != 0:\n    vans_needed += 1\nans = vans_needed",
            "# Python code, return ans\nstudents = 396\nvan_capacity = 9\nvans_needed = students // van_capacity + (1 if students % van_capacity > 0 else 0)\nans = vans_needed"
        ],
        "results": [
            44.0,
            44.0,
            44.0
        ],
        "result_counter": {
            "44.0": 3
        },
        "prediction": 44.0
    },
    {
        "question": "A school ordered 195 new pencils for the state tests. If they gave each student 3 pencils, how many students are in the school?",
        "answer": 65,
        "generated": [
            "# Python code, return ans\ntotal_pencils = 195\npencils_per_student = 3\ntotal_students = total_pencils // pencils_per_student\nans = total_students",
            "# Python code, return ans\npencils_ordered = 195\npencils_per_student = 3\ntotal_students = pencils_ordered // pencils_per_student\nans = total_students",
            "# Python code, return ans\ntotal_pencils = 195\npencils_per_student = 3\nnum_students = total_pencils // pencils_per_student\nans = num_students"
        ],
        "results": [
            65.0,
            65.0,
            65.0
        ],
        "result_counter": {
            "65.0": 3
        },
        "prediction": 65.0
    },
    {
        "question": "An architect was building a hotel downtown. He bought 147 lamps to put in the rooms. If each room gets 7 lamps, how many rooms does the hotel have?",
        "answer": 21,
        "generated": [
            "# Python code, return ans\nlamps = 147\nlamps_per_room = 7\nrooms = lamps // lamps_per_room\nans = rooms",
            "# Python code, return ans\nlamps = 147\nlamps_per_room = 7\nrooms = lamps // lamps_per_room\nans = rooms",
            "# Python code, return ans\nlamps = 147\nlamps_per_room = 7\nrooms = lamps / lamps_per_room\nans = rooms"
        ],
        "results": [
            21.0,
            21.0,
            21.0
        ],
        "result_counter": {
            "21.0": 3
        },
        "prediction": 21.0
    },
    {
        "question": "Luke was played 5 rounds of a trivia game and scored 300 points. If he gained the same number of points each round, how many points did he score per round?",
        "answer": 60,
        "generated": [
            "# Python code, return ans\ntotal_points = 300\nrounds_played = 5\npoints_per_round = total_points / rounds_played\nans = points_per_round",
            "# Python code, return ans\ntotal_points = 300\nrounds_played = 5\npoints_per_round = total_points / rounds_played\nans = points_per_round",
            "# Python code, return ans\ntotal_points = 300\nrounds_played = 5\npoints_per_round = total_points / rounds_played\nans = points_per_round"
        ],
        "results": [
            60.0,
            60.0,
            60.0
        ],
        "result_counter": {
            "60.0": 3
        },
        "prediction": 60.0
    },
    {
        "question": "Amy had 180 video games. If she placed the games into 9 different stacks, how many games would be in each stack?",
        "answer": 20,
        "generated": [
            "# Python code, return ans\ntotal_games = 180\nstacks = 9\ngames_per_stack = total_games // stacks\nans = games_per_stack",
            "# Python code, return ans\ntotal_games = 180\nstacks = 9\ngames_per_stack = total_games // stacks\nans = games_per_stack",
            "# Python code, return ans\ntotal_games = 180\nstacks = 9\ngames_per_stack = total_games // stacks\nans = games_per_stack"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "There are 336 students in a school. If the school has 7 grades and each grade had the same number of students, how many students were in each grade?",
        "answer": 48,
        "generated": [
            "# Python code, return ans\ntotal_students = 336\nnum_grades = 7\nstudents_per_grade = total_students // num_grades\nans = students_per_grade",
            "# Python code, return ans\ntotal_students = 336\ngrades = 7\nstudents_per_grade = total_students // grades\nans = students_per_grade",
            "# Python code, return ans\ntotal_students = 336\ngrades = 7\nstudents_per_grade = total_students / grades\nans = students_per_grade"
        ],
        "results": [
            48.0,
            48.0,
            48.0
        ],
        "result_counter": {
            "48.0": 3
        },
        "prediction": 48.0
    },
    {
        "question": "The ring toss game at the carnival made 420 dollars in 3 days. If they made the same amount of money each day, how much did they make per day?",
        "answer": 140,
        "generated": [
            "# Python code, return ans\ntotal_money = 420\ndays = 3\nmoney_per_day = total_money / days\nans = money_per_day",
            "# Python code, return ans\ntotal_money = 420\ndays = 3\nmoney_per_day = total_money / days\nans = money_per_day",
            "# Python code, return ans\ntotal_money = 420\ndays = 3\nmoney_per_day = total_money / days\nans = money_per_day"
        ],
        "results": [
            140.0,
            140.0,
            140.0
        ],
        "result_counter": {
            "140.0": 3
        },
        "prediction": 140.0
    },
    {
        "question": "An ice machine had 294 ice cubes in it. If you were filling up 7 ice chests and each chest got the same number of cubes, how many ice cubes would each chest get?",
        "answer": 42,
        "generated": [
            "# Python code, return ans\ntotal_ice_cubes = 294\nice_chests = 7\nice_cubes_per_chest = total_ice_cubes // ice_chests\nans = ice_cubes_per_chest",
            "# Python code, return ans\ntotal_ice_cubes = 294\nice_chests = 7\nice_cubes_per_chest = total_ice_cubes // ice_chests\nans = ice_cubes_per_chest",
            "# Python code, return ans\ntotal_ice_cubes = 294\nice_chests = 7\nice_cubes_per_chest = total_ice_cubes // ice_chests\nans = ice_cubes_per_chest"
        ],
        "results": [
            42.0,
            42.0,
            42.0
        ],
        "result_counter": {
            "42.0": 3
        },
        "prediction": 42.0
    },
    {
        "question": "Amy uploaded 180 pics to Facebook. If she put the pics into 9 albums with the same number of photos in each album, how many photos were in each album?",
        "answer": 20,
        "generated": [
            "# Python code, return ans\ntotal_pics = 180\nalbums = 9\npics_per_album = total_pics // albums\nans = pics_per_album",
            "# Python code, return ans\ntotal_pics = 180\nalbum_num = 9\npics_per_album = total_pics / album_num\nans = pics_per_album",
            "# Python code, return ans\ntotal_pics = 180\nnum_albums = 9\npics_per_album = total_pics / num_albums\nans = pics_per_album"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "A farmer had 225 seeds to plant. He planted the same number of seeds each day and it took him 5 days to plant them all. How many seeds did he plant per day?",
        "answer": 45,
        "generated": [
            "# Python code, return ans\ntotal_seeds = 225\ndays = 5\nseeds_per_day = total_seeds / days\nans = seeds_per_day",
            "# Python code, return ans\ntotal_seeds = 225\ndays = 5\nseeds_per_day = total_seeds / days\nans = seeds_per_day",
            "# Python code, return ans\ntotal_seeds = 225\ndays = 5\nseeds_per_day = total_seeds / days\nans = seeds_per_day"
        ],
        "results": [
            45.0,
            45.0,
            45.0
        ],
        "result_counter": {
            "45.0": 3
        },
        "prediction": 45.0
    },
    {
        "question": "A mailman has to give out 192 pieces of junk mail. If he goes to 4 blocks, how many pieces of junk mail should he give each block?",
        "answer": 48,
        "generated": [
            "# Python code, return ans\ntotal_junk_mail = 192\nblocks = 4\njunk_mail_per_block = total_junk_mail / blocks\nans = junk_mail_per_block",
            "# Python code, return ans\ntotal_junk_mail = 192\nblocks = 4\njunk_mail_per_block = total_junk_mail / blocks\nans = junk_mail_per_block",
            "# Python code, return ans\ntotal_junk_mail = 192\nblocks = 4\njunk_mail_per_block = total_junk_mail / blocks\nans = junk_mail_per_block"
        ],
        "results": [
            48.0,
            48.0,
            48.0
        ],
        "result_counter": {
            "48.0": 3
        },
        "prediction": 48.0
    },
    {
        "question": "A company was buying new uniforms for its employees. They bought 121 uniforms total for their 32 stores. About how many uniforms should each store get?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ntotal_uniforms = 121\ntotal_stores = 32\nuniforms_per_store = total_uniforms // total_stores\nans = uniforms_per_store",
            "# Python code, return ans\ntotal_uniforms = 121\ntotal_stores = 32\nuniforms_per_store = total_uniforms // total_stores\nans = uniforms_per_store",
            "# Python code, return ans\ntotal_uniforms = 121\ntotal_stores = 32\nuniforms_per_store = total_uniforms // total_stores\nans = uniforms_per_store"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Carol is making bead necklaces for her friends. She has 159 beads and each necklace takes 37 beads. About how many necklaces can Carol make?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ntotal_beads = 159\nbeads_per_necklace = 37\nnecklaces = total_beads // beads_per_necklace\nans = necklaces",
            "# Python code, return ans\ntotal_beads = 159\nbeads_per_necklace = 37\nnecklaces = total_beads // beads_per_necklace\nans = necklaces",
            "# Python code, return ans\ntotal_beads = 159\nbeads_per_necklace = 37\nnecklaces = total_beads // beads_per_necklace\nans = necklaces"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "While playing a trivia game Adam scored 283 points total. If he scored 71 points each round, about how many rounds did he play?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ntotal_points = 283\npoints_per_round = 71\nrounds_played = total_points // points_per_round\nans = rounds_played",
            "# Python code, return ans\ntotal_points = 283\npoints_per_round = 71\nrounds_played = total_points // points_per_round\nans = rounds_played",
            "# Python code, return ans\ntotal_points = 283\npoints_per_round = 71\nrounds_played = total_points // points_per_round\nans = rounds_played"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "For Halloween Adam received 201 pieces of candy. If he put them into piles with 43 in each pile, approximately how many piles could he make?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ncandy_received = 201\npile_size = 43\npiles = candy_received // pile_size\nans = piles",
            "# Python code, return ans\ncandy_received = 201\ncandy_per_pile = 43\npiles = candy_received // candy_per_pile\nans = piles",
            "# Python code, return ans\ncandy_received = 201\ncandy_per_pile = 43\npiles = candy_received // candy_per_pile\nans = piles"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "An electronics store had 163 video games. If they put them on shelves with 84 on each shelf, about how many shelves would they need?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\nvideo_games = 163\ngames_per_shelf = 84\nnum_shelves = video_games // games_per_shelf + 1\nans = num_shelves",
            "# Python code, return ans\nvideo_games = 163\ngames_per_shelf = 84\nnum_shelves = video_games // games_per_shelf\nif video_games % games_per_shelf != 0:\n    num_shelves += 1\nans = num_shelves",
            "# Python code, return ans\nvideo_games = 163\ngames_per_shelf = 84\nnum_shelves = video_games // games_per_shelf\nif video_games % games_per_shelf != 0:\n    num_shelves += 1\nans = num_shelves"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Cody had 36 boxes. Together the boxes weighed 243 kilograms. About how much did each box weigh?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ntotal_boxes = 36\ntotal_weight = 243\nweight_per_box = total_weight / total_boxes\nans = weight_per_box",
            "# Python code, return ans\ntotal_weight = 243\ntotal_boxes = 36\nweight_per_box = total_weight / total_boxes\nans = weight_per_box",
            "# Python code, return ans\ntotal_boxes = 36\ntotal_weight = 243\nweight_per_box = total_weight / total_boxes\nans = weight_per_box"
        ],
        "results": [
            6.75,
            6.75,
            6.75
        ],
        "result_counter": {
            "6.75": 3
        },
        "prediction": 6.75
    },
    {
        "question": "There were 31 groups of people at the bowling alley. If the total number of people was 177, about how many people were in each group?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ntotal_people = 177\ntotal_groups = 31\npeople_per_group = total_people // total_groups\nans = people_per_group",
            "# Python code, return ans\ntotal_people = 177\ntotal_groups = 31\npeople_per_group = total_people // total_groups\nans = people_per_group",
            "# Python code, return ans\ntotal_people = 177\ntotal_groups = 31\npeople_per_group = total_people // total_groups\nans = people_per_group"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "A class collected 122 cans for recycling. If they could put 57 cans in each bag, approximately how many bags would they need?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ncans_collected = 122\ncans_per_bag = 57\nbags_needed = cans_collected // cans_per_bag + 1\nans = bags_needed",
            "# Python code, return ans\ncans_collected = 122\ncans_per_bag = 57\nbags_needed = cans_collected / cans_per_bag\nans = round(bags_needed)",
            "# Python code, return ans\ncans_collected = 122\ncans_per_bag = 57\nbags_needed = cans_collected // cans_per_bag + 1\nans = bags_needed"
        ],
        "results": [
            3.0,
            2.0,
            3.0
        ],
        "result_counter": {
            "3.0": 2,
            "2.0": 1
        },
        "prediction": 3.0
    },
    {
        "question": "Paige had a sheet of paper that was 9 inches long and 10 inches wide. What is the area of the paper?",
        "answer": 90,
        "generated": [
            "# Python code, return ans\nlength = 9\nwidth = 10\narea = length * width\nans = area",
            "# Python code, return ans\nlength = 9\nwidth = 10\narea = length * width\nans = area",
            "# Python code, return ans\nlength = 9\nwidth = 10\narea = length * width\nans = area"
        ],
        "results": [
            90.0,
            90.0,
            90.0
        ],
        "result_counter": {
            "90.0": 3
        },
        "prediction": 90.0
    },
    {
        "question": "A lawn had an area of 20 square feet. If it was 5 feet width, how long was it?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\narea = 20\nwidth = 5\nlength = area / width\nans = length",
            "# Python code, return ans\nlawn_area = 20\nlawn_width = 5\nlawn_length = lawn_area / lawn_width\nans = lawn_length",
            "# Python code, return ans\narea = 20\nwidth = 5\nlength = area / width\nans = length"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "A book had a length of 2 inches and a width of 3 inches. What is the area of the book?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nlength = 2\nwidth = 3\narea = length * width\nans = area",
            "# Python code, return ans\nlength = 2\nwidth = 3\narea = length * width\nans = area",
            "# Python code, return ans\nlength = 2\nwidth = 3\narea = length * width\nans = area"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Rachel bought some wrapping paper for Christmas that was 4 feet long and with an area of 20 square feet. What is the width of the wrapping paper?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\narea = 20\nlength = 4\nwidth = area / length\nans = width",
            "# Python code, return ans\narea = 20\nlength = 4\nwidth = area / length\nans = width",
            "# Python code, return ans\nlength = 4\narea = 20\nwidth = area / length\nans = width"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "A bathroom had a length of 4 feet and a total area of 8 square feet. What is the width of the bathroom?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\nlength = 4\narea = 8\nwidth = area / length\nans = width",
            "# Python code, return ans\nlength = 4\narea = 8\nwidth = area / length\nans = width",
            "# Python code, return ans\nbathroom_length = 4\nbathroom_area = 8\nbathroom_width = bathroom_area / bathroom_length\nans = bathroom_width"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Adam was painting a wall in his room. The wall was 4 feet wide and 4 feet tall. What is the area of the wall he has to paint?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\nwall_width = 4\nwall_height = 4\nwall_area = wall_width * wall_height\nans = wall_area",
            "# Python code, return ans\nwall_width = 4\nwall_height = 4\nwall_area = wall_width * wall_height\nans = wall_area",
            "# Python code, return ans\nwall_width = 4\nwall_height = 4\nwall_area = wall_width * wall_height\nans = wall_area"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "A rectangle flower bed had a total area of 35 square yards. If it was 5 yards wide, how long was it?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\narea = 35\nwidth = 5\nlength = area / width\nans = length",
            "# Python code, return ans\narea = 35\nwidth = 5\nlength = area / width\nans = length",
            "# Python code, return ans\narea = 35\nwidth = 5\nlength = area / width\nans = length"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Faye was cutting out some fabric for a friend. She cut a piece that was 3 centimeters wide and had an area of 24 square centimeters. How long was the piece?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nwidth = 3\narea = 24\nlength = area / width\nans = length",
            "# Python code, return ans\nwidth = 3\narea = 24\nlength = area / width\nans = length",
            "# Python code, return ans\nwidth = 3\narea = 24\nlength = area / width\nans = length"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "A piece of plywood was cut so its length was 6 feet by 5 feet. What is the perimeter of the wood?",
        "answer": 22,
        "generated": [
            "# Python code, return ans\nlength = 6\nwidth = 5\nperimeter = 2 * (length + width)\nans = perimeter",
            "# Python code, return ans\nlength = 6\nwidth = 5\nperimeter = 2 * (length + width)\nans = perimeter",
            "# Python code, return ans\nlength = 6\nwidth = 5\nperimeter = 2 * (length + width)\nans = perimeter"
        ],
        "results": [
            22.0,
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 3
        },
        "prediction": 22.0
    },
    {
        "question": "Adam was painting a picture frame. The frame was 6 inches wide and 9 inches tall. What is the perimeter of the picture frame?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\nframe_width = 6\nframe_height = 9\nperimeter = 2 * (frame_width + frame_height)\nans = perimeter",
            "# Python code, return ans\nframe_width = 6\nframe_height = 9\nperimeter = 2 * (frame_width + frame_height)\nans = perimeter",
            "# Python code, return ans\nframe_width = 6\nframe_height = 9\nperimeter = 2 * (frame_width + frame_height)\nans = perimeter"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "A movie poster was 4 inches wide and 7 inches tall. What is the area of the poster?",
        "answer": 28,
        "generated": [
            "# Python code, return ans\nposter_width = 4\nposter_height = 7\nposter_area = poster_width * poster_height\nans = poster_area",
            "# Python code, return ans\nposter_width = 4\nposter_height = 7\nposter_area = poster_width * poster_height\nans = poster_area",
            "# Python code, return ans\nposter_width = 4\nposter_height = 7\nposter_area = poster_width * poster_height\nans = poster_area"
        ],
        "results": [
            28.0,
            28.0,
            28.0
        ],
        "result_counter": {
            "28.0": 3
        },
        "prediction": 28.0
    },
    {
        "question": "Adam bought a new flat screen TV with an area of 21 square feets. The screen is 3 feet wide. How tall is it?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\narea = 21\nwidth = 3\nheight = area / width\nans = height",
            "# Python code, return ans\narea = 21\nwidth = 3\nheight = area / width\nans = height",
            "# Python code, return ans\narea = 21\nwidth = 3\nheight = area / width\nans = height"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "The woods behind Wendy's house were 8 miles wide and have an area of 24 square miles. What is the length of the woods?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nwoods_width = 8\nwoods_area = 24\nwoods_length = woods_area / woods_width\nans = woods_length",
            "# Python code, return ans\nwoods_width = 8\nwoods_area = 24\nwoods_length = woods_area / woods_width\nans = woods_length",
            "# Python code, return ans\nwoods_width = 8\nwoods_area = 24\nwoods_length = woods_area / woods_width\nans = woods_length"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "At the playground, the new sandbox was 4 meters wide and 2 meters long. What is the area of the sandbox?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nsandbox_width = 4\nsandbox_length = 2\nsandbox_area = sandbox_width * sandbox_length\nans = sandbox_area",
            "# Python code, return ans\nsandbox_width = 4\nsandbox_length = 2\nsandbox_area = sandbox_width * sandbox_length\nans = sandbox_area",
            "# Python code, return ans\nsandbox_width = 4\nsandbox_length = 2\nsandbox_area = sandbox_width * sandbox_length\nans = sandbox_area"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "A restaurant added a new outdoor section that was 35 square feet. It was 7 feet wide. How long is their new section?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\noutdoor_section_area = 35\noutdoor_section_width = 7\noutdoor_section_length = outdoor_section_area / outdoor_section_width\nans = outdoor_section_length",
            "# Python code, return ans\noutdoor_section_area = 35\noutdoor_section_width = 7\noutdoor_section_length = outdoor_section_area / outdoor_section_width\nans = outdoor_section_length",
            "# Python code, return ans\noutdoor_section_area = 35\noutdoor_section_width = 7\noutdoor_section_length = outdoor_section_area / outdoor_section_width\nans = outdoor_section_length"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Billy was painting a wall in his room. The total area was 8 square feet. If the wall was 2 feet wide, how tall is it?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nwall_area = 8\nwall_width = 2\nwall_height = wall_area / wall_width\nans = wall_height",
            "# Python code, return ans\nwall_area = 8\nwall_width = 2\nwall_height = wall_area / wall_width\nans = wall_height",
            "# Python code, return ans\nwall_area = 8\nwall_width = 2\nwall_height = wall_area / wall_width\nans = wall_height"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "An envelope from the post office is 4 inches wide and 4 inches long. What is the area of the envelope?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\nenvelope_width = 4\nenvelope_length = 4\narea = envelope_width * envelope_length\nans = area",
            "# Python code, return ans\nenvelope_width = 4\nenvelope_length = 4\nenvelope_area = envelope_width * envelope_length\nans = envelope_area",
            "# Python code, return ans\nenvelope_width = 4\nenvelope_length = 4\nenvelope_area = envelope_width * envelope_length\nans = envelope_area"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "The woods behind Jerry's house were 6 miles wide and 3 miles long. What is the area of the woods?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\nwoods_width = 6\nwoods_length = 3\nwoods_area = woods_width * woods_length\nans = woods_area",
            "# Python code, return ans\nwoods_width = 6\nwoods_length = 3\nwoods_area = woods_width * woods_length\nans = woods_area",
            "# Python code, return ans\nwoods_width = 6\nwoods_length = 3\nwoods_area = woods_width * woods_length\nans = woods_area"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "A restaurant added a new outdoor section that was 4 feet wide and 6 feet long. What is the area of their new outdoor section?",
        "answer": 24,
        "generated": [
            "# Python code, return ans\nwidth = 4\nlength = 6\narea = width * length\nans = area",
            "# Python code, return ans\nwidth = 4\nlength = 6\narea = width * length\nans = area",
            "# Python code, return ans\nwidth = 4\nlength = 6\narea = width * length\nans = area"
        ],
        "results": [
            24.0,
            24.0,
            24.0
        ],
        "result_counter": {
            "24.0": 3
        },
        "prediction": 24.0
    },
    {
        "question": "An island in the Pacific Ocean was 5 miles wide. It had a total area of 50 square miles. How long is the island?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\nisland_width = 5\nisland_area = 50\nisland_length = island_area / island_width\nans = island_length",
            "# Python code, return ans\nisland_width = 5\nisland_area = 50\nisland_length = island_area / island_width\nans = island_length",
            "# Python code, return ans\nisland_width = 5\nisland_area = 50\nisland_length = island_area / island_width\nans = island_length"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "A rectangle had a length of 2 inches and a width of 4 inches. What is the area of the rectangle?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nlength = 2\nwidth = 4\narea = length * width\nans = area",
            "# Python code, return ans\nlength = 2\nwidth = 4\narea = length * width\nans = area",
            "# Python code, return ans\nlength = 2\nwidth = 4\narea = length * width\nans = area"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "An island in the Indian Ocean was 4 miles wide and 7 miles long. What is the perimeter of the island?",
        "answer": 22,
        "generated": [
            "# Python code, return ans\nisland_width = 4\nisland_length = 7\nperimeter = 2 * (island_width + island_length)\nans = perimeter",
            "# Python code, return ans\nwidth = 4\nlength = 7\nperimeter = 2 * (width + length)\nans = perimeter",
            "# Python code, return ans\nwidth = 4\nlength = 7\nperimeter = 2 * (width + length)\nans = perimeter"
        ],
        "results": [
            22.0,
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 3
        },
        "prediction": 22.0
    },
    {
        "question": "A piece of sheetrock was cut so its length was 6 feet by 5 feet. What is the area of the sheetrock?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\nlength = 6\nwidth = 5\narea = length * width\nans = area",
            "# Python code, return ans\nlength = 6\nwidth = 5\narea = length * width\nans = area",
            "# Python code, return ans\nlength = 6\nwidth = 5\narea = length * width\nans = area"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "A video game map had a total area of 10 square meters. If the map was 5 meters long, how wide is it?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\nmap_area = 10\nmap_length = 5\nmap_width = map_area / map_length\nans = map_width",
            "# Python code, return ans\nmap_area = 10\nmap_length = 5\nmap_width = map_area / map_length\nans = map_width",
            "# Python code, return ans\nmap_area = 10\nmap_length = 5\nmap_width = map_area / map_length\nans = map_width"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "An island in the Atlantic Ocean was 2 miles wide and 6 miles long. What is the area of the island?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nwidth = 2\nlength = 6\narea = width * length\nans = area",
            "# Python code, return ans\nisland_width = 2\nisland_length = 6\nisland_area = island_width * island_length\nans = island_area",
            "# Python code, return ans\nisland_width = 2\nisland_length = 6\nisland_area = island_width * island_length\nans = island_area"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "A window had a length of 6 feet and a width of 10 feet. What is the area of the window?",
        "answer": 60,
        "generated": [
            "# Python code, return ans\nlength = 6\nwidth = 10\narea = length * width\nans = area",
            "# Python code, return ans\nlength = 6\nwidth = 10\narea = length * width\nans = area",
            "# Python code, return ans\nlength = 6\nwidth = 10\narea = length * width\nans = area"
        ],
        "results": [
            60.0,
            60.0,
            60.0
        ],
        "result_counter": {
            "60.0": 3
        },
        "prediction": 60.0
    },
    {
        "question": "An envelope from the post office is 6 inches wide with a total area of 36 square inches. What is the height of the envelope?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nenvelope_width = 6\nenvelope_area = 36\nenvelope_height = envelope_area / envelope_width\nans = envelope_height",
            "# Python code, return ans\nenvelope_width = 6\nenvelope_area = 36\nenvelope_height = envelope_area / envelope_width\nans = envelope_height",
            "# Python code, return ans\nenvelope_width = 6\nenvelope_area = 36\nenvelope_height = envelope_area / envelope_width\nans = envelope_height"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "A piece of plywood had a total area of 24 square feet, with a width of 6 feet. What is the length of the wood?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ntotal_area = 24\nwidth = 6\nlength = total_area / width\nans = length",
            "# Python code, return ans\ntotal_area = 24\nwidth = 6\nlength = total_area / width\nans = length",
            "# Python code, return ans\ntotal_area = 24\nwidth = 6\nlength = total_area / width\nans = length"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "A bakery cookie sheet was 10 inches wide and 2 inches long. What is the perimeter of their cookie sheet?",
        "answer": 24,
        "generated": [
            "# Python code, return ans\nwidth = 10\nlength = 2\nperimeter = 2 * (width + length)\nans = perimeter",
            "# Python code, return ans\nwidth = 10\nlength = 2\nperimeter = 2 * (width + length)\nans = perimeter",
            "# Python code, return ans\nwidth = 10\nlength = 2\nperimeter = 2 * (width + length)\nans = perimeter"
        ],
        "results": [
            24.0,
            24.0,
            24.0
        ],
        "result_counter": {
            "24.0": 3
        },
        "prediction": 24.0
    },
    {
        "question": "A video game map was 10 meters wide and 2 meters long, what is the area of the map?",
        "answer": 20,
        "generated": [
            "# Python code, return ans\nmap_width = 10\nmap_length = 2\nmap_area = map_width * map_length\nans = map_area",
            "# Python code, return ans\nmap_width = 10\nmap_length = 2\nmap_area = map_width * map_length\nans = map_area",
            "# Python code, return ans\nmap_width = 10\nmap_length = 2\nmap_area = map_width * map_length\nans = map_area"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "Dave bought a new flat screen TV. The screen was 2 feet wide and 4 feet tall. What is the area of the screen?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nwidth = 2\nheight = 4\narea = width * height\nans = area",
            "# Python code, return ans\nwidth = 2\nheight = 4\narea = width * height\nans = area",
            "# Python code, return ans\nwidth = 2\nheight = 4\narea = width * height\nans = area"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "A rectangle swimming pool was 3 meters wide with a surface area of 30 square meters. What is the length of the pool?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\nwidth = 3\nsurface_area = 30\nlength = surface_area / width\nans = length",
            "# Python code, return ans\nwidth = 3\nsurface_area = 30\nlength = surface_area / width\nans = length",
            "# Python code, return ans\nwidth = 3\nsurface_area = 30\nlength = surface_area / width\nans = length"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "A farm was 7 miles wide and 8 miles long. What is the area of the farm?",
        "answer": 56,
        "generated": [
            "# Python code, return ans\nfarm_width = 7\nfarm_length = 8\nfarm_area = farm_width * farm_length\nans = farm_area",
            "# Python code, return ans\nfarm_width = 7\nfarm_length = 8\nfarm_area = farm_width * farm_length\nans = farm_area",
            "# Python code, return ans\nfarm_width = 7\nfarm_length = 8\nfarm_area = farm_width * farm_length\nans = farm_area"
        ],
        "results": [
            56.0,
            56.0,
            56.0
        ],
        "result_counter": {
            "56.0": 3
        },
        "prediction": 56.0
    },
    {
        "question": "A book had a length of 5 inches and a total area of 50 square inches. How wide is the book?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\nbook_length = 5\nbook_area = 50\nbook_width = book_area / book_length\nans = book_width",
            "# Python code, return ans\nbook_length = 5\nbook_area = 50\nbook_width = book_area / book_length\nans = book_width",
            "# Python code, return ans\nbook_length = 5\nbook_area = 50\nbook_width = book_area / book_length\nans = book_width"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "There are 15 shapes. How many groups of 3 can you make with them?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nshapes = 15\ngroup_size = 3\ngroups = shapes // group_size\nans = groups",
            "# Python code, return ans\ntotal_shapes = 15\ngroup_size = 3\nnum_groups = total_shapes // group_size\nans = num_groups",
            "# Python code, return ans\nshapes = 15\ngroup_size = 3\nnum_groups = shapes // group_size\nans = num_groups"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "There are 10 shapes. How many will you have left over after making the groups of 5?",
        "answer": 0,
        "generated": [
            "# Python code, return ans\ntotal_shapes = 10\ngroup_size = 5\nleft_over_shapes = total_shapes % group_size\nans = left_over_shapes",
            "# Python code, return ans\ntotal_shapes = 10\ngroup_size = 5\nleftover_shapes = total_shapes % group_size\nans = leftover_shapes",
            "# Python code, return ans\nshapes = 10\ngroup_size = 5\nleftover_shapes = shapes % group_size\nans = leftover_shapes"
        ],
        "results": [
            0.0,
            0.0,
            0.0
        ],
        "result_counter": {
            "0.0": 3
        },
        "prediction": 0.0
    },
    {
        "question": "A classroom had 35 glue sticks. If the ratio of glue sticks to glue bottles was 5:2, how many glue bottles did the classroom have?",
        "answer": 14,
        "generated": [
            "# Python code, return ans\nglue_sticks = 35\nglue_stick_ratio = 5\nglue_bottle_ratio = 2\ntotal_ratio = glue_stick_ratio + glue_bottle_ratio\nglue_bottles = (glue_sticks * glue_bottle_ratio) / glue_stick_ratio\nans = glue_bottles",
            "# Python code, return ans\nglue_sticks = 35\nratio_sticks = 5\nratio_bottles = 2\ntotal_ratio = ratio_sticks + ratio_bottles\nglue_bottles = (glue_sticks / ratio_sticks) * ratio_bottles\nans = glue_bottles",
            "# Python code, return ans\nglue_sticks = 35\nglue_sticks_ratio = 5\nglue_bottles_ratio = 2\ntotal_ratio = glue_sticks_ratio + glue_bottles_ratio\nglue_bottles = (glue_sticks * glue_bottles_ratio) / glue_sticks_ratio\nans = glue_bottles"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "The ratio of red cars to blue cars in a parking lot was 5:3. If there were 40 red cars, how many blue cars were there?",
        "answer": 24,
        "generated": [
            "# Python code, return ans\nred_cars = 40\nred_to_blue_ratio = 5/3\nblue_cars = red_cars * (3/5)\nans = blue_cars",
            "# Python code, return ans\nred_cars = 40\nred_to_blue_ratio = 5/3\nblue_cars = int(red_cars / red_to_blue_ratio)\nans = blue_cars",
            "# Python code, return ans\nred_cars = 40\nred_to_blue_ratio = 5 / 3\nblue_cars = red_cars / red_to_blue_ratio\nans = blue_cars"
        ],
        "results": [
            24.0,
            24.0,
            24.0
        ],
        "result_counter": {
            "24.0": 3
        },
        "prediction": 24.0
    },
    {
        "question": "During Christmas a book store sold 72 books. If the ratio of books to bookmarks sold was 9:2, how many bookmarks did the store sell?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\nbooks_sold = 72\nbook_to_bookmark_ratio = 9 / 2\nbookmarks_sold = (books_sold * 2) / 9\nans = bookmarks_sold",
            "# Python code, return ans\nbooks_sold = 72\nbook_to_bookmark_ratio = 9 / 2\nbookmarks_sold = (books_sold / book_to_bookmark_ratio) * 2\nans = bookmarks_sold",
            "# Python code, return ans\nbooks_sold = 72\nbook_to_bookmark_ratio = 9/2\nbookmarks_sold = (books_sold * 2) / 9\nans = bookmarks_sold"
        ],
        "results": [
            16.0,
            32.0,
            16.0
        ],
        "result_counter": {
            "16.0": 2,
            "32.0": 1
        },
        "prediction": 16.0
    },
    {
        "question": "During a class election the ratio of students who voted for candidate A compared to candidate B was 2:1. If candidate A received 14 votes, what is the combined amount of votes candidate A and candidate B received?",
        "answer": 21,
        "generated": [
            "# Python code, return ans\nvotes_A = 14\nratio_A = 2\nratio_B = 1\nvotes_B = (votes_A * ratio_B) / ratio_A\ntotal_votes = votes_A + votes_B\nans = total_votes",
            "# Python code, return ans\ncandidate_A_votes = 14\nratio_A = 2\nratio_B = 1\ntotal_ratio = ratio_A + ratio_B\ncandidate_B_votes = (candidate_A_votes / ratio_A) * ratio_B\ntotal_votes = candidate_A_votes + candidate_B_votes\nans = total_votes",
            "# Python code, return ans\ncandidate_A_votes = 14\nratio_A = 2\nratio_B = 1\ntotal_ratio = ratio_A + ratio_B\ncandidate_B_votes = (candidate_A_votes / ratio_A) * ratio_B\ncombined_votes = candidate_A_votes + candidate_B_votes\nans = combined_votes"
        ],
        "results": [
            21.0,
            21.0,
            21.0
        ],
        "result_counter": {
            "21.0": 3
        },
        "prediction": 21.0
    },
    {
        "question": "While completing a race, Ned spent 63 minutes walking. If his ratio of time walking to jogging was 9:1, how many minutes did he spend completing the race?",
        "answer": 70,
        "generated": [
            "# Python code, return ans\ntime_walking = 63\nwalking_to_jogging_ratio = 9 / 1\ntotal_time = time_walking * (1 + 1 / walking_to_jogging_ratio)\nans = total_time",
            "# Python code, return ans\nwalking_time = 63\nwalking_to_jogging_ratio = 9 / 1\ntotal_time = walking_time * (1 + 1 / walking_to_jogging_ratio)\nans = total_time",
            "# Python code, return ans\nwalking_time = 63\nwalking_ratio = 9\njogging_ratio = 1\ntotal_ratio = walking_ratio + jogging_ratio\njogging_time = (walking_time * jogging_ratio) / walking_ratio\ntotal_time = walking_time + jogging_time\nans = total_time"
        ],
        "results": [
            70.0,
            70.0,
            70.0
        ],
        "result_counter": {
            "70.0": 3
        },
        "prediction": 70.0
    },
    {
        "question": "At summer camp the ratio of boys to girls was 10:1. If there were 30 boys, how many girls were there?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nboys = 30\nboys_to_girls_ratio = 10\ngirls = boys / boys_to_girls_ratio\nans = girls",
            "# Python code, return ans\nboys = 30\nboys_to_girls_ratio = 10\ngirls = boys / boys_to_girls_ratio\nans = girls",
            "# Python code, return ans\nboys = 30\nboys_to_girls_ratio = 10\ngirls = boys / boys_to_girls_ratio\nans = girls"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "A small school has 42 boys. If the ratio of boys to girls is 7:1, how many students are there total?",
        "answer": 48,
        "generated": [
            "# Python code, return ans\nboys = 42\nboys_to_girls_ratio = 7/1\ntotal_students = boys * (1 + 1/boys_to_girls_ratio)\nans = total_students",
            "# Python code, return ans\nboys = 42\nboys_to_girls_ratio = 7 / 1\ntotal_students = boys * (1 + 1 / boys_to_girls_ratio)\nans = total_students",
            "# Python code, return ans\nboys = 42\nratio_boys = 7\nratio_girls = 1\ntotal_ratio = ratio_boys + ratio_girls\ngirls = (boys * ratio_girls) // ratio_boys\ntotal_students = boys + girls\nans = total_students"
        ],
        "results": [
            48.0,
            48.0,
            48.0
        ],
        "result_counter": {
            "48.0": 3
        },
        "prediction": 48.0
    },
    {
        "question": "In one day a movie store rented out 15 comedies. If the ratio of comedies rented to action movies rented was 3:1, how many action movies were rented?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ncomedies_rented = 15\ncomedies_to_action_ratio = 3 / 1\naction_rented = comedies_rented / comedies_to_action_ratio\nans = action_rented",
            "# Python code, return ans\ncomedies_rented = 15\nratio_comedies_to_action = 3 / 1\naction_rented = comedies_rented / ratio_comedies_to_action\nans = action_rented",
            "# Python code, return ans\ncomedies_rented = 15\ncomedies_to_action_ratio = 3 / 1\naction_rented = comedies_rented / comedies_to_action_ratio\nans = action_rented"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "The ratio of white chocolate to dark chocolate sold at a candy shop was 4:3. If there were 20 bars of white chocolate sold, how many bars of dark chocolate were sold?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\nwhite_chocolate = 20\nratio_white = 4\nratio_dark = 3\ndark_chocolate = (white_chocolate * ratio_dark) / ratio_white\nans = dark_chocolate",
            "# Python code, return ans\nwhite_chocolate = 20\nratio_white = 4\nratio_dark = 3\ndark_chocolate = (white_chocolate * ratio_dark) / ratio_white\nans = dark_chocolate",
            "# Python code, return ans\nwhite_chocolate = 20\nratio_white = 4\nratio_dark = 3\ndark_chocolate = (white_chocolate * ratio_dark) / ratio_white\nans = dark_chocolate"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "Kaleb deleted 20 songs from his MP3 player. If the ratio of songs he deleted to songs he kept was 10:3, how many songs did he originally have on his MP3 player?",
        "answer": 26,
        "generated": [
            "# Python code, return ans\ndeleted_songs = 20\ndeleted_ratio = 10\nkept_ratio = 3\ntotal_ratio = deleted_ratio + kept_ratio\noriginal_songs = (deleted_songs * total_ratio) / deleted_ratio\nans = original_songs",
            "# Python code, return ans\ndeleted_songs = 20\ndeleted_to_kept_ratio = 10 / 3\nkept_songs = deleted_songs / deleted_to_kept_ratio\noriginal_songs = deleted_songs + kept_songs\nans = original_songs",
            "# Python code, return ans\ndeleted_songs = 20\ndeleted_ratio = 10\nkept_ratio = 3\ntotal_ratio = deleted_ratio + kept_ratio\noriginal_songs = deleted_songs * total_ratio / deleted_ratio\nans = original_songs"
        ],
        "results": [
            26.0,
            26.0,
            26.0
        ],
        "result_counter": {
            "26.0": 3
        },
        "prediction": 26.0
    },
    {
        "question": "Victor was playing checkers with a friend. The ratio of games Victor won was 9:5. If Victor won 36 games, how many games did his friend win?",
        "answer": 20,
        "generated": [
            "# Python code, return ans\nVictor_won = 36\nratio_Victor = 9\nratio_friend = 5\ntotal_ratio = ratio_Victor + ratio_friend\nfriend_won = (ratio_friend * Victor_won) / ratio_Victor\nans = friend_won",
            "# Python code, return ans\nVictor_won = 36\nratio_victor = 9\nratio_friend = 5\ntotal_ratio = ratio_victor + ratio_friend\nfriend_won = (ratio_friend * Victor_won) / ratio_victor\nans = friend_won",
            "# Python code, return ans\nVictor_won = 36\nVictor_friend_won = (5 * Victor_won) / 9\nans = Victor_friend_won"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "At a pet store the ratio of cats to dogs sold was 2:1. If there were 16 cats that were sold, how many dogs were sold?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ncats_sold = 16\nratio_cats_to_dogs = 2 / 1\ndogs_sold = cats_sold / ratio_cats_to_dogs\nans = dogs_sold",
            "# Python code, return ans\ncats_sold = 16\nratio_cats_to_dogs = 2 / 1\ndogs_sold = cats_sold / ratio_cats_to_dogs\nans = dogs_sold",
            "# Python code, return ans\ncats_sold = 16\nratio_cats_to_dogs = 2 / 1\ndogs_sold = cats_sold / ratio_cats_to_dogs\nans = dogs_sold"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "A buffet offers ranch or caesar dressing. The ratio of ranch dressing used to caesar dressing used is 7:1. If the buffet uses 28 cases of ranch dressing, how many cases of caesar do they use?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nranch_dressing = 28\nratio_ranch = 7\nratio_caesar = 1\ncaesar_dressing = (ranch_dressing * ratio_caesar) / ratio_ranch\nans = caesar_dressing",
            "# Python code, return ans\nranch_cases = 28\nratio_ranch = 7\nratio_caesar = 1\ncaesar_cases = (ranch_cases * ratio_caesar) / ratio_ranch\nans = caesar_cases",
            "# Python code, return ans\nranch_cases = 28\nratio_ranch = 7\nratio_caesar = 1\ncaesar_cases = (ranch_cases * ratio_caesar) / ratio_ranch\nans = caesar_cases"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "A video uploaded had 18 'up votes'. If the ratio of 'up votes' to 'down votes' was 9:2, how many 'down votes' did the video get?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nup_votes = 18\nup_down_ratio = 9 / 2\ndown_votes = up_votes / up_down_ratio\nans = down_votes",
            "# Python code, return ans\nup_votes = 18\nup_to_down_ratio = 9 / 2\ndown_votes = up_votes / up_to_down_ratio\nans = down_votes",
            "# Python code, return ans\nup_votes = 18\nup_down_ratio = 9 / 2\ndown_votes = up_votes / up_down_ratio\nans = down_votes"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "A student finished 45 of her homework problems in class. If the ratio of problems she finished to problems she still had left was 9:4, how many homework problems did she have total?",
        "answer": 65,
        "generated": [
            "# Python code, return ans\nfinished_problems = 45\nratio_finished = 9\nratio_left = 4\ntotal_ratio = ratio_finished + ratio_left\ntotal_problems = finished_problems * total_ratio // ratio_finished\nans = total_problems",
            "# Python code, return ans\nfinished_problems = 45\nratio_finished = 9\nratio_left = 4\ntotal_ratio = ratio_finished + ratio_left\ntotal_problems = finished_problems * total_ratio // ratio_finished\nans = total_problems",
            "# Python code, return ans\nfinished_problems = 45\nfinished_to_left_ratio = 9 / 4\nleft_problems = finished_problems * (4 / 9)\ntotal_problems = finished_problems + left_problems\nans = total_problems"
        ],
        "results": [
            65.0,
            65.0,
            65.0
        ],
        "result_counter": {
            "65.0": 3
        },
        "prediction": 65.0
    },
    {
        "question": "During a race Gwen jogged for 15 minutes. If the ratio of time she jogged to time she walked was 5:3, how many minutes did Gwen walk?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\njogged_time = 15\njogged_to_walked_ratio = 5 / 3\nwalked_time = jogged_time / jogged_to_walked_ratio\nans = walked_time",
            "# Python code, return ans\njogged_time = 15\njogged_to_walked_ratio = 5/3\nwalked_time = jogged_time * (3/5)\nans = walked_time",
            "# Python code, return ans\njogged_time = 15\njogged_to_walked_ratio = 5 / 3\nwalked_time = jogged_time / jogged_to_walked_ratio\nans = walked_time"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Edward had beaten 24 levels in a video game. If the ratio of levels he had beaten to not beaten was 3:1, how many levels does the game have total?",
        "answer": 32,
        "generated": [
            "# Python code, return ans\nbeaten_levels = 24\nratio_beaten = 3\nratio_not_beaten = 1\ntotal_ratio = ratio_beaten + ratio_not_beaten\ntotal_levels = beaten_levels * total_ratio / ratio_beaten\nans = total_levels",
            "# Python code, return ans\nlevels_beaten = 24\nratio_beaten = 3\nratio_not_beaten = 1\ntotal_ratio = ratio_beaten + ratio_not_beaten\nlevels_not_beaten = (levels_beaten / ratio_beaten) * ratio_not_beaten\ntotal_levels = levels_beaten + levels_not_beaten\nans = total_levels",
            "# Python code, return ans\nbeaten_levels = 24\nratio_beaten = 3\nratio_not_beaten = 1\ntotal_ratio = ratio_beaten + ratio_not_beaten\ntotal_levels = beaten_levels * total_ratio / ratio_beaten\nans = total_levels"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "At a bake sale there were 42 raisin cookies sold. If the ratio of raisin cookies sold to oatmeal cookies sold was 6:1, what is the combined amount of raisin and oatmeal cookies sold?",
        "answer": 49,
        "generated": [
            "# Python code, return ans\nraisin_cookies = 42\nratio_raisin_to_oatmeal = 6 / 1\noatmeal_cookies = raisin_cookies / ratio_raisin_to_oatmeal\ntotal_cookies = raisin_cookies + oatmeal_cookies\nans = total_cookies",
            "# Python code, return ans\nraisin_cookies = 42\nratio_raisin_to_oatmeal = 6 / 1\noatmeal_cookies = raisin_cookies / ratio_raisin_to_oatmeal\ntotal_cookies = raisin_cookies + oatmeal_cookies\nans = total_cookies",
            "# Python code, return ans\nraisin_cookies = 42\nratio_raisin_to_oatmeal = 6 / 1\noatmeal_cookies = raisin_cookies / ratio_raisin_to_oatmeal\ntotal_cookies = raisin_cookies + oatmeal_cookies\nans = total_cookies"
        ],
        "results": [
            49.0,
            49.0,
            49.0
        ],
        "result_counter": {
            "49.0": 3
        },
        "prediction": 49.0
    },
    {
        "question": "A parking lot has 35 empty space. If the ratio of empty spaces to taken spaces is 5:4, how many spaces are there total?",
        "answer": 63,
        "generated": [
            "# Python code, return ans\nempty_spaces = 35\nempty_to_taken_ratio = 5 / 4\ntaken_spaces = empty_spaces * (4 / 5)\ntotal_spaces = empty_spaces + taken_spaces\nans = total_spaces",
            "# Python code, return ans\nempty_spaces = 35\nempty_to_taken_ratio = 5/4\ntaken_spaces = empty_spaces * (4/5)\ntotal_spaces = empty_spaces + taken_spaces\nans = total_spaces",
            "# Python code, return ans\nempty_spaces = 35\nempty_to_taken_ratio = 5 / 4\ntaken_spaces = empty_spaces * (4 / 5)\ntotal_spaces = empty_spaces + taken_spaces\nans = total_spaces"
        ],
        "results": [
            63.0,
            63.0,
            63.0
        ],
        "result_counter": {
            "63.0": 3
        },
        "prediction": 63.0
    },
    {
        "question": "At a farm the ratio of cows to horses was 7:2. If there were 21 cows at the farm, how many horses were there?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ncows = 21\nratio_cows_to_horses = 7 / 2\nhorses = (cows * 2) / 7\nans = horses",
            "# Python code, return ans\ncows = 21\ncow_to_horse_ratio = 7 / 2\nhorses = (cows / cow_to_horse_ratio) * 2\nans = int(horses)",
            "# Python code, return ans\ncows = 21\ncow_to_horse_ratio = 7 / 2\nhorses = (cows / cow_to_horse_ratio) * 2\nans = int(horses)"
        ],
        "results": [
            6.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "6.0": 1,
            "12.0": 2
        },
        "prediction": 12.0
    },
    {
        "question": "Kaleb was playing 'Connect Four' with a friend. The ratio of games he won to games he lost was 3:2, if he won 18 games, how many games did they play total?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\ngames_won = 18\nwin_ratio = 3\nloss_ratio = 2\ntotal_ratio = win_ratio + loss_ratio\ntotal_games = (games_won * total_ratio) // win_ratio\nans = total_games",
            "# Python code, return ans\nwon_games = 18\nwon_to_lost_ratio = 3 / 2\nlost_games = won_games / won_to_lost_ratio\ntotal_games = won_games + lost_games\nans = total_games",
            "# Python code, return ans\ngames_won = 18\nwin_lose_ratio = 3/2\ngames_lost = games_won * (2/3)\ntotal_games = games_won + games_lost\nans = total_games"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "A produce store sold 32 red apples. If the ratio of red apples to green apples sold was 8:3, what is the combined amount of red and green apples sold?",
        "answer": 44,
        "generated": [
            "# Python code, return ans\nred_apples = 32\nred_to_green_ratio = 8 / 3\ngreen_apples = red_apples / red_to_green_ratio\ntotal_apples = red_apples + green_apples\nans = total_apples",
            "# Python code, return ans\nred_apples = 32\nred_to_green_ratio = 8/3\ngreen_apples = red_apples / red_to_green_ratio\ntotal_apples = red_apples + green_apples\nans = total_apples",
            "# Python code, return ans\nred_apples = 32\nred_to_green_ratio = 8 / 3\ngreen_apples = red_apples / red_to_green_ratio\ntotal_apples = red_apples + green_apples\nans = total_apples"
        ],
        "results": [
            44.0,
            44.0,
            44.0
        ],
        "result_counter": {
            "44.0": 3
        },
        "prediction": 44.0
    },
    {
        "question": "The ratio of shoes sold to sandals sold was 9:5. If there were 72 shoes sold, how many sandals were sold?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\nshoes_sold = 72\nshoe_sandal_ratio = 9/5\nsandals_sold = shoes_sold / shoe_sandal_ratio\nans = sandals_sold",
            "# Python code, return ans\nshoes_sold = 72\nshoe_sandal_ratio = 9 / 5\nsandals_sold = shoes_sold / shoe_sandal_ratio\nans = sandals_sold",
            "# Python code, return ans\nshoes_sold = 72\nshoe_sandal_ratio = 9 / 5\nsandals_sold = shoes_sold / shoe_sandal_ratio\nans = sandals_sold"
        ],
        "results": [
            40.0,
            40.0,
            40.0
        ],
        "result_counter": {
            "40.0": 3
        },
        "prediction": 40.0
    },
    {
        "question": "A recipe called for the ratio of sugar to flour to be 10:1. If you used 50 ounce of sugar, how many ounces of flour would you need to use?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nsugar = 50\nratio_sugar = 10\nratio_flour = 1\nflour = (sugar * ratio_flour) / ratio_sugar\nans = flour",
            "# Python code, return ans\nsugar = 50\nratio_sugar_flour = 10 / 1\nflour = sugar / ratio_sugar_flour\nans = flour",
            "# Python code, return ans\nsugar = 50\nratio_sugar = 10\nratio_flour = 1\nflour = (sugar * ratio_flour) / ratio_sugar\nans = flour"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "At a restaurant the ratio of kids meals sold to adult meals sold was 2:1. If there were 8 kids meals sold, what is the combined amount of kids and adult meals sold?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nkids_meals = 8\nadult_meals = kids_meals // 2\ntotal_meals = kids_meals + adult_meals\nans = total_meals",
            "# Python code, return ans\nkids_meals = 8\nadult_meals = kids_meals // 2\ntotal_meals = kids_meals + adult_meals\nans = total_meals",
            "# Python code, return ans\nkids_meals = 8\nadult_meals = kids_meals // 2\ntotal_meals = kids_meals + adult_meals\nans = total_meals"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "At a restaurant the ratio of kids meals sold to adult meals sold was 10:7. If there were 70 kids meals sold, how many adult meals were sold?",
        "answer": 49,
        "generated": [
            "# Python code, return ans\nkids_meals = 70\nkids_to_adult_ratio = 10 / 7\nadult_meals = kids_meals / kids_to_adult_ratio\nans = adult_meals",
            "# Python code, return ans\nkids_meals_sold = 70\nkids_to_adult_ratio = 10 / 7\nadult_meals_sold = kids_meals_sold / kids_to_adult_ratio\nans = adult_meals_sold",
            "# Python code, return ans\nkids_meals_sold = 70\nkids_to_adult_ratio = 10 / 7\nadult_meals_sold = int(kids_meals_sold / kids_to_adult_ratio)\nans = adult_meals_sold"
        ],
        "results": [
            49.0,
            49.0,
            49.0
        ],
        "result_counter": {
            "49.0": 3
        },
        "prediction": 49.0
    },
    {
        "question": "At the carnival, the ratio of people who won the ring toss game to lost it was 4:1. If 28 people won, how many people would have lost?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nwin_ratio = 4\nlose_ratio = 1\ntotal_ratio = win_ratio + lose_ratio\npeople_won = 28\npeople_lost = (people_won / win_ratio) * lose_ratio\nans = people_lost",
            "# Python code, return ans\nwin_ratio = 4\nlose_ratio = 1\ntotal_ratio = win_ratio + lose_ratio\npeople_won = 28\npeople_lost = (people_won * lose_ratio) // win_ratio\nans = people_lost",
            "# Python code, return ans\npeople_won = 28\nwin_to_loss_ratio = 4 / 1\npeople_lost = people_won / win_to_loss_ratio\nans = people_lost"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "A chess player won 48 of the games he played. If his ratio of wins to loses was 8:7, how many games did he play total?",
        "answer": 90,
        "generated": [
            "# Python code, return ans\nwin_games = 48\nwin_lose_ratio = 8 / 7\ntotal_games = win_games / win_lose_ratio * (win_lose_ratio + 1)\nans = total_games",
            "# Python code, return ans\nwin_games = 48\nwin_ratio = 8\nlose_ratio = 7\ntotal_games = win_games * (win_ratio + lose_ratio) / win_ratio\nans = total_games",
            "# Python code, return ans\nwin_games = 48\nwin_lose_ratio = 8 / 7\ntotal_games = win_games / win_lose_ratio\nlose_games = total_games - win_games\nans = win_games + lose_games"
        ],
        "results": [
            90.0,
            90.0,
            42.0
        ],
        "result_counter": {
            "90.0": 2,
            "42.0": 1
        },
        "prediction": 90.0
    },
    {
        "question": "A pet store sold 12 siamese cats. If the ratio of siamese cats to house cats sold was 2:1, what is the combined amount of cats sold?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\nsiamese_cats_sold = 12\nratio_siamese_to_house = 2 / 1\nhouse_cats_sold = siamese_cats_sold / ratio_siamese_to_house\ntotal_cats_sold = siamese_cats_sold + house_cats_sold\nans = total_cats_sold",
            "# Python code, return ans\nsiamese_cats_sold = 12\nratio_siamese_to_house = 2 / 1\nhouse_cats_sold = siamese_cats_sold / ratio_siamese_to_house\ntotal_cats_sold = siamese_cats_sold + house_cats_sold\nans = total_cats_sold",
            "# Python code, return ans\nsiamese_cats_sold = 12\nsiamese_to_house_ratio = 2 / 1\nhouse_cats_sold = siamese_cats_sold / siamese_to_house_ratio\ntotal_cats_sold = siamese_cats_sold + house_cats_sold\nans = total_cats_sold"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "A cafeteria sold 49 cartons of regular flavored milk. If the ratio of regular milk sold to chocolate milk sold was 7:2, what is the combined amount of chocolate and regular milk sold?",
        "answer": 63,
        "generated": [
            "# Python code, return ans\nregular_milk = 49\nratio_regular = 7\nratio_chocolate = 2\ntotal_ratio = ratio_regular + ratio_chocolate\nchocolate_milk = (regular_milk * ratio_chocolate) // ratio_regular\ncombined_milk = regular_milk + chocolate_milk\nans = combined_milk",
            "# Python code, return ans\nregular_milk = 49\nratio_regular = 7\nratio_chocolate = 2\ntotal_ratio = ratio_regular + ratio_chocolate\nchocolate_milk = (regular_milk * ratio_chocolate) // ratio_regular\ncombined_milk = regular_milk + chocolate_milk\nans = combined_milk",
            "# Python code, return ans\nregular_milk = 49\nregular_to_chocolate_ratio = 7 / 2\nchocolate_milk = regular_milk * (2 / 7)\ntotal_milk = regular_milk + chocolate_milk\nans = total_milk"
        ],
        "results": [
            63.0,
            63.0,
            63.0
        ],
        "result_counter": {
            "63.0": 3
        },
        "prediction": 63.0
    },
    {
        "question": "At an ice cream shop the ratio of sugar cones sold to waffle cones sold is 5:4. If there are 45 sugar cones sold, how many waffles cones would be sold?",
        "answer": 36,
        "generated": [
            "# Python code, return ans\nsugar_cones_sold = 45\nsugar_to_waffle_ratio = 5 / 4\nwaffle_cones_sold = sugar_cones_sold * (4 / 5)\nans = waffle_cones_sold",
            "# Python code, return ans\nsugar_cones_sold = 45\nsugar_to_waffle_ratio = 5 / 4\nwaffle_cones_sold = sugar_cones_sold / sugar_to_waffle_ratio\nans = waffle_cones_sold",
            "# Python code, return ans\nsugar_cones_sold = 45\nratio_sugar = 5\nratio_waffle = 4\nwaffle_cones_sold = (sugar_cones_sold * ratio_waffle) / ratio_sugar\nans = waffle_cones_sold"
        ],
        "results": [
            36.0,
            36.0,
            36.0
        ],
        "result_counter": {
            "36.0": 3
        },
        "prediction": 36.0
    },
    {
        "question": "A mailman has to give twenty-eight pieces of junk mail to each block. If there are four houses on a block, how many pieces of junk mail should he give each house?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ntotal_junk_mail = 28\nhouses_on_block = 4\njunk_mail_per_house = total_junk_mail / houses_on_block\nans = junk_mail_per_house",
            "# Python code, return ans\njunk_mail_per_block = 28\nhouses_per_block = 4\njunk_mail_per_house = junk_mail_per_block / houses_per_block\nans = junk_mail_per_house",
            "# Python code, return ans\ntotal_junk_mail = 28\nhouses_on_block = 4\njunk_mail_per_house = total_junk_mail / houses_on_block\nans = junk_mail_per_house"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Billy bought five boxes of books at a yard sale. If each box had seven books, how many books did he buy?",
        "answer": 35,
        "generated": [
            "# Python code, return ans\nboxes_of_books = 5\nbooks_per_box = 7\ntotal_books = boxes_of_books * books_per_box\nans = total_books",
            "# Python code, return ans\nboxes = 5\nbooks_per_box = 7\ntotal_books = boxes * books_per_box\nans = total_books",
            "# Python code, return ans\nboxes = 5\nbooks_per_box = 7\ntotal_books = boxes * books_per_box\nans = total_books"
        ],
        "results": [
            35.0,
            35.0,
            35.0
        ],
        "result_counter": {
            "35.0": 3
        },
        "prediction": 35.0
    },
    {
        "question": "At the fair the 'Twirly Tea Cups' ride can hold nine people per teacup. If the ride has seven tea cups, how many total people can ride at a time?",
        "answer": 63,
        "generated": [
            "# Python code, return ans\npeople_per_teacup = 9\nteacup_num = 7\ntotal_people = people_per_teacup * teacup_num\nans = total_people",
            "# Python code, return ans\npeople_per_teacup = 9\ntotal_teacups = 7\ntotal_people = people_per_teacup * total_teacups\nans = total_people",
            "# Python code, return ans\npeople_per_teacup = 9\nteacup_num = 7\ntotal_people = people_per_teacup * teacup_num\nans = total_people"
        ],
        "results": [
            63.0,
            63.0,
            63.0
        ],
        "result_counter": {
            "63.0": 3
        },
        "prediction": 63.0
    },
    {
        "question": "Mike played six games of basketball with his friends. If Mike scored four points each game, how many points did he score total?",
        "answer": 24,
        "generated": [
            "# Python code, return ans\ngames_played = 6\npoints_per_game = 4\ntotal_points = games_played * points_per_game\nans = total_points",
            "# Python code, return ans\ngames_played = 6\npoints_per_game = 4\ntotal_points = games_played * points_per_game\nans = total_points",
            "# Python code, return ans\ngames_played = 6\npoints_per_game = 4\ntotal_points = games_played * points_per_game\nans = total_points"
        ],
        "results": [
            24.0,
            24.0,
            24.0
        ],
        "result_counter": {
            "24.0": 3
        },
        "prediction": 24.0
    },
    {
        "question": "Emily was selling some of her old toys at a garage sale. She started out with seven toys and sold three of them. How many does she have left?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ninitial_toys = 7\nsold_toys = 3\nremaining_toys = initial_toys - sold_toys\nans = remaining_toys",
            "# Python code, return ans\ninitial_toys = 7\nsold_toys = 3\nremaining_toys = initial_toys - sold_toys\nans = remaining_toys",
            "# Python code, return ans\ninitial_toys = 7\nsold_toys = 3\nremaining_toys = initial_toys - sold_toys\nans = remaining_toys"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Adam had to wash fourteen loads of clothes. By noon he had only washed eight loads. How many does he still need to wash?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ntotal_loads = 14\nwashed_by_noon = 8\nloads_left = total_loads - washed_by_noon\nans = loads_left",
            "# Python code, return ans\ntotal_loads = 14\nwashed_by_noon = 8\nloads_left = total_loads - washed_by_noon\nans = loads_left",
            "# Python code, return ans\ntotal_loads = 14\nwashed_by_noon = 8\nloads_to_wash = total_loads - washed_by_noon\nans = loads_to_wash"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "A pet store had seven Siamese cats. If they sold four of them, how many cats did they still have?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nSiamese_cats = 7\ncats_sold = 4\ncats_left = Siamese_cats - cats_sold\nans = cats_left",
            "# Python code, return ans\nSiamese_cats = 7\ncats_sold = 4\ncats_left = Siamese_cats - cats_sold\nans = cats_left",
            "# Python code, return ans\ninitial_cats = 7\ncats_sold = 4\nremaining_cats = initial_cats - cats_sold\nans = remaining_cats"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "At the state fair Paul bought eleven tickets. If he spent three tickets on the Ferris wheel. How many tickets did he have left?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ntotal_tickets = 11\nspent_tickets = 3\nremaining_tickets = total_tickets - spent_tickets\nans = remaining_tickets",
            "# Python code, return ans\ntotal_tickets = 11\nspent_tickets = 3\nremaining_tickets = total_tickets - spent_tickets\nans = remaining_tickets",
            "# Python code, return ans\ntotal_tickets = 11\nspent_tickets = 3\nremaining_tickets = total_tickets - spent_tickets\nans = remaining_tickets"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Cody had nine old video games he wanted to get rid of. If he gave his friend four of the games, how many does he still have?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ntotal_games = 9\ngames_given = 4\ngames_left = total_games - games_given\nans = games_left",
            "# Python code, return ans\ntotal_games = 9\ngames_given = 4\ngames_left = total_games - games_given\nans = games_left",
            "# Python code, return ans\nCody_games = 9\ngames_given = 4\ngames_left = Cody_games - games_given\nans = games_left"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Victor bought several boxes of books at a yard sale and ended up with twenty-four books total. If each box had three books, how many boxes did he buy?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ntotal_books = 24\nbooks_per_box = 3\nboxes_bought = total_books / books_per_box\nans = boxes_bought",
            "# Python code, return ans\ntotal_books = 24\nbooks_per_box = 3\nboxes_bought = total_books / books_per_box\nans = boxes_bought",
            "# Python code, return ans\ntotal_books = 24\nbooks_per_box = 3\nboxes_bought = total_books / books_per_box\nans = boxes_bought"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Sam had eleven friends over for his birthday party. Later three of his friends had to go home. How many friends were left?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ntotal_friends = 11\nfriends_left = total_friends - 3\nans = friends_left",
            "# Python code, return ans\ninitial_friends = 11\nfriends_left = 3\nremaining_friends = initial_friends - friends_left\nans = remaining_friends",
            "# Python code, return ans\ntotal_friends = 11\nfriends_left = total_friends - 3\nans = friends_left"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Paul was packing up his old toys. He managed to squeeze eight toys into a box. If Paul filled up four boxes, how many toys did he pack total?",
        "answer": 32,
        "generated": [
            "# Python code, return ans\ntoys_per_box = 8\nboxes = 4\ntotal_toys = toys_per_box * boxes\nans = total_toys",
            "# Python code, return ans\ntoys_per_box = 8\nboxes_filled = 4\ntotal_toys = toys_per_box * boxes_filled\nans = total_toys",
            "# Python code, return ans\ntoys_per_box = 8\nboxes = 4\ntotal_toys = toys_per_box * boxes\nans = total_toys"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "Will was drawing super heroes on a sheet of scrap paper. He drew two heroes on the front and seven heroes on the back. How many heroes did he draw total?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nheroes_front = 2\nheroes_back = 7\ntotal_heroes = heroes_front + heroes_back\nans = total_heroes",
            "# Python code, return ans\nfront_heroes = 2\nback_heroes = 7\ntotal_heroes = front_heroes + back_heroes\nans = total_heroes",
            "# Python code, return ans\nheroes_front = 2\nheroes_back = 7\ntotal_heroes = heroes_front + heroes_back\nans = total_heroes"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Each table in a break room can seat eight people. If the break room has four tables, how many people can sit in there?",
        "answer": 32,
        "generated": [
            "# Python code, return ans\ntable_num = 4\nseat_per_table = 8\ntotal_seats = table_num * seat_per_table\nans = total_seats",
            "# Python code, return ans\ntable_num = 4\nseat_per_table = 8\ntotal_seats = table_num * seat_per_table\nans = total_seats",
            "# Python code, return ans\ntable_num = 4\nseat_per_table = 8\ntotal_seats = table_num * seat_per_table\nans = total_seats"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "Adam could fit nine action figures on each shelf in his room. His room has three shelves. How many action figures total could his shelves hold?",
        "answer": 27,
        "generated": [
            "# Python code, return ans\naction_figures_per_shelf = 9\nshelves = 3\ntotal_action_figures = action_figures_per_shelf * shelves\nans = total_action_figures",
            "# Python code, return ans\naction_figures_per_shelf = 9\nshelves = 3\ntotal_action_figures = action_figures_per_shelf * shelves\nans = total_action_figures",
            "# Python code, return ans\naction_figures_per_shelf = 9\nshelves = 3\ntotal_action_figures = action_figures_per_shelf * shelves\nans = total_action_figures"
        ],
        "results": [
            27.0,
            27.0,
            27.0
        ],
        "result_counter": {
            "27.0": 3
        },
        "prediction": 27.0
    },
    {
        "question": "Ned mowed his lawn six times in the spring and five times in the summer. How many times did he mow total?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\nmowed_spring = 6\nmowed_summer = 5\ntotal_mowed = mowed_spring + mowed_summer\nans = total_mowed",
            "# Python code, return ans\nmow_spring = 6\nmow_summer = 5\ntotal_mow = mow_spring + mow_summer\nans = total_mow",
            "# Python code, return ans\nmow_spring = 6\nmow_summer = 5\ntotal_mow = mow_spring + mow_summer\nans = total_mow"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "Billy was making ice using ice trays. Each tray held nine ice cubes. If he had eight trays, how many cubes could he make?",
        "answer": 72,
        "generated": [
            "# Python code, return ans\ntray_num = 8\nice_cubes_per_tray = 9\ntotal_ice_cubes = tray_num * ice_cubes_per_tray\nans = total_ice_cubes",
            "# Python code, return ans\ntray_num = 8\nice_cubes_per_tray = 9\ntotal_ice_cubes = tray_num * ice_cubes_per_tray\nans = total_ice_cubes",
            "# Python code, return ans\ntray_num = 8\nice_cubes_per_tray = 9\ntotal_ice_cubes = tray_num * ice_cubes_per_tray\nans = total_ice_cubes"
        ],
        "results": [
            72.0,
            72.0,
            72.0
        ],
        "result_counter": {
            "72.0": 3
        },
        "prediction": 72.0
    },
    {
        "question": "Frank had forty-two pieces of candy. If he put them into bags with seven pieces in each bag, how many bags would he have?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ncandy_pieces = 42\npieces_per_bag = 7\nbags_needed = candy_pieces // pieces_per_bag\nans = bags_needed",
            "# Python code, return ans\ncandy_num = 42\ncandy_per_bag = 7\nbags_num = candy_num // candy_per_bag\nans = bags_num",
            "# Python code, return ans\ncandy_num = 42\ncandy_per_bag = 7\nbags_needed = candy_num // candy_per_bag\nans = bags_needed"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "For Gwen's birthday she received five dollars. If she spent three dollars. How much money did she still have?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\nreceived_money = 5\nspent_money = 3\nremaining_money = received_money - spent_money\nans = remaining_money",
            "# Python code, return ans\nreceived_money = 5\nspent_money = 3\nremaining_money = received_money - spent_money\nans = remaining_money",
            "# Python code, return ans\nreceived_money = 5\nspent_money = 3\nremaining_money = received_money - spent_money\nans = remaining_money"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Emily was helping her mom pick apples from the tree in their front yard. Together they picked fourteen totals. If six of the apples weren't ripe yet, how many good apples did they pick?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ntotal_apples = 14\nunripe_apples = 6\ngood_apples = total_apples - unripe_apples\nans = good_apples",
            "# Python code, return ans\ntotal_apples = 14\nunripe_apples = 6\nripe_apples = total_apples - unripe_apples\nans = ripe_apples",
            "# Python code, return ans\ntotal_apples = 14\nunripe_apples = 6\nripe_apples = total_apples - unripe_apples\nans = ripe_apples"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Emily is making bead necklaces for her friends. She has twenty-eight beads and each necklace takes seven beads. How many necklaces can Emily make?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ntotal_beads = 28\nbeads_per_necklace = 7\nnecklaces = total_beads // beads_per_necklace\nans = necklaces",
            "# Python code, return ans\ntotal_beads = 28\nbeads_per_necklace = 7\nnecklaces = total_beads // beads_per_necklace\nans = necklaces",
            "# Python code, return ans\ntotal_beads = 28\nbeads_per_necklace = 7\nnecklaces = total_beads // beads_per_necklace\nans = necklaces"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Oliver bought eight boxes of candy. Later he bought six more boxes. How many boxes did he have totaled?",
        "answer": 14,
        "generated": [
            "# Python code, return ans\nboxes_bought_initially = 8\nboxes_bought_later = 6\ntotal_boxes = boxes_bought_initially + boxes_bought_later\nans = total_boxes",
            "# Python code, return ans\ninitial_boxes = 8\nadditional_boxes = 6\ntotal_boxes = initial_boxes + additional_boxes\nans = total_boxes",
            "# Python code, return ans\nboxes_initial = 8\nboxes_later = 6\ntotal_boxes = boxes_initial + boxes_later\nans = total_boxes"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "An airline lets each passenger take eight pieces of luggage. If there were four people flying, how many bags could they take?",
        "answer": 32,
        "generated": [
            "# Python code, return ans\nluggage_per_passenger = 8\npassenger_num = 4\ntotal_luggage = luggage_per_passenger * passenger_num\nans = total_luggage",
            "# Python code, return ans\nluggage_per_passenger = 8\npassenger_num = 4\ntotal_luggage = luggage_per_passenger * passenger_num\nans = total_luggage",
            "# Python code, return ans\nluggage_per_passenger = 8\npassenger_num = 4\ntotal_luggage = luggage_per_passenger * passenger_num\nans = total_luggage"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "Tiffany was collecting cans for recycling. On Monday she had four bags of cans. The next day she found eight more bags worth. How many bags did she have totaled?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nbags_on_Monday = 4\nbags_on_Tuesday = 8\ntotal_bags = bags_on_Monday + bags_on_Tuesday\nans = total_bags",
            "# Python code, return ans\nbags_on_Monday = 4\nbags_on_Tuesday = 8\ntotal_bags = bags_on_Monday + bags_on_Tuesday\nans = total_bags",
            "# Python code, return ans\nbags_on_Monday = 4\nbags_on_Tuesday = 8\ntotal_bags = bags_on_Monday + bags_on_Tuesday\nans = total_bags"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "An architect built a house with ten bedrooms total. If the second floor had two bedrooms. How many bedrooms does the first floor have?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ntotal_bedrooms = 10\nsecond_floor_bedrooms = 2\nfirst_floor_bedrooms = total_bedrooms - second_floor_bedrooms\nans = first_floor_bedrooms",
            "# Python code, return ans\ntotal_bedrooms = 10\nsecond_floor_bedrooms = 2\nfirst_floor_bedrooms = total_bedrooms - second_floor_bedrooms\nans = first_floor_bedrooms",
            "# Python code, return ans\ntotal_bedrooms = 10\nsecond_floor_bedrooms = 2\nfirst_floor_bedrooms = total_bedrooms - second_floor_bedrooms\nans = first_floor_bedrooms"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Lana's mom was buying extra school supplies for her and her siblings. If she bought three packs of glue sticks with seven glue sticks in each pack, how many did she get total?",
        "answer": 21,
        "generated": [
            "# Python code, return ans\npacks_of_glue_sticks = 3\nglue_sticks_per_pack = 7\ntotal_glue_sticks = packs_of_glue_sticks * glue_sticks_per_pack\nans = total_glue_sticks",
            "# Python code, return ans\npacks_of_glue_sticks = 3\nglue_sticks_per_pack = 7\ntotal_glue_sticks = packs_of_glue_sticks * glue_sticks_per_pack\nans = total_glue_sticks",
            "# Python code, return ans\npacks_of_glue_sticks = 3\nglue_sticks_per_pack = 7\ntotal_glue_sticks = packs_of_glue_sticks * glue_sticks_per_pack\nans = total_glue_sticks"
        ],
        "results": [
            21.0,
            21.0,
            21.0
        ],
        "result_counter": {
            "21.0": 3
        },
        "prediction": 21.0
    },
    {
        "question": "Maria was placing her spare change into stacks. Each stack had three coins. If she had five stacks, how many coins did she have?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\nstacks = 5\ncoins_per_stack = 3\ntotal_coins = stacks * coins_per_stack\nans = total_coins",
            "# Python code, return ans\nstacks = 5\ncoins_per_stack = 3\ntotal_coins = stacks * coins_per_stack\nans = total_coins",
            "# Python code, return ans\nstacks = 5\ncoins_per_stack = 3\ntotal_coins = stacks * coins_per_stack\nans = total_coins"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "A chef used five potatoes to make fries for the lunch crowd. Later he used another two potatoes for the dinner crowd. How many potatoes did he use total?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\npotatoes_lunch = 5\npotatoes_dinner = 2\ntotal_potatoes = potatoes_lunch + potatoes_dinner\nans = total_potatoes",
            "# Python code, return ans\npotatoes_lunch = 5\npotatoes_dinner = 2\ntotal_potatoes = potatoes_lunch + potatoes_dinner\nans = total_potatoes",
            "# Python code, return ans\npotatoes_lunch = 5\npotatoes_dinner = 2\ntotal_potatoes = potatoes_lunch + potatoes_dinner\nans = total_potatoes"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Dave was making ice using ice trays. He originally had two ice cubes. But made seven more cubes. How many ice cubes did he have totaled?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\noriginal_ice_cubes = 2\nmade_ice_cubes = 7\ntotal_ice_cubes = original_ice_cubes + made_ice_cubes\nans = total_ice_cubes",
            "# Python code, return ans\noriginal_ice_cubes = 2\nnew_ice_cubes = 7\ntotal_ice_cubes = original_ice_cubes + new_ice_cubes\nans = total_ice_cubes",
            "# Python code, return ans\noriginal_cubes = 2\nmade_cubes = 7\ntotal_cubes = original_cubes + made_cubes\nans = total_cubes"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "On the last day of school only sixteen students showed up. If seven of them were checked out early, how many students were left?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ntotal_students = 16\nchecked_out_early = 7\nstudents_left = total_students - checked_out_early\nans = students_left",
            "# Python code, return ans\ntotal_students = 16\nchecked_out_students = 7\nstudents_left = total_students - checked_out_students\nans = students_left",
            "# Python code, return ans\ntotal_students = 16\nchecked_out_students = 7\nstudents_left = total_students - checked_out_students\nans = students_left"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Jerry was playing the ring toss at the carnival. All together he used forty-eight rings. If each game you get six rings, how many games did he play?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ntotal_rings = 48\nrings_per_game = 6\ngames_played = total_rings / rings_per_game\nans = games_played",
            "# Python code, return ans\ntotal_rings = 48\nrings_per_game = 6\ngames_played = total_rings / rings_per_game\nans = games_played",
            "# Python code, return ans\ntotal_rings = 48\nrings_per_game = 6\ngames_played = total_rings / rings_per_game\nans = games_played"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Tom read three chapters of a book. If each chapter was eight pages, how many pages did he read?",
        "answer": 24,
        "generated": [
            "# Python code, return ans\nchapter_num = 3\npages_per_chapter = 8\ntotal_pages_read = chapter_num * pages_per_chapter\nans = total_pages_read",
            "# Python code, return ans\nchapter_num = 3\npages_per_chapter = 8\ntotal_pages_read = chapter_num * pages_per_chapter\nans = total_pages_read",
            "# Python code, return ans\nchapter_num = 3\npages_per_chapter = 8\ntotal_pages_read = chapter_num * pages_per_chapter\nans = total_pages_read"
        ],
        "results": [
            24.0,
            24.0,
            24.0
        ],
        "result_counter": {
            "24.0": 3
        },
        "prediction": 24.0
    },
    {
        "question": "Luke was helping his mom wash clothes. They washed six loads with seven towels in each load. How many towels did they wash total?",
        "answer": 42,
        "generated": [
            "# Python code, return ans\nloads = 6\ntowels_per_load = 7\ntotal_towels = loads * towels_per_load\nans = total_towels",
            "# Python code, return ans\nloads = 6\ntowels_per_load = 7\ntotal_towels = loads * towels_per_load\nans = total_towels",
            "# Python code, return ans\nloads = 6\ntowels_per_load = 7\ntotal_towels = loads * towels_per_load\nans = total_towels"
        ],
        "results": [
            42.0,
            42.0,
            42.0
        ],
        "result_counter": {
            "42.0": 3
        },
        "prediction": 42.0
    },
    {
        "question": "The roller coaster at the state fair costs five tickets per ride. If you had ten tickets, how many times could you ride it?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ntickets = 10\ntickets_per_ride = 5\nrides = tickets // tickets_per_ride\nans = rides",
            "# Python code, return ans\ntickets = 10\ntickets_per_ride = 5\nrides = tickets // tickets_per_ride\nans = rides",
            "# Python code, return ans\ntickets = 10\ntickets_per_ride = 5\nrides = tickets // tickets_per_ride\nans = rides"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Vanessa bought twelve old CDs at a garage sale. If seven of the CDs were scratched up, how many good CDs did she buy?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ntotal_CDs = 12\nscratched_CDs = 7\ngood_CDs = total_CDs - scratched_CDs\nans = good_CDs",
            "# Python code, return ans\ntotal_CDs = 12\nscratched_CDs = 7\ngood_CDs = total_CDs - scratched_CDs\nans = good_CDs",
            "# Python code, return ans\ntotal_CDs = 12\nscratched_CDs = 7\ngood_CDs = total_CDs - scratched_CDs\nans = good_CDs"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Will went to the state fair and rode the Ferris wheel thirteen times. If he rode it seven times during the day, how many times did he ride it at night?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nrides_day = 7\nrides_total = 13\nrides_night = rides_total - rides_day\nans = rides_night",
            "# Python code, return ans\nrides_day = 7\nrides_total = 13\nrides_night = rides_total - rides_day\nans = rides_night",
            "# Python code, return ans\nrides_day = 7\nrides_total = 13\nrides_night = rides_total - rides_day\nans = rides_night"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Tiffany was buying sodas for her and her friends. They needed nine sodas, but Tiffany bought seven extra. How many did she buy?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\nsodas_needed = 9\nextra_sodas = 7\ntotal_sodas = sodas_needed + extra_sodas\nans = total_sodas",
            "# Python code, return ans\nneeded_sodas = 9\nextra_sodas = 7\ntotal_sodas = needed_sodas + extra_sodas\nans = total_sodas",
            "# Python code, return ans\nneeded_sodas = 9\nextra_sodas = 7\ntotal_sodas = needed_sodas + extra_sodas\nans = total_sodas"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "Olivia was collecting cans for recycling. She had four bags with five cans inside each bag. How many cans did she have?",
        "answer": 20,
        "generated": [
            "# Python code, return ans\nbags = 4\ncans_per_bag = 5\ntotal_cans = bags * cans_per_bag\nans = total_cans",
            "# Python code, return ans\nbags = 4\ncans_per_bag = 5\ntotal_cans = bags * cans_per_bag\nans = total_cans",
            "# Python code, return ans\nbags = 4\ncans_per_bag = 5\ntotal_cans = bags * cans_per_bag\nans = total_cans"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "Jerry is helping to put away books. If he has twelve books to put away and each shelf can hold four books, how many shelves will he need?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nbooks_to_put_away = 12\nbooks_per_shelf = 4\nshelves_needed = books_to_put_away / books_per_shelf\nans = shelves_needed",
            "# Python code, return ans\nbooks_to_put_away = 12\nbooks_per_shelf = 4\nshelves_needed = books_to_put_away // books_per_shelf + (books_to_put_away % books_per_shelf != 0)\nans = shelves_needed",
            "# Python code, return ans\nbooks_to_put_away = 12\nbooks_per_shelf = 4\nshelves_needed = books_to_put_away / books_per_shelf\nans = shelves_needed"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Will had twenty-eight bottles of water. If he drank seven each day, how many days would they last him?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nbottles_of_water = 28\ndrank_per_day = 7\ndays_to_last = bottles_of_water / drank_per_day\nans = days_to_last",
            "# Python code, return ans\ntotal_bottles = 28\nbottles_per_day = 7\ndays_to_last = total_bottles / bottles_per_day\nans = days_to_last",
            "# Python code, return ans\ntotal_bottles = 28\nbottles_per_day = 7\ndays_to_last = total_bottles / bottles_per_day\nans = days_to_last"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Larry's Lawn Care charges nine bucks to trim a hedge. If Henry has three hedges, how much money would he spend?",
        "answer": 27,
        "generated": [
            "# Python code, return ans\ncharge_per_hedge = 9\nhedges = 3\ntotal_cost = charge_per_hedge * hedges\nans = total_cost",
            "# Python code, return ans\ncharge_per_hedge = 9\nhedges_num = 3\ntotal_cost = charge_per_hedge * hedges_num\nans = total_cost",
            "# Python code, return ans\ncharge_per_hedge = 9\nnum_of_hedges = 3\ntotal_cost = charge_per_hedge * num_of_hedges\nans = total_cost"
        ],
        "results": [
            27.0,
            27.0,
            27.0
        ],
        "result_counter": {
            "27.0": 3
        },
        "prediction": 27.0
    },
    {
        "question": "Maria was buying DVDs of her old favorite TV series. She bought eight DVDs at the store and she bought two online. How many DVDs did she buy total?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\nDVDs_store = 8\nDVDs_online = 2\ntotal_DVDs = DVDs_store + DVDs_online\nans = total_DVDs",
            "# Python code, return ans\nDVDs_store = 8\nDVDs_online = 2\ntotal_DVDs = DVDs_store + DVDs_online\nans = total_DVDs",
            "# Python code, return ans\nDVDs_store = 8\nDVDs_online = 2\ntotal_DVDs = DVDs_store + DVDs_online\nans = total_DVDs"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "For a potluck lunch Bianca brought nine bottles of soda. If someone else had already brought eight sodas, how many were there total?",
        "answer": 17,
        "generated": [
            "# Python code, return ans\nBianca_soda = 9\nother_soda = 8\ntotal_soda = Bianca_soda + other_soda\nans = total_soda",
            "# Python code, return ans\nBianca_sodas = 9\nother_sodas = 8\ntotal_sodas = Bianca_sodas + other_sodas\nans = total_sodas",
            "# Python code, return ans\nBianca_sodas = 9\nother_sodas = 8\ntotal_sodas = Bianca_sodas + other_sodas\nans = total_sodas"
        ],
        "results": [
            17.0,
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 3
        },
        "prediction": 17.0
    },
    {
        "question": "For Halloween Tom received twenty pieces of candy. If he put them into piles with five in each pile, how many piles could he make?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ncandy_pieces = 20\npile_size = 5\nnum_piles = candy_pieces // pile_size\nans = num_piles",
            "# Python code, return ans\ncandy_pieces = 20\ncandy_per_pile = 5\npile_num = candy_pieces // candy_per_pile\nans = pile_num",
            "# Python code, return ans\ncandy_pieces = 20\ncandy_per_pile = 5\ntotal_piles = candy_pieces // candy_per_pile\nans = total_piles"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Tiffany was sending out birthday invitations to her friends. She sent out nine on Monday and eight on Tuesday. How many did she send total?",
        "answer": 17,
        "generated": [
            "# Python code, return ans\nsent_on_Monday = 9\nsent_on_Tuesday = 8\nans = sent_on_Monday + sent_on_Tuesday\nans",
            "# Python code, return ans\nsent_on_Monday = 9\nsent_on_Tuesday = 8\nans = sent_on_Monday + sent_on_Tuesday\nans",
            "# Python code, return ans\nsent_on_Monday = 9\nsent_on_Tuesday = 8\nans = sent_on_Monday + sent_on_Tuesday\nans"
        ],
        "results": [
            17.0,
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 3
        },
        "prediction": 17.0
    },
    {
        "question": "A delivery driver had to make three more stops on his route. At each stop he had to drop off nine boxes. How many boxes does he have?",
        "answer": 27,
        "generated": [
            "# Python code, return ans\nstops = 3\nboxes_per_stop = 9\ntotal_boxes = stops * boxes_per_stop\nans = total_boxes",
            "# Python code, return ans\nstops = 3\nboxes_per_stop = 9\ntotal_boxes = stops * boxes_per_stop\nans = total_boxes",
            "# Python code, return ans\nstops_remaining = 3\nboxes_per_stop = 9\ntotal_boxes = stops_remaining * boxes_per_stop\nans = total_boxes"
        ],
        "results": [
            27.0,
            27.0,
            27.0
        ],
        "result_counter": {
            "27.0": 3
        },
        "prediction": 27.0
    },
    {
        "question": "Faye was placing her pencils into rows with eight pencils in each row. If she had thirty-two pencils, how many rows could she make?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\npencils = 32\npencils_per_row = 8\nrows = pencils // pencils_per_row\nans = rows",
            "# Python code, return ans\npencils = 32\npencils_per_row = 8\nrows = pencils // pencils_per_row\nans = rows",
            "# Python code, return ans\npencils = 32\npencils_per_row = 8\nrows = pencils // pencils_per_row\nans = rows"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "John was drawing super heroes one sheet of scrap paper. He drew fifteen pictures total. If he drew nine on the back. How many heroes did he draw on the front?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ntotal_pictures = 15\npictures_on_back = 9\npictures_on_front = total_pictures - pictures_on_back\nans = pictures_on_front",
            "# Python code, return ans\ntotal_pictures = 15\npictures_on_back = 9\npictures_on_front = total_pictures - pictures_on_back\nans = pictures_on_front",
            "# Python code, return ans\ntotal_pictures = 15\ndrawn_on_back = 9\ndrawn_on_front = total_pictures - drawn_on_back\nans = drawn_on_front"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Paige sent out fifteen birthday party invitations. If nine people showed up, how many people didn't come?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ntotal_invitations = 15\npeople_showed_up = 9\npeople_didnt_come = total_invitations - people_showed_up\nans = people_didnt_come",
            "# Python code, return ans\ntotal_invitations = 15\npeople_show_up = 9\npeople_not_come = total_invitations - people_show_up\nans = people_not_come",
            "# Python code, return ans\ntotal_invitations = 15\npeople_show_up = 9\npeople_not_come = total_invitations - people_show_up\nans = people_not_come"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Paul was reading through his favorite book series. Each week he read four different books. How many books would he have read through after five weeks?",
        "answer": 20,
        "generated": [
            "# Python code, return ans\nbooks_per_week = 4\nweeks = 5\ntotal_books_read = books_per_week * weeks\nans = total_books_read",
            "# Python code, return ans\nbooks_per_week = 4\nweeks = 5\ntotal_books_read = books_per_week * weeks\nans = total_books_read",
            "# Python code, return ans\nbooks_per_week = 4\nweeks = 5\ntotal_books_read = books_per_week * weeks\nans = total_books_read"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "A chef had five potatoes to make fries with, but he only used three of them. How many potatoes does he still have?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ntotal_potatoes = 5\nused_potatoes = 3\nremaining_potatoes = total_potatoes - used_potatoes\nans = remaining_potatoes",
            "# Python code, return ans\ntotal_potatoes = 5\nused_potatoes = 3\nremaining_potatoes = total_potatoes - used_potatoes\nans = remaining_potatoes",
            "# Python code, return ans\ntotal_potatoes = 5\nused_potatoes = 3\nremaining_potatoes = total_potatoes - used_potatoes\nans = remaining_potatoes"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "At the school Halloween party 2 girls and 9 boys dressed as ghosts. How many people total dressed as a ghost?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\ngirls_ghost = 2\nboys_ghost = 9\ntotal_ghost = girls_ghost + boys_ghost\nans = total_ghost",
            "# Python code, return ans\ngirls_ghost = 2\nboys_ghost = 9\ntotal_ghost = girls_ghost + boys_ghost\nans = total_ghost",
            "# Python code, return ans\ngirls_ghost = 2\nboys_ghost = 9\ntotal_ghost = girls_ghost + boys_ghost\nans = total_ghost"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "Amy bought 7 pencils at the school store, but she already had 3 pencils. How many pencils does she have totaled?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\npencils_bought = 7\npencils_already_had = 3\ntotal_pencils = pencils_bought + pencils_already_had\nans = total_pencils",
            "# Python code, return ans\npencils_bought = 7\npencils_already_had = 3\ntotal_pencils = pencils_bought + pencils_already_had\nans = total_pencils",
            "# Python code, return ans\npencils_bought = 7\npencils_already_have = 3\ntotal_pencils = pencils_bought + pencils_already_have\nans = total_pencils"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "Vanessa had to complete 3 pages of homework. Each page had 4 problems on it. How many problems did she have to complete total?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\npages = 3\nproblems_per_page = 4\ntotal_problems = pages * problems_per_page\nans = total_problems",
            "# Python code, return ans\npages = 3\nproblems_per_page = 4\ntotal_problems = pages * problems_per_page\nans = total_problems",
            "# Python code, return ans\npages = 3\nproblems_per_page = 4\ntotal_problems = pages * problems_per_page\nans = total_problems"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Mike has 64 action figures he wants to display. If each shelf in his room can hold 8 figures, how many shelves does he need?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\naction_figures = 64\nfigures_per_shelf = 8\nshelves_needed = action_figures / figures_per_shelf\nans = shelves_needed",
            "# Python code, return ans\naction_figures = 64\nfigures_per_shelf = 8\nshelves_needed = action_figures / figures_per_shelf\nans = shelves_needed",
            "# Python code, return ans\naction_figures = 64\nfigures_per_shelf = 8\nshelves_needed = action_figures / figures_per_shelf\nans = shelves_needed"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "A group of 8 friends were dressing as pirates for Halloween. If each costume cost 5 dollars, how much did they spend?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\nfriends = 8\ncost_per_costume = 5\ntotal_cost = friends * cost_per_costume\nans = total_cost",
            "# Python code, return ans\nfriend_num = 8\ncostume_cost = 5\ntotal_cost = friend_num * costume_cost\nans = total_cost",
            "# Python code, return ans\nfriends = 8\ncost_per_costume = 5\ntotal_cost = friends * cost_per_costume\nans = total_cost"
        ],
        "results": [
            40.0,
            40.0,
            40.0
        ],
        "result_counter": {
            "40.0": 3
        },
        "prediction": 40.0
    },
    {
        "question": "An industrial machine made 12 shirts. It can make 2 shirts a minute. How many minutes was the machine working?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ntotal_shirts = 12\nshirts_per_minute = 2\nworking_minutes = total_shirts / shirts_per_minute\nans = working_minutes",
            "# Python code, return ans\ntotal_shirts = 12\nshirts_per_minute = 2\nworking_minutes = total_shirts / shirts_per_minute\nans = working_minutes",
            "# Python code, return ans\nshirts_made = 12\nshirts_per_minute = 2\nminutes_working = shirts_made / shirts_per_minute\nans = minutes_working"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Olivia's dad took her and some friends out to eat for her birthday. If each meal costs 7 dollars and her dad paid for 3 meals, how much did he spend?",
        "answer": 21,
        "generated": [
            "# Python code, return ans\nmeal_cost = 7\nmeal_number = 3\ntotal_spent = meal_cost * meal_number\nans = total_spent",
            "# Python code, return ans\nmeal_cost = 7\nmeal_num = 3\ntotal_spent = meal_cost * meal_num\nans = total_spent",
            "# Python code, return ans\nmeal_cost = 7\nmeal_count = 3\ntotal_cost = meal_cost * meal_count\nans = total_cost"
        ],
        "results": [
            21.0,
            21.0,
            21.0
        ],
        "result_counter": {
            "21.0": 3
        },
        "prediction": 21.0
    },
    {
        "question": "While playing basketball Team A scored 18 points. If each person scored 2 points, how many people were playing?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nteam_A_points = 18\npoints_per_person = 2\nnumber_of_people = team_A_points / points_per_person\nans = number_of_people",
            "# Python code, return ans\nteam_A_points = 18\npoints_per_person = 2\nnumber_of_people = team_A_points / points_per_person\nans = number_of_people",
            "# Python code, return ans\nteam_A_points = 18\npoints_per_person = 2\nnumber_of_people = team_A_points / points_per_person\nans = number_of_people"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Katie had 9 math problems for homework. If she finished 5 of them on the bus ride home, how many more did she have to do?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ntotal_problems = 9\nfinished_on_bus = 5\nremaining_problems = total_problems - finished_on_bus\nans = remaining_problems",
            "# Python code, return ans\ntotal_problems = 9\nfinished_problems = 5\nremaining_problems = total_problems - finished_problems\nans = remaining_problems",
            "# Python code, return ans\ntotal_problems = 9\nfinished_on_bus = 5\nremaining_problems = total_problems - finished_on_bus\nans = remaining_problems"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Frank bought his family 14 pieces of chicken for dinner. If they only ate 7, how many pieces does he have left?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ntotal_chicken = 14\nchicken_eaten = 7\nchicken_left = total_chicken - chicken_eaten\nans = chicken_left",
            "# Python code, return ans\ntotal_chicken = 14\neaten_chicken = 7\nleft_chicken = total_chicken - eaten_chicken\nans = left_chicken",
            "# Python code, return ans\nchicken_bought = 14\nchicken_eaten = 7\nchicken_left = chicken_bought - chicken_eaten\nans = chicken_left"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "There are 13 different books in the 'Crazy Silly School' series. If you read 9 of the books, how many more do you still have to read?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ntotal_books = 13\nbooks_read = 9\nbooks_left = total_books - books_read\nans = books_left",
            "# Python code, return ans\ntotal_books = 13\nread_books = 9\nbooks_to_read = total_books - read_books\nans = books_to_read",
            "# Python code, return ans\ntotal_books = 13\nbooks_read = 9\nbooks_left = total_books - books_read\nans = books_left"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Kale was drawing on scrap paper. He could fit 5 drawings on each page. If he has 6 pages, how many drawings can he make?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\ndrawings_per_page = 5\npages = 6\ntotal_drawings = drawings_per_page * pages\nans = total_drawings",
            "# Python code, return ans\ndrawings_per_page = 5\npages = 6\ntotal_drawings = drawings_per_page * pages\nans = total_drawings",
            "# Python code, return ans\ndrawings_per_page = 5\npages = 6\ntotal_drawings = drawings_per_page * pages\nans = total_drawings"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "Rachel bought 8 music albums online. If each album had 2 songs, how many songs did she buy total?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\nalbums = 8\nsongs_per_album = 2\ntotal_songs = albums * songs_per_album\nans = total_songs",
            "# Python code, return ans\nalbums = 8\nsongs_per_album = 2\ntotal_songs = albums * songs_per_album\nans = total_songs",
            "# Python code, return ans\nalbums = 8\nsongs_per_album = 2\ntotal_songs = albums * songs_per_album\nans = total_songs"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "Olivia had 11 quarters. If she spent 4 of them buying a soda, how many coins did she have left?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ntotal_quarters = 11\nspent_quarters = 4\nremaining_quarters = total_quarters - spent_quarters\nans = remaining_quarters",
            "# Python code, return ans\ntotal_quarters = 11\nspent_quarters = 4\nremaining_quarters = total_quarters - spent_quarters\nans = remaining_quarters",
            "# Python code, return ans\ntotal_quarters = 11\nquarters_spent = 4\nquarters_left = total_quarters - quarters_spent\nans = quarters_left"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Jerry's freezer had 30 ice cubes in it. If he had to get ice for 6 cups, how many pieces should he put in each cup to make them have the same amount?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nice_cubes = 30\ncups = 6\nice_cubes_per_cup = ice_cubes // cups\nans = ice_cubes_per_cup",
            "# Python code, return ans\nice_cubes = 30\ncups = 6\nice_cubes_per_cup = ice_cubes // cups\nans = ice_cubes_per_cup",
            "# Python code, return ans\ntotal_ice_cubes = 30\nnum_of_cups = 6\nice_cubes_per_cup = total_ice_cubes // num_of_cups\nans = ice_cubes_per_cup"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "For a potluck lunch Debby brought 10 bottles of soda. If everyone only drank 8 of the sodas, how many did she have to take back home?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ntotal_soda = 10\nsoda_drank = 8\nsoda_left = total_soda - soda_drank\nans = soda_left",
            "# Python code, return ans\nsoda_brought = 10\nsoda_drank = 8\nsoda_left = soda_brought - soda_drank\nans = soda_left",
            "# Python code, return ans\nbrought_soda = 10\ndrank_soda = 8\nsoda_left = brought_soda - drank_soda\nans = soda_left"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Emily owned 6 songs by her favorite artists. Later on she bought 7 more songs. How many songs did she have totaled?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\nowned_songs = 6\nbought_songs = 7\ntotal_songs = owned_songs + bought_songs\nans = total_songs",
            "# Python code, return ans\nowned_songs = 6\nbought_songs = 7\ntotal_songs = owned_songs + bought_songs\nans = total_songs",
            "# Python code, return ans\nowned_songs = 6\nbought_songs = 7\ntotal_songs = owned_songs + bought_songs\nans = total_songs"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "For Bianca's birthday 5 of her friends gave her 6 dollars. How much money did she get for her birthday?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\nfriends = 5\ndollars_each = 6\ntotal_money = friends * dollars_each\nans = total_money",
            "# Python code, return ans\nfriends = 5\ndollars_each = 6\ntotal_money = friends * dollars_each\nans = total_money",
            "# Python code, return ans\nfriends = 5\ndollars_each = 6\ntotal_money = friends * dollars_each\nans = total_money"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "Cody made 12 dollars mowing lawns over the summer. If he charged 4 bucks for each lawn, how many lawns did he mow?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\ntotal_money = 12\ncharge_per_lawn = 4\nlawns_mowed = total_money / charge_per_lawn\nans = lawns_mowed",
            "# Python code, return ans\ntotal_money = 12\ncharge_per_lawn = 4\nlawns_mowed = total_money / charge_per_lawn\nans = lawns_mowed",
            "# Python code, return ans\ntotal_money = 12\ncharge_per_lawn = 4\nlawns_mowed = total_money / charge_per_lawn\nans = lawns_mowed"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "For Paige's birthday she received 2 dollars from her friends and 3 dollars from her relatives. How much money did she get for her birthday?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ndollars_from_friends = 2\ndollars_from_relatives = 3\ntotal_dollars = dollars_from_friends + dollars_from_relatives\nans = total_dollars",
            "# Python code, return ans\nmoney_from_friends = 2\nmoney_from_relatives = 3\ntotal_money = money_from_friends + money_from_relatives\nans = total_money",
            "# Python code, return ans\ndollars_from_friends = 2\ndollars_from_relatives = 3\ntotal_money = dollars_from_friends + dollars_from_relatives\nans = total_money"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Jerry had to sell boxes of candy. He started out with 10 boxes and then sold 5. How many boxes did he have left?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ninitial_boxes = 10\nsold_boxes = 5\nremaining_boxes = initial_boxes - sold_boxes\nans = remaining_boxes",
            "# Python code, return ans\ninitial_boxes = 10\nboxes_sold = 5\nboxes_left = initial_boxes - boxes_sold\nans = boxes_left",
            "# Python code, return ans\ninitial_boxes = 10\nsold_boxes = 5\nremaining_boxes = initial_boxes - sold_boxes\nans = remaining_boxes"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Janet's dad took the family out to eat for her birthday. There were 10 people total. There were 8 kids and everyone else was an adult. How many adults were there?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ntotal_people = 10\nkids = 8\nadults = total_people - kids\nans = adults",
            "# Python code, return ans\ntotal_people = 10\nkids = 8\nadults = total_people - kids\nans = adults",
            "# Python code, return ans\ntotal_people = 10\nkids = 8\nadults = total_people - kids\nans = adults"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Lana had 72 extra nickels. If she put them into stacks with 8 in each stack, how many stacks could she make?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nextra_nickels = 72\nnickels_per_stack = 8\ntotal_stacks = extra_nickels // nickels_per_stack\nans = total_stacks",
            "# Python code, return ans\nextra_nickels = 72\nnickels_per_stack = 8\ntotal_stacks = extra_nickels // nickels_per_stack\nans = total_stacks",
            "# Python code, return ans\nextra_nickels = 72\nnickels_per_stack = 8\nstacks = extra_nickels // nickels_per_stack\nans = stacks"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Haley bought 11 new shirts for school. If she returned 6 of them, how many did she end up with?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nshirts_bought = 11\nshirts_returned = 6\nshirts_left = shirts_bought - shirts_returned\nans = shirts_left",
            "# Python code, return ans\nshirts_bought = 11\nshirts_returned = 6\nshirts_left = shirts_bought - shirts_returned\nans = shirts_left",
            "# Python code, return ans\nshirt_bought = 11\nshirt_returned = 6\nshirt_left = shirt_bought - shirt_returned\nans = shirt_left"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Cody was helping his mom wash clothes. They washed 4 short sleeve shirts and 5 long sleeve shirts. How many shirts did they wash total?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nshort_sleeve_shirts = 4\nlong_sleeve_shirts = 5\ntotal_shirts = short_sleeve_shirts + long_sleeve_shirts\nans = total_shirts",
            "# Python code, return ans\nshort_sleeve_shirts = 4\nlong_sleeve_shirts = 5\ntotal_shirts = short_sleeve_shirts + long_sleeve_shirts\nans = total_shirts",
            "# Python code, return ans\nshort_sleeve_shirts = 4\nlong_sleeve_shirts = 5\ntotal_shirts = short_sleeve_shirts + long_sleeve_shirts\nans = total_shirts"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Amy's dad was taking everyone out to eat for her birthday. They spent 5 dollars on the adults and 5 dollars on the kids. How much did it cost for everyone?",
        "answer": 10,
        "generated": [
            "To answer this question, we need to know the number of adults and the number of kids. Please provide that information.",
            "# Python code, return ans\nadults_cost = 5\nkids_cost = 5\ntotal_cost = adults_cost + kids_cost\nans = total_cost",
            "To answer this question, we need to know the number of adults and the number of kids. Please provide that information."
        ],
        "results": [
            10.0
        ],
        "result_counter": {
            "10.0": 1
        },
        "prediction": 10.0
    },
    {
        "question": "Billy bought 7 boxes of candy with each box having 3 pieces inside of it. How many pieces of candy did he have totaled?",
        "answer": 21,
        "generated": [
            "# Python code, return ans\nboxes_of_candy = 7\npieces_in_each_box = 3\ntotal_pieces_of_candy = boxes_of_candy * pieces_in_each_box\nans = total_pieces_of_candy",
            "# Python code, return ans\nboxes_of_candy = 7\npieces_per_box = 3\ntotal_pieces_of_candy = boxes_of_candy * pieces_per_box\nans = total_pieces_of_candy",
            "# Python code, return ans\nboxes_of_candy = 7\npieces_per_box = 3\ntotal_pieces_of_candy = boxes_of_candy * pieces_per_box\nans = total_pieces_of_candy"
        ],
        "results": [
            21.0,
            21.0,
            21.0
        ],
        "result_counter": {
            "21.0": 3
        },
        "prediction": 21.0
    },
    {
        "question": "A mailman had to give 6 pieces of junk mail and 5 magazines to a house. How many pieces of mail did he deliver total?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\njunk_mail = 6\nmagazines = 5\ntotal_mail = junk_mail + magazines\nans = total_mail",
            "# Python code, return ans\njunk_mail = 6\nmagazines = 5\ntotal_mail = junk_mail + magazines\nans = total_mail",
            "# Python code, return ans\njunk_mail = 6\nmagazines = 5\ntotal_mail = junk_mail + magazines\nans = total_mail"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "The roller coaster at the state fair costs 6 tickets per ride. If 8 friends were going to ride the roller coaster, how many tickets would they need?",
        "answer": 48,
        "generated": [
            "# Python code, return ans\ntickets_per_ride = 6\nfriends_num = 8\ntotal_tickets_needed = tickets_per_ride * friends_num\nans = total_tickets_needed",
            "# Python code, return ans\ntickets_per_ride = 6\nfriends_num = 8\ntotal_tickets_needed = tickets_per_ride * friends_num\nans = total_tickets_needed",
            "# Python code, return ans\ntickets_per_ride = 6\nfriends_num = 8\ntotal_tickets_needed = tickets_per_ride * friends_num\nans = total_tickets_needed"
        ],
        "results": [
            48.0,
            48.0,
            48.0
        ],
        "result_counter": {
            "48.0": 3
        },
        "prediction": 48.0
    },
    {
        "question": "Paige was helping her mom plant flowers and together they planted 54 seeds. If they put 6 seeds in each flower bed, how many flower beds did they have?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ntotal_seeds = 54\nseeds_per_bed = 6\nflower_beds = total_seeds / seeds_per_bed\nans = flower_beds",
            "# Python code, return ans\ntotal_seeds = 54\nseeds_per_bed = 6\nflower_beds = total_seeds / seeds_per_bed\nans = flower_beds",
            "# Python code, return ans\ntotal_seeds = 54\nseeds_per_bed = 6\nflower_beds = total_seeds / seeds_per_bed\nans = flower_beds"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Olivia was buying DVDs of her favorite TV series. Each season had 8 DVDs. If she bought 5 seasons, how many DVDs did she buy total?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\nDVD_per_season = 8\nseasons_bought = 5\ntotal_DVDs = DVD_per_season * seasons_bought\nans = total_DVDs",
            "# Python code, return ans\nDVDs_per_season = 8\nseasons_bought = 5\ntotal_DVDs = DVDs_per_season * seasons_bought\nans = total_DVDs",
            "# Python code, return ans\nDVDs_per_season = 8\nseasons_bought = 5\ntotal_DVDs = DVDs_per_season * seasons_bought\nans = total_DVDs"
        ],
        "results": [
            40.0,
            40.0,
            40.0
        ],
        "result_counter": {
            "40.0": 3
        },
        "prediction": 40.0
    },
    {
        "question": "Nancy was buying soap for her bathroom. She bought 6 packs with each pack having 5 bars. How many bars of soap did she buy?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\npacks = 6\nbars_per_pack = 5\ntotal_bars = packs * bars_per_pack\nans = total_bars",
            "# Python code, return ans\npacks = 6\nbars_per_pack = 5\ntotal_bars = packs * bars_per_pack\nans = total_bars",
            "# Python code, return ans\npacks = 6\nbars_per_pack = 5\ntotal_bars = packs * bars_per_pack\nans = total_bars"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "A group of 8 friends were playing a video game. In the game, each player started with 8 lives. How many lives did they have totaled?",
        "answer": 64,
        "generated": [
            "# Python code, return ans\nfriend_num = 8\nlives_per_friend = 8\ntotal_lives = friend_num * lives_per_friend\nans = total_lives",
            "# Python code, return ans\nfriends = 8\nlives_per_friend = 8\ntotal_lives = friends * lives_per_friend\nans = total_lives",
            "# Python code, return ans\nfriends = 8\nlives_per_friend = 8\ntotal_lives = friends * lives_per_friend\nans = total_lives"
        ],
        "results": [
            64.0,
            64.0,
            64.0
        ],
        "result_counter": {
            "64.0": 3
        },
        "prediction": 64.0
    },
    {
        "question": "A group of 4 friends were playing video games. Later 3 more friends came over. How many people were there total?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ninitial_friends = 4\nfriends_came_over = 3\ntotal_people = initial_friends + friends_came_over\nans = total_people",
            "# Python code, return ans\ninitial_friends = 4\nadditional_friends = 3\ntotal_friends = initial_friends + additional_friends\nans = total_friends",
            "# Python code, return ans\ninitial_friends = 4\nfriends_came_over = 3\ntotal_people = initial_friends + friends_came_over\nans = total_people"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Oliver won 11 tickets playing games at the arcade. If he spent 5 tickets buying a water gun, how many tickets did he still have?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ntickets_won = 11\ntickets_spent = 5\ntickets_left = tickets_won - tickets_spent\nans = tickets_left",
            "# Python code, return ans\nOliver_tickets = 11\nspent_tickets = 5\nremaining_tickets = Oliver_tickets - spent_tickets\nans = remaining_tickets",
            "# Python code, return ans\ntickets_won = 11\ntickets_spent = 5\ntickets_left = tickets_won - tickets_spent\nans = tickets_left"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "At the fair Dave rode 4 rides the first day he went and 3 rides the second day. How many times did he ride total?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nrides_first_day = 4\nrides_second_day = 3\ntotal_rides = rides_first_day + rides_second_day\nans = total_rides",
            "# Python code, return ans\nrides_first_day = 4\nrides_second_day = 3\ntotal_rides = rides_first_day + rides_second_day\nans = total_rides",
            "# Python code, return ans\nrides_first_day = 4\nrides_second_day = 3\ntotal_rides = rides_first_day + rides_second_day\nans = total_rides"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Janet was practicing for a marathon. She practiced for 9 days, running 8 miles each day. How many miles did Janet run altogether?",
        "answer": 72,
        "generated": [
            "# Python code, return ans\npractice_days = 9\nmiles_per_day = 8\ntotal_miles = practice_days * miles_per_day\nans = total_miles",
            "# Python code, return ans\npractice_days = 9\nmiles_per_day = 8\ntotal_miles = practice_days * miles_per_day\nans = total_miles",
            "# Python code, return ans\npractice_days = 9\nmiles_each_day = 8\ntotal_miles = practice_days * miles_each_day\nans = total_miles"
        ],
        "results": [
            72.0,
            72.0,
            72.0
        ],
        "result_counter": {
            "72.0": 3
        },
        "prediction": 72.0
    },
    {
        "question": "Edward was playing basketball with his friend. Together they scored 13 points. If Edward scored 7 of the points. How many points did his friend score?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nEdward_points = 7\ntotal_points = 13\nfriend_points = total_points - Edward_points\nans = friend_points",
            "# Python code, return ans\nEdward_points = 7\ntotal_points = 13\nfriend_points = total_points - Edward_points\nans = friend_points",
            "# Python code, return ans\nEdward_points = 7\ntotal_points = 13\nfriend_points = total_points - Edward_points\nans = friend_points"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Tiffany was buying hand towels for her house. She bought 9 packs with each pack having 3 towels in it. How many towels did she buy?",
        "answer": 27,
        "generated": [
            "# Python code, return ans\npacks = 9\ntowels_per_pack = 3\ntotal_towels = packs * towels_per_pack\nans = total_towels",
            "# Python code, return ans\npacks_bought = 9\ntowels_per_pack = 3\ntotal_towels = packs_bought * towels_per_pack\nans = total_towels",
            "# Python code, return ans\npacks_bought = 9\ntowels_per_pack = 3\ntotal_towels = packs_bought * towels_per_pack\nans = total_towels"
        ],
        "results": [
            27.0,
            27.0,
            27.0
        ],
        "result_counter": {
            "27.0": 3
        },
        "prediction": 27.0
    },
    {
        "question": "Debby was placing her spare change into stacks. One stack had 4 coins and the other had 8. How many coins did she have total?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nstack_one = 4\nstack_two = 8\ntotal_coins = stack_one + stack_two\nans = total_coins",
            "# Python code, return ans\nstack_one = 4\nstack_two = 8\ntotal_coins = stack_one + stack_two\nans = total_coins",
            "# Python code, return ans\nstack_one = 4\nstack_two = 8\ntotal_coins = stack_one + stack_two\nans = total_coins"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Faye had 12 apps on her phone. To free up some space she deleted 8 of the apps. How many apps did she have left?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ninitial_apps = 12\ndeleted_apps = 8\nremaining_apps = initial_apps - deleted_apps\nans = remaining_apps",
            "# Python code, return ans\napps_initial = 12\napps_deleted = 8\napps_left = apps_initial - apps_deleted\nans = apps_left",
            "# Python code, return ans\ninitial_apps = 12\ndeleted_apps = 8\nremaining_apps = initial_apps - deleted_apps\nans = remaining_apps"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Bianca was practicing for a marathon. To prepare she ran 8 miles the first day and 4 miles the next day. How many miles did Bianca run altogether?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nmiles_first_day = 8\nmiles_second_day = 4\ntotal_miles = miles_first_day + miles_second_day\nans = total_miles",
            "# Python code, return ans\nfirst_day_miles = 8\nsecond_day_miles = 4\ntotal_miles = first_day_miles + second_day_miles\nans = total_miles",
            "# Python code, return ans\nfirst_day_miles = 8\nsecond_day_miles = 4\ntotal_miles = first_day_miles + second_day_miles\nans = total_miles"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Jerry had 8 action figures on a shelf in his room. Later he added 2 more figures to the shelf. How many action figures were on his shelf total?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\ninitial_figures = 8\nadded_figures = 2\ntotal_figures = initial_figures + added_figures\nans = total_figures",
            "# Python code, return ans\ninitial_figures = 8\nadded_figures = 2\ntotal_figures = initial_figures + added_figures\nans = total_figures",
            "# Python code, return ans\ninitial_figures = 8\nadded_figures = 2\ntotal_figures = initial_figures + added_figures\nans = total_figures"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "Sarah bought 8 new shirts for school. If she already had 9 shirts, how many did she own total?",
        "answer": 17,
        "generated": [
            "# Python code, return ans\nnew_shirts = 8\nold_shirts = 9\ntotal_shirts = new_shirts + old_shirts\nans = total_shirts",
            "# Python code, return ans\nnew_shirts = 8\nold_shirts = 9\ntotal_shirts = new_shirts + old_shirts\nans = total_shirts",
            "# Python code, return ans\nnew_shirts = 8\nold_shirts = 9\ntotal_shirts = new_shirts + old_shirts\nans = total_shirts"
        ],
        "results": [
            17.0,
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 3
        },
        "prediction": 17.0
    },
    {
        "question": "Carol was helping her mom plant vegetables in the garden. Together they planted 6 rows of potatoes with 9 seeds in each row. How many potatoes did they plant total?",
        "answer": 54,
        "generated": [
            "# Python code, return ans\nrows_of_potatoes = 6\nseeds_per_row = 9\ntotal_potatoes = rows_of_potatoes * seeds_per_row\nans = total_potatoes",
            "# Python code, return ans\nrows = 6\nseeds_per_row = 9\ntotal_potatoes = rows * seeds_per_row\nans = total_potatoes",
            "# Python code, return ans\nrows = 6\nseeds_per_row = 9\ntotal_potatoes = rows * seeds_per_row\nans = total_potatoes"
        ],
        "results": [
            54.0,
            54.0,
            54.0
        ],
        "result_counter": {
            "54.0": 3
        },
        "prediction": 54.0
    },
    {
        "question": "Ned was buying books about astronomy. He bought 8 books about the planets and 4 about the space program. How many books did he buy total?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nbooks_planets = 8\nbooks_space_program = 4\ntotal_books = books_planets + books_space_program\nans = total_books",
            "# Python code, return ans\nbooks_planets = 8\nbooks_space_program = 4\ntotal_books = books_planets + books_space_program\nans = total_books",
            "# Python code, return ans\nbooks_planets = 8\nbooks_space_program = 4\ntotal_books = books_planets + books_space_program\nans = total_books"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "A delivery driver had to make 3 stops on his route. After he finished those deliveries he made 4 more stops. How many stops did he make total?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ninitial_stops = 3\nadditional_stops = 4\ntotal_stops = initial_stops + additional_stops\nans = total_stops",
            "# Python code, return ans\ninitial_stops = 3\nadditional_stops = 4\ntotal_stops = initial_stops + additional_stops\nans = total_stops",
            "# Python code, return ans\nstops_initial = 3\nstops_additional = 4\ntotal_stops = stops_initial + stops_additional\nans = total_stops"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Emily's mom was buying extra school supplies for Emily and her sister. She bought 13 packs of glue sticks total. If she gave Emily 6 packs, how many did her sister get?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ntotal_glue_sticks = 13\nEmily_glue_sticks = 6\nsister_glue_sticks = total_glue_sticks - Emily_glue_sticks\nans = sister_glue_sticks",
            "# Python code, return ans\ntotal_glue_sticks = 13\nEmily_glue_sticks = 6\nsister_glue_sticks = total_glue_sticks - Emily_glue_sticks\nans = sister_glue_sticks",
            "# Python code, return ans\ntotal_packs = 13\nEmily_packs = 6\nsister_packs = total_packs - Emily_packs\nans = sister_packs"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Roger was reading through his favorite book series. He had 30 books to read total. If he read 6 books each week, how many weeks would it take him to finish the series?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ntotal_books = 30\nbooks_per_week = 6\nweeks_to_finish = total_books / books_per_week\nans = weeks_to_finish",
            "# Python code, return ans\ntotal_books = 30\nbooks_per_week = 6\nweeks_to_finish = total_books / books_per_week\nans = weeks_to_finish",
            "# Python code, return ans\ntotal_books = 30\nbooks_per_week = 6\nweeks_to_finish = total_books / books_per_week\nans = weeks_to_finish"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Rachel had to complete 9 pages of math homework and 2 pages of reading homework. How many pages did she have to complete total?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\nmath_homework = 9\nreading_homework = 2\ntotal_homework = math_homework + reading_homework\nans = total_homework",
            "# Python code, return ans\nmath_homework = 9\nreading_homework = 2\ntotal_homework = math_homework + reading_homework\nans = total_homework",
            "# Python code, return ans\nmath_homework = 9\nreading_homework = 2\ntotal_homework = math_homework + reading_homework\nans = total_homework"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "An industrial machine can make 6 shirts every minute. How many shirts would it have made in 6 minutes?",
        "answer": 36,
        "generated": [
            "# Python code, return ans\nshirts_per_minute = 6\nminutes = 6\ntotal_shirts = shirts_per_minute * minutes\nans = total_shirts",
            "# Python code, return ans\nshirts_per_minute = 6\nminutes = 6\ntotal_shirts = shirts_per_minute * minutes\nans = total_shirts",
            "# Python code, return ans\nshirts_per_minute = 6\nminutes = 6\ntotal_shirts = shirts_per_minute * minutes\nans = total_shirts"
        ],
        "results": [
            36.0,
            36.0,
            36.0
        ],
        "result_counter": {
            "36.0": 3
        },
        "prediction": 36.0
    },
    {
        "question": "Haley collected 9 cans for recycling. If she put 7 cans in one bag, how many cans did she have left?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ncans_collected = 9\ncans_per_bag = 7\ncans_left = cans_collected % cans_per_bag\nans = cans_left",
            "# Python code, return ans\ncans_collected = 9\ncans_per_bag = 7\ncans_left = cans_collected % cans_per_bag\nans = cans_left",
            "# Python code, return ans\ncans_collected = 9\ncans_per_bag = 7\ncans_left = cans_collected % cans_per_bag\nans = cans_left"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Amy was buying different soups. She bought 6 cans of chicken soup and 3 cans of tomato soup. How many soups did she buy?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nchicken_soup = 6\ntomato_soup = 3\ntotal_soup = chicken_soup + tomato_soup\nans = total_soup",
            "# Python code, return ans\nchicken_soup = 6\ntomato_soup = 3\ntotal_soup = chicken_soup + tomato_soup\nans = total_soup",
            "# Python code, return ans\nchicken_soup = 6\ntomato_soup = 3\ntotal_soup = chicken_soup + tomato_soup\nans = total_soup"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "A vase can hold 5 flowers. If you had 25 flowers, how many vases would you need?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nflowers = 25\nflowers_per_vase = 5\nvases_needed = flowers // flowers_per_vase\nans = vases_needed",
            "# Python code, return ans\nflower_num = 25\nvase_capacity = 5\nvase_needed = flower_num // vase_capacity\nans = vase_needed",
            "# Python code, return ans\nflowers = 25\nflowers_per_vase = 5\nvases_needed = flowers / flowers_per_vase\nans = vases_needed"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Adam was reading through his favorite book series. The first week he read 5 different books. The next week he read 8 books. How many books did he read total?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\nbooks_first_week = 5\nbooks_second_week = 8\ntotal_books = books_first_week + books_second_week\nans = total_books",
            "# Python code, return ans\nfirst_week_books = 5\nsecond_week_books = 8\ntotal_books_read = first_week_books + second_week_books\nans = total_books_read",
            "# Python code, return ans\nbooks_first_week = 5\nbooks_second_week = 8\ntotal_books = books_first_week + books_second_week\nans = total_books"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "Paige's dresser drawers could hold 2 pieces of clothing each. If she had 4 drawers, how many pieces of clothing could it hold?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ndrawer_capacity = 2\ndrawer_num = 4\ntotal_capacity = drawer_capacity * drawer_num\nans = total_capacity",
            "# Python code, return ans\ndrawer_capacity = 2\ndrawer_num = 4\ntotal_capacity = drawer_capacity * drawer_num\nans = total_capacity",
            "# Python code, return ans\ndrawer_capacity = 2\nnumber_of_drawers = 4\ntotal_capacity = drawer_capacity * number_of_drawers\nans = total_capacity"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "An architect was building a hotel downtown. He built it 3 stories tall with 8 rooms on each story. How many rooms does the hotel have totaled?",
        "answer": 24,
        "generated": [
            "# Python code, return ans\nstories = 3\nrooms_per_story = 8\ntotal_rooms = stories * rooms_per_story\nans = total_rooms",
            "# Python code, return ans\nstories = 3\nrooms_per_story = 8\ntotal_rooms = stories * rooms_per_story\nans = total_rooms",
            "# Python code, return ans\nstories = 3\nrooms_per_story = 8\ntotal_rooms = stories * rooms_per_story\nans = total_rooms"
        ],
        "results": [
            24.0,
            24.0,
            24.0
        ],
        "result_counter": {
            "24.0": 3
        },
        "prediction": 24.0
    },
    {
        "question": "Isabel received 14 dollars for her birthday. Later she found some toys that cost 2 dollars each. How many of the toys could she buy?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nIsabel_money = 14\ntoy_cost = 2\ntoys_to_buy = Isabel_money // toy_cost\nans = toys_to_buy",
            "# Python code, return ans\nIsabel_money = 14\ntoy_cost = 2\nnum_of_toys = Isabel_money // toy_cost\nans = num_of_toys",
            "# Python code, return ans\nIsabel_money = 14\ntoy_cost = 2\ntoys_to_buy = Isabel_money // toy_cost\nans = toys_to_buy"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "There are 30 students in a class. If the teacher put them into groups with 5 students in each group, how many groups would she have?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nstudents_total = 30\nstudents_per_group = 5\ngroups = students_total / students_per_group\nans = groups",
            "# Python code, return ans\nstudents = 30\nstudents_per_group = 5\ngroups = students // students_per_group\nans = groups",
            "# Python code, return ans\ntotal_students = 30\nstudents_per_group = 5\ntotal_groups = total_students / students_per_group\nans = total_groups"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Haley's mom was buying extra school supplies for Haley and her sister. If she bought 2 reams of paper for Haley and 3 reams for her sister, how many did she buy total?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nHaley_paper = 2\nsister_paper = 3\ntotal_paper = Haley_paper + sister_paper\nans = total_paper",
            "# Python code, return ans\npaper_Haley = 2\npaper_sister = 3\ntotal_paper = paper_Haley + paper_sister\nans = total_paper",
            "# Python code, return ans\npaper_Haley = 2\npaper_sister = 3\ntotal_paper = paper_Haley + paper_sister\nans = total_paper"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "There are 40 students in the school band. If the band instructor put the students into rows with 5 students in each row, how many rows could he make?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nstudents = 40\nstudents_per_row = 5\nrows = students // students_per_row\nans = rows",
            "# Python code, return ans\nstudents = 40\nstudents_per_row = 5\nrows = students // students_per_row\nans = rows",
            "# Python code, return ans\nstudents = 40\nstudents_per_row = 5\nrows = students / students_per_row\nans = rows"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Roger mowed his lawn 15 times total during the spring and summer. If he mowed it 9 times in the summer. How many times did he mow in the spring?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ntotal_mowed = 15\nsummer_mowed = 9\nspring_mowed = total_mowed - summer_mowed\nans = spring_mowed",
            "# Python code, return ans\ntotal_mowed = 15\nsummer_mowed = 9\nspring_mowed = total_mowed - summer_mowed\nans = spring_mowed",
            "# Python code, return ans\nmowed_total = 15\nmowed_summer = 9\nmowed_spring = mowed_total - mowed_summer\nans = mowed_spring"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Robin bought 11 sodas for her and her friends. If they only drank 3 of them, how many extras did she have?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nsodas_bought = 11\nsodas_drank = 3\nextra_sodas = sodas_bought - sodas_drank\nans = extra_sodas",
            "# Python code, return ans\nsodas_bought = 11\nsodas_drank = 3\nextra_sodas = sodas_bought - sodas_drank\nans = extra_sodas",
            "# Python code, return ans\nsodas_bought = 11\nsodas_drank = 3\nextra_sodas = sodas_bought - sodas_drank\nans = extra_sodas"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "An architect was building his two story house. On the first floor the house had 6 bedrooms and the second floor had 4 bedrooms. How many bedrooms does the house have totaled?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\nfirst_floor_bedrooms = 6\nsecond_floor_bedrooms = 4\ntotal_bedrooms = first_floor_bedrooms + second_floor_bedrooms\nans = total_bedrooms",
            "# Python code, return ans\nfirst_floor_bedrooms = 6\nsecond_floor_bedrooms = 4\ntotal_bedrooms = first_floor_bedrooms + second_floor_bedrooms\nans = total_bedrooms",
            "# Python code, return ans\nfirst_floor_bedrooms = 6\nsecond_floor_bedrooms = 4\ntotal_bedrooms = first_floor_bedrooms + second_floor_bedrooms\nans = total_bedrooms"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "Carol was sending out birthday invitations to her friends. If each package of invitations she bought had 9 invitations in it and she bought 5 packs, how many friends can she invite?",
        "answer": 45,
        "generated": [
            "# Python code, return ans\ninvitations_per_pack = 9\npacks_bought = 5\ntotal_invitations = invitations_per_pack * packs_bought\nans = total_invitations",
            "# Python code, return ans\ninvitations_per_pack = 9\npacks_bought = 5\ntotal_invitations = invitations_per_pack * packs_bought\nans = total_invitations",
            "# Python code, return ans\ninvitations_per_pack = 9\npacks_bought = 5\ntotal_invitations = invitations_per_pack * packs_bought\nans = total_invitations"
        ],
        "results": [
            45.0,
            45.0,
            45.0
        ],
        "result_counter": {
            "45.0": 3
        },
        "prediction": 45.0
    },
    {
        "question": "A designer was buying furniture for her new house. She bought 3 chairs for the living room and 6 for her kitchen. How many chairs did she buy total?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nliving_room_chairs = 3\nkitchen_chairs = 6\ntotal_chairs = living_room_chairs + kitchen_chairs\nans = total_chairs",
            "# Python code, return ans\nliving_room_chairs = 3\nkitchen_chairs = 6\ntotal_chairs = living_room_chairs + kitchen_chairs\nans = total_chairs",
            "# Python code, return ans\nliving_room_chairs = 3\nkitchen_chairs = 6\ntotal_chairs = living_room_chairs + kitchen_chairs\nans = total_chairs"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "A pet store had 4 snakes. They had the snakes in cages with 2 snakes in each cage. How many cages did the pet store have?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\nsnakes = 4\nsnakes_per_cage = 2\ncages = snakes / snakes_per_cage\nans = cages",
            "# Python code, return ans\nsnakes = 4\nsnakes_per_cage = 2\ncages = snakes / snakes_per_cage\nans = cages",
            "# Python code, return ans\nsnakes = 4\nsnakes_per_cage = 2\ncages = snakes / snakes_per_cage\nans = cages"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "A contractor was buying wall outlets for a new house he was building. Each room needed 6 outlets. If the house has 7 rooms, how many outlets does he need total?",
        "answer": 42,
        "generated": [
            "# Python code, return ans\noutlets_per_room = 6\nrooms = 7\ntotal_outlets = outlets_per_room * rooms\nans = total_outlets",
            "# Python code, return ans\noutlets_per_room = 6\nrooms = 7\ntotal_outlets = outlets_per_room * rooms\nans = total_outlets",
            "# Python code, return ans\noutlets_per_room = 6\nrooms = 7\ntotal_outlets = outlets_per_room * rooms\nans = total_outlets"
        ],
        "results": [
            42.0,
            42.0,
            42.0
        ],
        "result_counter": {
            "42.0": 3
        },
        "prediction": 42.0
    },
    {
        "question": "John threw a Halloween party where 13 people showed up. If only 6 dressed up, how many people didn't wear costumes?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ntotal_people = 13\ndressed_up = 6\nnot_dressed_up = total_people - dressed_up\nans = not_dressed_up",
            "# Python code, return ans\ntotal_people = 13\ndressed_up = 6\nnot_dressed_up = total_people - dressed_up\nans = not_dressed_up",
            "# Python code, return ans\ntotal_people = 13\ndressed_up = 6\nnot_dressed_up = total_people - dressed_up\nans = not_dressed_up"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Oliver was yard sale shopping. He ended up buying 11 video games, but only 6 of them worked. How many bad games did he buy?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ntotal_games = 11\nworking_games = 6\nbad_games = total_games - working_games\nans = bad_games",
            "# Python code, return ans\ntotal_games = 11\nworking_games = 6\nbad_games = total_games - working_games\nans = bad_games",
            "# Python code, return ans\ntotal_games = 11\nworking_games = 6\nbad_games = total_games - working_games\nans = bad_games"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "A pet store took ten birds out of a cage and had nine still left inside. How many birds were in the cage to start with? ",
        "answer": 19,
        "generated": [
            "# Python code, return ans\nbirds_removed = 10\nbirds_left = 9\ntotal_birds = birds_removed + birds_left\nans = total_birds",
            "# Python code, return ans\nbirds_taken_out = 10\nbirds_left = 9\ninitial_birds = birds_taken_out + birds_left\nans = initial_birds",
            "# Python code, return ans\nbirds_taken_out = 10\nbirds_left = 9\ntotal_birds = birds_taken_out + birds_left\nans = total_birds"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "Rachel picked three apples from her tree. Now the tree has four apples still on it. How many apples did the tree have to begin with? ",
        "answer": 7,
        "generated": [
            "# Python code, return ans\npicked_apples = 3\nremaining_apples = 4\ninitial_apples = picked_apples + remaining_apples\nans = initial_apples",
            "# Python code, return ans\npicked_apples = 3\nremaining_apples = 4\ninitial_apples = picked_apples + remaining_apples\nans = initial_apples",
            "# Python code, return ans\npicked_apples = 3\nremaining_apples = 4\ninitial_apples = picked_apples + remaining_apples\nans = initial_apples"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Paige raised fifteen goldfish in the pond but stray cats loved eating them. Now she has four left. How many goldfish disappeared?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\ninitial_goldfish = 15\nremaining_goldfish = 4\ndisappeared_goldfish = initial_goldfish - remaining_goldfish\nans = disappeared_goldfish",
            "# Python code, return ans\ninitial_goldfish = 15\nremaining_goldfish = 4\ndisappeared_goldfish = initial_goldfish - remaining_goldfish\nans = disappeared_goldfish",
            "# Python code, return ans\ninitial_goldfish = 15\nremaining_goldfish = 4\ndisappeared_goldfish = initial_goldfish - remaining_goldfish\nans = disappeared_goldfish"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "Cody cooked fourteen dumplings. He ate seven. How many dumplings does Cody have now?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ncooked_dumplings = 14\neaten_dumplings = 7\nremaining_dumplings = cooked_dumplings - eaten_dumplings\nans = remaining_dumplings",
            "# Python code, return ans\ncooked_dumplings = 14\neaten_dumplings = 7\nremaining_dumplings = cooked_dumplings - eaten_dumplings\nans = remaining_dumplings",
            "# Python code, return ans\ncooked_dumplings = 14\neaten_dumplings = 7\nremaining_dumplings = cooked_dumplings - eaten_dumplings\nans = remaining_dumplings"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Sarah could send ten text messages a day. If she sent eight, how many text messages does she have left she can send? ",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ntotal_text_messages = 10\nsent_text_messages = 8\nremaining_text_messages = total_text_messages - sent_text_messages\nans = remaining_text_messages",
            "# Python code, return ans\ntotal_text_messages = 10\nsent_text_messages = 8\nremaining_text_messages = total_text_messages - sent_text_messages\nans = remaining_text_messages",
            "# Python code, return ans\ntotal_messages_allowed = 10\nmessages_sent = 8\nmessages_left = total_messages_allowed - messages_sent\nans = messages_left"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Debby had twelve pieces of candy. After eating some, she had three pieces. How many pieces did Debby eat? ",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ntotal_candy = 12\nremaining_candy = 3\ncandy_eaten = total_candy - remaining_candy\nans = candy_eaten",
            "# Python code, return ans\ntotal_candy = 12\nremaining_candy = 3\ncandy_eaten = total_candy - remaining_candy\nans = candy_eaten",
            "# Python code, return ans\ninitial_candy = 12\nremaining_candy = 3\ncandy_eaten = initial_candy - remaining_candy\nans = candy_eaten"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Frank had $16. After buying some new toys he had $8 left. How much did he spend on toys? ",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ninitial_money = 16\nmoney_left = 8\nmoney_spent = initial_money - money_left\nans = money_spent",
            "# Python code, return ans\ninitial_money = 16\nremaining_money = 8\nmoney_spent = initial_money - remaining_money\nans = money_spent",
            "# Python code, return ans\ninitial_money = 16\nremaining_money = 8\nmoney_spent_on_toys = initial_money - remaining_money\nans = money_spent_on_toys"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Robin's hair was fifteen inches long. If she cut off five inches, how long is her hair now? ",
        "answer": 10,
        "generated": [
            "# Python code, return ans\ninitial_length = 15\ncut_length = 5\ncurrent_length = initial_length - cut_length\nans = current_length",
            "# Python code, return ans\ninitial_length = 15\ncut_length = 5\ncurrent_length = initial_length - cut_length\nans = current_length",
            "# Python code, return ans\ninitial_hair_length = 15\nhair_cut = 5\ncurrent_hair_length = initial_hair_length - hair_cut\nans = current_hair_length"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "At the fair Megan had $17 to spend. She spent $6 on rides. How much money does she have left? ",
        "answer": 11,
        "generated": [
            "# Python code, return ans\nMegan_money = 17\nspent_on_rides = 6\nmoney_left = Megan_money - spent_on_rides\nans = money_left",
            "# Python code, return ans\nMegan_money = 17\nspent_on_rides = 6\nmoney_left = Megan_money - spent_on_rides\nans = money_left",
            "# Python code, return ans\nMegan_total_money = 17\nMegan_spent_on_rides = 6\nMegan_money_left = Megan_total_money - Megan_spent_on_rides\nans = Megan_money_left"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "There were nine kinds of sandwiches on the menu. Unfortunately, five of them had been sold out, how many kinds of sandwiches do they actually provide now?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ntotal_sandwiches = 9\nsold_out_sandwiches = 5\navailable_sandwiches = total_sandwiches - sold_out_sandwiches\nans = available_sandwiches",
            "# Python code, return ans\ntotal_sandwiches = 9\nsold_out_sandwiches = 5\navailable_sandwiches = total_sandwiches - sold_out_sandwiches\nans = available_sandwiches",
            "# Python code, return ans\ntotal_sandwiches = 9\nsold_out_sandwiches = 5\navailable_sandwiches = total_sandwiches - sold_out_sandwiches\nans = available_sandwiches"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "A chef had sixteen apples. After making a pie he had seven left. How many apples did he use in the pie? ",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ntotal_apples = 16\napples_left = 7\napples_used = total_apples - apples_left\nans = apples_used",
            "# Python code, return ans\ntotal_apples = 16\napples_left = 7\napples_used = total_apples - apples_left\nans = apples_used",
            "# Python code, return ans\ntotal_apples = 16\napples_left = 7\napples_used = total_apples - apples_left\nans = apples_used"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "The book fair sold four posters. Now they have two posters left. How many posters did they have to begin with? ",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nsold_posters = 4\nremaining_posters = 2\ninitial_posters = sold_posters + remaining_posters\nans = initial_posters",
            "# Python code, return ans\nsold_posters = 4\nremaining_posters = 2\ninitial_posters = sold_posters + remaining_posters\nans = initial_posters",
            "# Python code, return ans\nsold_posters = 4\nremaining_posters = 2\ninitial_posters = sold_posters + remaining_posters\nans = initial_posters"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Ned ordered some pizzas for a party. During the party four were eaten. Now he has seven left. How many pizzas did Ned order for the party? ",
        "answer": 11,
        "generated": [
            "# Python code, return ans\npizza_eaten = 4\npizza_left = 7\ntotal_pizza_ordered = pizza_eaten + pizza_left\nans = total_pizza_ordered",
            "# Python code, return ans\npizza_left = 7\npizza_eaten = 4\ntotal_pizza_ordered = pizza_left + pizza_eaten\nans = total_pizza_ordered",
            "# Python code, return ans\npizzas_left = 7\npizzas_eaten = 4\ntotal_pizzas_ordered = pizzas_left + pizzas_eaten\nans = total_pizzas_ordered"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "A baker sold twelve cakes. Now he has three cakes. How many cakes did the baker have to start with? ",
        "answer": 15,
        "generated": [
            "# Python code, return ans\ncakes_sold = 12\ncakes_remaining = 3\ninitial_cakes = cakes_sold + cakes_remaining\nans = initial_cakes",
            "# Python code, return ans\ncakes_sold = 12\ncakes_left = 3\ninitial_cakes = cakes_sold + cakes_left\nans = initial_cakes",
            "# Python code, return ans\ncakes_sold = 12\ncakes_left = 3\ninitial_cakes = cakes_sold + cakes_left\nans = initial_cakes"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "Jerry had $18. He spent $6 on new video games. How much money does he have now? ",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nJerry_money = 18\nspent_on_games = 6\nmoney_left = Jerry_money - spent_on_games\nans = money_left",
            "# Python code, return ans\nJerry_money = 18\nspent_on_games = 6\nJerry_money_left = Jerry_money - spent_on_games\nans = Jerry_money_left",
            "# Python code, return ans\ninitial_money = 18\nspent_money = 6\nremaining_money = initial_money - spent_money\nans = remaining_money"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Dave had sixteen apps on his phone. After deleting some, he had eight left. How many apps did he delete? ",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ninitial_apps = 16\nremaining_apps = 8\ndeleted_apps = initial_apps - remaining_apps\nans = deleted_apps",
            "# Python code, return ans\ninitial_apps = 16\nremaining_apps = 8\ndeleted_apps = initial_apps - remaining_apps\nans = deleted_apps",
            "# Python code, return ans\ninitial_apps = 16\nremaining_apps = 8\ndeleted_apps = initial_apps - remaining_apps\nans = deleted_apps"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Isabel had sixteen bottles of water. After a week she had seven left. How many did she drink? ",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ninitial_bottles = 16\nremaining_bottles = 7\ndrank_bottles = initial_bottles - remaining_bottles\nans = drank_bottles",
            "# Python code, return ans\ninitial_bottles = 16\nremaining_bottles = 7\nbottles_drunk = initial_bottles - remaining_bottles\nans = bottles_drunk",
            "# Python code, return ans\ninitial_bottles = 16\nremaining_bottles = 7\ndrank_bottles = initial_bottles - remaining_bottles\nans = drank_bottles"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "A waiter had eighteen customers. If six left, how many customers would the waiter still have? ",
        "answer": 12,
        "generated": [
            "# Python code, return ans\ntotal_customers = 18\ncustomers_left = 6\nremaining_customers = total_customers - customers_left\nans = remaining_customers",
            "# Python code, return ans\ntotal_customers = 18\ncustomers_left = 6\nremaining_customers = total_customers - customers_left\nans = remaining_customers",
            "# Python code, return ans\ntotal_customers = 18\ncustomers_left = 6\nremaining_customers = total_customers - customers_left\nans = remaining_customers"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Megan had seventeen bottles of water. If she drank three of them, how many bottles would Megan have left? ",
        "answer": 14,
        "generated": [
            "# Python code, return ans\ninitial_bottles = 17\ndrank_bottles = 3\nremaining_bottles = initial_bottles - drank_bottles\nans = remaining_bottles",
            "# Python code, return ans\ninitial_bottles = 17\ndrank_bottles = 3\nremaining_bottles = initial_bottles - drank_bottles\nans = remaining_bottles",
            "# Python code, return ans\nMegan_total_bottles = 17\nMegan_drank_bottles = 3\nMegan_left_bottles = Megan_total_bottles - Megan_drank_bottles\nans = Megan_left_bottles"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "Jenny was told to clean up her room in fourteen days or she could not go to her best friend's birthday party. It is three days left but Jenny has cleaned up her room. How many days did she spend?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\ntotal_days = 14\ndays_left = 3\ndays_spent = total_days - days_left\nans = days_spent",
            "# Python code, return ans\ntotal_days = 14\ndays_left = 3\ndays_spent = total_days - days_left\nans = days_spent",
            "# Python code, return ans\ntotal_days = 14\ndays_left = 3\ndays_spent = total_days - days_left\nans = days_spent"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "Maria took sixteen fish out of her fish tank. Now there are three fish in the tank. How many fish were in the tank to start with? ",
        "answer": 19,
        "generated": [
            "# Python code, return ans\nfish_taken_out = 16\nfish_remaining = 3\ninitial_fish = fish_taken_out + fish_remaining\nans = initial_fish",
            "# Python code, return ans\nfish_taken_out = 16\nfish_remaining = 3\nfish_initial = fish_taken_out + fish_remaining\nans = fish_initial",
            "# Python code, return ans\nfish_removed = 16\nfish_remaining = 3\ninitial_fish = fish_removed + fish_remaining\nans = initial_fish"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "A waiter had fourteen customers. After some left he still had three customers. How many customers left? ",
        "answer": 11,
        "generated": [
            "# Python code, return ans\ntotal_customers = 14\nremaining_customers = 3\ncustomers_left = total_customers - remaining_customers\nans = customers_left",
            "# Python code, return ans\ntotal_customers = 14\nremaining_customers = 3\ncustomers_left = total_customers - remaining_customers\nans = customers_left",
            "# Python code, return ans\ntotal_customers = 14\nremaining_customers = 3\ncustomers_left = total_customers - remaining_customers\nans = customers_left"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "Paige had eleven pencils. After using some she had four left. How many did she use? ",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ninitial_pencils = 11\nleft_pencils = 4\nused_pencils = initial_pencils - left_pencils\nans = used_pencils",
            "# Python code, return ans\ninitial_pencils = 11\nremaining_pencils = 4\nused_pencils = initial_pencils - remaining_pencils\nans = used_pencils",
            "# Python code, return ans\ninitial_pencils = 11\nremaining_pencils = 4\nused_pencils = initial_pencils - remaining_pencils\nans = used_pencils"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Cody had a bag of marbles. Later he gave five to his brother. Now Cody has seven marbles. How many marbles did Cody have to start with? ",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nmarbles_left = 7\nmarbles_given = 5\ninitial_marbles = marbles_left + marbles_given\nans = initial_marbles",
            "# Python code, return ans\nmarbles_left = 7\nmarbles_given = 5\ninitial_marbles = marbles_left + marbles_given\nans = initial_marbles",
            "# Python code, return ans\nmarbles_left = 7\nmarbles_given = 5\ninitial_marbles = marbles_left + marbles_given\nans = initial_marbles"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "A museum had thirteen paintings. If they got rid of eight of them, how many pictures would they have left? ",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ninitial_paintings = 13\npaintings_removed = 8\nremaining_paintings = initial_paintings - paintings_removed\nans = remaining_paintings",
            "# Python code, return ans\ntotal_paintings = 13\nremoved_paintings = 8\nremaining_paintings = total_paintings - removed_paintings\nans = remaining_paintings",
            "# Python code, return ans\ntotal_paintings = 13\npaintings_removed = 8\nremaining_paintings = total_paintings - paintings_removed\nans = remaining_paintings"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "A chef used fifteen apples to make a pie. Now he has four apples left. How many apples did he have before he made the pie? ",
        "answer": 19,
        "generated": [
            "# Python code, return ans\napples_used = 15\napples_left = 4\ntotal_apples = apples_used + apples_left\nans = total_apples",
            "# Python code, return ans\napples_used = 15\napples_left = 4\ntotal_apples = apples_used + apples_left\nans = total_apples",
            "# Python code, return ans\nused_apples = 15\nremaining_apples = 4\ntotal_apples = used_apples + remaining_apples\nans = total_apples"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "Amy's hair was eleven inches long. After a haircut it was seven inches long. How much did she cut off? ",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nhair_before_cut = 11\nhair_after_cut = 7\nhair_cut_off = hair_before_cut - hair_after_cut\nans = hair_cut_off",
            "# Python code, return ans\nbefore_cut = 11\nafter_cut = 7\ncut_off = before_cut - after_cut\nans = cut_off",
            "# Python code, return ans\ninitial_hair_length = 11\nfinal_hair_length = 7\nhair_cut_length = initial_hair_length - final_hair_length\nans = hair_cut_length"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Megan gave seven acorns to her sister. Now Megan has nine acorns left. How many acorns did Megan have in the beginning?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\nacorns_given = 7\nacorns_left = 9\ninitial_acorns = acorns_given + acorns_left\nans = initial_acorns",
            "# Python code, return ans\nacorns_given = 7\nacorns_left = 9\ninitial_acorns = acorns_given + acorns_left\nans = initial_acorns",
            "# Python code, return ans\nacorns_given = 7\nacorns_left = 9\ninitial_acorns = acorns_given + acorns_left\nans = initial_acorns"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "A chef had fourteen apples. If he used eight of them to make a pie, how many apples would he still have? ",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ntotal_apples = 14\nused_apples = 8\nremaining_apples = total_apples - used_apples\nans = remaining_apples",
            "# Python code, return ans\ntotal_apples = 14\nused_apples = 8\nremaining_apples = total_apples - used_apples\nans = remaining_apples",
            "# Python code, return ans\ntotal_apples = 14\napples_used = 8\napples_left = total_apples - apples_used\nans = apples_left"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "For Halloween Will got fifteen pounds of candy. After giving some to Haley, he had nine pounds left. How many pounds did he give to Haley? ",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ncandy_initial = 15\ncandy_left = 9\ncandy_given = candy_initial - candy_left\nans = candy_given",
            "# Python code, return ans\ninitial_candy = 15\nremaining_candy = 9\ncandy_given_to_Haley = initial_candy - remaining_candy\nans = candy_given_to_Haley",
            "# Python code, return ans\ninitial_candy = 15\nremaining_candy = 9\ncandy_given_to_Haley = initial_candy - remaining_candy\nans = candy_given_to_Haley"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Amy had twelve pencils. If she used four of them, how many would she have left? ",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nAmy_pencils = 12\nused_pencils = 4\nleft_pencils = Amy_pencils - used_pencils\nans = left_pencils",
            "# Python code, return ans\nAmy_pencils = 12\nused_pencils = 4\npencils_left = Amy_pencils - used_pencils\nans = pencils_left",
            "# Python code, return ans\nAmy_pencils = 12\nused_pencils = 4\nremaining_pencils = Amy_pencils - used_pencils\nans = remaining_pencils"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Victor had nineteen apps on his phone. He deleted eight of them. How many apps does Victor have left? ",
        "answer": 11,
        "generated": [
            "# Python code, return ans\napps_initial = 19\napps_deleted = 8\napps_left = apps_initial - apps_deleted\nans = apps_left",
            "# Python code, return ans\ninitial_apps = 19\ndeleted_apps = 8\nremaining_apps = initial_apps - deleted_apps\nans = remaining_apps",
            "# Python code, return ans\ninitial_apps = 19\ndeleted_apps = 8\nremaining_apps = initial_apps - deleted_apps\nans = remaining_apps"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "Edward spent $13. Now he has $6. How much did Edward have before he spent his money? ",
        "answer": 19,
        "generated": [
            "# Python code, return ans\nspent_money = 13\nremaining_money = 6\ninitial_money = spent_money + remaining_money\nans = initial_money",
            "# Python code, return ans\nspent_money = 13\nremaining_money = 6\ninitial_money = spent_money + remaining_money\nans = initial_money",
            "# Python code, return ans\nspent_money = 13\nremaining_money = 6\ninitial_money = spent_money + remaining_money\nans = initial_money"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "A package had eighteen cookies in it. After eating some there were nine left. How many were eaten? ",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ntotal_cookies = 18\ncookies_left = 9\ncookies_eaten = total_cookies - cookies_left\nans = cookies_eaten",
            "# Python code, return ans\ntotal_cookies = 18\ncookies_left = 9\ncookies_eaten = total_cookies - cookies_left\nans = cookies_eaten",
            "# Python code, return ans\ntotal_cookies = 18\ncookies_left = 9\ncookies_eaten = total_cookies - cookies_left\nans = cookies_eaten"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "A tape was thirteen meters long. Haley used some to seal cartons. Now the tape is six meters long. How much tape did she use?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ninitial_tape_length = 13\nfinal_tape_length = 6\ntape_used = initial_tape_length - final_tape_length\nans = tape_used",
            "# Python code, return ans\ntape_initial_length = 13\ntape_remaining_length = 6\ntape_used = tape_initial_length - tape_remaining_length\nans = tape_used",
            "# Python code, return ans\ninitial_tape_length = 13\nfinal_tape_length = 6\ntape_used = initial_tape_length - final_tape_length\nans = tape_used"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "A furniture store had fifteen chairs. After selling some, there was three left. How many chairs did they sell? ",
        "answer": 12,
        "generated": [
            "# Python code, return ans\ntotal_chairs = 15\nchairs_left = 3\nchairs_sold = total_chairs - chairs_left\nans = chairs_sold",
            "# Python code, return ans\ntotal_chairs = 15\nchairs_left = 3\nchairs_sold = total_chairs - chairs_left\nans = chairs_sold",
            "# Python code, return ans\ntotal_chairs = 15\nchairs_left = 3\nchairs_sold = total_chairs - chairs_left\nans = chairs_sold"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Rachel took two dollars from her piggy bank. Now she has three dollars in her piggy bank. How much money was originally in there? ",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nmoney_left = 3\nmoney_taken = 2\noriginal_money = money_left + money_taken\nans = original_money",
            "# Python code, return ans\nmoney_left = 3\nmoney_taken = 2\noriginal_money = money_left + money_taken\nans = original_money",
            "# Python code, return ans\ncurrent_money = 3\nmoney_taken = 2\noriginal_money = current_money + money_taken\nans = original_money"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Ned gave away thirteen of his video games to a friend. Now Ned has six games. How many games did Ned have before he gave the games away? ",
        "answer": 19,
        "generated": [
            "# Python code, return ans\ngames_left = 6\ngames_given_away = 13\ninitial_games = games_left + games_given_away\nans = initial_games",
            "# Python code, return ans\ngames_left = 6\ngames_given_away = 13\ninitial_games = games_left + games_given_away\nans = initial_games",
            "# Python code, return ans\ngames_left = 6\ngames_given_away = 13\ngames_before_giving_away = games_left + games_given_away\nans = games_before_giving_away"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "For a party Cody bought eleven cupcakes. After the party he had two left. How many were eaten at the party? ",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ntotal_cupcakes = 11\ncupcakes_left = 2\ncupcakes_eaten = total_cupcakes - cupcakes_left\nans = cupcakes_eaten",
            "# Python code, return ans\ntotal_cupcakes = 11\ncupcakes_left = 2\ncupcakes_eaten = total_cupcakes - cupcakes_left\nans = cupcakes_eaten",
            "# Python code, return ans\ntotal_cupcakes = 11\nleft_cupcakes = 2\neaten_cupcakes = total_cupcakes - left_cupcakes\nans = eaten_cupcakes"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Jerry had eleven cherries. He ate eight of them. How many cherries does Jerry have left? ",
        "answer": 3,
        "generated": [
            "# Python code, return ans\ntotal_cherries = 11\ncherries_eaten = 8\ncherries_left = total_cherries - cherries_eaten\nans = cherries_left",
            "# Python code, return ans\ntotal_cherries = 11\ncherries_eaten = 8\ncherries_left = total_cherries - cherries_eaten\nans = cherries_left",
            "# Python code, return ans\ncherries_total = 11\ncherries_eaten = 8\ncherries_left = cherries_total - cherries_eaten\nans = cherries_left"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "At the arcade Dave had won thirteen tickets. If he used six to buy some toys, how many tickets did Dave have left? ",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ntickets_won = 13\ntickets_used = 6\ntickets_left = tickets_won - tickets_used\nans = tickets_left",
            "# Python code, return ans\nDave_tickets = 13\nDave_used_tickets = 6\nDave_remaining_tickets = Dave_tickets - Dave_used_tickets\nans = Dave_remaining_tickets",
            "# Python code, return ans\ntickets_won = 13\ntickets_used = 6\ntickets_left = tickets_won - tickets_used\nans = tickets_left"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Sally memorized eight poems. After some time she could only recite three of them. How many poems did she forget? ",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nmemorized_poems = 8\nrecited_poems = 3\nforgotten_poems = memorized_poems - recited_poems\nans = forgotten_poems",
            "# Python code, return ans\nmemorized_poems = 8\nrecited_poems = 3\nforgotten_poems = memorized_poems - recited_poems\nans = forgotten_poems",
            "# Python code, return ans\nmemorized_poems = 8\nrecited_poems = 3\nforgotten_poems = memorized_poems - recited_poems\nans = forgotten_poems"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Frank got fifteen pounds of mushroom for family barbecue. If they ate eight pounds, how many pounds were left?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nmushroom_total = 15\nmushroom_eaten = 8\nmushroom_left = mushroom_total - mushroom_eaten\nans = mushroom_left",
            "# Python code, return ans\nmushroom_total = 15\nmushroom_eaten = 8\nmushroom_left = mushroom_total - mushroom_eaten\nans = mushroom_left",
            "# Python code, return ans\ntotal_mushroom = 15\nmushroom_eaten = 8\nmushroom_left = total_mushroom - mushroom_eaten\nans = mushroom_left"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Adam put eighteen items in the shopping cart. After deleting some, he had eight left. How many items did Adam delete?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\ninitial_items = 18\nremaining_items = 8\ndeleted_items = initial_items - remaining_items\nans = deleted_items",
            "# Python code, return ans\ninitial_items = 18\nremaining_items = 8\ndeleted_items = initial_items - remaining_items\nans = deleted_items",
            "# Python code, return ans\nitems_initial = 18\nitems_left = 8\nitems_deleted = items_initial - items_left\nans = items_deleted"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "Kaleb has seventeen shirts. If he got rid of seven of them, how many shirts would Kaleb have? ",
        "answer": 10,
        "generated": [
            "# Python code, return ans\nKaleb_shirts = 17\nshirts_removed = 7\nremaining_shirts = Kaleb_shirts - shirts_removed\nans = remaining_shirts",
            "# Python code, return ans\nKaleb_shirts = 17\nshirts_removed = 7\nremaining_shirts = Kaleb_shirts - shirts_removed\nans = remaining_shirts",
            "# Python code, return ans\nKaleb_shirts = 17\nshirts_removed = 7\nremaining_shirts = Kaleb_shirts - shirts_removed\nans = remaining_shirts"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "While playing a game Edward had fifteen lives. He lost eight lives on a hard level. How many lives does he have left? ",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nEdward_lives = 15\nlives_lost = 8\nlives_left = Edward_lives - lives_lost\nans = lives_left",
            "# Python code, return ans\nEdward_lives = 15\nlives_lost = 8\nlives_left = Edward_lives - lives_lost\nans = lives_left",
            "# Python code, return ans\nEdward_lives = 15\nlost_lives = 8\nremaining_lives = Edward_lives - lost_lives\nans = remaining_lives"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "A group was sitting at a lunch table. After finishing, six people left and there were five left at the table. How many people were at the table to start with? ",
        "answer": 11,
        "generated": [
            "# Python code, return ans\nleft_people = 6\nremaining_people = 5\ntotal_people = left_people + remaining_people\nans = total_people",
            "# Python code, return ans\nleft_people = 6\nremaining_people = 5\ntotal_people = left_people + remaining_people\nans = total_people",
            "# Python code, return ans\nleft_people = 6\nremaining_people = 5\ntotal_people = left_people + remaining_people\nans = total_people"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "A clown had sixteen balloons. He gave four away at a party. How many balloons does he still have? ",
        "answer": 12,
        "generated": [
            "# Python code, return ans\ninitial_balloons = 16\ngiven_away = 4\nremaining_balloons = initial_balloons - given_away\nans = remaining_balloons",
            "# Python code, return ans\ninitial_balloons = 16\ngiven_away = 4\nremaining_balloons = initial_balloons - given_away\nans = remaining_balloons",
            "# Python code, return ans\ninitial_balloons = 16\ngiven_away = 4\nremaining_balloons = initial_balloons - given_away\nans = remaining_balloons"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Haley grew sixteen trees in her backyard. After a typhoon five died. How many trees does she have left?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\ninitial_trees = 16\ntrees_died = 5\ntrees_left = initial_trees - trees_died\nans = trees_left",
            "# Python code, return ans\ntotal_trees = 16\ntrees_died = 5\ntrees_left = total_trees - trees_died\nans = trees_left",
            "# Python code, return ans\ntrees_grown = 16\ntrees_died = 5\ntrees_left = trees_grown - trees_died\nans = trees_left"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "Debby owned thirteen DVDs. If she sold six of them, how many would she have left? ",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nDebby_owned_DVDs = 13\nDebby_sold_DVDs = 6\nDebby_remaining_DVDs = Debby_owned_DVDs - Debby_sold_DVDs\nans = Debby_remaining_DVDs",
            "# Python code, return ans\nDebby_DVDs = 13\nDebby_sold = 6\nDebby_DVDs_left = Debby_DVDs - Debby_sold\nans = Debby_DVDs_left",
            "# Python code, return ans\nDebby_DVDs = 13\nsold_DVDs = 6\nremaining_DVDs = Debby_DVDs - sold_DVDs\nans = remaining_DVDs"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "The host prepared nineteen cakes for the party. After the party he had nine left. How many cakes did people eat in the party?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\nprepared_cakes = 19\nleft_cakes = 9\neaten_cakes = prepared_cakes - left_cakes\nans = eaten_cakes",
            "# Python code, return ans\ntotal_cakes = 19\ncakes_left = 9\ncakes_eaten = total_cakes - cakes_left\nans = cakes_eaten",
            "# Python code, return ans\nprepared_cakes = 19\nleft_cakes = 9\neaten_cakes = prepared_cakes - left_cakes\nans = eaten_cakes"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "Frank had thirteen boxes. If he filled eight with toys, how many boxes does he still have?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ntotal_boxes = 13\nfilled_boxes = 8\nempty_boxes = total_boxes - filled_boxes\nans = empty_boxes",
            "# Python code, return ans\ntotal_boxes = 13\nfilled_boxes = 8\nempty_boxes = total_boxes - filled_boxes\nans = empty_boxes",
            "# Python code, return ans\ntotal_boxes = 13\nfilled_boxes = 8\nempty_boxes = total_boxes - filled_boxes\nans = empty_boxes"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Mike got twenty-eight GB of space on his disk drive to backup his files. If his files would take up twenty-six GB, how many GB would he have left?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ntotal_space = 28\nused_space = 26\nremaining_space = total_space - used_space\nans = remaining_space",
            "# Python code, return ans\ntotal_space = 28\nused_space = 26\nremaining_space = total_space - used_space\nans = remaining_space",
            "# Python code, return ans\ntotal_space = 28\nused_space = 26\nremaining_space = total_space - used_space\nans = remaining_space"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "There are ninety-eight cats in the little town. If ninety-two of them are a asleep,  how many cats are still awake?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ntotal_cats = 98\nasleep_cats = 92\nawake_cats = total_cats - asleep_cats\nans = awake_cats",
            "# Python code, return ans\ntotal_cats = 98\nasleep_cats = 92\nawake_cats = total_cats - asleep_cats\nans = awake_cats",
            "# Python code, return ans\ntotal_cats = 98\nasleep_cats = 92\nawake_cats = total_cats - asleep_cats\nans = awake_cats"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Olivia owned ninety-three pennies. After she bought an apple, she had fifty-six pennies left. How many did she spend for the apple?",
        "answer": 37,
        "generated": [
            "# Python code, return ans\nowned_pennies = 93\nremaining_pennies = 56\nspent_pennies = owned_pennies - remaining_pennies\nans = spent_pennies",
            "# Python code, return ans\nOlivia_pennies = 93\nOlivia_left_pennies = 56\nspent_on_apple = Olivia_pennies - Olivia_left_pennies\nans = spent_on_apple"
        ],
        "results": [
            37.0,
            37.0
        ],
        "result_counter": {
            "37.0": 2
        },
        "prediction": 37.0
    },
    {
        "question": "A farmer had ninety-seven tomatoes from his garden. If he picked eighty-three of them, how many would he have left? ",
        "answer": 14,
        "generated": [
            "# Python code, return ans\ntotal_tomatoes = 97\npicked_tomatoes = 83\nleft_tomatoes = total_tomatoes - picked_tomatoes\nans = left_tomatoes",
            "# Python code, return ans\ntotal_tomatoes = 97\npicked_tomatoes = 83\nremaining_tomatoes = total_tomatoes - picked_tomatoes\nans = remaining_tomatoes",
            "# Python code, return ans\ntotal_tomatoes = 97\npicked_tomatoes = 83\nremaining_tomatoes = total_tomatoes - picked_tomatoes\nans = remaining_tomatoes"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "Kaleb had sixty-seven cherries. After eating some, he had forty-two left. How many cherries did Kaleb eat? ",
        "answer": 25,
        "generated": [
            "# Python code, return ans\ntotal_cherries = 67\ncherries_left = 42\ncherries_eaten = total_cherries - cherries_left\nans = cherries_eaten",
            "# Python code, return ans\ntotal_cherries = 67\ncherries_left = 42\ncherries_eaten = total_cherries - cherries_left\nans = cherries_eaten",
            "# Python code, return ans\ncherries_initial = 67\ncherries_left = 42\ncherries_eaten = cherries_initial - cherries_left\nans = cherries_eaten"
        ],
        "results": [
            25.0,
            25.0,
            25.0
        ],
        "result_counter": {
            "25.0": 3
        },
        "prediction": 25.0
    },
    {
        "question": "There were ninety-eight onions on the shelf. Sixty-five were sold. How many onions is there on the shelf now?",
        "answer": 33,
        "generated": [
            "# Python code, return ans\nonions_on_shelf = 98\nonions_sold = 65\nonions_left = onions_on_shelf - onions_sold\nans = onions_left",
            "# Python code, return ans\nonions_on_shelf = 98\nonions_sold = 65\nonions_left = onions_on_shelf - onions_sold\nans = onions_left",
            "# Python code, return ans\ninitial_onions = 98\nonions_sold = 65\nremaining_onions = initial_onions - onions_sold\nans = remaining_onions"
        ],
        "results": [
            33.0,
            33.0,
            33.0
        ],
        "result_counter": {
            "33.0": 3
        },
        "prediction": 33.0
    },
    {
        "question": "Paul had eighty-six books. After selling some in a garage sale he had seventy-eight left. How many books did he sell? ",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ninitial_books = 86\nremaining_books = 78\nbooks_sold = initial_books - remaining_books\nans = books_sold",
            "# Python code, return ans\ninitial_books = 86\nremaining_books = 78\nbooks_sold = initial_books - remaining_books\nans = books_sold",
            "# Python code, return ans\ninitial_books = 86\nremaining_books = 78\nbooks_sold = initial_books - remaining_books\nans = books_sold"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Olivia had eighty-one pieces of paper in her folder. She used fifty-six pieces. How many pieces does she have now? ",
        "answer": 25,
        "generated": [
            "# Python code, return ans\npaper_initial = 81\npaper_used = 56\npaper_left = paper_initial - paper_used\nans = paper_left",
            "# Python code, return ans\npaper_initial = 81\npaper_used = 56\npaper_remaining = paper_initial - paper_used\nans = paper_remaining",
            "# Python code, return ans\ninitial_paper = 81\nused_paper = 56\nremaining_paper = initial_paper - used_paper\nans = remaining_paper"
        ],
        "results": [
            25.0,
            25.0,
            25.0
        ],
        "result_counter": {
            "25.0": 3
        },
        "prediction": 25.0
    },
    {
        "question": "Isabel had some candy. She gave her friend twenty-seven pieces and had sixty-one left. How many pieces did she have to start with? ",
        "answer": 88,
        "generated": [
            "# Python code, return ans\ncandy_given = 27\ncandy_left = 61\ninitial_candy = candy_given + candy_left\nans = initial_candy",
            "# Python code, return ans\ncandy_given = 27\ncandy_left = 61\ninitial_candy = candy_given + candy_left\nans = initial_candy",
            "# Python code, return ans\ncandy_given = 27\ncandy_left = 61\ninitial_candy = candy_given + candy_left\nans = initial_candy"
        ],
        "results": [
            88.0,
            88.0,
            88.0
        ],
        "result_counter": {
            "88.0": 3
        },
        "prediction": 88.0
    },
    {
        "question": "When Amy got to the fair she had $15. When she left she had $11. How much money did she spend at the fair? ",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ninitial_money = 15\nfinal_money = 11\nmoney_spent = initial_money - final_money\nans = money_spent",
            "# Python code, return ans\ninitial_money = 15\nfinal_money = 11\nmoney_spent = initial_money - final_money\nans = money_spent",
            "# Python code, return ans\ninitial_money = 15\nfinal_money = 11\nmoney_spent = initial_money - final_money\nans = money_spent"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "While playing a game Kaleb had ninety-eight lives. After losing some lives he had seventy-three left. How many lives did Kaleb lose? ",
        "answer": 25,
        "generated": [
            "# Python code, return ans\ninitial_lives = 98\nremaining_lives = 73\nlost_lives = initial_lives - remaining_lives\nans = lost_lives",
            "# Python code, return ans\ninitial_lives = 98\nremaining_lives = 73\nlost_lives = initial_lives - remaining_lives\nans = lost_lives",
            "# Python code, return ans\ninitial_lives = 98\nremaining_lives = 73\nlives_lost = initial_lives - remaining_lives\nans = lives_lost"
        ],
        "results": [
            25.0,
            25.0,
            25.0
        ],
        "result_counter": {
            "25.0": 3
        },
        "prediction": 25.0
    },
    {
        "question": "Maria had sixty-seven pieces of candy. She ate sixty-four pieces. How many pieces of candy does Maria have now? ",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nMaria_candy_initial = 67\nMaria_candy_eaten = 64\nMaria_candy_left = Maria_candy_initial - Maria_candy_eaten\nans = Maria_candy_left",
            "# Python code, return ans\nMaria_candy = 67\nMaria_ate_candy = 64\nMaria_remaining_candy = Maria_candy - Maria_ate_candy\nans = Maria_remaining_candy",
            "# Python code, return ans\nMaria_candy_initial = 67\nMaria_candy_eaten = 64\nMaria_candy_left = Maria_candy_initial - Maria_candy_eaten\nans = Maria_candy_left"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "A store has forty-nine shirts. After selling some there were twenty-eight left. How many did they sell? ",
        "answer": 21,
        "generated": [
            "# Python code, return ans\ntotal_shirts = 49\nshirts_left = 28\nshirts_sold = total_shirts - shirts_left\nans = shirts_sold",
            "# Python code, return ans\ntotal_shirts = 49\nshirts_left = 28\nshirts_sold = total_shirts - shirts_left\nans = shirts_sold",
            "# Python code, return ans\ntotal_shirts = 49\nshirts_left = 28\nshirts_sold = total_shirts - shirts_left\nans = shirts_sold"
        ],
        "results": [
            21.0,
            21.0,
            21.0
        ],
        "result_counter": {
            "21.0": 3
        },
        "prediction": 21.0
    },
    {
        "question": "At the arcade Dave spent forty-three tickets on stuffed tiger. Then he had fifty-five left. How many tickets did Dave have to start with? ",
        "answer": 98,
        "generated": [
            "# Python code, return ans\nspent_tickets = 43\nremaining_tickets = 55\ninitial_tickets = spent_tickets + remaining_tickets\nans = initial_tickets",
            "# Python code, return ans\nspent_tickets = 43\nremaining_tickets = 55\ninitial_tickets = spent_tickets + remaining_tickets\nans = initial_tickets",
            "# Python code, return ans\nspent_tickets = 43\nremaining_tickets = 55\ninitial_tickets = spent_tickets + remaining_tickets\nans = initial_tickets"
        ],
        "results": [
            98.0,
            98.0,
            98.0
        ],
        "result_counter": {
            "98.0": 3
        },
        "prediction": 98.0
    },
    {
        "question": "Gwen had ninety-eight DS games. After she gave some to her friends she had ninety-one left. How many games did she give away? ",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ninitial_games = 98\nremaining_games = 91\ngames_given_away = initial_games - remaining_games\nans = games_given_away",
            "# Python code, return ans\ninitial_games = 98\nremaining_games = 91\ngames_given_away = initial_games - remaining_games\nans = games_given_away",
            "# Python code, return ans\ninitial_games = 98\nremaining_games = 91\ngames_given_away = initial_games - remaining_games\nans = games_given_away"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Billy had seventy-four cherries. He ate seventy-two of them. How many cherries does Billy have left? ",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ncherries_total = 74\ncherries_eaten = 72\ncherries_left = cherries_total - cherries_eaten\nans = cherries_left",
            "# Python code, return ans\ncherries_total = 74\ncherries_eaten = 72\ncherries_left = cherries_total - cherries_eaten\nans = cherries_left",
            "# Python code, return ans\ntotal_cherries = 74\ncherries_eaten = 72\ncherries_left = total_cherries - cherries_eaten\nans = cherries_left"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Adam had some quarters. He spent nine of them at the arcade and had seventy-nine left over. How many quarters did he have to start with? ",
        "answer": 88,
        "generated": [
            "# Python code, return ans\nspent_quarters = 9\nleftover_quarters = 79\ninitial_quarters = spent_quarters + leftover_quarters\nans = initial_quarters",
            "# Python code, return ans\nspent_quarters = 9\nleftover_quarters = 79\ntotal_quarters = spent_quarters + leftover_quarters\nans = total_quarters",
            "# Python code, return ans\nspent_quarters = 9\nleftover_quarters = 79\ntotal_quarters = spent_quarters + leftover_quarters\nans = total_quarters"
        ],
        "results": [
            88.0,
            88.0,
            88.0
        ],
        "result_counter": {
            "88.0": 3
        },
        "prediction": 88.0
    },
    {
        "question": "At a bus stop forty-seven people got off the bus. Now there were forty-three people on the bus. How many people were on the bus before? ",
        "answer": 90,
        "generated": [
            "# Python code, return ans\npeople_off_bus = 47\npeople_on_bus = 43\npeople_before = people_off_bus + people_on_bus\nans = people_before",
            "# Python code, return ans\npeople_off_bus = 47\npeople_on_bus_after = 43\npeople_on_bus_before = people_off_bus + people_on_bus_after\nans = people_on_bus_before",
            "# Python code, return ans\npeople_off_bus = 47\npeople_on_bus = 43\npeople_before = people_off_bus + people_on_bus\nans = people_before"
        ],
        "results": [
            90.0,
            90.0,
            90.0
        ],
        "result_counter": {
            "90.0": 3
        },
        "prediction": 90.0
    },
    {
        "question": "It takes Mike ninety-eight minutes to walk to school. If he rides a bicycle to school, it would save him sixty-four minutes. How much time did Mike save?",
        "answer": 34,
        "generated": [
            "# Python code, return ans\nwalk_time = 98\ntime_saved = 64\nbike_time = walk_time - time_saved\nans = bike_time",
            "# Python code, return ans\nwalk_time = 98\ntime_saved = 64\nbike_time = walk_time - time_saved\nans = bike_time",
            "# Python code, return ans\nwalk_time = 98\ntime_saved = 64\nbike_time = walk_time - time_saved\nans = bike_time"
        ],
        "results": [
            34.0,
            34.0,
            34.0
        ],
        "result_counter": {
            "34.0": 3
        },
        "prediction": 34.0
    },
    {
        "question": "A farmer had forty-six tomatoes from his garden. After picking some he had three left. How many did he pick? ",
        "answer": 43,
        "generated": [
            "# Python code, return ans\ntotal_tomatoes = 46\ntomatoes_left = 3\npicked_tomatoes = total_tomatoes - tomatoes_left\nans = picked_tomatoes",
            "# Python code, return ans\ntotal_tomatoes = 46\ntomatoes_left = 3\ntomatoes_picked = total_tomatoes - tomatoes_left\nans = tomatoes_picked",
            "# Python code, return ans\ntotal_tomatoes = 46\ntomatoes_left = 3\npicked_tomatoes = total_tomatoes - tomatoes_left\nans = picked_tomatoes"
        ],
        "results": [
            43.0,
            43.0,
            43.0
        ],
        "result_counter": {
            "43.0": 3
        },
        "prediction": 43.0
    },
    {
        "question": "Carol had ninety-seven pieces of tissue paper. After blowing her nose she had ninety-three left. How many pieces of tissue paper did she use?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ninitial_tissue = 97\nremaining_tissue = 93\ntissue_used = initial_tissue - remaining_tissue\nans = tissue_used",
            "# Python code, return ans\ninitial_tissue = 97\nremaining_tissue = 93\ntissue_used = initial_tissue - remaining_tissue\nans = tissue_used",
            "# Python code, return ans\ninitial_tissue = 97\nremaining_tissue = 93\nused_tissue = initial_tissue - remaining_tissue\nans = used_tissue"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Jerry had caught some butterflies. He let eleven go and now he has eighty-two left. How many did he originally have? ",
        "answer": 93,
        "generated": [
            "# Python code, return ans\nbutterflies_left = 82\nbutterflies_let_go = 11\noriginal_butterflies = butterflies_left + butterflies_let_go\nans = original_butterflies",
            "# Python code, return ans\nlet_go = 11\nleft = 82\noriginally_had = left + let_go\nans = originally_had",
            "# Python code, return ans\nreleased_butterflies = 11\nremaining_butterflies = 82\noriginal_butterflies = released_butterflies + remaining_butterflies\nans = original_butterflies"
        ],
        "results": [
            93.0,
            93.0,
            93.0
        ],
        "result_counter": {
            "93.0": 3
        },
        "prediction": 93.0
    },
    {
        "question": "A chef had forty-six apples. After making some pies he had fourteen left. How many apples did he use? ",
        "answer": 32,
        "generated": [
            "# Python code, return ans\ntotal_apples = 46\napples_left = 14\napples_used = total_apples - apples_left\nans = apples_used",
            "# Python code, return ans\ntotal_apples = 46\napples_left = 14\napples_used = total_apples - apples_left\nans = apples_used",
            "# Python code, return ans\ntotal_apples = 46\napples_left = 14\napples_used = total_apples - apples_left\nans = apples_used"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "For Halloween Oliver got seventy-eight pounds of candy. After giving some to Janet, he had sixty-eight pounds left. How many pounds did he give to Janet? ",
        "answer": 10,
        "generated": [
            "# Python code, return ans\nOliver_candy = 78\nOliver_candy_left = 68\ncandy_given_to_Janet = Oliver_candy - Oliver_candy_left\nans = candy_given_to_Janet",
            "# Python code, return ans\ncandy_start = 78\ncandy_left = 68\ncandy_given_to_Janet = candy_start - candy_left\nans = candy_given_to_Janet",
            "# Python code, return ans\ninitial_candy = 78\nremaining_candy = 68\ncandy_given_to_Janet = initial_candy - remaining_candy\nans = candy_given_to_Janet"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "There were fifty-eight people on the train. At the next stop forty-five people got off. How many people are there on the train now? ",
        "answer": 13,
        "generated": [
            "# Python code, return ans\ninitial_people = 58\npeople_got_off = 45\nremaining_people = initial_people - people_got_off\nans = remaining_people",
            "# Python code, return ans\npeople_on_train = 58\npeople_got_off = 45\npeople_left_on_train = people_on_train - people_got_off\nans = people_left_on_train",
            "# Python code, return ans\npeople_on_train = 58\npeople_got_off = 45\npeople_left_on_train = people_on_train - people_got_off\nans = people_left_on_train"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "A fast food restaurant had ninety-nine hotdogs. After selling some they had ninety-seven left. How many hotdogs did they sell? ",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ninitial_hotdogs = 99\nremaining_hotdogs = 97\nhotdogs_sold = initial_hotdogs - remaining_hotdogs\nans = hotdogs_sold",
            "# Python code, return ans\ninitial_hotdogs = 99\nremaining_hotdogs = 97\nhotdogs_sold = initial_hotdogs - remaining_hotdogs\nans = hotdogs_sold",
            "# Python code, return ans\ninitial_hotdogs = 99\nremaining_hotdogs = 97\nhotdogs_sold = initial_hotdogs - remaining_hotdogs\nans = hotdogs_sold"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "John bought some cupcakes for a party. During the party eleven were eaten. Now he has twenty-one left. How many cupcakes did John get for the party? ",
        "answer": 32,
        "generated": [
            "# Python code, return ans\ncupcakes_left = 21\ncupcakes_eaten = 11\ntotal_cupcakes = cupcakes_left + cupcakes_eaten\nans = total_cupcakes",
            "# Python code, return ans\ncupcakes_left = 21\ncupcakes_eaten = 11\ntotal_cupcakes = cupcakes_left + cupcakes_eaten\nans = total_cupcakes",
            "# Python code, return ans\ncupcakes_left = 21\ncupcakes_eaten = 11\ntotal_cupcakes = cupcakes_left + cupcakes_eaten\nans = total_cupcakes"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "Adam needed to climb ninety-six stair steps to reach the rooftop. He already climbed seventy-four. How many stair steps do left for Adam to climb now?",
        "answer": 22,
        "generated": [
            "# Python code, return ans\ntotal_steps = 96\nclimbed_steps = 74\nsteps_left = total_steps - climbed_steps\nans = steps_left",
            "# Python code, return ans\ntotal_steps = 96\nclimbed_steps = 74\nsteps_left = total_steps - climbed_steps\nans = steps_left",
            "# Python code, return ans\ntotal_steps = 96\nclimbed_steps = 74\nsteps_left = total_steps - climbed_steps\nans = steps_left"
        ],
        "results": [
            22.0,
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 3
        },
        "prediction": 22.0
    },
    {
        "question": "There were forty-eight people on the train. After the first stop there were thirty-one people left. How many people got off? ",
        "answer": 17,
        "generated": [
            "# Python code, return ans\npeople_on_train = 48\npeople_after_stop = 31\npeople_got_off = people_on_train - people_after_stop\nans = people_got_off",
            "# Python code, return ans\npeople_on_train = 48\npeople_left = 31\npeople_got_off = people_on_train - people_left\nans = people_got_off",
            "# Python code, return ans\ninitial_people = 48\nfinal_people = 31\npeople_got_off = initial_people - final_people\nans = people_got_off"
        ],
        "results": [
            17.0,
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 3
        },
        "prediction": 17.0
    },
    {
        "question": "Mike had fifty-one books, but he sold forty-five at a garage sale. How many books does Mike still have? ",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nMike_books_initial = 51\nMike_books_sold = 45\nMike_books_left = Mike_books_initial - Mike_books_sold\nans = Mike_books_left",
            "# Python code, return ans\nMike_books_initial = 51\nMike_books_sold = 45\nMike_books_left = Mike_books_initial - Mike_books_sold\nans = Mike_books_left",
            "# Python code, return ans\ninitial_books = 51\nbooks_sold = 45\nremaining_books = initial_books - books_sold\nans = remaining_books"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "A museum had ninety-eight paintings. After they got rid of some, they had ninety-five left. How many paintings did they get rid of? ",
        "answer": 3,
        "generated": [
            "# Python code, return ans\ninitial_paintings = 98\nfinal_paintings = 95\npaintings_removed = initial_paintings - final_paintings\nans = paintings_removed",
            "# Python code, return ans\ninitial_paintings = 98\nremaining_paintings = 95\npaintings_got_rid = initial_paintings - remaining_paintings\nans = paintings_got_rid",
            "# Python code, return ans\ninitial_paintings = 98\nremaining_paintings = 95\npaintings_got_rid_of = initial_paintings - remaining_paintings\nans = paintings_got_rid_of"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Jessie weighted seventy-four kilograms. After she started to go jogging everyday, now she weights sixty-seven kilograms. How much weight did she lose in the past?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ninitial_weight = 74\ncurrent_weight = 67\nweight_lost = initial_weight - current_weight\nans = weight_lost",
            "# Python code, return ans\ninitial_weight = 74\ncurrent_weight = 67\nweight_lost = initial_weight - current_weight\nans = weight_lost",
            "# Python code, return ans\ninitial_weight = 74\ncurrent_weight = 67\nweight_lost = initial_weight - current_weight\nans = weight_lost"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "At the arcade Billy had won forty-eight tickets. After buying a yoyo he had thirty-two tickets left. How many tickets did the yoyo cost? ",
        "answer": 16,
        "generated": [
            "# Python code, return ans\ntickets_before_purchase = 48\ntickets_after_purchase = 32\nyoyo_cost = tickets_before_purchase - tickets_after_purchase\nans = yoyo_cost",
            "# Python code, return ans\ntickets_won = 48\ntickets_left = 32\nyoyo_cost = tickets_won - tickets_left\nans = yoyo_cost",
            "# Python code, return ans\ntickets_before_purchase = 48\ntickets_after_purchase = 32\nyoyo_cost = tickets_before_purchase - tickets_after_purchase\nans = yoyo_cost"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "For a party Adam bought ninety-seven cupcakes. If fifty-eight were eaten, how many cupcakes would Adam have left? ",
        "answer": 39,
        "generated": [
            "# Python code, return ans\ntotal_cupcakes = 97\ncupcakes_eaten = 58\ncupcakes_left = total_cupcakes - cupcakes_eaten\nans = cupcakes_left",
            "# Python code, return ans\ncupcakes_bought = 97\ncupcakes_eaten = 58\ncupcakes_left = cupcakes_bought - cupcakes_eaten\nans = cupcakes_left",
            "# Python code, return ans\ncupcakes_bought = 97\ncupcakes_eaten = 58\ncupcakes_left = cupcakes_bought - cupcakes_eaten\nans = cupcakes_left"
        ],
        "results": [
            39.0,
            39.0,
            39.0
        ],
        "result_counter": {
            "39.0": 3
        },
        "prediction": 39.0
    },
    {
        "question": "For a birthday party a clown gave away six balloons. Now he has fifty-five balloons left. How many balloons did the clown have to start with? ",
        "answer": 61,
        "generated": [
            "# Python code, return ans\nballoons_given_away = 6\nballoons_left = 55\ninitial_balloons = balloons_given_away + balloons_left\nans = initial_balloons",
            "# Python code, return ans\ngiven_away_balloons = 6\nremaining_balloons = 55\ninitial_balloons = given_away_balloons + remaining_balloons\nans = initial_balloons",
            "# Python code, return ans\nballoons_given_away = 6\nballoons_left = 55\ninitial_balloons = balloons_given_away + balloons_left\nans = initial_balloons"
        ],
        "results": [
            61.0,
            61.0,
            61.0
        ],
        "result_counter": {
            "61.0": 3
        },
        "prediction": 61.0
    },
    {
        "question": "A chef used thirty-nine cherries to make a pie. Now he has fifty-eight cherries left. How many cherries did he have before he made the pie? ",
        "answer": 97,
        "generated": [
            "# Python code, return ans\ncherries_used = 39\ncherries_left = 58\ntotal_cherries = cherries_used + cherries_left\nans = total_cherries",
            "# Python code, return ans\ncherries_used = 39\ncherries_left = 58\ntotal_cherries = cherries_used + cherries_left\nans = total_cherries",
            "# Python code, return ans\ncherries_used = 39\ncherries_left = 58\ntotal_cherries = cherries_used + cherries_left\nans = total_cherries"
        ],
        "results": [
            97.0,
            97.0,
            97.0
        ],
        "result_counter": {
            "97.0": 3
        },
        "prediction": 97.0
    },
    {
        "question": "There were ninety-four dollars in Olivia's wallet. After she visited a supermarket, there were seventy-eight dollars left. How much did she spend?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\ninitial_amount = 94\nremaining_amount = 78\nspent_amount = initial_amount - remaining_amount\nans = spent_amount",
            "# Python code, return ans\ninitial_amount = 94\nremaining_amount = 78\nspent_amount = initial_amount - remaining_amount\nans = spent_amount",
            "# Python code, return ans\ninitial_wallet = 94\nwallet_after_supermarket = 78\namount_spent = initial_wallet - wallet_after_supermarket\nans = amount_spent"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "Winnie completed eighty-six consecutive repetitions for rope jumping yesterday. Today she completed only seventy-three. How many repetitions did she fell behind?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\nyesterday_reps = 86\ntoday_reps = 73\nfell_behind = yesterday_reps - today_reps\nans = fell_behind",
            "# Python code, return ans\nyesterday_reps = 86\ntoday_reps = 73\nfell_behind = yesterday_reps - today_reps\nans = fell_behind",
            "# Python code, return ans\nreps_yesterday = 86\nreps_today = 73\nfell_behind = reps_yesterday - reps_today\nans = fell_behind"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "While playing a video game Ned lost thirteen lives. Now he has seventy lives. How many lives did Ned have at the start? ",
        "answer": 83,
        "generated": [
            "# Python code, return ans\nlost_lives = 13\ncurrent_lives = 70\ninitial_lives = current_lives + lost_lives\nans = initial_lives",
            "# Python code, return ans\nlost_lives = 13\ncurrent_lives = 70\ninitial_lives = current_lives + lost_lives\nans = initial_lives",
            "# Python code, return ans\nlost_lives = 13\ncurrent_lives = 70\ninitial_lives = current_lives + lost_lives\nans = initial_lives"
        ],
        "results": [
            83.0,
            83.0,
            83.0
        ],
        "result_counter": {
            "83.0": 3
        },
        "prediction": 83.0
    },
    {
        "question": "Will was picking up sticks from his yard. He picked up thirty-eight but there were still sixty-one left. How many sticks were originally in the yard? ",
        "answer": 99,
        "generated": [
            "# Python code, return ans\npicked_up_sticks = 38\nremaining_sticks = 61\noriginal_sticks = picked_up_sticks + remaining_sticks\nans = original_sticks",
            "# Python code, return ans\npicked_up_sticks = 38\nremaining_sticks = 61\noriginal_sticks = picked_up_sticks + remaining_sticks\nans = original_sticks",
            "# Python code, return ans\npicked_up_sticks = 38\nremaining_sticks = 61\noriginal_sticks = picked_up_sticks + remaining_sticks\nans = original_sticks"
        ],
        "results": [
            99.0,
            99.0,
            99.0
        ],
        "result_counter": {
            "99.0": 3
        },
        "prediction": 99.0
    },
    {
        "question": "Gwen prepared ninety-eight books to sell in the flea market. After the activity ended she had ninety-six books left. How many did she sell?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\nprepared_books = 98\nleft_books = 96\nsold_books = prepared_books - left_books\nans = sold_books",
            "# Python code, return ans\nprepared_books = 98\nleft_books = 96\nsold_books = prepared_books - left_books\nans = sold_books",
            "# Python code, return ans\nprepared_books = 98\nbooks_left = 96\nbooks_sold = prepared_books - books_left\nans = books_sold"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "A baker made ninety cakes. If he sold eighty-three of them, how many cakes would the baker still have? ",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ncakes_made = 90\ncakes_sold = 83\ncakes_left = cakes_made - cakes_sold\nans = cakes_left",
            "# Python code, return ans\ncakes_made = 90\ncakes_sold = 83\ncakes_left = cakes_made - cakes_sold\nans = cakes_left",
            "# Python code, return ans\ncakes_made = 90\ncakes_sold = 83\ncakes_left = cakes_made - cakes_sold\nans = cakes_left"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "A chef had seventy-seven cherries. If he used sixty of them to make a pie, how many cherries would he still have? ",
        "answer": 17,
        "generated": [
            "# Python code, return ans\ntotal_cherries = 77\nused_cherries = 60\nremaining_cherries = total_cherries - used_cherries\nans = remaining_cherries",
            "# Python code, return ans\ntotal_cherries = 77\ncherries_used = 60\ncherries_left = total_cherries - cherries_used\nans = cherries_left",
            "# Python code, return ans\ntotal_cherries = 77\ncherries_used = 60\ncherries_left = total_cherries - cherries_used\nans = cherries_left"
        ],
        "results": [
            17.0,
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 3
        },
        "prediction": 17.0
    },
    {
        "question": "Carol had eighty-one pieces of paper in her folder. After a week she had thirty-eight left. How many pieces did she use in the week? ",
        "answer": 43,
        "generated": [
            "# Python code, return ans\ninitial_paper = 81\nremaining_paper = 38\nused_paper = initial_paper - remaining_paper\nans = used_paper",
            "# Python code, return ans\ninitial_paper = 81\nremaining_paper = 38\nused_paper = initial_paper - remaining_paper\nans = used_paper",
            "# Python code, return ans\ninitial_paper = 81\nremaining_paper = 38\nused_paper = initial_paper - remaining_paper\nans = used_paper"
        ],
        "results": [
            43.0,
            43.0,
            43.0
        ],
        "result_counter": {
            "43.0": 3
        },
        "prediction": 43.0
    },
    {
        "question": "Isabel had ninety DS games. If she gave eighty-seven to her friend, how many would she have left? ",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nIsabel_games = 90\ngames_given = 87\ngames_left = Isabel_games - games_given\nans = games_left",
            "# Python code, return ans\nIsabel_games = 90\ngames_given = 87\ngames_left = Isabel_games - games_given\nans = games_left",
            "# Python code, return ans\nIsabel_games = 90\ngames_given = 87\ngames_left = Isabel_games - games_given\nans = games_left"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Maria stored ninety-three cloves of garlic in the kitchen. She used eighty-six for roast chicken for dinner. How many cloves of garlic does she have left?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ngarlic_total = 93\ngarlic_used = 86\ngarlic_left = garlic_total - garlic_used\nans = garlic_left",
            "# Python code, return ans\ngarlic_total = 93\ngarlic_used = 86\ngarlic_left = garlic_total - garlic_used\nans = garlic_left",
            "# Python code, return ans\ngarlic_total = 93\ngarlic_used = 86\ngarlic_left = garlic_total - garlic_used\nans = garlic_left"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "A store has thirty-five shirts. If they sold thirty of them, how many shirts would they have? ",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ntotal_shirts = 35\nshirts_sold = 30\nshirts_left = total_shirts - shirts_sold\nans = shirts_left",
            "# Python code, return ans\ntotal_shirts = 35\nsold_shirts = 30\nremaining_shirts = total_shirts - sold_shirts\nans = remaining_shirts",
            "# Python code, return ans\ntotal_shirts = 35\nshirts_sold = 30\nremaining_shirts = total_shirts - shirts_sold\nans = remaining_shirts"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Paige used three of her pencils. Now she has ninety-one pencils. How many pencils did Paige have to begin with? ",
        "answer": 94,
        "generated": [
            "# Python code, return ans\nused_pencils = 3\ncurrent_pencils = 91\ninitial_pencils = current_pencils + used_pencils\nans = initial_pencils",
            "# Python code, return ans\nused_pencils = 3\ncurrent_pencils = 91\ninitial_pencils = used_pencils + current_pencils\nans = initial_pencils",
            "# Python code, return ans\nused_pencils = 3\ncurrent_pencils = 91\ninitial_pencils = used_pencils + current_pencils\nans = initial_pencils"
        ],
        "results": [
            94.0,
            94.0,
            94.0
        ],
        "result_counter": {
            "94.0": 3
        },
        "prediction": 94.0
    },
    {
        "question": "Gwen's hair was twenty-eight centimeters long. After a haircut it was seventeen centimeters long. How much did she cut off? ",
        "answer": 11,
        "generated": [
            "# Python code, return ans\ninitial_hair_length = 28\nfinal_hair_length = 17\nhair_cut_off = initial_hair_length - final_hair_length\nans = hair_cut_off",
            "# Python code, return ans\ninitial_length = 28\nfinal_length = 17\nhair_cut = initial_length - final_length\nans = hair_cut",
            "# Python code, return ans\ninitial_length = 28\nfinal_length = 17\nhair_cut = initial_length - final_length\nans = hair_cut"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "Adam picked thirty-five strawberries. After eating some, he had thirty-three left. How many strawberries did Adam eat?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\npicked_strawberries = 35\nremaining_strawberries = 33\nstrawberries_eaten = picked_strawberries - remaining_strawberries\nans = strawberries_eaten",
            "# Python code, return ans\npicked_strawberries = 35\nremaining_strawberries = 33\nstrawberries_eaten = picked_strawberries - remaining_strawberries\nans = strawberries_eaten",
            "# Python code, return ans\npicked_strawberries = 35\nleft_strawberries = 33\neaten_strawberries = picked_strawberries - left_strawberries\nans = eaten_strawberries"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Janet had eighty-five paper clips on the desk when she woke up in the morning. Before going to bed, she found there were twenty-six left. How many paper clips did she use today?",
        "answer": 59,
        "generated": [
            "# Python code, return ans\npaper_clips_initial = 85\npaper_clips_left = 26\npaper_clips_used = paper_clips_initial - paper_clips_left\nans = paper_clips_used",
            "# Python code, return ans\npaper_clips_morning = 85\npaper_clips_left = 26\npaper_clips_used = paper_clips_morning - paper_clips_left\nans = paper_clips_used",
            "# Python code, return ans\npaper_clips_start = 85\npaper_clips_end = 26\npaper_clips_used = paper_clips_start - paper_clips_end\nans = paper_clips_used"
        ],
        "results": [
            59.0,
            59.0,
            59.0
        ],
        "result_counter": {
            "59.0": 3
        },
        "prediction": 59.0
    },
    {
        "question": "At the zoo a cage had sixty-eight snakes. If forty-two were hiding, how many snakes were not hiding? ",
        "answer": 26,
        "generated": [
            "# Python code, return ans\ntotal_snakes = 68\nhiding_snakes = 42\nnot_hiding_snakes = total_snakes - hiding_snakes\nans = not_hiding_snakes",
            "# Python code, return ans\ntotal_snakes = 68\nhiding_snakes = 42\nnot_hiding_snakes = total_snakes - hiding_snakes\nans = not_hiding_snakes",
            "# Python code, return ans\ntotal_snakes = 68\nhiding_snakes = 42\nnot_hiding_snakes = total_snakes - hiding_snakes\nans = not_hiding_snakes"
        ],
        "results": [
            26.0,
            26.0,
            26.0
        ],
        "result_counter": {
            "26.0": 3
        },
        "prediction": 26.0
    },
    {
        "question": "Olivia gave her cat two cheese cubes. Now Olivia has ninety-eight cheese cubes left. How many cheese cubes did Olivia have originally?",
        "answer": 100,
        "generated": [
            "# Python code, return ans\ncheese_cubes_given = 2\ncheese_cubes_left = 98\noriginal_cheese_cubes = cheese_cubes_given + cheese_cubes_left\nans = original_cheese_cubes",
            "# Python code, return ans\ncheese_given = 2\ncheese_left = 98\noriginal_cheese = cheese_given + cheese_left\nans = original_cheese",
            "# Python code, return ans\ncheese_given = 2\ncheese_left = 98\noriginal_cheese = cheese_given + cheese_left\nans = original_cheese"
        ],
        "results": [
            100.0,
            100.0,
            100.0
        ],
        "result_counter": {
            "100.0": 3
        },
        "prediction": 100.0
    },
    {
        "question": "A clown had eighty-two balloons. After a party he had sixteen left. How many balloons did he use at the party? ",
        "answer": 66,
        "generated": [
            "# Python code, return ans\ninitial_balloons = 82\nremaining_balloons = 16\nballoons_used = initial_balloons - remaining_balloons\nans = balloons_used",
            "# Python code, return ans\ninitial_balloons = 82\nballoons_left = 16\nballoons_used = initial_balloons - balloons_left\nans = balloons_used",
            "# Python code, return ans\ntotal_balloons = 82\nballoons_left = 16\nballoons_used = total_balloons - balloons_left\nans = balloons_used"
        ],
        "results": [
            66.0,
            66.0,
            66.0
        ],
        "result_counter": {
            "66.0": 3
        },
        "prediction": 66.0
    },
    {
        "question": "A pet store had eighty-five gerbils. If they sold sixty-nine of them, how many would they have left?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\ntotal_gerbils = 85\nsold_gerbils = 69\nremaining_gerbils = total_gerbils - sold_gerbils\nans = remaining_gerbils",
            "# Python code, return ans\ntotal_gerbils = 85\nsold_gerbils = 69\nremaining_gerbils = total_gerbils - sold_gerbils\nans = remaining_gerbils",
            "# Python code, return ans\ntotal_gerbils = 85\nsold_gerbils = 69\nremaining_gerbils = total_gerbils - sold_gerbils\nans = remaining_gerbils"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "On Friday a pizza store sold 2 pepperoni, 6 bacon and 6 cheese pizzas. How many pizzas did they sell total? ",
        "answer": 14,
        "generated": [
            "# Python code, return ans\npepperoni_pizzas = 2\nbacon_pizzas = 6\ncheese_pizzas = 6\ntotal_pizzas = pepperoni_pizzas + bacon_pizzas + cheese_pizzas\nans = total_pizzas",
            "# Python code, return ans\npepperoni_pizzas = 2\nbacon_pizzas = 6\ncheese_pizzas = 6\ntotal_pizzas = pepperoni_pizzas + bacon_pizzas + cheese_pizzas\nans = total_pizzas",
            "# Python code, return ans\npepperoni_pizzas = 2\nbacon_pizzas = 6\ncheese_pizzas = 6\ntotal_pizzas = pepperoni_pizzas + bacon_pizzas + cheese_pizzas\nans = total_pizzas"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "In a game you start with 2 lives. If you got 6 extra lives in the first level and 11 more in the second, how many lives would you have? ",
        "answer": 19,
        "generated": [
            "# Python code, return ans\ninitial_lives = 2\nextra_lives_first_level = 6\nextra_lives_second_level = 11\ntotal_lives = initial_lives + extra_lives_first_level + extra_lives_second_level\nans = total_lives",
            "# Python code, return ans\ninitial_lives = 2\nextra_lives_first_level = 6\nextra_lives_second_level = 11\ntotal_lives = initial_lives + extra_lives_first_level + extra_lives_second_level\nans = total_lives",
            "# Python code, return ans\ninitial_lives = 2\nextra_lives_first_level = 6\nextra_lives_second_level = 11\ntotal_lives = initial_lives + extra_lives_first_level + extra_lives_second_level\nans = total_lives"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "A chef was making pies. He made 2 apple, 4 pecan and 7 pumpkin pies. How many pies did he make total? ",
        "answer": 13,
        "generated": [
            "# Python code, return ans\napple_pies = 2\npecan_pies = 4\npumpkin_pies = 7\ntotal_pies = apple_pies + pecan_pies + pumpkin_pies\nans = total_pies",
            "# Python code, return ans\napple_pies = 2\npecan_pies = 4\npumpkin_pies = 7\ntotal_pies = apple_pies + pecan_pies + pumpkin_pies\nans = total_pies",
            "# Python code, return ans\napple_pies = 2\npecan_pies = 4\npumpkin_pies = 7\ntotal_pies = apple_pies + pecan_pies + pumpkin_pies\nans = total_pies"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "A pet store had 2 white cats, 10 black cats and 3 gray cats. How many cats did they have total? ",
        "answer": 15,
        "generated": [
            "# Python code, return ans\nwhite_cats = 2\nblack_cats = 10\ngray_cats = 3\ntotal_cats = white_cats + black_cats + gray_cats\nans = total_cats",
            "# Python code, return ans\nwhite_cats = 2\nblack_cats = 10\ngray_cats = 3\ntotal_cats = white_cats + black_cats + gray_cats\nans = total_cats",
            "# Python code, return ans\nwhite_cats = 2\nblack_cats = 10\ngray_cats = 3\ntotal_cats = white_cats + black_cats + gray_cats\nans = total_cats"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "Amy had 2 dollars. If she got 13 more dollars for doing chores and 3 more for her birthday, how much money does she have now? ",
        "answer": 18,
        "generated": [
            "# Python code, return ans\ninitial_money = 2\nchores_money = 13\nbirthday_money = 3\ntotal_money = initial_money + chores_money + birthday_money\nans = total_money",
            "# Python code, return ans\nAmy_initial_money = 2\nchore_money = 13\nbirthday_money = 3\ntotal_money = Amy_initial_money + chore_money + birthday_money\nans = total_money",
            "# Python code, return ans\ninitial_money = 2\nchores_money = 13\nbirthday_money = 3\ntotal_money = initial_money + chores_money + birthday_money\nans = total_money"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "At the fair Rachel spent 2 dollars on rides, 8 dollars on games and 2 dollars on food. How much money did she spend total? ",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nspent_on_rides = 2\nspent_on_games = 8\nspent_on_food = 2\ntotal_spent = spent_on_rides + spent_on_games + spent_on_food\nans = total_spent",
            "# Python code, return ans\nspent_on_rides = 2\nspent_on_games = 8\nspent_on_food = 2\ntotal_spent = spent_on_rides + spent_on_games + spent_on_food\nans = total_spent",
            "# Python code, return ans\nspent_on_rides = 2\nspent_on_games = 8\nspent_on_food = 2\ntotal_spent = spent_on_rides + spent_on_games + spent_on_food\nans = total_spent"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Paige had 2 pencils in her desk, 2 in her backpack and 15 at home. How many pencils does Paige have? ",
        "answer": 19,
        "generated": [
            "# Python code, return ans\npencils_desk = 2\npencils_backpack = 2\npencils_home = 15\ntotal_pencils = pencils_desk + pencils_backpack + pencils_home\nans = total_pencils",
            "# Python code, return ans\npencils_desk = 2\npencils_backpack = 2\npencils_home = 15\ntotal_pencils = pencils_desk + pencils_backpack + pencils_home\nans = total_pencils",
            "# Python code, return ans\npencils_desk = 2\npencils_backpack = 2\npencils_home = 15\ntotal_pencils = pencils_desk + pencils_backpack + pencils_home\nans = total_pencils"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "Jerry was weighing boxes for moving. The first was 2 pounds, the second was 11 pounds and the last was 5 pounds. What is the combined weight of all three boxes? ",
        "answer": 18,
        "generated": [
            "# Python code, return ans\nbox1_weight = 2\nbox2_weight = 11\nbox3_weight = 5\ntotal_weight = box1_weight + box2_weight + box3_weight\nans = total_weight",
            "# Python code, return ans\nfirst_box = 2\nsecond_box = 11\nthird_box = 5\ntotal_weight = first_box + second_box + third_box\nans = total_weight",
            "# Python code, return ans\nbox1_weight = 2\nbox2_weight = 11\nbox3_weight = 5\ntotal_weight = box1_weight + box2_weight + box3_weight\nans = total_weight"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "While playing a trivia game, Team A scored 2 points, Team B scored 9 points and Team C scored 4 points. How many points were scored total? ",
        "answer": 15,
        "generated": [
            "# Python code, return ans\nTeam_A_points = 2\nTeam_B_points = 9\nTeam_C_points = 4\ntotal_points = Team_A_points + Team_B_points + Team_C_points\nans = total_points",
            "# Python code, return ans\nTeam_A_points = 2\nTeam_B_points = 9\nTeam_C_points = 4\ntotal_points = Team_A_points + Team_B_points + Team_C_points\nans = total_points",
            "# Python code, return ans\nTeam_A_score = 2\nTeam_B_score = 9\nTeam_C_score = 4\ntotal_score = Team_A_score + Team_B_score + Team_C_score\nans = total_score"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "A chef bought 2 purple grapes and 2 green grapes. If he already had 3 grapes, how many grapes does he have now? ",
        "answer": 7,
        "generated": [
            "# Python code, return ans\npurple_grapes = 2\ngreen_grapes = 2\ninitial_grapes = 3\ntotal_grapes = purple_grapes + green_grapes + initial_grapes\nans = total_grapes",
            "# Python code, return ans\npurple_grapes = 2\ngreen_grapes = 2\ninitial_grapes = 3\ntotal_grapes = purple_grapes + green_grapes + initial_grapes\nans = total_grapes",
            "# Python code, return ans\npurple_grapes = 2\ngreen_grapes = 2\ninitial_grapes = 3\ntotal_grapes = purple_grapes + green_grapes + initial_grapes\nans = total_grapes"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "In the freezer there are 2 grape popsicles, 13 cherry popsicles and 2 banana popsicles. How many popsicles are there total? ",
        "answer": 17,
        "generated": [
            "# Python code, return ans\ngrape_popsicles = 2\ncherry_popsicles = 13\nbanana_popsicles = 2\ntotal_popsicles = grape_popsicles + cherry_popsicles + banana_popsicles\nans = total_popsicles",
            "# Python code, return ans\ngrape_popsicles = 2\ncherry_popsicles = 13\nbanana_popsicles = 2\ntotal_popsicles = grape_popsicles + cherry_popsicles + banana_popsicles\nans = total_popsicles",
            "# Python code, return ans\ngrape_popsicles = 2\ncherry_popsicles = 13\nbanana_popsicles = 2\ntotal_popsicles = grape_popsicles + cherry_popsicles + banana_popsicles\nans = total_popsicles"
        ],
        "results": [
            17.0,
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 3
        },
        "prediction": 17.0
    },
    {
        "question": "On Monday Debby jogged 2 kilometers. On Tuesday she jogged 5 kilometers and on Wednesday she jogged 9. How many kilometers did she jog total? ",
        "answer": 16,
        "generated": [
            "# Python code, return ans\njogged_Monday = 2\njogged_Tuesday = 5\njogged_Wednesday = 9\ntotal_jogged = jogged_Monday + jogged_Tuesday + jogged_Wednesday\nans = total_jogged",
            "# Python code, return ans\njogged_Monday = 2\njogged_Tuesday = 5\njogged_Wednesday = 9\ntotal_jogged = jogged_Monday + jogged_Tuesday + jogged_Wednesday\nans = total_jogged",
            "# Python code, return ans\njogged_Monday = 2\njogged_Tuesday = 5\njogged_Wednesday = 9\ntotal_jogged = jogged_Monday + jogged_Tuesday + jogged_Wednesday\nans = total_jogged"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "A pet store had 2 dogs. On Sunday they got 5 more. On Monday they got 3 more. How many dogs does the pet store have now? ",
        "answer": 10,
        "generated": [
            "# Python code, return ans\ninitial_dogs = 2\nsunday_dogs = 5\nmonday_dogs = 3\ntotal_dogs = initial_dogs + sunday_dogs + monday_dogs\nans = total_dogs",
            "# Python code, return ans\ninitial_dogs = 2\ndogs_on_Sunday = 5\ndogs_on_Monday = 3\ntotal_dogs = initial_dogs + dogs_on_Sunday + dogs_on_Monday\nans = total_dogs",
            "# Python code, return ans\ninitial_dogs = 2\ndogs_on_Sunday = 5\ndogs_on_Monday = 3\ntotal_dogs = initial_dogs + dogs_on_Sunday + dogs_on_Monday\nans = total_dogs"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "For lunch, 2 students selected chocolate milk, 15 selected strawberry milk and 3 selected regular milk. How many milks were taken total? ",
        "answer": 20,
        "generated": [
            "# Python code, return ans\nchocolate_milk = 2\nstrawberry_milk = 15\nregular_milk = 3\ntotal_milk = chocolate_milk + strawberry_milk + regular_milk\nans = total_milk",
            "# Python code, return ans\nchocolate_milk = 2\nstrawberry_milk = 15\nregular_milk = 3\ntotal_milk = chocolate_milk + strawberry_milk + regular_milk\nans = total_milk",
            "# Python code, return ans\nchocolate_milk = 2\nstrawberry_milk = 15\nregular_milk = 3\ntotal_milk = chocolate_milk + strawberry_milk + regular_milk\nans = total_milk"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "Tom already had 2 pieces of candy. His friend gave him 7 more and then Tom bought another 10. How many pieces does Tom have now? ",
        "answer": 19,
        "generated": [
            "# Python code, return ans\ninitial_candy = 2\nfriend_candy = 7\nbought_candy = 10\ntotal_candy = initial_candy + friend_candy + bought_candy\nans = total_candy",
            "# Python code, return ans\ninitial_candy = 2\ncandy_from_friend = 7\ncandy_bought = 10\ntotal_candy = initial_candy + candy_from_friend + candy_bought\nans = total_candy",
            "# Python code, return ans\ninitial_candy = 2\ncandy_from_friend = 7\ncandy_bought = 10\ntotal_candy = initial_candy + candy_from_friend + candy_bought\nans = total_candy"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "A farmer planted 2 tomato seeds, 10 cucumber seeds and 3 pumpkin seeds. How many seeds did he plant all together? ",
        "answer": 15,
        "generated": [
            "# Python code, return ans\ntomato_seeds = 2\ncucumber_seeds = 10\npumpkin_seeds = 3\ntotal_seeds = tomato_seeds + cucumber_seeds + pumpkin_seeds\nans = total_seeds",
            "# Python code, return ans\ntomato_seeds = 2\ncucumber_seeds = 10\npumpkin_seeds = 3\ntotal_seeds = tomato_seeds + cucumber_seeds + pumpkin_seeds\nans = total_seeds",
            "# Python code, return ans\ntomato_seeds = 2\ncucumber_seeds = 10\npumpkin_seeds = 3\ntotal_seeds = tomato_seeds + cucumber_seeds + pumpkin_seeds\nans = total_seeds"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "Frank was reading a book. He read 2 pages at school, 3 on the bus and 3 at home. How many pages did Frank read? ",
        "answer": 8,
        "generated": [
            "# Python code, return ans\npages_at_school = 2\npages_on_bus = 3\npages_at_home = 3\ntotal_pages_read = pages_at_school + pages_on_bus + pages_at_home\nans = total_pages_read",
            "# Python code, return ans\npages_at_school = 2\npages_on_bus = 3\npages_at_home = 3\ntotal_pages_read = pages_at_school + pages_on_bus + pages_at_home\nans = total_pages_read",
            "# Python code, return ans\npages_school = 2\npages_bus = 3\npages_home = 3\ntotal_pages = pages_school + pages_bus + pages_home\nans = total_pages"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Tom used 2 batteries on his flashlights, 15 in his toys and 2 in his controllers. How many batteries did Tom use? ",
        "answer": 19,
        "generated": [
            "# Python code, return ans\nbatteries_flashlights = 2\nbatteries_toys = 15\nbatteries_controllers = 2\ntotal_batteries = batteries_flashlights + batteries_toys + batteries_controllers\nans = total_batteries",
            "# Python code, return ans\nbatteries_flashlights = 2\nbatteries_toys = 15\nbatteries_controllers = 2\ntotal_batteries = batteries_flashlights + batteries_toys + batteries_controllers\nans = total_batteries",
            "# Python code, return ans\nbatteries_flashlights = 2\nbatteries_toys = 15\nbatteries_controllers = 2\ntotal_batteries = batteries_flashlights + batteries_toys + batteries_controllers\nans = total_batteries"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "While organizing her files, Bianca deleted 2 pictures, 8 songs and 7 text files. What is the total number of files she deleted? ",
        "answer": 17,
        "generated": [
            "# Python code, return ans\ndeleted_pictures = 2\ndeleted_songs = 8\ndeleted_text_files = 7\ntotal_deleted_files = deleted_pictures + deleted_songs + deleted_text_files\nans = total_deleted_files",
            "# Python code, return ans\ndeleted_pictures = 2\ndeleted_songs = 8\ndeleted_text_files = 7\ntotal_deleted_files = deleted_pictures + deleted_songs + deleted_text_files\nans = total_deleted_files",
            "# Python code, return ans\npictures_deleted = 2\nsongs_deleted = 8\ntext_files_deleted = 7\ntotal_files_deleted = pictures_deleted + songs_deleted + text_files_deleted\nans = total_files_deleted"
        ],
        "results": [
            17.0,
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 3
        },
        "prediction": 17.0
    },
    {
        "question": "Roger had 2 new crayons, 4 used crayons and 8 broken crayons. How many crayons did Roger have total? ",
        "answer": 14,
        "generated": [
            "# Python code, return ans\nnew_crayons = 2\nused_crayons = 4\nbroken_crayons = 8\ntotal_crayons = new_crayons + used_crayons + broken_crayons\nans = total_crayons",
            "# Python code, return ans\nnew_crayons = 2\nused_crayons = 4\nbroken_crayons = 8\ntotal_crayons = new_crayons + used_crayons + broken_crayons\nans = total_crayons",
            "# Python code, return ans\nnew_crayons = 2\nused_crayons = 4\nbroken_crayons = 8\ntotal_crayons = new_crayons + used_crayons + broken_crayons\nans = total_crayons"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "For a new year's party 2 red balloons, 12 green balloons and 6 white balloons were used. What is the total number of balloons used? ",
        "answer": 20,
        "generated": [
            "# Python code, return ans\nred_balloons = 2\ngreen_balloons = 12\nwhite_balloons = 6\ntotal_balloons = red_balloons + green_balloons + white_balloons\nans = total_balloons",
            "# Python code, return ans\nred_balloons = 2\ngreen_balloons = 12\nwhite_balloons = 6\ntotal_balloons = red_balloons + green_balloons + white_balloons\nans = total_balloons",
            "# Python code, return ans\nred_balloons = 2\ngreen_balloons = 12\nwhite_balloons = 6\ntotal_balloons = red_balloons + green_balloons + white_balloons\nans = total_balloons"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "A vet was weighing 3 cats. The first weighed 2 pounds. The second weighed 7 pounds and the last weighed 4 pounds. What is their combined weight? ",
        "answer": 13,
        "generated": [
            "# Python code, return ans\ncat1_weight = 2\ncat2_weight = 7\ncat3_weight = 4\ncombined_weight = cat1_weight + cat2_weight + cat3_weight\nans = combined_weight",
            "# Python code, return ans\ncat1_weight = 2\ncat2_weight = 7\ncat3_weight = 4\ncombined_weight = cat1_weight + cat2_weight + cat3_weight\nans = combined_weight",
            "# Python code, return ans\ncat1_weight = 2\ncat2_weight = 7\ncat3_weight = 4\ncombined_weight = cat1_weight + cat2_weight + cat3_weight\nans = combined_weight"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "Henry already had 5 dollars, but earned another 2 dollars doing chores. His friend had 13 dollars. If they put their money together, how much would they have? ",
        "answer": 20,
        "generated": [
            "# Python code, return ans\nHenry_money = 5 + 2\nfriend_money = 13\ntotal_money = Henry_money + friend_money\nans = total_money",
            "# Python code, return ans\nHenry_money = 5 + 2\nfriend_money = 13\ntotal_money = Henry_money + friend_money\nans = total_money",
            "# Python code, return ans\nHenry_money = 5 + 2\nfriend_money = 13\ntotal_money = Henry_money + friend_money\nans = total_money"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "Tom read 2 books in May, 6 in June and 10 in July. How many books did Tom read? ",
        "answer": 18,
        "generated": [
            "# Python code, return ans\nbooks_May = 2\nbooks_June = 6\nbooks_July = 10\ntotal_books = books_May + books_June + books_July\nans = total_books",
            "# Python code, return ans\nbooks_May = 2\nbooks_June = 6\nbooks_July = 10\ntotal_books = books_May + books_June + books_July\nans = total_books",
            "# Python code, return ans\nbooks_May = 2\nbooks_June = 6\nbooks_July = 10\ntotal_books = books_May + books_June + books_July\nans = total_books"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "On a table there were 2 green apples, 3 red apples and 14 yellow apples. How many apples were on the table? ",
        "answer": 19,
        "generated": [
            "# Python code, return ans\ngreen_apples = 2\nred_apples = 3\nyellow_apples = 14\ntotal_apples = green_apples + red_apples + yellow_apples\nans = total_apples",
            "# Python code, return ans\ngreen_apples = 2\nred_apples = 3\nyellow_apples = 14\ntotal_apples = green_apples + red_apples + yellow_apples\nans = total_apples",
            "# Python code, return ans\ngreen_apples = 2\nred_apples = 3\nyellow_apples = 14\ntotal_apples = green_apples + red_apples + yellow_apples\nans = total_apples"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "At the arcade Debby spent 2 tickets on a hat, 10 on a stuffed animal and 2 on a yoyo. How many tickets did she spend total? ",
        "answer": 14,
        "generated": [
            "# Python code, return ans\ntickets_hat = 2\ntickets_stuffed_animal = 10\ntickets_yoyo = 2\ntotal_tickets_spent = tickets_hat + tickets_stuffed_animal + tickets_yoyo\nans = total_tickets_spent",
            "# Python code, return ans\ntickets_hat = 2\ntickets_stuffed_animal = 10\ntickets_yoyo = 2\ntotal_tickets_spent = tickets_hat + tickets_stuffed_animal + tickets_yoyo\nans = total_tickets_spent",
            "# Python code, return ans\ntickets_hat = 2\ntickets_stuffed_animal = 10\ntickets_yoyo = 2\ntotal_tickets_spent = tickets_hat + tickets_stuffed_animal + tickets_yoyo\nans = total_tickets_spent"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "A gas station sold 2 boxes of chocolate candy, 5 boxes of sugar candy and 2 boxes of gum. What is the total number of boxes they sold? ",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nchocolate_candy_boxes = 2\nsugar_candy_boxes = 5\ngum_boxes = 2\ntotal_boxes_sold = chocolate_candy_boxes + sugar_candy_boxes + gum_boxes\nans = total_boxes_sold",
            "# Python code, return ans\nchocolate_candy_boxes = 2\nsugar_candy_boxes = 5\ngum_boxes = 2\ntotal_boxes_sold = chocolate_candy_boxes + sugar_candy_boxes + gum_boxes\nans = total_boxes_sold",
            "# Python code, return ans\nchocolate_candy_boxes = 2\nsugar_candy_boxes = 5\ngum_boxes = 2\ntotal_boxes_sold = chocolate_candy_boxes + sugar_candy_boxes + gum_boxes\nans = total_boxes_sold"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "A chef was making soups. She made 2 bowls of chicken soup, 2 bowls of mushroom soup and 7 bowls of tomato soup. How many bowls of soup did she make total? ",
        "answer": 11,
        "generated": [
            "# Python code, return ans\nchicken_soup = 2\nmushroom_soup = 2\ntomato_soup = 7\ntotal_soup = chicken_soup + mushroom_soup + tomato_soup\nans = total_soup",
            "# Python code, return ans\nchicken_soup = 2\nmushroom_soup = 2\ntomato_soup = 7\ntotal_soup = chicken_soup + mushroom_soup + tomato_soup\nans = total_soup",
            "# Python code, return ans\nchicken_soup = 2\nmushroom_soup = 2\ntomato_soup = 7\ntotal_soup = chicken_soup + mushroom_soup + tomato_soup\nans = total_soup"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "Henry was playing tic-tac-toe. He won 2 times, lost 2 times and it was a draw 10 times. How many times did Henry play? ",
        "answer": 14,
        "generated": [
            "# Python code, return ans\nwon = 2\nlost = 2\ndraw = 10\ntotal_played = won + lost + draw\nans = total_played",
            "# Python code, return ans\nwon = 2\nlost = 2\ndraw = 10\ntotal_played = won + lost + draw\nans = total_played",
            "# Python code, return ans\nwon = 2\nlost = 2\ndraw = 10\ntotal_played = won + lost + draw\nans = total_played"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "An artist painted 2 pictures in June. He painted 2 more in July and in August he painted 9. How many pictures did he paint total? ",
        "answer": 13,
        "generated": [
            "# Python code, return ans\npaint_June = 2\npaint_July = 2\npaint_August = 9\ntotal_paint = paint_June + paint_July + paint_August\nans = total_paint",
            "# Python code, return ans\npaint_June = 2\npaint_July = 2\npaint_August = 9\ntotal_paint = paint_June + paint_July + paint_August\nans = total_paint",
            "# Python code, return ans\npaint_June = 2\npaint_July = 2\npaint_August = 9\ntotal_paint = paint_June + paint_July + paint_August\nans = total_paint"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "Henry bought 2 new fireworks and his friend bought 3. If they already had 6 saved from last year, how many do they have now? ",
        "answer": 11,
        "generated": [
            "# Python code, return ans\nHenry_fireworks = 2\nfriend_fireworks = 3\nlast_year_fireworks = 6\ntotal_fireworks = Henry_fireworks + friend_fireworks + last_year_fireworks\nans = total_fireworks",
            "# Python code, return ans\nHenry_fireworks = 2\nfriend_fireworks = 3\nsaved_fireworks = 6\ntotal_fireworks = Henry_fireworks + friend_fireworks + saved_fireworks\nans = total_fireworks",
            "# Python code, return ans\nHenry_fireworks = 2\nfriend_fireworks = 3\nsaved_fireworks = 6\ntotal_fireworks = Henry_fireworks + friend_fireworks + saved_fireworks\nans = total_fireworks"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "At the bank, a customer turned in 2 dimes, 2 nickels and 7 quarters. What is the total number of coins the customer turned in? ",
        "answer": 11,
        "generated": [
            "# Python code, return ans\ndimes = 2\nnickels = 2\nquarters = 7\ntotal_coins = dimes + nickels + quarters\nans = total_coins",
            "# Python code, return ans\ndimes = 2\nnickels = 2\nquarters = 7\ntotal_coins = dimes + nickels + quarters\nans = total_coins",
            "# Python code, return ans\ndimes = 2\nnickels = 2\nquarters = 7\ntotal_coins = dimes + nickels + quarters\nans = total_coins"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "For a party Janet bought some cupcakes. She bought 2 chocolate, 13 vanilla and 2 strawberry. How many cupcakes did she buy? ",
        "answer": 17,
        "generated": [
            "# Python code, return ans\nchocolate_cupcakes = 2\nvanilla_cupcakes = 13\nstrawberry_cupcakes = 2\ntotal_cupcakes = chocolate_cupcakes + vanilla_cupcakes + strawberry_cupcakes\nans = total_cupcakes",
            "# Python code, return ans\nchocolate_cupcakes = 2\nvanilla_cupcakes = 13\nstrawberry_cupcakes = 2\ntotal_cupcakes = chocolate_cupcakes + vanilla_cupcakes + strawberry_cupcakes\nans = total_cupcakes",
            "# Python code, return ans\nchocolate_cupcakes = 2\nvanilla_cupcakes = 13\nstrawberry_cupcakes = 2\ntotal_cupcakes = chocolate_cupcakes + vanilla_cupcakes + strawberry_cupcakes\nans = total_cupcakes"
        ],
        "results": [
            17.0,
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 3
        },
        "prediction": 17.0
    },
    {
        "question": "During a sale, a shoe store sold 2 pairs of sneakers, 4 pairs of sandals and 11 pairs of boots. How many pairs of shoes did the store sell? ",
        "answer": 17,
        "generated": [
            "# Python code, return ans\nsneakers_sold = 2\nsandals_sold = 4\nboots_sold = 11\ntotal_shoes_sold = sneakers_sold + sandals_sold + boots_sold\nans = total_shoes_sold",
            "# Python code, return ans\nsneakers_sold = 2\nsandals_sold = 4\nboots_sold = 11\ntotal_shoes_sold = sneakers_sold + sandals_sold + boots_sold\nans = total_shoes_sold",
            "# Python code, return ans\nsneakers_sold = 2\nsandals_sold = 4\nboots_sold = 11\ntotal_shoes_sold = sneakers_sold + sandals_sold + boots_sold\nans = total_shoes_sold"
        ],
        "results": [
            17.0,
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 3
        },
        "prediction": 17.0
    },
    {
        "question": "Victor was selling chocolate for a school fund raiser. On the first week he sold 75. On the second week he sold 67. On the third week he sold 75. On the fourth week he sold 70 and on the last week he sold 68. What is the mean of the chocolate bars he sold?",
        "answer": 71,
        "generated": [
            "# Python code, return ans\nfirst_week_sales = 75\nsecond_week_sales = 67\nthird_week_sales = 75\nfourth_week_sales = 70\nfifth_week_sales = 68\n\ntotal_sales = first_week_sales + second_week_sales + third_week_sales + fourth_week_sales + fifth_week_sales\nweeks = 5\nmean_sales = total_sales / weeks\nans = mean_sales",
            "# Python code, return ans\nfirst_week = 75\nsecond_week = 67\nthird_week = 75\nfourth_week = 70\nfifth_week = 68\n\ntotal_sold = first_week + second_week + third_week + fourth_week + fifth_week\nweeks = 5\nmean = total_sold / weeks\nans = mean",
            "# Python code, return ans\nfirst_week = 75\nsecond_week = 67\nthird_week = 75\nfourth_week = 70\nfifth_week = 68\n\ntotal_sold = first_week + second_week + third_week + fourth_week + fifth_week\nweeks = 5\nmean = total_sold / weeks\nans = mean"
        ],
        "results": [
            71.0,
            71.0,
            71.0
        ],
        "result_counter": {
            "71.0": 3
        },
        "prediction": 71.0
    },
    {
        "question": "During the first 6 hours of the fair there were the following number of customers: 58, 58, 62, 55, 49 and 48. What is the mean of the number of customers?",
        "answer": 55,
        "generated": [
            "# Python code, return ans\ncustomers = [58, 58, 62, 55, 49, 48]\nmean_customers = sum(customers) / len(customers)\nans = mean_customers",
            "# Python code, return ans\ncustomers = [58, 58, 62, 55, 49, 48]\nmean_customers = sum(customers) / len(customers)\nans = mean_customers",
            "# Python code, return ans\ncustomers = [58, 58, 62, 55, 49, 48]\nmean_customers = sum(customers) / len(customers)\nans = mean_customers"
        ],
        "results": [
            55.0,
            55.0,
            55.0
        ],
        "result_counter": {
            "55.0": 3
        },
        "prediction": 55.0
    },
    {
        "question": "Nancy was counting the number of people on different toys on the playground. She counted: 6, 12, 1, 12, 7, 3 and 8. What is the mean of the people?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\npeople_count = [6, 12, 1, 12, 7, 3, 8]\nmean_people = sum(people_count) / len(people_count)\nans = mean_people",
            "# Python code, return ans\nnum_people = [6, 12, 1, 12, 7, 3, 8]\ntotal_people = sum(num_people)\nmean_people = total_people / len(num_people)\nans = mean_people",
            "# Python code, return ans\nimport numpy as np\n\npeople_count = [6, 12, 1, 12, 7, 3, 8]\nmean_people = np.mean(people_count)\nans = mean_people"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "At John's Pizza Palace in the 6 hours they were open they sold the following number of pizzas: 92 pepperoni, 106 sausage, 96 cheese, 104 mushroom, 96 anchovies and 88 pineapple. What is the mean of the number of pizzas sold?",
        "answer": 97,
        "generated": [
            "# Python code, return ans\npepperoni_pizzas = 92\nsausage_pizzas = 106\ncheese_pizzas = 96\nmushroom_pizzas = 104\nanchovies_pizzas = 96\npineapple_pizzas = 88\n\ntotal_pizzas = pepperoni_pizzas + sausage_pizzas + cheese_pizzas + mushroom_pizzas + anchovies_pizzas + pineapple_pizzas\nmean_pizzas = total_pizzas / 6\nans = mean_pizzas",
            "# Python code, return ans\npepperoni_pizzas = 92\nsausage_pizzas = 106\ncheese_pizzas = 96\nmushroom_pizzas = 104\nanchovies_pizzas = 96\npineapple_pizzas = 88\ntotal_pizzas = pepperoni_pizzas + sausage_pizzas + cheese_pizzas + mushroom_pizzas + anchovies_pizzas + pineapple_pizzas\nmean_pizzas = total_pizzas / 6\nans = mean_pizzas",
            "# Python code, return ans\npepperoni_pizzas = 92\nsausage_pizzas = 106\ncheese_pizzas = 96\nmushroom_pizzas = 104\nanchovies_pizzas = 96\npineapple_pizzas = 88\n\ntotal_pizzas = pepperoni_pizzas + sausage_pizzas + cheese_pizzas + mushroom_pizzas + anchovies_pizzas + pineapple_pizzas\nmean_pizzas = total_pizzas / 6\nans = mean_pizzas"
        ],
        "results": [
            97.0,
            97.0,
            97.0
        ],
        "result_counter": {
            "97.0": 3
        },
        "prediction": 97.0
    },
    {
        "question": "For Halloween Debby and her sister combined the candy they received. Debby had 32 pieces of candy while her sister had 42. If they ate 35 pieces the first night, how many pieces do they have left? ",
        "answer": 39,
        "generated": [
            "# Python code, return ans\nDebby_candy = 32\nsister_candy = 42\ntotal_candy = Debby_candy + sister_candy\ncandy_eaten = 35\ncandy_left = total_candy - candy_eaten\nans = candy_left",
            "# Python code, return ans\nDebby_candy = 32\nsister_candy = 42\ntotal_candy = Debby_candy + sister_candy\ncandy_eaten = 35\ncandy_left = total_candy - candy_eaten\nans = candy_left",
            "# Python code, return ans\nDebby_candy = 32\nsister_candy = 42\ntotal_candy = Debby_candy + sister_candy\ncandy_eaten = 35\ncandy_left = total_candy - candy_eaten\nans = candy_left"
        ],
        "results": [
            39.0,
            39.0,
            39.0
        ],
        "result_counter": {
            "39.0": 3
        },
        "prediction": 39.0
    },
    {
        "question": "A pet store had 13 siamese cats and 5 house cats. During a sale they sold 10 cats. How many cats do they have left? ",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nsiamese_cats = 13\nhouse_cats = 5\ncats_sold = 10\ncats_left = (siamese_cats + house_cats) - cats_sold\nans = cats_left",
            "# Python code, return ans\nsiamese_cats = 13\nhouse_cats = 5\ntotal_cats = siamese_cats + house_cats\ncats_sold = 10\ncats_left = total_cats - cats_sold\nans = cats_left",
            "# Python code, return ans\nsiamese_cats = 13\nhouse_cats = 5\ncats_sold = 10\ncats_left = (siamese_cats + house_cats) - cats_sold\nans = cats_left"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Luke was trying to expand his game collection. He bought 2 games from a friend and bought 2 more at a garage sale. If 2 of the games didn't work, how many good games did he end up with? ",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ngames_bought = 2 + 2\nbroken_games = 2\ngood_games = games_bought - broken_games\nans = good_games",
            "# Python code, return ans\ngames_bought = 2 + 2\nbroken_games = 2\ngood_games = games_bought - broken_games\nans = good_games",
            "# Python code, return ans\ngames_bought = 2 + 2\nbroken_games = 2\ngood_games = games_bought - broken_games\nans = good_games"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Oliver had to wash 39 short sleeve shirts and 47 long sleeve shirts before school. If he had only washed 20 of them by the time school started, how many did he not wash? ",
        "answer": 66,
        "generated": [
            "# Python code, return ans\nshort_sleeve_shirts = 39\nlong_sleeve_shirts = 47\ntotal_shirts = short_sleeve_shirts + long_sleeve_shirts\nwashed_shirts = 20\nnot_washed_shirts = total_shirts - washed_shirts\nans = not_washed_shirts",
            "# Python code, return ans\nshort_sleeve_shirts = 39\nlong_sleeve_shirts = 47\ntotal_shirts = short_sleeve_shirts + long_sleeve_shirts\nwashed_shirts = 20\nnot_washed_shirts = total_shirts - washed_shirts\nans = not_washed_shirts",
            "# Python code, return ans\nshort_sleeve_shirts = 39\nlong_sleeve_shirts = 47\ntotal_shirts = short_sleeve_shirts + long_sleeve_shirts\nwashed_shirts = 20\nnot_washed_shirts = total_shirts - washed_shirts\nans = not_washed_shirts"
        ],
        "results": [
            66.0,
            66.0,
            66.0
        ],
        "result_counter": {
            "66.0": 3
        },
        "prediction": 66.0
    },
    {
        "question": "While on vacation, Debby took 24 pictures at the zoo and 12 at the museum. If she later deleted 14 of the pictures, how many pictures from her vacation did she still have? ",
        "answer": 22,
        "generated": [
            "# Python code, return ans\npictures_zoo = 24\npictures_museum = 12\npictures_deleted = 14\npictures_left = (pictures_zoo + pictures_museum) - pictures_deleted\nans = pictures_left",
            "# Python code, return ans\npictures_zoo = 24\npictures_museum = 12\npictures_deleted = 14\nremaining_pictures = (pictures_zoo + pictures_museum) - pictures_deleted\nans = remaining_pictures",
            "# Python code, return ans\npictures_zoo = 24\npictures_museum = 12\npictures_deleted = 14\npictures_left = (pictures_zoo + pictures_museum) - pictures_deleted\nans = pictures_left"
        ],
        "results": [
            22.0,
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 3
        },
        "prediction": 22.0
    },
    {
        "question": "Zoe bought two coloring books. One had 44 pictures and the other had 44. After one week she had already colored 20 of the pictures. How many pictures does she still have to color? ",
        "answer": 68,
        "generated": [
            "# Python code, return ans\nbook1_pictures = 44\nbook2_pictures = 44\ncolored_pictures = 20\ntotal_pictures = book1_pictures + book2_pictures\npictures_left = total_pictures - colored_pictures\nans = pictures_left",
            "# Python code, return ans\nbook1_pictures = 44\nbook2_pictures = 44\ncolored_pictures = 20\ntotal_pictures = book1_pictures + book2_pictures\nremaining_pictures = total_pictures - colored_pictures\nans = remaining_pictures",
            "# Python code, return ans\nbook1_pictures = 44\nbook2_pictures = 44\ncolored_pictures = 20\ntotal_pictures = book1_pictures + book2_pictures\nremaining_pictures = total_pictures - colored_pictures\nans = remaining_pictures"
        ],
        "results": [
            68.0,
            68.0,
            68.0
        ],
        "result_counter": {
            "68.0": 3
        },
        "prediction": 68.0
    },
    {
        "question": "Faye and her mom were picking carrots from their garden. Faye picked 23 and her mother picked 5. If only 12 of the carrots were good, how many bad carrots did they have? ",
        "answer": 16,
        "generated": [
            "# Python code, return ans\nFaye_carrots = 23\nmom_carrots = 5\ngood_carrots = 12\ntotal_carrots = Faye_carrots + mom_carrots\nbad_carrots = total_carrots - good_carrots\nans = bad_carrots",
            "# Python code, return ans\nFaye_carrots = 23\nmom_carrots = 5\ntotal_carrots = Faye_carrots + mom_carrots\ngood_carrots = 12\nbad_carrots = total_carrots - good_carrots\nans = bad_carrots",
            "# Python code, return ans\nFaye_carrots = 23\nmom_carrots = 5\ngood_carrots = 12\ntotal_carrots = Faye_carrots + mom_carrots\nbad_carrots = total_carrots - good_carrots\nans = bad_carrots"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "At the schools book fair Sam bought 13 adventure books and 17 mystery books. If 15 of the books were used, how many new books did he buy? ",
        "answer": 15,
        "generated": [
            "# Python code, return ans\nadventure_books = 13\nmystery_books = 17\ntotal_books = adventure_books + mystery_books\nused_books = 15\nnew_books = total_books - used_books\nans = new_books",
            "# Python code, return ans\nadventure_books = 13\nmystery_books = 17\ntotal_books = adventure_books + mystery_books\nused_books = 15\nnew_books = total_books - used_books\nans = new_books",
            "# Python code, return ans\nadventure_books = 13\nmystery_books = 17\ntotal_books = adventure_books + mystery_books\nused_books = 15\nnew_books = total_books - used_books\nans = new_books"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "Amy had 26 music files and 36 video files on her flash drive. If she deleted 48 of the files, how many files were still on her flash drive? ",
        "answer": 14,
        "generated": [
            "# Python code, return ans\nmusic_files = 26\nvideo_files = 36\ntotal_files = music_files + video_files\ndeleted_files = 48\nremaining_files = total_files - deleted_files\nans = remaining_files",
            "# Python code, return ans\nmusic_files = 26\nvideo_files = 36\ntotal_files = music_files + video_files\ndeleted_files = 48\nremaining_files = total_files - deleted_files\nans = remaining_files",
            "# Python code, return ans\nmusic_files = 26\nvideo_files = 36\ntotal_files = music_files + video_files\ndeleted_files = 48\nremaining_files = total_files - deleted_files\nans = remaining_files"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "Emily was playing a trivia game. In the first round she scored 16 points and in the second round she scored 33 points. In the last round she lost 48 points. How many points did she have at the end of the game? ",
        "answer": 1,
        "generated": [
            "# Python code, return ans\nfirst_round_points = 16\nsecond_round_points = 33\nlast_round_points = -48\ntotal_points = first_round_points + second_round_points + last_round_points\nans = total_points",
            "# Python code, return ans\nfirst_round_points = 16\nsecond_round_points = 33\nlost_points = 48\ntotal_points = first_round_points + second_round_points - lost_points\nans = total_points",
            "# Python code, return ans\nfirst_round_points = 16\nsecond_round_points = 33\nlast_round_points = -48\ntotal_points = first_round_points + second_round_points + last_round_points\nans = total_points"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "Paige had 43 math problems and 12 science problems for homework. If she finished 44 of the problems at school, how many problems did she have to do for homework? ",
        "answer": 11,
        "generated": [
            "# Python code, return ans\nmath_problems = 43\nscience_problems = 12\ntotal_problems = math_problems + science_problems\nfinished_at_school = 44\nhomework_problems = total_problems - finished_at_school\nans = homework_problems",
            "# Python code, return ans\nmath_problems = 43\nscience_problems = 12\ntotal_problems = math_problems + science_problems\nfinished_at_school = 44\nhomework_problems = total_problems - finished_at_school\nans = homework_problems",
            "# Python code, return ans\nmath_problems = 43\nscience_problems = 12\ntotal_problems = math_problems + science_problems\nfinished_at_school = 44\nhomework_problems = total_problems - finished_at_school\nans = homework_problems"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "Janet picked 4 tulips and 11 roses to make flower bouquets. If she only used 11 of the flowers though, how many extra flowers did Janet pick? ",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ntulips = 4\nroses = 11\ntotal_flowers = tulips + roses\nflowers_used = 11\nextra_flowers = total_flowers - flowers_used\nans = extra_flowers",
            "# Python code, return ans\ntulips = 4\nroses = 11\ntotal_flowers = tulips + roses\nused_flowers = 11\nextra_flowers = total_flowers - used_flowers\nans = extra_flowers",
            "# Python code, return ans\ntulips = 4\nroses = 11\ntotal_flowers = tulips + roses\nflowers_used = 11\nextra_flowers = total_flowers - flowers_used\nans = extra_flowers"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Edward started his own lawn mowing business. In the spring he made 2 dollars mowing lawns and in the summer he made 27 dollars. If he had to spend 5 dollars buying supplies, how much money did he end up with? ",
        "answer": 24,
        "generated": [
            "# Python code, return ans\nspring_income = 2\nsummer_income = 27\nsupplies_cost = 5\ntotal_income = spring_income + summer_income\nnet_income = total_income - supplies_cost\nans = net_income",
            "# Python code, return ans\nspring_income = 2\nsummer_income = 27\nsupplies_cost = 5\ntotal_income = spring_income + summer_income\nnet_income = total_income - supplies_cost\nans = net_income",
            "# Python code, return ans\nspring_income = 2\nsummer_income = 27\ntotal_income = spring_income + summer_income\nsupplies_cost = 5\nfinal_money = total_income - supplies_cost\nans = final_money"
        ],
        "results": [
            24.0,
            24.0,
            24.0
        ],
        "result_counter": {
            "24.0": 3
        },
        "prediction": 24.0
    },
    {
        "question": "For the school bake sale Amy made pastries. She baked 15 cupcakes and 48 cookies. After the sale she had 12 to take back home. How many pastries did she sell? ",
        "answer": 51,
        "generated": [
            "# Python code, return ans\ncupcakes = 15\ncookies = 48\ntotal_pastries = cupcakes + cookies\npastries_left = 12\npastries_sold = total_pastries - pastries_left\nans = pastries_sold",
            "# Python code, return ans\ncupcakes = 15\ncookies = 48\ntotal_pastries = cupcakes + cookies\nleftover_pastries = 12\npastries_sold = total_pastries - leftover_pastries\nans = pastries_sold",
            "# Python code, return ans\ncupcakes = 15\ncookies = 48\ntotal_pastries = cupcakes + cookies\nleftover_pastries = 12\nsold_pastries = total_pastries - leftover_pastries\nans = sold_pastries"
        ],
        "results": [
            51.0,
            51.0,
            51.0
        ],
        "result_counter": {
            "51.0": 3
        },
        "prediction": 51.0
    },
    {
        "question": "While shopping, Maria bought 35 green towels and 21 white towels. If she gave her mother 34 of them, how many towels did Maria end up with? ",
        "answer": 22,
        "generated": [
            "# Python code, return ans\ngreen_towels = 35\nwhite_towels = 21\ntotal_towels = green_towels + white_towels\ntowels_given_to_mother = 34\ntowels_left = total_towels - towels_given_to_mother\nans = towels_left",
            "# Python code, return ans\ngreen_towels = 35\nwhite_towels = 21\ntotal_towels = green_towels + white_towels\ntowels_given = 34\nremaining_towels = total_towels - towels_given\nans = remaining_towels",
            "# Python code, return ans\ngreen_towels = 35\nwhite_towels = 21\ntotal_towels = green_towels + white_towels\ntowels_given_to_mother = 34\ntowels_left = total_towels - towels_given_to_mother\nans = towels_left"
        ],
        "results": [
            22.0,
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 3
        },
        "prediction": 22.0
    },
    {
        "question": "There were 17 girls and 32 boys trying out for the schools basketball team. If only 10 of them got called back, how many students didn't make the cut? ",
        "answer": 39,
        "generated": [
            "# Python code, return ans\ngirls = 17\nboys = 32\ntotal_students = girls + boys\ncalled_back = 10\nstudents_not_make_cut = total_students - called_back\nans = students_not_make_cut",
            "# Python code, return ans\ngirls = 17\nboys = 32\ntotal_students = girls + boys\ncalled_back = 10\nnot_called_back = total_students - called_back\nans = not_called_back",
            "# Python code, return ans\ngirls = 17\nboys = 32\ntotal_students = girls + boys\ncalled_back = 10\nnot_called_back = total_students - called_back\nans = not_called_back"
        ],
        "results": [
            39.0,
            39.0,
            39.0
        ],
        "result_counter": {
            "39.0": 3
        },
        "prediction": 39.0
    },
    {
        "question": "A waiter at 'The Greasy Spoon' restaurant had 39 customers to wait on. During the lunch rush he added another 12 customers. If 49 of the customers didn't leave him a tip, how many customers did leave a tip? ",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ninitial_customers = 39\nadded_customers = 12\ntotal_customers = initial_customers + added_customers\nno_tip_customers = 49\ntip_customers = total_customers - no_tip_customers\nans = tip_customers",
            "# Python code, return ans\ninitial_customers = 39\nlunch_rush_customers = 12\ntotal_customers = initial_customers + lunch_rush_customers\nno_tip_customers = 49\ntip_customers = total_customers - no_tip_customers\nans = tip_customers",
            "# Python code, return ans\ninitial_customers = 39\nlunch_rush_customers = 12\ntotal_customers = initial_customers + lunch_rush_customers\nno_tip_customers = 49\ntip_customers = total_customers - no_tip_customers\nans = tip_customers"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "The school cafeteria ordered 25 red apples and 17 green apples for students lunches. But, if only 10 students wanted fruit, how many extra did the cafeteria end up with? ",
        "answer": 32,
        "generated": [
            "# Python code, return ans\nred_apples = 25\ngreen_apples = 17\ntotal_apples = red_apples + green_apples\nstudents_want_fruit = 10\nextra_apples = total_apples - students_want_fruit\nans = extra_apples",
            "# Python code, return ans\nred_apples = 25\ngreen_apples = 17\nstudents_wanted_fruit = 10\ntotal_apples = red_apples + green_apples\nextra_apples = total_apples - students_wanted_fruit\nans = extra_apples",
            "# Python code, return ans\nred_apples = 25\ngreen_apples = 17\ntotal_apples = red_apples + green_apples\nstudents_wanted_fruit = 10\nextra_apples = total_apples - students_wanted_fruit\nans = extra_apples"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "At the arcade, Jerry won 29 tickets playing 'whack a mole' and 17 tickets playing 'skee ball'. If he spent 12 of his tickets on a hat, how many tickets does Jerry have left? ",
        "answer": 34,
        "generated": [
            "# Python code, return ans\nwhack_a_mole_tickets = 29\nskee_ball_tickets = 17\nspent_tickets = 12\ntotal_tickets = whack_a_mole_tickets + skee_ball_tickets\nremaining_tickets = total_tickets - spent_tickets\nans = remaining_tickets",
            "# Python code, return ans\nwhack_a_mole_tickets = 29\nskee_ball_tickets = 17\nspent_tickets = 12\nremaining_tickets = (whack_a_mole_tickets + skee_ball_tickets) - spent_tickets\nans = remaining_tickets",
            "# Python code, return ans\nwhack_a_mole_tickets = 29\nskee_ball_tickets = 17\nspent_tickets = 12\nremaining_tickets = (whack_a_mole_tickets + skee_ball_tickets) - spent_tickets\nans = remaining_tickets"
        ],
        "results": [
            34.0,
            34.0,
            34.0
        ],
        "result_counter": {
            "34.0": 3
        },
        "prediction": 34.0
    },
    {
        "question": "Cody had 45 dollars. For his birthday he got 9 more dollars but spent 19 on a new game. How much money does he have now?",
        "answer": 35,
        "generated": [
            "# Python code, return ans\ninitial_money = 45\nbirthday_money = 9\nspent_money = 19\ncurrent_money = initial_money + birthday_money - spent_money\nans = current_money",
            "# Python code, return ans\ninitial_money = 45\nbirthday_money = 9\nspent_money = 19\ncurrent_money = initial_money + birthday_money - spent_money\nans = current_money",
            "# Python code, return ans\ninitial_money = 45\nbirthday_money = 9\nspent_money = 19\ncurrent_money = initial_money + birthday_money - spent_money\nans = current_money"
        ],
        "results": [
            35.0,
            35.0,
            35.0
        ],
        "result_counter": {
            "35.0": 3
        },
        "prediction": 35.0
    },
    {
        "question": "Joanne is campaigning for class president and plans to distribute some campaign materials: 20 flyers and 16 buttons. She wants each classroom to receive an identical set of campaign materials, without having any materials left over. What is the greatest number of classrooms Joanne can distribute materials to? ",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nimport math\nflyers = 20\nbuttons = 16\ngreatest_common_divisor = math.gcd(flyers, buttons)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\nflyers = 20\nbuttons = 16\ngreatest_common_divisor = math.gcd(flyers, buttons)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\nflyers = 20\nbuttons = 16\ngreatest_common_divisor = math.gcd(flyers, buttons)\nans = greatest_common_divisor"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Serena wants to create snack bags for a trip she is going on. She has 6 granola bars and 10 pieces of dried fruit. If the snack bags should be identical without any food left over, what is the greatest number of snack bags Serena can make? ",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ngranola_bars = 6\ndried_fruit = 10\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_common_divisor = gcd(granola_bars, dried_fruit)\nans = greatest_common_divisor",
            "# Python code, return ans\ngranola_bars = 6\ndried_fruit = 10\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_common_divisor = gcd(granola_bars, dried_fruit)\nans = greatest_common_divisor",
            "# Python code, return ans\ngranola_bars = 6\ndried_fruit = 10\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ngreatest_common_divisor = gcd(granola_bars, dried_fruit)\nans = greatest_common_divisor\nans"
        ],
        "results": [
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 2
        },
        "prediction": 2.0
    },
    {
        "question": "Matthew goes hiking every 12 days and swimming every 6 days. He did both kinds of exercise today. How many days from now will he go both hiking and swimming again? ",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nhiking_days = 12\nswimming_days = 6\n\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nans = lcm(hiking_days, swimming_days)",
            "# Python code, return ans\nhiking_days = 12\nswimming_days = 6\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nans = lcm(hiking_days, swimming_days)",
            "# Python code, return ans\nhiking_days = 12\nswimming_days = 6\n\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nans = lcm(hiking_days, swimming_days)"
        ],
        "results": [
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 2
        },
        "prediction": 12.0
    },
    {
        "question": "Edeena is packing equal numbers of apple slices and grapes for snacks. Edeena bags the apple slices in groups of 18 and the grapes in groups of 9. What is the smallest number of grapes that she can pack? ",
        "answer": 18,
        "generated": [
            "# Python code, return ans\napple_slices_per_bag = 18\ngrapes_per_bag = 9\nlcm = apple_slices_per_bag * grapes_per_bag // math.gcd(apple_slices_per_bag, grapes_per_bag)\nans = lcm\nans",
            "# Python code, return ans\nimport math\napple_slices_per_bag = 18\ngrapes_per_bag = 9\nlcm = (apple_slices_per_bag * grapes_per_bag) // math.gcd(apple_slices_per_bag, grapes_per_bag)\nans = lcm\nans",
            "# Python code, return ans\nimport math\napple_slices_group = 18\ngrapes_group = 9\nlcm = (apple_slices_group * grapes_group) // math.gcd(apple_slices_group, grapes_group)\ngrapes_to_pack = lcm // grapes_group\nans = grapes_to_pack"
        ],
        "results": [
            18.0,
            2.0
        ],
        "result_counter": {
            "18.0": 1,
            "2.0": 1
        },
        "prediction": 18.0
    },
    {
        "question": "A club has 16 girls and 8 boys as members. The president wants to break the club into groups, with each group containing the same combination of girls and boys. The president also wants to make sure that no one is left out. What is the greatest number of groups the president can make? ",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nimport math\n\ngirls = 16\nboys = 8\ngreatest_common_divisor = math.gcd(girls, boys)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\ngirls = 16\nboys = 8\ngreatest_common_divisor = math.gcd(girls, boys)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\ngirls = 16\nboys = 8\ngreatest_common_divisor = math.gcd(girls, boys)\nans = greatest_common_divisor\nans"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Ariel is making flower arrangements. He has 7 roses and 14 daisies. If Ariel wants to make all the arrangements identical and have no flowers left over, what is the greatest number of flower arrangements that he can make? ",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nimport math\nroses = 7\ndaisies = 14\ngreatest_common_divisor = math.gcd(roses, daisies)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nimport math\nroses = 7\ndaisies = 14\ngcd = math.gcd(roses, daisies)\nans = gcd",
            "# Python code, return ans\nimport math\nroses = 7\ndaisies = 14\ngreatest_common_divisor = math.gcd(roses, daisies)\nans = greatest_common_divisor\nans"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Sarah's Shipping and Ryan's Mail Services both ship packages. Sarah's trucks will only carry loads of 18 packages. In contrast, Ryan's trucks will only carry loads of 11 packages. If both businesses ended up shipping the same number of packages this morning, what is the minimum number of packages each must have shipped? ",
        "answer": 198,
        "generated": [
            "# Python code, return ans\nSarah_truck_capacity = 18\nRyan_truck_capacity = 11\n\n# Find the least common multiple (LCM) of Sarah_truck_capacity and Ryan_truck_capacity\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nminimum_packages = lcm(Sarah_truck_capacity, Ryan_truck_capacity)\nans = minimum_packages\nans",
            "# Python code, return ans\nSarah_truck_capacity = 18\nRyan_truck_capacity = 11\n\n# Find the least common multiple of Sarah's and Ryan's truck capacities\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm_val = greater\n            break\n        greater += 1\n    return lcm_val\n\nans = lcm(Sarah_truck_capacity, Ryan_truck_capacity)",
            "# Python code, return ans\nSarah_truck_capacity = 18\nRyan_truck_capacity = 11\n\n# Find the least common multiple (LCM) of the truck capacities\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nminimum_packages = lcm(Sarah_truck_capacity, Ryan_truck_capacity)\nans = minimum_packages\nans"
        ],
        "results": [
            198.0,
            198.0
        ],
        "result_counter": {
            "198.0": 2
        },
        "prediction": 198.0
    },
    {
        "question": "Nathan is stocking bathrooms at the hotel where he works. He has 18 rolls of toilet paper and 9 bars of soap. If he wants all bathrooms to be stocked identically, with the same combination of supplies in each one and nothing left over, what is the greatest combination of bathrooms Nathan can stock? ",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nimport math\ntoilet_paper = 18\nsoap = 9\ngreatest_common_divisor = math.gcd(toilet_paper, soap)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\ntoilet_paper = 18\nsoap = 9\ngreatest_common_divisor = math.gcd(toilet_paper, soap)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\ntoilet_paper = 18\nsoap = 9\ngreatest_common_divisor = math.gcd(toilet_paper, soap)\nans = greatest_common_divisor"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Tayli wishes to advertise her business, so she gives packs of 13 red flyers to each restaurant owner and sets of 20 blue flyers to each clothing store owner. At the end of the day, Tayli realizes that she gave out the same number of red and blue flyers. What is the minimum number of flyers of each color she distributed? ",
        "answer": 260,
        "generated": [
            "# Python code, return ans\nred_per_restaurant = 13\nblue_per_clothing_store = 20\n\n# Find the LCM (Least Common Multiple) of red_per_restaurant and blue_per_clothing_store\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nminimum_flyers = lcm(red_per_restaurant, blue_per_clothing_store)\nans = minimum_flyers",
            "# Python code, return ans\nred_flyers_per_restaurant = 13\nblue_flyers_per_clothing_store = 20\n\n# Find the LCM (Least Common Multiple) of 13 and 20\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\nminimum_flyers = lcm(red_flyers_per_restaurant, blue_flyers_per_clothing_store)\nans = minimum_flyers",
            "# Python code, return ans\nred_flyers_per_restaurant = 13\nblue_flyers_per_clothing_store = 20\ni = 1\n\nwhile True:\n    red_flyers = red_flyers_per_restaurant * i\n    blue_flyers = blue_flyers_per_clothing_store * i\n    if red_flyers % blue_flyers_per_clothing_store == 0:\n        ans = red_flyers\n        break\n    i += 1\n\nans"
        ],
        "results": [
            260.0
        ],
        "result_counter": {
            "260.0": 1
        },
        "prediction": 260.0
    },
    {
        "question": "Lavinia has 9 glasses and 6 mugs. She would like to set them out in identical groups, with none left over, in preparation for a dinner party. What is the greatest number of groups Lavinia can set out? ",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nimport math\nglasses = 9\nmugs = 6\ngreatest_common_divisor = math.gcd(glasses, mugs)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\nglasses = 9\nmugs = 6\ngreatest_common_divisor = math.gcd(glasses, mugs)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\nglasses = 9\nmugs = 6\ngreatest_common_divisor = math.gcd(glasses, mugs)\nans = greatest_common_divisor"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Aylin is making a scrapbook using 18 photos and 20 newspaper clippings. She wants all the pages to be set up in the same way, with the same combination of photos and newspaper clippings on every page. She also wants to make sure that no items are left over. What is the greatest number of scrapbook pages that Aylin can create?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\nimport math\nphotos = 18\nnewspaper_clippings = 20\ngreatest_common_divisor = math.gcd(photos, newspaper_clippings)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nimport math\nphotos = 18\nclippings = 20\ngcd = math.gcd(photos, clippings)\nans = gcd",
            "# Python code, return ans\nimport math\nphotos = 18\nnewspaper_clippings = 20\ngreatest_common_divisor = math.gcd(photos, newspaper_clippings)\nans = greatest_common_divisor"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Hay's Linens sells hand towels in sets of 17 and bath towels in sets of 6. If the store sold the same number of each this morning, what is the smallest number of each type of towel that the store must have sold? ",
        "answer": 102,
        "generated": [
            "# Python code, return ans\nhand_towel_set = 17\nbath_towel_set = 6\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\nlcm = (hand_towel_set * bath_towel_set) // gcd(hand_towel_set, bath_towel_set)\nans = lcm\nans",
            "# Python code, return ans\nhand_towel_set = 17\nbath_towel_set = 6\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\nlcm = (hand_towel_set * bath_towel_set) // gcd(hand_towel_set, bath_towel_set)\nans = lcm\nans",
            "# Python code, return ans\nhand_towel_set = 17\nbath_towel_set = 6\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nans = lcm(hand_towel_set, bath_towel_set)\nans"
        ],
        "results": [],
        "result_counter": {},
        "prediction": null
    },
    {
        "question": "In preparation for a party, Brant is putting desserts onto platters. The chocolate cake is cut into 15 pieces and the cheesecake is cut into 6 pieces. If he wants to prepare identical platters without having any cake left over, what is the greatest number of platters he can prepare?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nimport math\nchocolate_cake_pieces = 15\ncheesecake_pieces = 6\ngreatest_common_divisor = math.gcd(chocolate_cake_pieces, cheesecake_pieces)\nnumber_of_platters = greatest_common_divisor\nans = number_of_platters",
            "# Python code, return ans\nimport math\nchocolate_cake_pieces = 15\ncheesecake_pieces = 6\ngreatest_common_divisor = math.gcd(chocolate_cake_pieces, cheesecake_pieces)\ngreatest_num_of_platters = greatest_common_divisor\nans = greatest_num_of_platters",
            "# Python code, return ans\nimport math\nchocolate_cake_pieces = 15\ncheesecake_pieces = 6\ngreatest_common_divisor = math.gcd(chocolate_cake_pieces, cheesecake_pieces)\ngreatest_number_of_platters = greatest_common_divisor\nans = greatest_number_of_platters"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Two bikers are riding a circular path. The first rider completes a round in 12 minutes. The second rider completes a round in 18 minutes. If they both started at the same place and time and go in the same direction, after how many minutes will they meet again at the starting point?",
        "answer": 36,
        "generated": [
            "# Python code, return ans\nfirst_rider_time = 12\nsecond_rider_time = 18\n\n# Finding the LCM of the two times\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\nmeeting_time = lcm(first_rider_time, second_rider_time)\nans = meeting_time\nans",
            "# Python code, return ans\nimport math\nfirst_rider_time = 12\nsecond_rider_time = 18\nlcm = (first_rider_time * second_rider_time) // math.gcd(first_rider_time, second_rider_time)\nans = lcm",
            "# Python code, return ans\nimport math\n\nfirst_rider = 12\nsecond_rider = 18\nlcm = (first_rider * second_rider) // math.gcd(first_rider, second_rider)\nans = lcm"
        ],
        "results": [
            36.0,
            36.0
        ],
        "result_counter": {
            "36.0": 2
        },
        "prediction": 36.0
    },
    {
        "question": "Sean has 8-inch pieces of toy train track and Ruth has 18-inch pieces of train track. How many of each piece would each child need to build tracks that are equal in length?",
        "answer": 72,
        "generated": [
            "# Python code, return ans\nSean_track_length = 8\nRuth_track_length = 18\nleast_common_multiple = 72  # The least common multiple of 8 and 18 is 72\n\nSean_tracks_needed = least_common_multiple // Sean_track_length\nRuth_tracks_needed = least_common_multiple // Ruth_track_length\n\nans = (Sean_tracks_needed, Ruth_tracks_needed)",
            "# Python code, return ans\nSean_track_length = 8\nRuth_track_length = 18\n\n# Find the least common multiple (LCM) of the two track lengths\ndef lcm(x, y):\n    greater = max(x, y)\n    while (greater % x != 0) or (greater % y != 0):\n        greater += 1\n    return greater\n\nequal_track_length = lcm(Sean_track_length, Ruth_track_length)\n\n# Calculate the number of pieces each child needs\nSean_pieces = equal_track_length // Sean_track_length\nRuth_pieces = equal_track_length // Ruth_track_length\n\nans = (Sean_pieces, Ruth_pieces)",
            "# Python code, return ans\nSean_track_length = 8\nRuth_track_length = 18\n\n# Find the least common multiple (LCM) of the two track lengths\ndef lcm(x, y):\n    greater = max(x, y)\n    while (greater % x != 0) or (greater % y != 0):\n        greater += 1\n    return greater\n\nLCM = lcm(Sean_track_length, Ruth_track_length)\n\n# Calculate the number of pieces each child needs\nSean_pieces = LCM // Sean_track_length\nRuth_pieces = LCM // Ruth_track_length\n\nans = (Sean_pieces, Ruth_pieces)"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "The radio station gave away a $100 bill for every 100th caller. Every 30th caller received free concert tickets. How many callers must get through before one of them receives both a coupon and a concert ticket?",
        "answer": 300,
        "generated": [
            "# Python code, return ans\nimport math\ncaller_coupon = 100\ncaller_ticket = 30\nans = math.lcm(caller_coupon, caller_ticket)\nans",
            "# Python code, return ans\nimport math\nans = math.lcm(100, 30)",
            "# Python code, return ans\nimport math\nans = int(math.lcm(100, 30))"
        ],
        "results": [
            300.0,
            300.0,
            300.0
        ],
        "result_counter": {
            "300.0": 3
        },
        "prediction": 300.0
    },
    {
        "question": "Mrs. Evans has 120 crayons and 30 pieces of paper to give to her students. What is the largest number of students she can have in her class so that each student gets equal number of crayons and equal number of paper?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\ncrayons = 120\npapers = 30\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nstudents = gcd(crayons, papers)\nans = students",
            "# Python code, return ans\nimport math\n\ncrayons = 120\npaper = 30\nlargest_students = math.gcd(crayons, paper)\nans = largest_students",
            "# Python code, return ans\ncrayons = 120\npapers = 30\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nstudents = gcd(crayons, papers)\nans = students"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "Camryn practices the trumpet every 11th day and the flute every 3rd day. Camryn practiced both the trumpet and the flute today. How many days until Camryn practices the trumpet and flute again in the same day?",
        "answer": 33,
        "generated": [
            "# Python code, return ans\ntrumpet_interval = 11\nflute_interval = 3\ni = 1\nwhile True:\n    if i % trumpet_interval == 0 and i % flute_interval == 0:\n        ans = i\n        break\n    i += 1\nans",
            "# Python code, return ans\ntrumpet_interval = 11\nflute_interval = 3\ni = 1\nwhile True:\n    if i % trumpet_interval == 0 and i % flute_interval == 0:\n        ans = i\n        break\n    i += 1\nans",
            "# Python code, return ans\ntrumpet_interval = 11\nflute_interval = 3\ni = 1\nwhile True:\n    if (trumpet_interval * i) % flute_interval == 0:\n        ans = trumpet_interval * i\n        break\n    i += 1\nans"
        ],
        "results": [
            33.0,
            33.0,
            33.0
        ],
        "result_counter": {
            "33.0": 3
        },
        "prediction": 33.0
    },
    {
        "question": "Sherman goes golfing every 6th day and Brad goes golfing every 7th day. If Sherman and Brad both went golfing today, how many days until they will go golfing on the same day again?",
        "answer": 42,
        "generated": [
            "# Python code, return ans\nSherman_golf = 6\nBrad_golf = 7\n\ni = 1\nwhile True:\n    if i % Sherman_golf == 0 and i % Brad_golf == 0:\n        ans = i\n        break\n    i += 1\n\nans",
            "# Python code, return ans\nSherman_golf_frequency = 6\nBrad_golf_frequency = 7\n\n# Find the least common multiple (LCM) of Sherman and Brad's golf frequencies\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nans = lcm(Sherman_golf_frequency, Brad_golf_frequency)\nans",
            "# Python code, return ans\nSherman_golf = 6\nBrad_golf = 7\n\ndef lcm(x, y):\n    if x > y:\n        greater = x\n    else:\n        greater = y\n\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n\n    return lcm\n\nans = lcm(Sherman_golf, Brad_golf)\nans"
        ],
        "results": [
            42.0,
            42.0,
            42.0
        ],
        "result_counter": {
            "42.0": 3
        },
        "prediction": 42.0
    },
    {
        "question": "Enzo and Beatriz are playing games at their local arcade. Incredibly, Enzo wins 5 tickets from every game, and Beatriz wins 11 tickets from every game. When they stopped playing games, Enzo and Beatriz had won the same number of total tickets. What is the minimum number of games that Enzo could have played?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\nEnzo_tickets_per_game = 5\nBeatriz_tickets_per_game = 11\ngames_played = 0\n\nwhile Enzo_tickets_per_game * games_played != Beatriz_tickets_per_game * games_played:\n    games_played += 1\n    if Enzo_tickets_per_game * games_played % Beatriz_tickets_per_game == 0:\n        ans = games_played\n        break\n\nans",
            "# Python code, return ans\nEnzo_tickets_per_game = 5\nBeatriz_tickets_per_game = 11\nEnzo_games = 0\n\nwhile True:\n    Enzo_games += 1\n    Beatriz_games = (Enzo_tickets_per_game * Enzo_games) / Beatriz_tickets_per_game\n    if Beatriz_games.is_integer():\n        break\n\nans = Enzo_games\nans",
            "# Python code, return ans\nEnzo_tickets_per_game = 5\nBeatriz_tickets_per_game = 11\nEnzo_games = 0\n\nwhile True:\n    Enzo_games += 1\n    Enzo_total_tickets = Enzo_games * Enzo_tickets_per_game\n    Beatriz_games = Enzo_total_tickets / Beatriz_tickets_per_game\n    if Beatriz_games.is_integer():\n        break\n\nans = Enzo_games\nans"
        ],
        "results": [
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 2
        },
        "prediction": 11.0
    },
    {
        "question": "Tim has 39 pairs of headphones and 13 music players. Tim wants to sell all of the headphones and music players in identical packages. What is the greatest number of packages Tim can make?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\nimport math\nheadphones = 39\nmusic_players = 13\ngreatest_common_divisor = math.gcd(headphones, music_players)\npackages = greatest_common_divisor\nans = packages",
            "# Python code, return ans\nimport math\nheadphones = 39\nmusic_players = 13\ngreatest_common_divisor = math.gcd(headphones, music_players)\npackages = greatest_common_divisor\nans = packages",
            "# Python code, return ans\nimport math\nheadphones = 39\nmusic_players = 13\ngreatest_common_divisor = math.gcd(headphones, music_players)\npackages = greatest_common_divisor\nans = packages"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "Yadira's mom is buying hot dogs and hot dog buns for the family barbecue. Hot dogs come in packs of 12 and hot dog buns come in packs of 9. The store does not sell parts of a pack and Yadira's mom wants the same number of hot dogs as hot dog buns. What is the smallest total number of hot dogs that Yadira's mom can purchase?",
        "answer": 36,
        "generated": [
            "# Python code, return ans\nimport math\nhot_dogs_per_pack = 12\nbuns_per_pack = 9\nlcm = hot_dogs_per_pack * buns_per_pack // math.gcd(hot_dogs_per_pack, buns_per_pack)\nans = lcm",
            "# Python code, return ans\nimport math\nhot_dog_pack = 12\nbun_pack = 9\nlcm = hot_dog_pack * bun_pack // math.gcd(hot_dog_pack, bun_pack)\nans = lcm\nans",
            "# Python code, return ans\nimport math\nhot_dog_pack = 12\nbun_pack = 9\nlcm = hot_dog_pack * bun_pack // math.gcd(hot_dog_pack, bun_pack)\nans = lcm\nans"
        ],
        "results": [
            36.0,
            36.0,
            36.0
        ],
        "result_counter": {
            "36.0": 3
        },
        "prediction": 36.0
    },
    {
        "question": "Miranda and Savannah are excited that a new store just opened in town! They go together the first day it opens! Each time Miranda goes to the store she plans to spend $7, and each time Savannah goes to the store she plans to spend $9. A few weeks from now, Miranda and Savannah are surprised to find out that they have spent the exact same total amount of money at the store. What is the least possible number of times that Miranda has been to the store?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nMiranda_spending = 7\nSavannah_spending = 9\nMiranda_visits = 1\n\nwhile True:\n    Savannah_visits = (Miranda_spending * Miranda_visits) / Savannah_spending\n    if Savannah_visits.is_integer():\n        break\n    Miranda_visits += 1\n\nans = Miranda_visits",
            "# Python code, return ans\nMiranda_spend = 7\nSavannah_spend = 9\nMiranda_visits = 1\n\nwhile (Miranda_spend * Miranda_visits) != (Savannah_spend * (Miranda_visits - 1)):\n    Miranda_visits += 1\n\nans = Miranda_visits",
            "# Python code, return ans\nMiranda_spending = 7\nSavannah_spending = 9\nMiranda_visits = 1\n\nwhile (Miranda_spending * Miranda_visits) != (Savannah_spending * (Miranda_visits - 1)):\n    Miranda_visits += 1\n\nans = Miranda_visits"
        ],
        "results": [
            9.0
        ],
        "result_counter": {
            "9.0": 1
        },
        "prediction": 9.0
    },
    {
        "question": "Abe is going to plant 54 oak trees and 27 pine trees. Abe would like to plant the trees in rows that all have the same number of trees and are made up of only one type of tree. What is the greatest number of trees Abe can have in each row?",
        "answer": 27,
        "generated": [
            "# Python code, return ans\nimport math\n\noak_trees = 54\npine_trees = 27\n\ngreatest_common_divisor = math.gcd(oak_trees, pine_trees)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nimport math\noak_trees = 54\npine_trees = 27\ngreatest_common_divisor = math.gcd(oak_trees, pine_trees)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\noak_trees = 54\npine_trees = 27\ngcd = math.gcd(oak_trees, pine_trees)\nans = gcd"
        ],
        "results": [
            27.0,
            27.0,
            27.0
        ],
        "result_counter": {
            "27.0": 3
        },
        "prediction": 27.0
    },
    {
        "question": "Your local radio station is having their yearly music player and concert ticket giveaway. For one minute, every 5th caller will win a music player and every 7th caller will win concert tickets. You were just the first caller to win both a music player and concert tickets! What number caller were you?",
        "answer": 35,
        "generated": [
            "# Python code, return ans\ni = 1\nwhile True:\n    if i % 5 == 0 and i % 7 == 0:\n        ans = i\n        break\n    i += 1\nans",
            "# Python code, return ans\ni = 1\nwhile True:\n    if i % 5 == 0 and i % 7 == 0:\n        ans = i\n        break\n    i += 1\nans",
            "# Python code, return ans\ni = 1\nwhile True:\n    if i % 5 == 0 and i % 7 == 0:\n        ans = i\n        break\n    i += 1\nans"
        ],
        "results": [
            35.0,
            35.0,
            35.0
        ],
        "result_counter": {
            "35.0": 3
        },
        "prediction": 35.0
    },
    {
        "question": "Peter's Party Zone sells cups in packages of 6 and plates in packages of 8. Shaniya is hosting a birthday party for her little sister and wants to have the same number of each item. What is the least number of packages of plates Shaniya needs to buy?",
        "answer": 24,
        "generated": [
            "# Python code, return ans\nimport math\ncups_per_package = 6\nplates_per_package = 8\nlcm = (cups_per_package * plates_per_package) // math.gcd(cups_per_package, plates_per_package)\nleast_packages_of_plates = lcm // plates_per_package\nans = least_packages_of_plates",
            "# Python code, return ans\nimport math\ncups_per_package = 6\nplates_per_package = 8\nlcm = (cups_per_package * plates_per_package) // math.gcd(cups_per_package, plates_per_package)\nans = lcm // plates_per_package",
            "# Python code, return ans\nimport math\n\ncups_per_package = 6\nplates_per_package = 8\nlcm = (cups_per_package * plates_per_package) // math.gcd(cups_per_package, plates_per_package)\nans = lcm // plates_per_package\nans"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Jazmin is completing an art project. She has two pieces of construction paper. The first piece is 44 inches wide and the second piece is 33 inches wide. Jazmin wants to cut the paper into strips that are equal in width and are as wide as possible. How wide should Jazmin cut each strip?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\nimport math\nfirst_piece = 44\nsecond_piece = 33\nans = math.gcd(first_piece, second_piece)",
            "# Python code, return ans\nimport math\nfirst_paper_width = 44\nsecond_paper_width = 33\nstrip_width = math.gcd(first_paper_width, second_paper_width)\nans = strip_width",
            "# Python code, return ans\nimport math\nfirst_paper = 44\nsecond_paper = 33\nans = math.gcd(first_paper, second_paper)"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "Zayed is helping his classmates get ready for their math test by making them identical packages of pencils and calculators. He has 72 pencils and 24 calculators and he must use all of the pencils and calculators. If Zayed creates the greatest number of identical packages possible, how many pencils will be in each package?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nimport math\npencils = 72\ncalculators = 24\ngreatest_common_divisor = math.gcd(pencils, calculators)\npencils_per_package = pencils // greatest_common_divisor\nans = pencils_per_package",
            "# Python code, return ans\nimport math\n\npencils = 72\ncalculators = 24\ngreatest_common_divisor = math.gcd(pencils, calculators)\npencils_per_package = pencils // greatest_common_divisor\nans = pencils_per_package",
            "# Python code, return ans\nimport math\n\npencils = 72\ncalculators = 24\ngreatest_common_divisor = math.gcd(pencils, calculators)\npencils_per_package = pencils // greatest_common_divisor\nans = pencils_per_package"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Sam and Carlos are bowling with plastic pins in Sam's living room. Remarkably, Sam knocks down 8 pins on every bowl, and Carlos knocks down 9 pins on every bowl. At the end of the day, Sam and Carlos have knocked down the same total number of pins. What is the least number of total pins that Sam and Carlos could have each knocked down?",
        "answer": 72,
        "generated": [
            "# Python code, return ans\nsam_pins = 8\ncarlos_pins = 9\nleast_common_multiple = None\ni = 1\n\nwhile not least_common_multiple:\n    if (sam_pins * i) % carlos_pins == 0:\n        least_common_multiple = sam_pins * i\n    i += 1\n\nans = least_common_multiple\nans",
            "# Python code, return ans\nsam_pins_per_bowl = 8\ncarlos_pins_per_bowl = 9\n\nleast_common_multiple = None\ni = 1\nwhile not least_common_multiple:\n    sam_total_pins = sam_pins_per_bowl * i\n    if sam_total_pins % carlos_pins_per_bowl == 0:\n        least_common_multiple = sam_total_pins\n    i += 1\n\nans = least_common_multiple\nans",
            "# Python code, return ans\nsam_pins_per_bowl = 8\ncarlos_pins_per_bowl = 9\n\nleast_common_multiple = None\ni = 1\nwhile not least_common_multiple:\n    if i % sam_pins_per_bowl == 0 and i % carlos_pins_per_bowl == 0:\n        least_common_multiple = i\n    i += 1\n\nans = least_common_multiple\nans"
        ],
        "results": [
            72.0,
            72.0,
            72.0
        ],
        "result_counter": {
            "72.0": 3
        },
        "prediction": 72.0
    },
    {
        "question": "Shaquira is baking cookies to put in packages for a fundraiser. Shaquira has made 86 chocolate chip cookies and 42 sugar cookies. Shaquira wants to create identical packages of cookies to sell, and she must use all of the cookies. What is the greatest number of identical packages that Shaquira can make?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\nimport math\nchocolate_chip_cookies = 86\nsugar_cookies = 42\ntotal_cookies = chocolate_chip_cookies + sugar_cookies\ngreatest_common_divisor = math.gcd(chocolate_chip_cookies, sugar_cookies)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nimport math\nchocolate_chip_cookies = 86\nsugar_cookies = 42\ntotal_cookies = chocolate_chip_cookies + sugar_cookies\ngreatest_common_divisor = math.gcd(chocolate_chip_cookies, sugar_cookies)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nimport math\nchocolate_chip_cookies = 86\nsugar_cookies = 42\ntotal_cookies = chocolate_chip_cookies + sugar_cookies\ngreatest_common_divisor = math.gcd(chocolate_chip_cookies, sugar_cookies)\nans = greatest_common_divisor\nans"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "There are 32 forwards and 80 guards in Leo's basketball league. Leo must include all players on a team and wants each team to have the same number of forwards and the same number of guards. If Leo creates the greatest number of teams possible, how many guards will be on each team?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nforwards = 32\nguards = 80\nteam_num = 1\n\nwhile forwards % team_num == 0 and guards % team_num == 0:\n    team_num += 1\n\nteam_num -= 1\nguards_per_team = guards // team_num\nans = guards_per_team\nans",
            "# Python code, return ans\ntotal_forwards = 32\ntotal_guards = 80\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_common_divisor = gcd(total_forwards, total_guards)\nguards_per_team = total_guards // greatest_common_divisor\nans = guards_per_team\nans",
            "# Python code, return ans\ntotal_forwards = 32\ntotal_guards = 80\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_common_divisor = gcd(total_forwards, total_guards)\n\nguards_per_team = total_guards // greatest_common_divisor\nans = guards_per_team\nans"
        ],
        "results": [
            40.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "40.0": 1,
            "5.0": 2
        },
        "prediction": 5.0
    },
    {
        "question": "Li Na is going to plant 63 tomato plants and 81 rhubarb plants. Li Na would like to plant the plants in rows where each row has the same number of tomato plants and each row has the same number of rhubarb plants. What is the greatest number of rows Li Na can plant?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nimport math\ntomato_plants = 63\nrhubarb_plants = 81\ngreatest_common_divisor = math.gcd(tomato_plants, rhubarb_plants)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\ntomato_plants = 63\nrhubarb_plants = 81\ngreatest_common_divisor = math.gcd(tomato_plants, rhubarb_plants)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\ntomato_plants = 63\nrhubarb_plants = 81\ngreatest_common_divisor = math.gcd(tomato_plants, rhubarb_plants)\nans = greatest_common_divisor"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "There are 72 boys and 90 girls on the math team. For the next math competition, Mr. Johnson would like to arrange all of the students in equal rows with only girls or only boys in each row. What is the greatest number of students that can be in each row?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\nimport math\nboys = 72\ngirls = 90\ngreatest_common_divisor = math.gcd(boys, girls)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\nboys = 72\ngirls = 90\ngreatest_common_divisor = math.gcd(boys, girls)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\nboys = 72\ngirls = 90\ngreatest_common_divisor = math.gcd(boys, girls)\nans = greatest_common_divisor"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "Rafaela is a physical education teacher and has 25 girls and 35 boys in her class. She wants to divide the class into teams of the same size, where each team has the same number of girls and the same number of boys. If Rafaela creates the greatest number of teams possible, how many boys will be on each team?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nimport math\ngirls = 25\nboys = 35\ngcd = math.gcd(girls, boys)\nboys_per_team = boys // gcd\nans = boys_per_team\nans",
            "# Python code, return ans\nimport math\ngirls = 25\nboys = 35\ngcd = math.gcd(girls, boys)\nboys_per_team = boys // gcd\nans = boys_per_team\nans",
            "# Python code, return ans\nimport math\ngirls = 25\nboys = 35\ngcd = math.gcd(girls, boys)\nboys_on_each_team = boys // gcd\nans = boys_on_each_team\nans"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Destiny just received two separate gifts from her great-great-grandmother. The first gift is a box of 18 chocolate candy bars, and the second gift is a pack of 12 cookies. Destiny wants to use all of the chocolate candy bars and cookies to make identical snack bags for her cousins. What is the greatest number of snack bags that Destiny can make?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nimport math\nchocolate_candy_bars = 18\ncookies = 12\ngreatest_common_divisor = math.gcd(chocolate_candy_bars, cookies)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nimport math\nchocolate_bars = 18\ncookies = 12\ngreatest_common_divisor = math.gcd(chocolate_bars, cookies)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nimport math\nchocolate_bars = 18\ncookies = 12\ngreatest_common_divisor = math.gcd(chocolate_bars, cookies)\nans = greatest_common_divisor\nans"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Two of the lights at the local stadium are flickering. They both just flickered at the same time. One of the lights flickers every 7 seconds and the other light flickers every 8 seconds. How many seconds until both lights will flicker at the same time again?",
        "answer": 56,
        "generated": [
            "# Python code, return ans\nlight1_interval = 7\nlight2_interval = 8\ntime = 1\n\nwhile True:\n    if time % light1_interval == 0 and time % light2_interval == 0:\n        ans = time\n        break\n    time += 1\n\nans",
            "# Python code, return ans\nlight1_interval = 7\nlight2_interval = 8\n\ni = 1\nwhile True:\n    if i % light1_interval == 0 and i % light2_interval == 0:\n        ans = i\n        break\n    i += 1\n\nans",
            "# Python code, return ans\nlight1_interval = 7\nlight2_interval = 8\ncurrent_time = 0\n\nwhile True:\n    current_time += 1\n    if current_time % light1_interval == 0 and current_time % light2_interval == 0:\n        ans = current_time\n        break\n\nans"
        ],
        "results": [
            56.0,
            56.0,
            56.0
        ],
        "result_counter": {
            "56.0": 3
        },
        "prediction": 56.0
    },
    {
        "question": "Ronald and Tim both did their laundry today. Ronald does laundry every 6 days and Tim does laundry every 9 days. How many days will it be until Ronald and Tim both do laundry on the same day again?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\nRonald_laundry = 6\nTim_laundry = 9\n\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nans = lcm(Ronald_laundry, Tim_laundry)",
            "# Python code, return ans\nRonald_cycle = 6\nTim_cycle = 9\n\ni = 1\nwhile True:\n    if i % Ronald_cycle == 0 and i % Tim_cycle == 0:\n        ans = i\n        break\n    i += 1\n\nans",
            "# Python code, return ans\nRonald_laundry_cycle = 6\nTim_laundry_cycle = 9\n\ni = 1\nwhile True:\n    if i % Ronald_laundry_cycle == 0 and i % Tim_laundry_cycle == 0:\n        ans = i\n        break\n    i += 1\nans"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "By coincidence, Luther's Paint Supplies sold equal quantities of two paint colors yesterday: yellow and blue. All yellow paint comes in 2-liter containers while blue paint is sold in containers of 19 liter. What is the smallest amount of each paint color the store must have sold?",
        "answer": 38,
        "generated": [
            "# Python code, return ans\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\nyellow_container = 2\nblue_container = 19\nans = lcm(yellow_container, blue_container)\n\ndef lcm(a, b):\n    return abs(a * b) // gcd(a, b)",
            "# Python code, return ans\nimport math\nyellow_container = 2\nblue_container = 19\nlcm = (yellow_container * blue_container) // math.gcd(yellow_container, blue_container)\nans = lcm\nans",
            "# Python code, return ans\nfrom math import gcd\n\nyellow_container_size = 2\nblue_container_size = 19\n\n# To find the smallest amount of each paint color the store must have sold, we need to find the least common multiple (LCM) of the container sizes.\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\nans = lcm(yellow_container_size, blue_container_size)\nans"
        ],
        "results": [
            38.0
        ],
        "result_counter": {
            "38.0": 1
        },
        "prediction": 38.0
    },
    {
        "question": "Sullivan Stationery sells cards in packs of 20 and envelopes in packs of 17. If Vera wants the same number of each, what is the minimum number of cards that she will have to buy?",
        "answer": 340,
        "generated": [
            "# Python code, return ans\ncards_per_pack = 20\nenvelopes_per_pack = 17\ni = 1\nwhile True:\n    if i % cards_per_pack == 0 and i % envelopes_per_pack == 0:\n        ans = i\n        break\n    i += 1\n\nans",
            "# Python code, return ans\ncards_per_pack = 20\nenvelopes_per_pack = 17\ni = 1\n\nwhile True:\n    cards = cards_per_pack * i\n    envelopes = envelopes_per_pack * i\n    if cards == envelopes:\n        ans = cards\n        break\n    i += 1\n\nans",
            "# Python code, return ans\ncards_per_pack = 20\nenvelopes_per_pack = 17\n\ni = 1\nwhile True:\n    if (cards_per_pack * i) % envelopes_per_pack == 0:\n        ans = cards_per_pack * i\n        break\n    i += 1\nans"
        ],
        "results": [
            340.0,
            340.0
        ],
        "result_counter": {
            "340.0": 2
        },
        "prediction": 340.0
    },
    {
        "question": "Kristen found gift bags in packs of 12 and bows in packs of 5. If Kristen wanted to have the same number of gift bags as bows, what is the smallest number of gift bags she would have to buy?",
        "answer": 60,
        "generated": [
            "# Python code, return ans\ngift_bags_per_pack = 12\nbows_per_pack = 5\n\ni = 1\nwhile True:\n    if (gift_bags_per_pack * i) % bows_per_pack == 0:\n        ans = gift_bags_per_pack * i\n        break\n    i += 1\nans",
            "# Python code, return ans\ngift_bags_per_pack = 12\nbows_per_pack = 5\n\n# Find the least common multiple (LCM) of gift_bags_per_pack and bows_per_pack\nlcm = gift_bags_per_pack * bows_per_pack\nfor i in range(max(gift_bags_per_pack, bows_per_pack), lcm + 1):\n    if i % gift_bags_per_pack == 0 and i % bows_per_pack == 0:\n        lcm = i\n        break\n\n# Calculate the smallest number of gift bags Kristen would have to buy\nans = lcm // gift_bags_per_pack\nans",
            "# Python code, return ans\ngift_bag_pack = 12\nbow_pack = 5\ni = 1\nwhile True:\n    if (gift_bag_pack * i) % bow_pack == 0:\n        ans = gift_bag_pack * i\n        break\n    i += 1\nans"
        ],
        "results": [
            60.0,
            5.0,
            60.0
        ],
        "result_counter": {
            "60.0": 2,
            "5.0": 1
        },
        "prediction": 60.0
    },
    {
        "question": "While performing a piece of music, Jacob strikes the cymbals every 7 beats and the triangle is every 2 beats. If he just struck both at the same time, how many beats will pass before he again strikes them at the same time?",
        "answer": 14,
        "generated": [
            "# Python code, return ans\ncymbals_beats = 7\ntriangle_beats = 2\n\n# Find the least common multiple (LCM) of cymbals_beats and triangle_beats\ni = max(cymbals_beats, triangle_beats)\nwhile True:\n    if i % cymbals_beats == 0 and i % triangle_beats == 0:\n        ans = i\n        break\n    i += 1\nans",
            "# Python code, return ans\ncymbals_beats = 7\ntriangle_beats = 2\ni = 1\nwhile True:\n    if i % cymbals_beats == 0 and i % triangle_beats == 0:\n        ans = i\n        break\n    i += 1\nans",
            "# Python code, return ans\ncymbal_beats = 7\ntriangle_beats = 2\n\n# Find the least common multiple (LCM) of cymbal_beats and triangle_beats\ndef lcm(a, b):\n    if a > b:\n        greater = a\n    else:\n        greater = b\n\n    while True:\n        if greater % a == 0 and greater % b == 0:\n            lcm = greater\n            break\n        greater += 1\n\n    return lcm\n\nans = lcm(cymbal_beats, triangle_beats)\nans"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "Jason and Lexi are shelving books at a public library. Jason shelves 6 books at a time, whereas Lexi shelves 17 at a time. If they end up shelving the same number of books, what is the smallest number of books each could have shelved?",
        "answer": 102,
        "generated": [
            "# Python code, return ans\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nJason_books = 6\nLexi_books = 17\nans = lcm(Jason_books, Lexi_books)\nans",
            "# Python code, return ans\ndef lcm(a, b):\n    greater = max(a, b)\n    while True:\n        if greater % a == 0 and greater % b == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nJason_books = 6\nLexi_books = 17\nans = lcm(Jason_books, Lexi_books)\nans",
            "# Python code, return ans\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nJason_books = 6\nLexi_books = 17\nans = lcm(Jason_books, Lexi_books)\nans"
        ],
        "results": [
            102.0,
            102.0
        ],
        "result_counter": {
            "102.0": 2
        },
        "prediction": 102.0
    },
    {
        "question": "An English teacher would like to divide 10 boys and 15 girls into groups, each with the same combination of boys and girls and nobody left out. What is the greatest number of groups that can be formed?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nimport math\nboys = 10\ngirls = 15\ngreatest_common_divisor = math.gcd(boys, girls)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nimport math\nboys = 10\ngirls = 15\ngcd = math.gcd(boys, girls)\nans = gcd",
            "# Python code, return ans\nimport math\n\nboys = 10\ngirls = 15\n\ngcd = math.gcd(boys, girls)\nans = gcd\nans"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Ezra is buying nuts and bolts at a local hardware store. The store sells nuts in packs of 13 and bolts in packs of 8. If Ezra wishes to buy the same number of nuts and bolts, what is the smallest number of nuts that he can buy?",
        "answer": 104,
        "generated": [
            "# Python code, return ans\nnuts_per_pack = 13\nbolts_per_pack = 8\ni = 1\nwhile True:\n    nuts = nuts_per_pack * i\n    if nuts % bolts_per_pack == 0:\n        ans = nuts\n        break\n    i += 1\nans",
            "# Python code, return ans\nnuts_per_pack = 13\nbolts_per_pack = 8\n\n# Find the least common multiple (LCM) of nuts_per_pack and bolts_per_pack\ndef lcm(x, y):\n    greater = max(x, y)\n    while (greater % x != 0) or (greater % y != 0):\n        greater += 1\n    return greater\n\nsmallest_nuts = lcm(nuts_per_pack, bolts_per_pack)\nans = smallest_nuts",
            "# Python code, return ans\nnuts_per_pack = 13\nbolts_per_pack = 8\n\n# Find the least common multiple (LCM) of the number of nuts and bolts per pack\nlcm = nuts_per_pack * bolts_per_pack\nfor i in range(1, nuts_per_pack * bolts_per_pack):\n    if i % nuts_per_pack == 0 and i % bolts_per_pack == 0:\n        lcm = i\n        break\n\nans = lcm"
        ],
        "results": [
            104.0,
            104.0,
            104.0
        ],
        "result_counter": {
            "104.0": 3
        },
        "prediction": 104.0
    },
    {
        "question": "The Khan Corporation would like to donate 48 computers and 32 printers to local schools. The corporation would like to make sure that each school receives the same set of computers and printers, with none left over. What is the greatest number of schools that The Khan Corporation can donate to?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\nimport math\ncomputers = 48\nprinters = 32\ngreatest_common_divisor = math.gcd(computers, printers)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nimport math\ncomputers = 48\nprinters = 32\ngreatest_common_divisor = math.gcd(computers, printers)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nimport math\ncomputers = 48\nprinters = 32\ngreatest_common_divisor = math.gcd(computers, printers)\nans = greatest_common_divisor\nans"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "Mitch owns a business and assigns two of his employees their shifts. He assigns the first employee shifts in blocks of 2 hours, and he assigns the second worker shifts in blocks of 11 hours. If both workers must receive the same number of hours, what is the minimum number of hours each must be assigned?",
        "answer": 22,
        "generated": [
            "# Python code, return ans\nemployee1_block = 2\nemployee2_block = 11\n\n# Find the least common multiple (LCM) of the two blocks\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nminimum_hours = lcm(employee1_block, employee2_block)\nans = minimum_hours\nans",
            "# Python code, return ans\nimport math\n\nfirst_employee_block = 2\nsecond_employee_block = 11\n\nlcm = (first_employee_block * second_employee_block) // math.gcd(first_employee_block, second_employee_block)\nans = lcm\nans",
            "# Python code, return ans\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nfirst_employee_block = 2\nsecond_employee_block = 11\nminimum_hours = lcm(first_employee_block, second_employee_block)\nans = minimum_hours\nans"
        ],
        "results": [
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 2
        },
        "prediction": 22.0
    },
    {
        "question": "A choir teacher is dividing 10 sopranos and 15 altos into singing groups. He wants each group to have the same combination of sopranos and altos, with no singers left over. What is the greatest number of groups he can make?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nimport math\nsopranos = 10\naltos = 15\ngreatest_common_divisor = math.gcd(sopranos, altos)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nimport math\nsopranos = 10\naltos = 15\ngreatest_common_divisor = math.gcd(sopranos, altos)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nimport math\nsopranos = 10\naltos = 15\ngreatest_common_divisor = math.gcd(sopranos, altos)\nans = greatest_common_divisor\nans"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Martha is buying 18 packs of pencils and 14 packs of pens from the store. If Martha wishes to purchase the same number of pencils as pens, what is the smallest number of pens that she can buy?",
        "answer": 126,
        "generated": [
            "# Python code, return ans\npencil_packs = 18\npen_packs = 14\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\nlcm = (pencil_packs * pen_packs) // gcd(pencil_packs, pen_packs)\nans = lcm // pen_packs\nans",
            "# Python code, return ans\npencil_packs = 18\npen_packs = 14\n\n# Find the least common multiple (LCM) of the two numbers\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nsmallest_number_of_pens = lcm(pencil_packs, pen_packs)\nans = smallest_number_of_pens\nans",
            "# Python code, return ans\npencil_packs = 18\npen_packs = 14\ni = 1\nwhile (pencil_packs * i) % pen_packs != 0:\n    i += 1\nsmallest_pens = pencil_packs * i\nans = smallest_pens"
        ],
        "results": [
            9.0,
            126.0,
            126.0
        ],
        "result_counter": {
            "9.0": 1,
            "126.0": 2
        },
        "prediction": 126.0
    },
    {
        "question": "In a morning walk, two persons start off together. Their steps measure 75 cm, and 90 cm respectively. What is the minimum distance each should walk so that all can cover the same distance in complete steps?",
        "answer": 450,
        "generated": [
            "# Python code, return ans\nimport math\nstep1 = 75\nstep2 = 90\nlcm = (step1 * step2) // math.gcd(step1, step2)\nans = lcm",
            "# Python code, return ans\nimport math\nstep1 = 75\nstep2 = 90\nlcm = step1 * step2 // math.gcd(step1, step2)\nans = lcm",
            "# Python code, return ans\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\nstep1 = 75\nstep2 = 90\nlcm = (step1 * step2) // gcd(step1, step2)\nans = lcm\nans"
        ],
        "results": [
            450.0,
            450.0
        ],
        "result_counter": {
            "450.0": 2
        },
        "prediction": 450.0
    },
    {
        "question": "Two clocks ring once at the same time. After that, the first clock rings after every 90 minutes, and the second after every 60 minutes. After how many minutes will they again ring together?",
        "answer": 180,
        "generated": [
            "# Python code, return ans\nfirst_clock_interval = 90\nsecond_clock_interval = 60\n\n# Find the least common multiple (LCM) of the intervals\nlcm = first_clock_interval * second_clock_interval\nfor i in range(max(first_clock_interval, second_clock_interval), first_clock_interval * second_clock_interval + 1):\n    if i % first_clock_interval == 0 and i % second_clock_interval == 0:\n        lcm = i\n        break\n\nans = lcm",
            "# Python code, return ans\nfirst_clock_interval = 90\nsecond_clock_interval = 60\n\n# Find the least common multiple (LCM) of the two intervals\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nans = lcm(first_clock_interval, second_clock_interval)\nans",
            "# Python code, return ans\nfirst_clock_interval = 90\nsecond_clock_interval = 60\n\n# Find the LCM (Least Common Multiple) of the two intervals\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nans = lcm(first_clock_interval, second_clock_interval)\nans"
        ],
        "results": [
            180.0,
            180.0
        ],
        "result_counter": {
            "180.0": 2
        },
        "prediction": 180.0
    },
    {
        "question": "P and Q start at the same time in the same direction to run around a stadium. P completes a round in 252 seconds and Q in 198 seconds, both starting at the same point. After what time will they meet again at the starting point?",
        "answer": 2772,
        "generated": [
            "# Python code, return ans\nimport math\n\nP_time = 252\nQ_time = 198\n\nlcm = (P_time * Q_time) // math.gcd(P_time, Q_time)\nans = lcm\nans",
            "# Python code, return ans\nimport math\n\nP_time = 252\nQ_time = 198\n\nlcm = (P_time * Q_time) // math.gcd(P_time, Q_time)\nans = lcm\nans",
            "# Python code, return ans\nimport math\nP_time = 252\nQ_time = 198\nlcm = (P_time * Q_time) // math.gcd(P_time, Q_time)\nans = lcm\nans"
        ],
        "results": [
            2772.0,
            2772.0,
            2772.0
        ],
        "result_counter": {
            "2772.0": 3
        },
        "prediction": 2772.0
    },
    {
        "question": "There are less than 6 dozen eggs in a basket. If the eggs are counted 2, 3, 4, or 5 at a time, there are none left over. How many eggs are there in the basket?",
        "answer": 60,
        "generated": [
            "# Python code, return ans\nfor eggs in range(1, 6 * 12):\n    if eggs % 2 == 0 and eggs % 3 == 0 and eggs % 4 == 0 and eggs % 5 == 0:\n        ans = eggs\n        break\nans",
            "# Python code, return ans\nfor eggs in range(1, 6 * 12):\n    if eggs % 2 == 0 and eggs % 3 == 0 and eggs % 4 == 0 and eggs % 5 == 0:\n        ans = eggs\n        break\nans",
            "# Python code, return ans\nfor eggs in range(1, 6 * 12):\n    if eggs % 2 == 0 and eggs % 3 == 0 and eggs % 4 == 0 and eggs % 5 == 0:\n        ans = eggs\n        break\nans"
        ],
        "results": [
            60.0,
            60.0,
            60.0
        ],
        "result_counter": {
            "60.0": 3
        },
        "prediction": 60.0
    },
    {
        "question": "Bob strikes the drums every 9 seconds and the cymbals every 12 seconds. If he just struck both at the same time, how many seconds will pass before he again strikes them at the same time?",
        "answer": 36,
        "generated": [
            "# Python code, return ans\ndrum_time = 9\ncymbal_time = 12\n\n# Find the least common multiple of drum_time and cymbal_time\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nans = lcm(drum_time, cymbal_time)\nans",
            "# Python code, return ans\ndrum_time = 9\ncymbal_time = 12\n\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nans = lcm(drum_time, cymbal_time)\nans",
            "# Python code, return ans\ndrum_interval = 9\ncymbal_interval = 12\n\ni = 1\nwhile True:\n    if i % drum_interval == 0 and i % cymbal_interval == 0:\n        ans = i\n        break\n    i += 1\nans"
        ],
        "results": [
            36.0,
            36.0,
            36.0
        ],
        "result_counter": {
            "36.0": 3
        },
        "prediction": 36.0
    },
    {
        "question": "Bill observed two types of birds in the bushes: sparrows and parrots. While the sparrows were in flocks of 13, the parrots were in flocks of 14. If Bill observed the same total number of sparrows and parrots, what is the smallest number of sparrows that he could have observed?",
        "answer": 182,
        "generated": [
            "# Python code, return ans\nsparrow_flock_size = 13\nparrot_flock_size = 14\n\n# Find the least common multiple (LCM) of the flock sizes\nlcm = sparrows_flock_size * parrot_flock_size\nfor i in range(max(sparrow_flock_size, parrot_flock_size), lcm + 1):\n    if i % sparrow_flock_size == 0 and i % parrot_flock_size == 0:\n        lcm = i\n        break\n\n# The smallest number of sparrows observed is the LCM divided by the parrot flock size\nans = lcm // parrot_flock_size\nans",
            "# Python code, return ans\nsparrow_flock = 13\nparrot_flock = 14\nsparrows = 0\nparrots = 0\n\nwhile sparrows != parrots:\n    sparrows += sparrow_flock\n    parrots += parrot_flock\n\nans = sparrows",
            "# Python code, return ans\nsparrow_flock = 13\nparrot_flock = 14\nsparrow_count = 0\n\nwhile True:\n    sparrows = sparrow_count * sparrow_flock\n    parrots = sparrows // parrot_flock\n    if sparrows == parrots * parrot_flock:\n        ans = sparrows\n        break\n    sparrow_count += 1\n\nans"
        ],
        "results": [
            0.0,
            0.0
        ],
        "result_counter": {
            "0.0": 2
        },
        "prediction": 0.0
    },
    {
        "question": "Morris observed two types of birds traveling: ducks and cranes. While the ducks traveled in flocks of 13, the cranes traveled in flocks of 17. If Morris observed the same total number of ducks and cranes, what is the smallest number of ducks that he could have observed?",
        "answer": 221,
        "generated": [
            "# Python code, return ans\nducks_per_flock = 13\ncranes_per_flock = 17\ntotal_ducks = 0\ntotal_cranes = 0\nfound = False\n\nwhile not found:\n    total_ducks += ducks_per_flock\n    total_cranes = total_ducks // cranes_per_flock * cranes_per_flock\n    if total_ducks == total_cranes:\n        found = True\n\nans = total_ducks",
            "# Python code, return ans\nducks_per_flock = 13\ncranes_per_flock = 17\ntotal_ducks = 0\ntotal_cranes = 0\n\nwhile total_ducks != total_cranes:\n    total_ducks += ducks_per_flock\n    total_cranes += cranes_per_flock\n\nans = total_ducks",
            "# Python code, return ans\nducks_per_flock = 13\ncranes_per_flock = 17\ntotal_ducks = 0\ntotal_cranes = 0\n\nwhile total_ducks != total_cranes:\n    total_ducks += ducks_per_flock\n    total_cranes += cranes_per_flock\n\nans = total_ducks"
        ],
        "results": [
            221.0,
            0.0,
            0.0
        ],
        "result_counter": {
            "221.0": 1,
            "0.0": 2
        },
        "prediction": 0.0
    },
    {
        "question": "Radio station Z-100 was giving away a $100 bill to every 100th caller during a contest and gave Jingle Ball tickets to every 40th caller. How many callers must call before someone wins both a $100 bill and a Jingle Ball ticket?",
        "answer": 200,
        "generated": [
            "# Python code, return ans\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\ncaller_100 = 100\ncaller_40 = 40\nans = lcm(caller_100, caller_40)",
            "# Python code, return ans\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm_value = greater\n            break\n        greater += 1\n    return lcm_value\n\ncallers_for_100 = 100\ncallers_for_ticket = 40\nans = lcm(callers_for_100, callers_for_ticket)\nans",
            "# Python code, return ans\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nbill_winner = 100\nticket_winner = 40\nans = lcm(bill_winner, ticket_winner)\nans"
        ],
        "results": [
            200.0,
            200.0,
            200.0
        ],
        "result_counter": {
            "200.0": 3
        },
        "prediction": 200.0
    },
    {
        "question": "Melanie has pieces of train track that are 8 inches long that she is connecting together to form a track that her train can travel on. Martin is also trying to construct a track for his train but is using track pieces that are 20 inches long. How long will the shortest track be if the track that Melanie builds ends up being the same length as Martin's track?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\nMelanie_track_length = 8\nMartin_track_length = 20\n\ni = 1\nwhile Melanie_track_length * i < Martin_track_length:\n    i += 1\n\nshortest_track = Melanie_track_length * i\nans = shortest_track",
            "# Python code, return ans\nMelanie_piece_length = 8\nMartin_piece_length = 20\n\n# Find the least common multiple (LCM) of the two lengths\ndef lcm(a, b):\n    if a > b:\n        greater = a\n    else:\n        greater = b\n\n    while True:\n        if greater % a == 0 and greater % b == 0:\n            lcm = greater\n            break\n        greater += 1\n\n    return lcm\n\nshortest_track = lcm(Melanie_piece_length, Martin_piece_length)\nans = shortest_track",
            "# Python code, return ans\nMelanie_track_piece = 8\nMartin_track_piece = 20\nMelanie_track_length = 0\nMartin_track_length = 0\nMelanie_pieces = 0\nMartin_pieces = 0\n\nwhile Melanie_track_length != Martin_track_length:\n    if Melanie_track_length < Martin_track_length:\n        Melanie_track_length += Melanie_track_piece\n        Melanie_pieces += 1\n    else:\n        Martin_track_length += Martin_track_piece\n        Martin_pieces += 1\n\nshortest_track = Melanie_track_length\nans = shortest_track"
        ],
        "results": [
            24.0,
            40.0,
            0.0
        ],
        "result_counter": {
            "24.0": 1,
            "40.0": 1,
            "0.0": 1
        },
        "prediction": 24.0
    },
    {
        "question": "At the movie theatre, they give out a free drink to every 75th customer and a free bag of popcorn to every 30th customer. On Monday 3,000 customers came to the theatre. How many people received both free items?",
        "answer": 20,
        "generated": [
            "# Python code, return ans\ntotal_customers = 3000\ndrink_customer = 75\npopcorn_customer = 30\n\n# Find the least common multiple (LCM) of drink_customer and popcorn_customer\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nboth_free_items_customer = lcm(drink_customer, popcorn_customer)\nans = total_customers // both_free_items_customer\nans",
            "# Python code, return ans\ntotal_customers = 3000\nfree_drink_customer = 75\nfree_popcorn_customer = 30\n\ncommon_customer = (total_customers // (free_drink_customer * free_popcorn_customer)) * free_drink_customer\nans = common_customer\nans",
            "# Python code, return ans\ncustomers = 3000\nfree_drink_customer = 75\nfree_popcorn_customer = 30\n\ncommon_customer = (free_drink_customer * free_popcorn_customer) // math.gcd(free_drink_customer, free_popcorn_customer)\nans = customers // common_customer\nans"
        ],
        "results": [
            20.0,
            75.0
        ],
        "result_counter": {
            "20.0": 1,
            "75.0": 1
        },
        "prediction": 20.0
    },
    {
        "question": "Henry and Margo both began traveling around a circular track. Henry is riding his bike, and Margo is walking. It takes Henry 7 minutes to make it all the way around, and Margo takes 12 minutes. How much time will pass until they meet at the starting line?",
        "answer": 84,
        "generated": [
            "# Python code, return ans\nimport math\nHenry_time = 7\nMargo_time = 12\ntime_until_meet = (Henry_time * Margo_time) // math.gcd(Henry_time, Margo_time)\nans = time_until_meet\nans",
            "# Python code, return ans\nimport math\nHenry_time = 7\nMargo_time = 12\nlcm = (Henry_time * Margo_time) // math.gcd(Henry_time, Margo_time)\nans = lcm",
            "# Python code, return ans\nimport math\nHenry_time = 7\nMargo_time = 12\nlcm_time = (Henry_time * Margo_time) // math.gcd(Henry_time, Margo_time)\nans = lcm_time"
        ],
        "results": [
            84.0,
            84.0,
            84.0
        ],
        "result_counter": {
            "84.0": 3
        },
        "prediction": 84.0
    },
    {
        "question": "Two neon signs are turned on at the same time. both signs blink as they are turned on. One sign blinks every 9 seconds. The other sign blinks every 15 seconds. In how many seconds will they blink together again?",
        "answer": 45,
        "generated": [
            "# Python code, return ans\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nblink_sign1 = 9\nblink_sign2 = 15\nans = lcm(blink_sign1, blink_sign2)",
            "# Python code, return ans\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nblink1 = 9\nblink2 = 15\nans = lcm(blink1, blink2)",
            "# Python code, return ans\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nblink_1 = 9\nblink_2 = 15\nans = lcm(blink_1, blink_2)"
        ],
        "results": [],
        "result_counter": {},
        "prediction": null
    },
    {
        "question": "The school cafeteria serves tacos every sixth day and cheeseburgers every eighth day. If tacos and cheeseburgers are both on today's menu, how many days will it be before they are both on the menu again?",
        "answer": 24,
        "generated": [
            "# Python code, return ans\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ntaco_days = 6\ncheeseburger_days = 8\nans = lcm(taco_days, cheeseburger_days)\nans",
            "# Python code, return ans\nimport math\ntaco_days = 6\ncheeseburger_days = 8\nans = math.lcm(taco_days, cheeseburger_days)\nans",
            "# Python code, return ans\ntaco_days = 6\ncheeseburger_days = 8\n\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nans = lcm(taco_days, cheeseburger_days)"
        ],
        "results": [
            24.0,
            24.0
        ],
        "result_counter": {
            "24.0": 2
        },
        "prediction": 24.0
    },
    {
        "question": "Two clocks are turned on at the same time. One clock chimes every 15 minutes. The other clock chimes every 25 minutes. In how many minutes will they chime together?",
        "answer": 75,
        "generated": [
            "# Python code, return ans\nclock1_interval = 15\nclock2_interval = 25\n\ni = 1\nwhile True:\n    if i % clock1_interval == 0 and i % clock2_interval == 0:\n        ans = i\n        break\n    i += 1\n\nans",
            "# Python code, return ans\nchime_clock1 = 15\nchime_clock2 = 25\ni = 1\nwhile True:\n    if (chime_clock1 * i) % chime_clock2 == 0:\n        ans = chime_clock1 * i\n        break\n    i += 1\nans",
            "# Python code, return ans\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nclock1 = 15\nclock2 = 25\nans = lcm(clock1, clock2)"
        ],
        "results": [
            75.0,
            75.0,
            75.0
        ],
        "result_counter": {
            "75.0": 3
        },
        "prediction": 75.0
    },
    {
        "question": "Jenny goes to dance class every 6 days, karate class every 12 days, and to the library every 18 days. On December 1st she went to both classes and the libary. How many days from December 1st will she do both classes and go to the library?",
        "answer": 36,
        "generated": [
            "# Python code, return ans\nimport math\n\ndance_class = 6\nkarate_class = 12\nlibrary = 18\n\nlcm = (dance_class * karate_class * library) // math.gcd(dance_class, math.gcd(karate_class, library))\nans = lcm\nans",
            "# Python code, return ans\nimport math\n\ndance_class_interval = 6\nkarate_class_interval = 12\nlibrary_interval = 18\n\nlcm_dance_karate = (dance_class_interval * karate_class_interval) // math.gcd(dance_class_interval, karate_class_interval)\nlcm_dance_karate_library = (lcm_dance_karate * library_interval) // math.gcd(lcm_dance_karate, library_interval)\n\nans = lcm_dance_karate_library\nans",
            "# Python code, return ans\nimport math\n\ndance_class = 6\nkarate_class = 12\nlibrary = 18\n\nlcm = (dance_class * karate_class * library) // math.gcd(dance_class, math.gcd(karate_class, library))\nans = lcm\nans"
        ],
        "results": [
            216.0,
            36.0,
            216.0
        ],
        "result_counter": {
            "216.0": 2,
            "36.0": 1
        },
        "prediction": 216.0
    },
    {
        "question": "The Math Counts Club had a party at school. There were 20 cookies and 40 slices of pizza to be shared equally. Each student had the same number of whole cookies and the same number of slices of pizza with nothing left over. What is the greatest number of cookies and pizza slices the students can each get?",
        "answer": 20,
        "generated": [
            "# Python code, return ans\nimport math\ncookies = 20\npizza_slices = 40\ntotal_food = cookies + pizza_slices\ngreatest_common_divisor = math.gcd(cookies, pizza_slices)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nimport math\n\ncookies = 20\npizza_slices = 40\ntotal_food = cookies + pizza_slices\ngreatest_common_divisor = math.gcd(cookies, pizza_slices)\nans = greatest_common_divisor\nans",
            "# Python code, return ans\nimport math\ncookies = 20\npizza_slices = 40\ntotal_food = cookies + pizza_slices\ngreatest_common_divisor = math.gcd(cookies, pizza_slices)\nans = greatest_common_divisor"
        ],
        "results": [
            20.0,
            20.0,
            20.0
        ],
        "result_counter": {
            "20.0": 3
        },
        "prediction": 20.0
    },
    {
        "question": "Tim has a bag of 36 orange-flavoured sweets and Peter has a bag of 44 grape-flavoured sweets. They have to divide up the sweets into small trays with equal number of sweets; each tray containing either orange-flavoured or grape-flavoured sweets only. If there is no remainder, what is the largest possible number of sweets in each tray?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nimport math\norange_sweets = 36\ngrape_sweets = 44\ngcd = math.gcd(orange_sweets, grape_sweets)\nans = gcd",
            "# Python code, return ans\nimport math\norange_sweets = 36\ngrape_sweets = 44\ngcd = math.gcd(orange_sweets, grape_sweets)\nans = gcd",
            "# Python code, return ans\nimport math\norange_sweets = 36\ngrape_sweets = 44\ngreatest_common_divisor = math.gcd(orange_sweets, grape_sweets)\nans = greatest_common_divisor"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Martin is pasting pieces of square colored paper of equal size onto a board measuring 72 cm by 90 cm. If only whole square pieces are used, and the board is to be completely covered, what is the largest possible length of the side of each square colored paper?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\nimport math\nboard_width = 72\nboard_height = 90\nlargest_side = math.gcd(board_width, board_height)\nans = largest_side",
            "# Python code, return ans\nimport math\nboard_width = 72\nboard_height = 90\nlargest_side = math.gcd(board_width, board_height)\nans = largest_side",
            "# Python code, return ans\nimport math\n\nboard_width = 72\nboard_height = 90\n\n# Find the greatest common divisor of the board dimensions\ngcd = math.gcd(board_width, board_height)\n\n# The largest possible length of the side of each square colored paper is the gcd\nans = gcd\nans"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "Two wires with lengths of 448 cm and 616 cm are to be cut into pieces of all the same length without remainder. What is the greatest possible length of the pieces?",
        "answer": 56,
        "generated": [
            "# Python code, return ans\nimport math\nwire1_length = 448\nwire2_length = 616\ngreatest_common_divisor = math.gcd(wire1_length, wire2_length)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\nwire1_length = 448\nwire2_length = 616\ngreatest_common_divisor = math.gcd(wire1_length, wire2_length)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\nwire1_length = 448\nwire2_length = 616\ngreatest_common_divisor = math.gcd(wire1_length, wire2_length)\nans = greatest_common_divisor"
        ],
        "results": [
            56.0,
            56.0,
            56.0
        ],
        "result_counter": {
            "56.0": 3
        },
        "prediction": 56.0
    },
    {
        "question": "Janice and Jasmine were each given a piece of ribbon of equal length. Janice cuts her ribbons into equal lengths of 2 m, while Jasmine cuts her ribbons into equal lengths of 5 m. If there was no remainder in both cases, what is the shortest possible length of ribbon given to them?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\nimport math\n\nJanice_cut_length = 2\nJasmine_cut_length = 5\n\n# Find the least common multiple of the two cut lengths\nshortest_ribbon_length = Janice_cut_length * Jasmine_cut_length // math.gcd(Janice_cut_length, Jasmine_cut_length)\n\nans = shortest_ribbon_length",
            "# Python code, return ans\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nJanice_cut = 2\nJasmine_cut = 5\nshortest_length = lcm(Janice_cut, Jasmine_cut)\nans = shortest_length\nans",
            "# Python code, return ans\nimport math\nJanice_cut_length = 2\nJasmine_cut_length = 5\nshortest_length = Janice_cut_length * Jasmine_cut_length // math.gcd(Janice_cut_length, Jasmine_cut_length)\nans = shortest_length\nans"
        ],
        "results": [
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 2
        },
        "prediction": 10.0
    },
    {
        "question": "On a track for remote-controlled racing cars, racing car A completes the track in 28 seconds, while racing car B completes it in 24 seconds. If they both start at the same time, after how many seconds will they be side by side again?",
        "answer": 168,
        "generated": [
            "# Python code, return ans\ncar_A_time = 28\ncar_B_time = 24\n\ndef lcm(a, b):\n    greater = max(a, b)\n    while (greater % a != 0) or (greater % b != 0):\n        greater += 1\n    return greater\n\nans = lcm(car_A_time, car_B_time)",
            "# Python code, return ans\ncar_A_time = 28\ncar_B_time = 24\n\ndef lcm(x, y):\n    greater = max(x, y)\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nans = lcm(car_A_time, car_B_time)\nans",
            "# Python code, return ans\ncar_A_time = 28\ncar_B_time = 24\n\n# Calculate the least common multiple of car_A_time and car_B_time\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nans = lcm(car_A_time, car_B_time)\nans"
        ],
        "results": [
            168.0,
            168.0
        ],
        "result_counter": {
            "168.0": 2
        },
        "prediction": 168.0
    },
    {
        "question": "Samantha has two pieces of cloth. One piece is 72 inches wide and the other piece is 90 inches wide. She wants to cut both pieces into strips of equal width that are as wide as possible. How wide should she cut the strips?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\nimport math\ncloth1 = 72\ncloth2 = 90\nans = math.gcd(cloth1, cloth2)",
            "# Python code, return ans\nimport math\ncloth1_width = 72\ncloth2_width = 90\nstrip_width = math.gcd(cloth1_width, cloth2_width)\nans = strip_width",
            "# Python code, return ans\nimport math\ncloth1_width = 72\ncloth2_width = 90\nmax_strip_width = math.gcd(cloth1_width, cloth2_width)\nans = max_strip_width"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "Rosa is making a game board that is 16 inches by 24 inches. She wants to use square tiles. What is the largest tile she can use?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nimport math\nlength = 16\nwidth = 24\nlargest_tile = math.gcd(length, width)\nans = largest_tile",
            "# Python code, return ans\nimport math\nwidth = 16\nlength = 24\nlargest_tile = math.gcd(width, length)\nans = largest_tile",
            "# Python code, return ans\nimport math\ngame_board_length = 16\ngame_board_width = 24\nlargest_tile = math.gcd(game_board_length, game_board_width)\nans = largest_tile"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "I am planting 50 apple trees and 30 peach trees. I want the same number and type of trees per row. What is the maximum number of trees I can plant per row?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\nimport math\napple_trees = 50\npeach_trees = 30\ngcd = math.gcd(apple_trees, peach_trees)\nans = gcd",
            "# Python code, return ans\nimport math\napple_trees = 50\npeach_trees = 30\ngcd = math.gcd(apple_trees, peach_trees)\nans = gcd",
            "# Python code, return ans\nimport math\napple_trees = 50\npeach_trees = 30\nans = math.gcd(apple_trees, peach_trees)\nans"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "Three pieces of timber 42 m, 49 m and 63 m long have to be divided into planks of the same length. What is the greatest possible length of each plank?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nimport math\n\ntimber1 = 42\ntimber2 = 49\ntimber3 = 63\n\ngreatest_common_divisor = math.gcd(timber1, math.gcd(timber2, timber3))\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\ntimber1 = 42\ntimber2 = 49\ntimber3 = 63\ngreatest_common_divisor = math.gcd(math.gcd(timber1, timber2), timber3)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\ntimber1 = 42\ntimber2 = 49\ntimber3 = 63\ngreatest_common_divisor = math.gcd(timber1, math.gcd(timber2, timber3))\nans = greatest_common_divisor"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Fabric is sold in stores from bolts that are 45 or 60 inches wide. What is the width of the widest strips of fabric you can cut from either bolt without wasting any of the fabric if each strip has the same width?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\nimport math\nbolt_1 = 45\nbolt_2 = 60\nans = math.gcd(bolt_1, bolt_2)",
            "# Python code, return ans\nimport math\nbolt1 = 45\nbolt2 = 60\nans = math.gcd(bolt1, bolt2)",
            "# Python code, return ans\nimport math\nbolt_width_1 = 45\nbolt_width_2 = 60\nans = math.gcd(bolt_width_1, bolt_width_2)"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "The parents are making sandwiches for the class picnic. They have 72 turkey slices, 48 cheese slices, and 96 tomato slices. What is the greatest number of sandwiches they can make if each sandwich has the same filling?",
        "answer": 24,
        "generated": [
            "# Python code, return ans\nturkey_slices = 72\ncheese_slices = 48\ntomato_slices = 96\n\nmin_slices = min(turkey_slices, cheese_slices, tomato_slices)\nans = min_slices",
            "# Python code, return ans\nturkey_slices = 72\ncheese_slices = 48\ntomato_slices = 96\n\nmin_slices = min(turkey_slices, cheese_slices, tomato_slices)\nans = min_slices",
            "# Python code, return ans\nturkey_slices = 72\ncheese_slices = 48\ntomato_slices = 96\n\nmin_slices = min(turkey_slices, cheese_slices, tomato_slices)\nans = min_slices"
        ],
        "results": [
            48.0,
            48.0,
            48.0
        ],
        "result_counter": {
            "48.0": 3
        },
        "prediction": 48.0
    },
    {
        "question": "Two bicycle enthusiasts are leaving Cincinnati at the same time. One is biking 840 miles to Boston. The other is biking 440 miles to Atlanta. What is the greatest number of miles a day each can bike if they want to cover equal distances each day?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\ndistance_to_Boston = 840\ndistance_to_Atlanta = 440\ntotal_days = 1\n\nwhile (distance_to_Boston % total_days != 0) or (distance_to_Atlanta % total_days != 0):\n    total_days += 1\n\nmiles_per_day = distance_to_Boston // total_days\nans = miles_per_day",
            "# Python code, return ans\ndistance_to_Boston = 840\ndistance_to_Atlanta = 440\ngreatest_common_divisor = 0\n\nfor i in range(1, min(distance_to_Boston, distance_to_Atlanta) + 1):\n    if distance_to_Boston % i == 0 and distance_to_Atlanta % i == 0:\n        greatest_common_divisor = i\n\nans = greatest_common_divisor",
            "# Python code, return ans\nboston_distance = 840\natlanta_distance = 440\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngreatest_common_divisor = gcd(boston_distance, atlanta_distance)\nans = greatest_common_divisor\nans"
        ],
        "results": [
            840.0,
            40.0,
            40.0
        ],
        "result_counter": {
            "840.0": 1,
            "40.0": 2
        },
        "prediction": 40.0
    },
    {
        "question": "A fruit salad made on a TV cooking program requires chunks of cantaloupe and honeydew. What is the greatest number of servings you can make using all of the fruit if you have 30 chunks of cantaloupe and 42 chunks of honeydew?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nimport math\ncanteloupe_chunks = 30\nhoneydew_chunks = 42\ngreatest_common_divisor = math.gcd(canteloupe_chunks, honeydew_chunks)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\ncanteloupe_chunks = 30\nhoneydew_chunks = 42\ngreatest_common_divisor = math.gcd(canteloupe_chunks, honeydew_chunks)\nans = greatest_common_divisor",
            "# Python code, return ans\nimport math\ncanteloupe_chunks = 30\nhoneydew_chunks = 42\ngreatest_common_divisor = math.gcd(canteloupe_chunks, honeydew_chunks)\nans = greatest_common_divisor"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Jessica wants of make a garland out of 8 roses, 12 daisies and 48 marigolds. How many arrangements can she make with those flowers so that, there is no flower left.",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nroses = 8\ndaisies = 12\nmarigolds = 48\ntotal_flowers = roses + daisies + marigolds\nans = total_flowers",
            "To make a garland with no flowers left, Jessica would use all the flowers. So, the total number of arrangements she can make would be the product of the number of ways she can arrange each type of flower.\n\nHowever, since the flowers are of different types, we cannot directly calculate the number of arrangements by multiplying the number of flowers. Instead, we can add the number of flowers and find the total number of flowers she has.\n\ntotal_flowers = roses + daisies + marigolds\ntotal_flowers = 8 + 12 + 48\ntotal_flowers = 68\n\nSo, Jessica has a total of 68 flowers to make her garland.",
            "To make a garland with no flower left, Jessica can make only one arrangement using all the flowers. She can arrange the flowers in any order, but since she's using all the flowers, it will always result in a single garland."
        ],
        "results": [
            68.0
        ],
        "result_counter": {
            "68.0": 1
        },
        "prediction": 68.0
    },
    {
        "question": "A teacher is to arrange 60 boys and 72 girls in rows. He wishes to arrange them in such a way that only boys or girls will be there in a row. Find the greatest number of students that could be arranged in a row.",
        "answer": 12,
        "generated": [
            "# Python code, return ans\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\nboys = 60\ngirls = 72\ngreatest_number = gcd(boys, girls)\nans = greatest_number",
            "# Python code, return ans\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\nboys = 60\ngirls = 72\ngreatest_number = gcd(boys, girls)\nans = greatest_number",
            "# Python code, return ans\nimport math\n\nboys = 60\ngirls = 72\n\n# Find the greatest common divisor of boys and girls\ngcd = math.gcd(boys, girls)\n\nans = gcd"
        ],
        "results": [
            12.0
        ],
        "result_counter": {
            "12.0": 1
        },
        "prediction": 12.0
    },
    {
        "question": "A chef only had 3 apples so he ordered 2 more bags. If each bag has 9 apples, how many apples does he have total?",
        "answer": 21,
        "generated": [
            "# Python code, return ans\ninitial_apples = 3\nbag_apples = 9\nbags_ordered = 2\ntotal_apples = initial_apples + (bag_apples * bags_ordered)\nans = total_apples",
            "# Python code, return ans\ninitial_apples = 3\napples_per_bag = 9\nbags_ordered = 2\ntotal_apples = initial_apples + (apples_per_bag * bags_ordered)\nans = total_apples",
            "# Python code, return ans\ninitial_apples = 3\nbag_apples = 9\nbags_ordered = 2\ntotal_apples = initial_apples + (bag_apples * bags_ordered)\nans = total_apples"
        ],
        "results": [
            21.0,
            21.0,
            21.0
        ],
        "result_counter": {
            "21.0": 3
        },
        "prediction": 21.0
    },
    {
        "question": "Edward earned 8 dollars for every lawn he mowed. If he mowed 5 lawns and he already had 7 dollars saved up, how much money does he have total?",
        "answer": 47,
        "generated": [
            "# Python code, return ans\nearned_per_lawn = 8\nlawns_mowed = 5\nsaved_money = 7\ntotal_money = earned_per_lawn * lawns_mowed + saved_money\nans = total_money",
            "# Python code, return ans\nearn_per_lawn = 8\nlawns_mowed = 5\nsaved_money = 7\ntotal_money = (earn_per_lawn * lawns_mowed) + saved_money\nans = total_money",
            "# Python code, return ans\ndollars_per_lawn = 8\nlawns_mowed = 5\nsaved_money = 7\nearned_money = dollars_per_lawn * lawns_mowed\ntotal_money = earned_money + saved_money\nans = total_money"
        ],
        "results": [
            47.0,
            47.0,
            47.0
        ],
        "result_counter": {
            "47.0": 3
        },
        "prediction": 47.0
    },
    {
        "question": "It takes 4 ounces of cheese to make a burrito and 9 ounces for a taco. If you wanted 7 burritos and 1 taco, how many ounces of cheese would you need?",
        "answer": 37,
        "generated": [
            "# Python code, return ans\ncheese_per_burrito = 4\ncheese_per_taco = 9\nburritos = 7\ntacos = 1\ntotal_cheese = (cheese_per_burrito * burritos) + (cheese_per_taco * tacos)\nans = total_cheese",
            "# Python code, return ans\ncheese_per_burrito = 4\ncheese_per_taco = 9\nburritos = 7\ntacos = 1\ntotal_cheese = (cheese_per_burrito * burritos) + (cheese_per_taco * tacos)\nans = total_cheese",
            "# Python code, return ans\ncheese_per_burrito = 4\ncheese_per_taco = 9\nburritos = 7\ntacos = 1\ntotal_cheese = (cheese_per_burrito * burritos) + (cheese_per_taco * tacos)\nans = total_cheese"
        ],
        "results": [
            37.0,
            37.0,
            37.0
        ],
        "result_counter": {
            "37.0": 3
        },
        "prediction": 37.0
    },
    {
        "question": "At a comic convention Janet wanted to buy 8 comics, but each one costs 4 dollars, plus it costs 2 to even get in. How much money should she take with her so she can get in and buy what she wants?",
        "answer": 34,
        "generated": [
            "# Python code, return ans\ncomic_cost = 4\ncomic_num = 8\nentrance_fee = 2\ntotal_cost = comic_cost * comic_num + entrance_fee\nans = total_cost",
            "# Python code, return ans\ncomic_cost = 4\ncomic_num = 8\nentry_fee = 2\ntotal_cost = (comic_cost * comic_num) + entry_fee\nans = total_cost",
            "# Python code, return ans\ncomic_cost = 4\ncomic_num = 8\nentrance_fee = 2\ntotal_cost = (comic_cost * comic_num) + entrance_fee\nans = total_cost"
        ],
        "results": [
            34.0,
            34.0,
            34.0
        ],
        "result_counter": {
            "34.0": 3
        },
        "prediction": 34.0
    },
    {
        "question": "Olivia had 7 math problems to complete. She spent about 4 minutes on each problem and then she spent 3 minutes checking her answers. How many minutes did she spend total?",
        "answer": 31,
        "generated": [
            "# Python code, return ans\nproblems = 7\ntime_per_problem = 4\nchecking_time = 3\ntotal_time = (problems * time_per_problem) + checking_time\nans = total_time",
            "# Python code, return ans\nproblems = 7\ntime_per_problem = 4\nchecking_time = 3\ntotal_time = (problems * time_per_problem) + checking_time\nans = total_time",
            "# Python code, return ans\nproblems = 7\ntime_per_problem = 4\nchecking_time = 3\ntotal_time = (problems * time_per_problem) + checking_time\nans = total_time"
        ],
        "results": [
            31.0,
            31.0,
            31.0
        ],
        "result_counter": {
            "31.0": 3
        },
        "prediction": 31.0
    },
    {
        "question": "Before lunch a waitress had already earned $5 in tips. After lunch she had 7 customers and each customer gave her a 2 dollar tip. How much money did she earn total?",
        "answer": 19,
        "generated": [
            "# Python code, return ans\ntips_before_lunch = 5\ncustomers_after_lunch = 7\ntip_per_customer = 2\ntips_after_lunch = customers_after_lunch * tip_per_customer\ntotal_tips = tips_before_lunch + tips_after_lunch\nans = total_tips",
            "# Python code, return ans\nbefore_lunch_tips = 5\nafter_lunch_customers = 7\ntip_per_customer = 2\nafter_lunch_tips = after_lunch_customers * tip_per_customer\ntotal_earned = before_lunch_tips + after_lunch_tips\nans = total_earned",
            "# Python code, return ans\nbefore_lunch_tips = 5\nafter_lunch_customers = 7\ntip_per_customer = 2\nafter_lunch_tips = after_lunch_customers * tip_per_customer\ntotal_earned = before_lunch_tips + after_lunch_tips\nans = total_earned"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "At band practice there were 4 rows of students with 8 students in each row and then another 9 students in the back. How many students were there total?",
        "answer": 41,
        "generated": [
            "# Python code, return ans\nrows = 4\nstudents_per_row = 8\nstudents_in_back = 9\ntotal_students = rows * students_per_row + students_in_back\nans = total_students",
            "# Python code, return ans\nrows = 4\nstudents_per_row = 8\nstudents_in_back = 9\ntotal_students = (rows * students_per_row) + students_in_back\nans = total_students",
            "# Python code, return ans\nrows = 4\nstudents_per_row = 8\nstudents_in_back = 9\ntotal_students = (rows * students_per_row) + students_in_back\nans = total_students"
        ],
        "results": [
            41.0,
            41.0,
            41.0
        ],
        "result_counter": {
            "41.0": 3
        },
        "prediction": 41.0
    },
    {
        "question": "A lawn care company bought 4 lawnmower blade for $8 each. They also bought a spool of weed eater string for $7. How much money did they spend on supplies?",
        "answer": 39,
        "generated": [
            "# Python code, return ans\nlawnmower_blade_cost = 8\nlawnmower_blade_num = 4\nweed_eater_string_cost = 7\ntotal_cost = (lawnmower_blade_cost * lawnmower_blade_num) + weed_eater_string_cost\nans = total_cost",
            "# Python code, return ans\nlawnmower_blade_cost = 8\nlawnmower_blade_num = 4\nweed_eater_string_cost = 7\ntotal_cost = (lawnmower_blade_cost * lawnmower_blade_num) + weed_eater_string_cost\nans = total_cost",
            "# Python code, return ans\nlawnmower_blade_cost = 8\nlawnmower_blade_num = 4\nweed_eater_string_cost = 7\ntotal_cost = (lawnmower_blade_cost * lawnmower_blade_num) + weed_eater_string_cost\nans = total_cost"
        ],
        "results": [
            39.0,
            39.0,
            39.0
        ],
        "result_counter": {
            "39.0": 3
        },
        "prediction": 39.0
    },
    {
        "question": "While playing a game Frank defeated 6 enemies. Each enemy earned him 9 points. Then he got another 8 points for completing the level. How many points did he earn total?",
        "answer": 62,
        "generated": [
            "# Python code, return ans\nenemies_defeated = 6\npoints_per_enemy = 9\nlevel_completion_points = 8\ntotal_points = (enemies_defeated * points_per_enemy) + level_completion_points\nans = total_points",
            "# Python code, return ans\nenemies_defeated = 6\npoints_per_enemy = 9\nlevel_completion_points = 8\ntotal_points = (enemies_defeated * points_per_enemy) + level_completion_points\nans = total_points",
            "# Python code, return ans\nenemies_defeated = 6\npoints_per_enemy = 9\nlevel_completion_points = 8\ntotal_points = (enemies_defeated * points_per_enemy) + level_completion_points\nans = total_points"
        ],
        "results": [
            62.0,
            62.0,
            62.0
        ],
        "result_counter": {
            "62.0": 3
        },
        "prediction": 62.0
    },
    {
        "question": "Wendy's brother had 6 pieces of candy. Wendy had 2 boxes with 3 pieces each. How many pieces did they have total?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nbrother_candy = 6\nWendy_boxes = 2\nWendy_candy_per_box = 3\nWendy_total_candy = Wendy_boxes * Wendy_candy_per_box\ntotal_candy = brother_candy + Wendy_total_candy\nans = total_candy",
            "# Python code, return ans\nbrother_candy = 6\nWendy_boxes = 2\nWendy_candy_per_box = 3\nWendy_total_candy = Wendy_boxes * Wendy_candy_per_box\ntotal_candy = brother_candy + Wendy_total_candy\nans = total_candy",
            "# Python code, return ans\nbrother_candy = 6\nWendy_boxes = 2\nWendy_candy_per_box = 3\nWendy_total_candy = Wendy_boxes * Wendy_candy_per_box\ntotal_candy = brother_candy + Wendy_total_candy\nans = total_candy"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "A baker made 2 batches of chocolate chip cookies. Each batch had 3 cookies in it. Then he made an additional 4 oatmeal cookies just in case someone didn't want chocolate chip. How many cookies did he bake total?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\nbatch_chocolate_chip = 2\ncookies_per_batch = 3\noatmeal_cookies = 4\ntotal_cookies = (batch_chocolate_chip * cookies_per_batch) + oatmeal_cookies\nans = total_cookies",
            "# Python code, return ans\nbatch_num = 2\ncookies_per_batch = 3\noatmeal_cookies = 4\ntotal_cookies = (batch_num * cookies_per_batch) + oatmeal_cookies\nans = total_cookies",
            "# Python code, return ans\nbatch_num = 2\ncookies_per_batch = 3\noatmeal_cookies = 4\ntotal_cookies = (batch_num * cookies_per_batch) + oatmeal_cookies\nans = total_cookies"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "A music teacher had 2 recorders, but she decided to buy 9 more boxes with each box having 3 recorders in it. How many recorders did she have after buying the 9 boxes?",
        "answer": 29,
        "generated": [
            "# Python code, return ans\ninitial_recorders = 2\nboxes_bought = 9\nrecorders_per_box = 3\ntotal_recorders_bought = boxes_bought * recorders_per_box\ntotal_recorders = initial_recorders + total_recorders_bought\nans = total_recorders",
            "# Python code, return ans\ninitial_recorders = 2\nboxes_bought = 9\nrecorders_per_box = 3\ntotal_recorders_bought = boxes_bought * recorders_per_box\ntotal_recorders = initial_recorders + total_recorders_bought\nans = total_recorders",
            "# Python code, return ans\ninitial_recorders = 2\nboxes_bought = 9\nrecorders_per_box = 3\nnew_recorders = boxes_bought * recorders_per_box\ntotal_recorders = initial_recorders + new_recorders\nans = total_recorders"
        ],
        "results": [
            29.0,
            29.0,
            29.0
        ],
        "result_counter": {
            "29.0": 3
        },
        "prediction": 29.0
    },
    {
        "question": "A florist needed to use 2 pounds of fertilizer for 9 days and then on the final day use the normal amount plus another 4 pounds. How many pounds of fertilizer will she use all together?",
        "answer": 22,
        "generated": [
            "# Python code, return ans\nfertilizer_per_day = 2\ndays = 9\nextra_fertilizer = 4\ntotal_fertilizer = (fertilizer_per_day * days) + extra_fertilizer\nans = total_fertilizer",
            "# Python code, return ans\nfertilizer_per_day = 2\ndays = 9\nextra_fertilizer = 4\ntotal_fertilizer = (fertilizer_per_day * days) + extra_fertilizer\nans = total_fertilizer",
            "# Python code, return ans\nfertilizer_per_day = 2\ndays = 9\nextra_fertilizer = 4\ntotal_fertilizer = (fertilizer_per_day * days) + extra_fertilizer\nans = total_fertilizer"
        ],
        "results": [
            22.0,
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 3
        },
        "prediction": 22.0
    },
    {
        "question": "A clothing company used 2 buttons on jeans and 5 buttons on shirts. If they made 9 shirts and 1 pair of jeans, how many buttons would they use total?",
        "answer": 47,
        "generated": [
            "# Python code, return ans\nbuttons_on_jeans = 2\nbuttons_on_shirts = 5\nnum_shirts = 9\nnum_jeans = 1\ntotal_buttons = (buttons_on_jeans * num_jeans) + (buttons_on_shirts * num_shirts)\nans = total_buttons",
            "# Python code, return ans\nbuttons_on_jeans = 2\nbuttons_on_shirts = 5\nnum_of_shirts = 9\nnum_of_jeans = 1\ntotal_buttons = (buttons_on_jeans * num_of_jeans) + (buttons_on_shirts * num_of_shirts)\nans = total_buttons",
            "# Python code, return ans\nbuttons_on_jeans = 2\nbuttons_on_shirts = 5\nnum_of_shirts = 9\nnum_of_jeans = 1\ntotal_buttons = (buttons_on_jeans * num_of_jeans) + (buttons_on_shirts * num_of_shirts)\nans = total_buttons"
        ],
        "results": [
            47.0,
            47.0,
            47.0
        ],
        "result_counter": {
            "47.0": 3
        },
        "prediction": 47.0
    },
    {
        "question": "Amy worked as a sacker at the grocery store where she made $2/hr. If she worked for 7 hours and also made $9 in tips, how much money did she earn?",
        "answer": 23,
        "generated": [
            "# Python code, return ans\nhourly_rate = 2\nhours_worked = 7\ntips = 9\ntotal_earned = hourly_rate * hours_worked + tips\nans = total_earned",
            "# Python code, return ans\nhourly_rate = 2\nhours_worked = 7\ntips = 9\ntotal_earned = hourly_rate * hours_worked + tips\nans = total_earned",
            "# Python code, return ans\nhourly_rate = 2\nhours_worked = 7\ntips = 9\ntotal_earned = hourly_rate * hours_worked + tips\nans = total_earned"
        ],
        "results": [
            23.0,
            23.0,
            23.0
        ],
        "result_counter": {
            "23.0": 3
        },
        "prediction": 23.0
    },
    {
        "question": "A report said that each day the average Youtube viewer watches 2 videos with each video lasting 7 minutes. Additionally they also watch 3 minutes of ads. According to the report, how many minutes total do people spend on Youtube?",
        "answer": 17,
        "generated": [
            "# Python code, return ans\naverage_videos = 2\nvideo_duration = 7\nads_duration = 3\ntotal_minutes = (average_videos * video_duration) + ads_duration\nans = total_minutes",
            "# Python code, return ans\naverage_videos_watched = 2\nvideo_duration = 7\nad_duration = 3\ntotal_time_spent = (average_videos_watched * video_duration) + ad_duration\nans = total_time_spent",
            "# Python code, return ans\naverage_videos_watched = 2\nvideo_duration = 7\nad_duration = 3\ntotal_minutes = (average_videos_watched * video_duration) + ad_duration\nans = total_minutes"
        ],
        "results": [
            17.0,
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 3
        },
        "prediction": 17.0
    },
    {
        "question": "Zoe bought an app that cost $5 dollars. Then each month you have to pay $8 to play online. If she played the game online for 2 months, how much money would she have spent total for the app and the online access?",
        "answer": 21,
        "generated": [
            "# Python code, return ans\napp_cost = 5\nmonthly_online_cost = 8\nmonths_played = 2\ntotal_cost = app_cost + (monthly_online_cost * months_played)\nans = total_cost",
            "# Python code, return ans\napp_cost = 5\nmonthly_online_cost = 8\nmonths_played = 2\ntotal_cost = app_cost + (monthly_online_cost * months_played)\nans = total_cost",
            "# Python code, return ans\napp_cost = 5\nmonthly_cost = 8\nmonths_played = 2\ntotal_cost = app_cost + (monthly_cost * months_played)\nans = total_cost"
        ],
        "results": [
            21.0,
            21.0,
            21.0
        ],
        "result_counter": {
            "21.0": 3
        },
        "prediction": 21.0
    },
    {
        "question": "Adam had 8 boxes of toys. Each box had 6 toys. Later Adam bought 5 more toys. How many toys did he have total?",
        "answer": 53,
        "generated": [
            "# Python code, return ans\nboxes = 8\ntoys_per_box = 6\nnew_toys = 5\ntotal_toys = (boxes * toys_per_box) + new_toys\nans = total_toys",
            "# Python code, return ans\nboxes_of_toys = 8\ntoys_per_box = 6\nadditional_toys = 5\ntotal_toys = (boxes_of_toys * toys_per_box) + additional_toys\nans = total_toys",
            "# Python code, return ans\nboxes_of_toys = 8\ntoys_per_box = 6\nadditional_toys = 5\ntotal_toys = (boxes_of_toys * toys_per_box) + additional_toys\nans = total_toys"
        ],
        "results": [
            53.0,
            53.0,
            53.0
        ],
        "result_counter": {
            "53.0": 3
        },
        "prediction": 53.0
    },
    {
        "question": "Edward spent $2 on a board game and then he bought 4 action figures for $7 each. How much money did he spend on the game and figures?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\nboard_game_cost = 2\naction_figure_cost = 7\naction_figure_num = 4\ntotal_cost = board_game_cost + (action_figure_cost * action_figure_num)\nans = total_cost",
            "# Python code, return ans\nboard_game_cost = 2\naction_figure_cost = 7\naction_figure_num = 4\ntotal_cost = board_game_cost + (action_figure_cost * action_figure_num)\nans = total_cost",
            "# Python code, return ans\nboard_game_cost = 2\naction_figure_cost = 7\naction_figure_num = 4\ntotal_cost = board_game_cost + (action_figure_cost * action_figure_num)\nans = total_cost"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "A company was offering a special on cell phones for $2 each. But only if you spent 7 dollars a month for 4 months. How much would it end up costing you total if you bought 1 phone?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\nphone_cost = 2\nmonthly_fee = 7\nmonths = 4\ntotal_cost = phone_cost + (monthly_fee * months)\nans = total_cost",
            "# Python code, return ans\nphone_cost = 2\nmonthly_fee = 7\nmonths = 4\ntotal_cost = phone_cost + (monthly_fee * months)\nans = total_cost",
            "# Python code, return ans\nphone_cost = 2\nmonthly_fee = 7\nmonths = 4\ntotal_cost = phone_cost + (monthly_fee * months)\nans = total_cost"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "A pet store sold 2 kittens and 1 puppy over the weekend. The kittens sold for $6 each and the puppy sold for $5. How much money did they earn from selling the pets?",
        "answer": 17,
        "generated": [
            "# Python code, return ans\nkitten_price = 6\nkitten_num = 2\npuppy_price = 5\npuppy_num = 1\ntotal_money = (kitten_price * kitten_num) + (puppy_price * puppy_num)\nans = total_money",
            "# Python code, return ans\nkitten_price = 6\nkitten_num = 2\npuppy_price = 5\npuppy_num = 1\ntotal_earnings = (kitten_price * kitten_num) + (puppy_price * puppy_num)\nans = total_earnings",
            "# Python code, return ans\nkitten_price = 6\nkitten_num = 2\npuppy_price = 5\npuppy_num = 1\ntotal_money = (kitten_price * kitten_num) + (puppy_price * puppy_num)\nans = total_money"
        ],
        "results": [
            17.0,
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 3
        },
        "prediction": 17.0
    },
    {
        "question": "At the arcade Amy had 6 tickets she saved from the last time she went. This time she played a game 7 times and earned 5 tickets each time she played. How many tickets does she have now?",
        "answer": 41,
        "generated": [
            "# Python code, return ans\nsaved_tickets = 6\ngame_played = 7\ntickets_per_game = 5\nearned_tickets = game_played * tickets_per_game\ntotal_tickets = saved_tickets + earned_tickets\nans = total_tickets",
            "# Python code, return ans\nsaved_tickets = 6\ngame_played = 7\ntickets_per_game = 5\nearned_tickets = game_played * tickets_per_game\ntotal_tickets = saved_tickets + earned_tickets\nans = total_tickets",
            "# Python code, return ans\nsaved_tickets = 6\ngame_played = 7\ntickets_per_game = 5\nearned_tickets = game_played * tickets_per_game\ntotal_tickets = saved_tickets + earned_tickets\nans = total_tickets"
        ],
        "results": [
            41.0,
            41.0,
            41.0
        ],
        "result_counter": {
            "41.0": 3
        },
        "prediction": 41.0
    },
    {
        "question": "A malt shop used 4 ounces of chocolate syrup in their shakes and 6 ounces of syrup on their cones. If they sold 2 shakes and 1 cone, how many ounces of chocolate would they use total?",
        "answer": 14,
        "generated": [
            "# Python code, return ans\nchocolate_shake = 4\nchocolate_cone = 6\nshakes_sold = 2\ncones_sold = 1\ntotal_chocolate = (chocolate_shake * shakes_sold) + (chocolate_cone * cones_sold)\nans = total_chocolate",
            "# Python code, return ans\nchocolate_shake = 4\nchocolate_cone = 6\nshakes_sold = 2\ncones_sold = 1\ntotal_chocolate = (chocolate_shake * shakes_sold) + (chocolate_cone * cones_sold)\nans = total_chocolate",
            "# Python code, return ans\nchocolate_shake = 4\nchocolate_cone = 6\nshakes_sold = 2\ncones_sold = 1\ntotal_chocolate = (chocolate_shake * shakes_sold) + (chocolate_cone * cones_sold)\nans = total_chocolate"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "A grocery store had forty-nine bottles of regular soda and thirty-five bottles of diet soda. How many bottles did they have total?",
        "answer": 84,
        "generated": [
            "# Python code, return ans\nregular_soda = 49\ndiet_soda = 35\ntotal_soda = regular_soda + diet_soda\nans = total_soda",
            "# Python code, return ans\nregular_soda = 49\ndiet_soda = 35\ntotal_soda = regular_soda + diet_soda\nans = total_soda",
            "# Python code, return ans\nregular_soda = 49\ndiet_soda = 35\ntotal_soda = regular_soda + diet_soda\nans = total_soda"
        ],
        "results": [
            84.0,
            84.0,
            84.0
        ],
        "result_counter": {
            "84.0": 3
        },
        "prediction": 84.0
    },
    {
        "question": "While playing a game Sam had ninety-two points. If he scored another three points, how many points would he have total?",
        "answer": 95,
        "generated": [
            "# Python code, return ans\nSam_points = 92\nnew_points = 3\ntotal_points = Sam_points + new_points\nans = total_points",
            "# Python code, return ans\nSam_points = 92\nadditional_points = 3\ntotal_points = Sam_points + additional_points\nans = total_points",
            "# Python code, return ans\nSam_points = 92\nadditional_points = 3\ntotal_points = Sam_points + additional_points\nans = total_points"
        ],
        "results": [
            95.0,
            95.0,
            95.0
        ],
        "result_counter": {
            "95.0": 3
        },
        "prediction": 95.0
    },
    {
        "question": "In the first half of a trivia game Kaleb scored forty-three points. In the second half he scored twenty-three points. How many points did he score total?",
        "answer": 66,
        "generated": [
            "# Python code, return ans\nfirst_half_points = 43\nsecond_half_points = 23\ntotal_points = first_half_points + second_half_points\nans = total_points",
            "# Python code, return ans\nfirst_half_points = 43\nsecond_half_points = 23\ntotal_points = first_half_points + second_half_points\nans = total_points",
            "# Python code, return ans\nfirst_half_points = 43\nsecond_half_points = 23\ntotal_points = first_half_points + second_half_points\nans = total_points"
        ],
        "results": [
            66.0,
            66.0,
            66.0
        ],
        "result_counter": {
            "66.0": 3
        },
        "prediction": 66.0
    },
    {
        "question": "Mike owned sixty-four baseball cards. For his birthday he got eighteen more. How many cards does Mike have total?",
        "answer": 82,
        "generated": [
            "# Python code, return ans\nowned_cards = 64\nbirthday_cards = 18\ntotal_cards = owned_cards + birthday_cards\nans = total_cards",
            "# Python code, return ans\nowned_cards = 64\nbirthday_cards = 18\ntotal_cards = owned_cards + birthday_cards\nans = total_cards",
            "# Python code, return ans\nowned_cards = 64\nbirthday_cards = 18\ntotal_cards = owned_cards + birthday_cards\nans = total_cards"
        ],
        "results": [
            82.0,
            82.0,
            82.0
        ],
        "result_counter": {
            "82.0": 3
        },
        "prediction": 82.0
    },
    {
        "question": "For a party Henry spent forty-five dollars on food and thirty-three dollars on drinks. How much did Henry spend total?",
        "answer": 78,
        "generated": [
            "# Python code, return ans\nfood_cost = 45\ndrink_cost = 33\ntotal_cost = food_cost + drink_cost\nans = total_cost",
            "# Python code, return ans\nfood_cost = 45\ndrink_cost = 33\ntotal_cost = food_cost + drink_cost\nans = total_cost",
            "# Python code, return ans\nfood_cost = 45\ndrink_cost = 33\ntotal_cost = food_cost + drink_cost\nans = total_cost"
        ],
        "results": [
            78.0,
            78.0,
            78.0
        ],
        "result_counter": {
            "78.0": 3
        },
        "prediction": 78.0
    },
    {
        "question": "A restaurant sold seventy-seven sodas in the morning and nineteen in the afternoon. How many sodas did they sell total?",
        "answer": 96,
        "generated": [
            "# Python code, return ans\nsodas_morning = 77\nsodas_afternoon = 19\ntotal_sodas = sodas_morning + sodas_afternoon\nans = total_sodas",
            "# Python code, return ans\nsodas_morning = 77\nsodas_afternoon = 19\ntotal_sodas = sodas_morning + sodas_afternoon\nans = total_sodas",
            "# Python code, return ans\nsodas_morning = 77\nsodas_afternoon = 19\ntotal_sodas = sodas_morning + sodas_afternoon\nans = total_sodas"
        ],
        "results": [
            96.0,
            96.0,
            96.0
        ],
        "result_counter": {
            "96.0": 3
        },
        "prediction": 96.0
    },
    {
        "question": "A store has fifty-six shirts. Later they got in eleven more shirts. How many shirts does the store have now?",
        "answer": 67,
        "generated": [
            "# Python code, return ans\ninitial_shirts = 56\nnew_shirts = 11\ntotal_shirts = initial_shirts + new_shirts\nans = total_shirts",
            "# Python code, return ans\ninitial_shirts = 56\nnew_shirts = 11\ntotal_shirts = initial_shirts + new_shirts\nans = total_shirts",
            "# Python code, return ans\ninitial_shirts = 56\nnew_shirts = 11\ntotal_shirts = initial_shirts + new_shirts\nans = total_shirts"
        ],
        "results": [
            67.0,
            67.0,
            67.0
        ],
        "result_counter": {
            "67.0": 3
        },
        "prediction": 67.0
    },
    {
        "question": "Bianca spent twenty-two minutes drawing at school and nineteen minutes drawing at home. How many minutes total did she spend drawing?",
        "answer": 41,
        "generated": [
            "# Python code, return ans\ndrawing_at_school = 22\ndrawing_at_home = 19\ntotal_drawing_time = drawing_at_school + drawing_at_home\nans = total_drawing_time",
            "# Python code, return ans\ndrawing_at_school = 22\ndrawing_at_home = 19\ntotal_drawing_time = drawing_at_school + drawing_at_home\nans = total_drawing_time",
            "# Python code, return ans\ndrawing_at_school = 22\ndrawing_at_home = 19\ntotal_drawing_time = drawing_at_school + drawing_at_home\nans = total_drawing_time"
        ],
        "results": [
            41.0,
            41.0,
            41.0
        ],
        "result_counter": {
            "41.0": 3
        },
        "prediction": 41.0
    },
    {
        "question": "There were sixty-one people in line at lunch when twenty-two more got in line. How many people were there total in line?",
        "answer": 83,
        "generated": [
            "# Python code, return ans\npeople_in_line_initial = 61\npeople_joined = 22\ntotal_people_in_line = people_in_line_initial + people_joined\nans = total_people_in_line",
            "# Python code, return ans\npeople_in_line_initially = 61\npeople_joined = 22\ntotal_people_in_line = people_in_line_initially + people_joined\nans = total_people_in_line",
            "# Python code, return ans\npeople_in_line = 61\nnew_people = 22\ntotal_people = people_in_line + new_people\nans = total_people"
        ],
        "results": [
            83.0,
            83.0,
            83.0
        ],
        "result_counter": {
            "83.0": 3
        },
        "prediction": 83.0
    },
    {
        "question": "A fast food restaurant sold fifty-eight small hotdogs and twenty-one large hotdogs. How many hotdogs did they sell total?",
        "answer": 79,
        "generated": [
            "# Python code, return ans\nsmall_hotdogs = 58\nlarge_hotdogs = 21\ntotal_hotdogs = small_hotdogs + large_hotdogs\nans = total_hotdogs",
            "# Python code, return ans\nsmall_hotdogs = 58\nlarge_hotdogs = 21\ntotal_hotdogs = small_hotdogs + large_hotdogs\nans = total_hotdogs",
            "# Python code, return ans\nsmall_hotdogs = 58\nlarge_hotdogs = 21\ntotal_hotdogs = small_hotdogs + large_hotdogs\nans = total_hotdogs"
        ],
        "results": [
            79.0,
            79.0,
            79.0
        ],
        "result_counter": {
            "79.0": 3
        },
        "prediction": 79.0
    },
    {
        "question": "Henry had $54. Later he sold some of his old toys and got another $2. How much money does he have total?",
        "answer": 56,
        "generated": [
            "# Python code, return ans\ninitial_money = 54\nmoney_from_toys = 2\ntotal_money = initial_money + money_from_toys\nans = total_money",
            "# Python code, return ans\ninitial_money = 54\nmoney_from_toys = 2\ntotal_money = initial_money + money_from_toys\nans = total_money",
            "# Python code, return ans\ninitial_money = 54\nmoney_from_toys = 2\ntotal_money = initial_money + money_from_toys\nans = total_money"
        ],
        "results": [
            56.0,
            56.0,
            56.0
        ],
        "result_counter": {
            "56.0": 3
        },
        "prediction": 56.0
    },
    {
        "question": "An aquarium had ten fish in it. Later they added three fish. How many fish are in the aquarium now?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\ninitial_fish = 10\nadded_fish = 3\ntotal_fish = initial_fish + added_fish\nans = total_fish",
            "# Python code, return ans\ninitial_fish = 10\nadded_fish = 3\ntotal_fish = initial_fish + added_fish\nans = total_fish",
            "# Python code, return ans\ninitial_fish = 10\nadded_fish = 3\ntotal_fish = initial_fish + added_fish\nans = total_fish"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "Isabel had sixty-eight pieces of candy. Her friend gave her twenty-five more pieces. How many pieces of candy did Isabel have total?",
        "answer": 93,
        "generated": [
            "# Python code, return ans\nIsabel_candy = 68\nfriend_candy = 25\ntotal_candy = Isabel_candy + friend_candy\nans = total_candy",
            "# Python code, return ans\nIsabel_candy = 68\nfriend_candy = 25\ntotal_candy = Isabel_candy + friend_candy\nans = total_candy",
            "# Python code, return ans\ninitial_candy = 68\nadditional_candy = 25\ntotal_candy = initial_candy + additional_candy\nans = total_candy"
        ],
        "results": [
            93.0,
            93.0,
            93.0
        ],
        "result_counter": {
            "93.0": 3
        },
        "prediction": 93.0
    },
    {
        "question": "Maria had fifty sheets of paper in her desk and forty-one more in her backpack. How many did she have total?",
        "answer": 91,
        "generated": [
            "# Python code, return ans\npaper_desk = 50\npaper_backpack = 41\ntotal_paper = paper_desk + paper_backpack\nans = total_paper",
            "# Python code, return ans\npaper_desk = 50\npaper_backpack = 41\ntotal_paper = paper_desk + paper_backpack\nans = total_paper",
            "# Python code, return ans\npaper_desk = 50\npaper_backpack = 41\ntotal_paper = paper_desk + paper_backpack\nans = total_paper"
        ],
        "results": [
            91.0,
            91.0,
            91.0
        ],
        "result_counter": {
            "91.0": 3
        },
        "prediction": 91.0
    },
    {
        "question": "On Facebook Debby had sixty-three photos of her friends and twenty-three photos of her family. How many photos did she have total?",
        "answer": 86,
        "generated": [
            "# Python code, return ans\nphotos_friends = 63\nphotos_family = 23\ntotal_photos = photos_friends + photos_family\nans = total_photos",
            "# Python code, return ans\nphotos_friends = 63\nphotos_family = 23\ntotal_photos = photos_friends + photos_family\nans = total_photos",
            "# Python code, return ans\nfriend_photos = 63\nfamily_photos = 23\ntotal_photos = friend_photos + family_photos\nans = total_photos"
        ],
        "results": [
            86.0,
            86.0,
            86.0
        ],
        "result_counter": {
            "86.0": 3
        },
        "prediction": 86.0
    },
    {
        "question": "Adam had seventy-nine dollars saved up. After doing some chores his mother gave him another thirteen dollars. How much money does he have total?",
        "answer": 92,
        "generated": [
            "# Python code, return ans\nAdam_saved = 79\nAdam_earned = 13\ntotal_money = Adam_saved + Adam_earned\nans = total_money",
            "# Python code, return ans\nAdam_saved_money = 79\nAdam_earned_money = 13\ntotal_money = Adam_saved_money + Adam_earned_money\nans = total_money",
            "# Python code, return ans\nAdam_saved = 79\nAdam_received = 13\nAdam_total = Adam_saved + Adam_received\nans = Adam_total"
        ],
        "results": [
            92.0,
            92.0,
            92.0
        ],
        "result_counter": {
            "92.0": 3
        },
        "prediction": 92.0
    },
    {
        "question": "Debby received twenty-one text messages before noon and another eighteen after noon. How many text messages did Debby receive total?",
        "answer": 39,
        "generated": [
            "# Python code, return ans\ntext_messages_before_noon = 21\ntext_messages_after_noon = 18\ntotal_text_messages = text_messages_before_noon + text_messages_after_noon\nans = total_text_messages",
            "# Python code, return ans\ntext_before_noon = 21\ntext_after_noon = 18\ntotal_text = text_before_noon + text_after_noon\nans = total_text",
            "# Python code, return ans\ntext_before_noon = 21\ntext_after_noon = 18\ntotal_text = text_before_noon + text_after_noon\nans = total_text"
        ],
        "results": [
            39.0,
            39.0,
            39.0
        ],
        "result_counter": {
            "39.0": 3
        },
        "prediction": 39.0
    },
    {
        "question": "At the fair Amy started with thirty-three tickets and then bought twenty-one more. How many tickets did Amy have total?",
        "answer": 54,
        "generated": [
            "# Python code, return ans\ninitial_tickets = 33\nbought_tickets = 21\ntotal_tickets = initial_tickets + bought_tickets\nans = total_tickets",
            "# Python code, return ans\ninitial_tickets = 33\nbought_tickets = 21\ntotal_tickets = initial_tickets + bought_tickets\nans = total_tickets",
            "# Python code, return ans\ntickets_initial = 33\ntickets_bought = 21\ntotal_tickets = tickets_initial + tickets_bought\nans = total_tickets"
        ],
        "results": [
            54.0,
            54.0,
            54.0
        ],
        "result_counter": {
            "54.0": 3
        },
        "prediction": 54.0
    },
    {
        "question": "Mike collected seventy-one cans to recycle on Monday and twenty-seven more on Tuesday. How many cans did Mike collect all together?",
        "answer": 98,
        "generated": [
            "# Python code, return ans\ncans_Monday = 71\ncans_Tuesday = 27\ntotal_cans = cans_Monday + cans_Tuesday\nans = total_cans",
            "# Python code, return ans\ncans_Monday = 71\ncans_Tuesday = 27\ntotal_cans = cans_Monday + cans_Tuesday\nans = total_cans",
            "# Python code, return ans\ncans_on_Monday = 71\ncans_on_Tuesday = 27\ntotal_cans = cans_on_Monday + cans_on_Tuesday\nans = total_cans"
        ],
        "results": [
            98.0,
            98.0,
            98.0
        ],
        "result_counter": {
            "98.0": 3
        },
        "prediction": 98.0
    },
    {
        "question": "A baker already had seventy-eight cakes but made nine extra. How many cakes did the baker have total?",
        "answer": 87,
        "generated": [
            "# Python code, return ans\ncakes_already = 78\ncakes_extra = 9\ntotal_cakes = cakes_already + cakes_extra\nans = total_cakes",
            "# Python code, return ans\ninitial_cakes = 78\nextra_cakes = 9\ntotal_cakes = initial_cakes + extra_cakes\nans = total_cakes",
            "# Python code, return ans\ninitial_cakes = 78\nextra_cakes = 9\ntotal_cakes = initial_cakes + extra_cakes\nans = total_cakes"
        ],
        "results": [
            87.0,
            87.0,
            87.0
        ],
        "result_counter": {
            "87.0": 3
        },
        "prediction": 87.0
    },
    {
        "question": "A pet store had sixty-four birds that talked and thirteen that didn't. How many birds did the pet store have total?",
        "answer": 77,
        "generated": [
            "# Python code, return ans\ntalking_birds = 64\nnon_talking_birds = 13\ntotal_birds = talking_birds + non_talking_birds\nans = total_birds",
            "# Python code, return ans\ntalking_birds = 64\nnon_talking_birds = 13\ntotal_birds = talking_birds + non_talking_birds\nans = total_birds",
            "# Python code, return ans\ntalking_birds = 64\nnon_talking_birds = 13\ntotal_birds = talking_birds + non_talking_birds\nans = total_birds"
        ],
        "results": [
            77.0,
            77.0,
            77.0
        ],
        "result_counter": {
            "77.0": 3
        },
        "prediction": 77.0
    },
    {
        "question": "At the zoo Zoe took sixty-seven pictures. If her sister took another seventeen pictures, how many did they take total?",
        "answer": 84,
        "generated": [
            "# Python code, return ans\nZoe_pictures = 67\nsister_pictures = 17\ntotal_pictures = Zoe_pictures + sister_pictures\nans = total_pictures",
            "# Python code, return ans\nZoe_pictures = 67\nsister_pictures = 17\ntotal_pictures = Zoe_pictures + sister_pictures\nans = total_pictures",
            "# Python code, return ans\nZoe_pictures = 67\nsister_pictures = 17\ntotal_pictures = Zoe_pictures + sister_pictures\nans = total_pictures"
        ],
        "results": [
            84.0,
            84.0,
            84.0
        ],
        "result_counter": {
            "84.0": 3
        },
        "prediction": 84.0
    },
    {
        "question": "At the arcade Henry had won fifty-eight tickets. Later he won forty more tickets. How many tickets did Henry have total?",
        "answer": 98,
        "generated": [
            "# Python code, return ans\ntickets_won_first = 58\ntickets_won_later = 40\ntotal_tickets = tickets_won_first + tickets_won_later\nans = total_tickets",
            "# Python code, return ans\ntickets_won_first = 58\ntickets_won_later = 40\ntotal_tickets = tickets_won_first + tickets_won_later\nans = total_tickets",
            "# Python code, return ans\ntickets_won_initially = 58\ntickets_won_later = 40\ntotal_tickets = tickets_won_initially + tickets_won_later\nans = total_tickets"
        ],
        "results": [
            98.0,
            98.0,
            98.0
        ],
        "result_counter": {
            "98.0": 3
        },
        "prediction": 98.0
    },
    {
        "question": "Katie had seventy-two DS games and her friend had twenty-three games. How many do they have total?",
        "answer": 95,
        "generated": [
            "# Python code, return ans\nKatie_games = 72\nfriend_games = 23\ntotal_games = Katie_games + friend_games\nans = total_games",
            "# Python code, return ans\nKatie_games = 72\nfriend_games = 23\ntotal_games = Katie_games + friend_games\nans = total_games",
            "# Python code, return ans\nKatie_games = 72\nfriend_games = 23\ntotal_games = Katie_games + friend_games\nans = total_games"
        ],
        "results": [
            95.0,
            95.0,
            95.0
        ],
        "result_counter": {
            "95.0": 3
        },
        "prediction": 95.0
    },
    {
        "question": "Sam was playing basketball with his friend. Sam scored seventy-five points and his friend scored twelve points. How many points did they score total?",
        "answer": 87,
        "generated": [
            "# Python code, return ans\nSam_points = 75\nfriend_points = 12\ntotal_points = Sam_points + friend_points\nans = total_points",
            "# Python code, return ans\nSam_points = 75\nfriend_points = 12\ntotal_points = Sam_points + friend_points\nans = total_points",
            "# Python code, return ans\nSam_points = 75\nfriend_points = 12\ntotal_points = Sam_points + friend_points\nans = total_points"
        ],
        "results": [
            87.0,
            87.0,
            87.0
        ],
        "result_counter": {
            "87.0": 3
        },
        "prediction": 87.0
    },
    {
        "question": "While exercising Paul did fifty-nine push-ups in the morning and thirty-eight more in the afternoon. How many push-ups did Paul do total?",
        "answer": 97,
        "generated": [
            "# Python code, return ans\npush_ups_morning = 59\npush_ups_afternoon = 38\ntotal_push_ups = push_ups_morning + push_ups_afternoon\nans = total_push_ups",
            "# Python code, return ans\npush_ups_morning = 59\npush_ups_afternoon = 38\ntotal_push_ups = push_ups_morning + push_ups_afternoon\nans = total_push_ups",
            "# Python code, return ans\npush_up_morning = 59\npush_up_afternoon = 38\ntotal_push_up = push_up_morning + push_up_afternoon\nans = total_push_up"
        ],
        "results": [
            97.0,
            97.0,
            97.0
        ],
        "result_counter": {
            "97.0": 3
        },
        "prediction": 97.0
    },
    {
        "question": "A farmer planted twenty seeds on Wednesday and another two seeds on Thursday. How many seeds did he plant total?",
        "answer": 22,
        "generated": [
            "# Python code, return ans\nseeds_Wednesday = 20\nseeds_Thursday = 2\ntotal_seeds = seeds_Wednesday + seeds_Thursday\nans = total_seeds",
            "# Python code, return ans\nseed_Wednesday = 20\nseed_Thursday = 2\ntotal_seeds = seed_Wednesday + seed_Thursday\nans = total_seeds",
            "# Python code, return ans\nseeds_Wednesday = 20\nseeds_Thursday = 2\ntotal_seeds = seeds_Wednesday + seeds_Thursday\nans = total_seeds"
        ],
        "results": [
            22.0,
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 3
        },
        "prediction": 22.0
    },
    {
        "question": "Haley watched TV for six hours on Saturday and three hours on Sunday. How many hours did Haley watch TV total?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nwatched_on_Saturday = 6\nwatched_on_Sunday = 3\ntotal_watched = watched_on_Saturday + watched_on_Sunday\nans = total_watched",
            "# Python code, return ans\nwatched_on_Saturday = 6\nwatched_on_Sunday = 3\ntotal_watched = watched_on_Saturday + watched_on_Sunday\nans = total_watched",
            "# Python code, return ans\nwatched_on_Saturday = 6\nwatched_on_Sunday = 3\ntotal_watched = watched_on_Saturday + watched_on_Sunday\nans = total_watched"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Jerry walked nine miles on Monday and nine more on Tuesday. How many miles did Jerry walk?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\nwalked_on_Monday = 9\nwalked_on_Tuesday = 9\ntotal_walked = walked_on_Monday + walked_on_Tuesday\nans = total_walked",
            "# Python code, return ans\nwalked_on_Monday = 9\nwalked_on_Tuesday = 9\ntotal_walked = walked_on_Monday + walked_on_Tuesday\nans = total_walked",
            "# Python code, return ans\nwalked_on_Monday = 9\nwalked_on_Tuesday = 9\ntotal_walked = walked_on_Monday + walked_on_Tuesday\nans = total_walked"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "Gwen had ten fish and her sister had five fish. How many fish did they have total?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\nGwen_fish = 10\nsister_fish = 5\ntotal_fish = Gwen_fish + sister_fish\nans = total_fish",
            "# Python code, return ans\nGwen_fish = 10\nsister_fish = 5\ntotal_fish = Gwen_fish + sister_fish\nans = total_fish",
            "# Python code, return ans\nGwen_fish = 10\nsister_fish = 5\ntotal_fish = Gwen_fish + sister_fish\nans = total_fish"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "Victor had $10. For his allowance he got another $8. How much money does he have total?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\ninitial_money = 10\nallowance = 8\ntotal_money = initial_money + allowance\nans = total_money",
            "# Python code, return ans\ninitial_money = 10\nallowance = 8\ntotal_money = initial_money + allowance\nans = total_money",
            "# Python code, return ans\ninitial_money = 10\nallowance = 8\ntotal_money = initial_money + allowance\nans = total_money"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "For Halloween Frank got ten pounds of candy and Gwen got seven pounds of candy. What is the combined weight they received?",
        "answer": 17,
        "generated": [
            "# Python code, return ans\nFrank_candy = 10\nGwen_candy = 7\ncombined_weight = Frank_candy + Gwen_candy\nans = combined_weight",
            "# Python code, return ans\nFrank_candy = 10\nGwen_candy = 7\ncombined_weight = Frank_candy + Gwen_candy\nans = combined_weight",
            "# Python code, return ans\nFrank_candy = 10\nGwen_candy = 7\ncombined_weight = Frank_candy + Gwen_candy\nans = combined_weight"
        ],
        "results": [
            17.0,
            17.0,
            17.0
        ],
        "result_counter": {
            "17.0": 3
        },
        "prediction": 17.0
    },
    {
        "question": "Roger was packing up his old toys. He filled eleven boxes with action figures and two boxes with old games. How many boxes did he pack total?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\naction_figure_boxes = 11\nold_game_boxes = 2\ntotal_boxes = action_figure_boxes + old_game_boxes\nans = total_boxes",
            "# Python code, return ans\naction_figure_boxes = 11\nold_game_boxes = 2\ntotal_boxes = action_figure_boxes + old_game_boxes\nans = total_boxes",
            "# Python code, return ans\nboxes_action_figures = 11\nboxes_old_games = 2\ntotal_boxes = boxes_action_figures + boxes_old_games\nans = total_boxes"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "A store sold eight cold drinks and three hot drinks. How many drinks did they sell total?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\ncold_drinks = 8\nhot_drinks = 3\ntotal_drinks = cold_drinks + hot_drinks\nans = total_drinks",
            "# Python code, return ans\ncold_drinks = 8\nhot_drinks = 3\ntotal_drinks = cold_drinks + hot_drinks\nans = total_drinks",
            "# Python code, return ans\ncold_drinks = 8\nhot_drinks = 3\ntotal_drinks = cold_drinks + hot_drinks\nans = total_drinks"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "A pet store had six kittens. If they got another three kittens, how many would they have total?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ninitial_kittens = 6\nnew_kittens = 3\ntotal_kittens = initial_kittens + new_kittens\nans = total_kittens",
            "# Python code, return ans\ninitial_kittens = 6\nnew_kittens = 3\ntotal_kittens = initial_kittens + new_kittens\nans = total_kittens",
            "# Python code, return ans\nkittens_initial = 6\nkittens_new = 3\ntotal_kittens = kittens_initial + kittens_new\nans = total_kittens"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Faye had seven books. If she bought twelve more at a yard sale, how many would she have total?",
        "answer": 19,
        "generated": [
            "# Python code, return ans\ninitial_books = 7\nbought_books = 12\ntotal_books = initial_books + bought_books\nans = total_books",
            "# Python code, return ans\ninitial_books = 7\nbought_books = 12\ntotal_books = initial_books + bought_books\nans = total_books",
            "# Python code, return ans\ninitial_books = 7\nbooks_bought = 12\ntotal_books = initial_books + books_bought\nans = total_books"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "John has twelve shirts. Later he bought four more shirts. How many shirts does John have total?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\ninitial_shirts = 12\nbought_shirts = 4\ntotal_shirts = initial_shirts + bought_shirts\nans = total_shirts",
            "# Python code, return ans\ninitial_shirts = 12\nbought_shirts = 4\ntotal_shirts = initial_shirts + bought_shirts\nans = total_shirts",
            "# Python code, return ans\ninitial_shirts = 12\nbought_shirts = 4\ntotal_shirts = initial_shirts + bought_shirts\nans = total_shirts"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "Robin drank seven bottles of water in the morning and seven in the afternoon. How many bottles did Robin drink total?",
        "answer": 14,
        "generated": [
            "# Python code, return ans\ndrank_morning = 7\ndrank_afternoon = 7\ntotal_drank = drank_morning + drank_afternoon\nans = total_drank",
            "# Python code, return ans\nbottles_morning = 7\nbottles_afternoon = 7\ntotal_bottles = bottles_morning + bottles_afternoon\nans = total_bottles",
            "# Python code, return ans\ndrank_morning = 7\ndrank_afternoon = 7\ntotal_drank = drank_morning + drank_afternoon\nans = total_drank"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "Roger went to the movies fifteen times last year and three times this year. How many times did Roger go to the movies all together?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\ntimes_last_year = 15\ntimes_this_year = 3\ntotal_times = times_last_year + times_this_year\nans = total_times",
            "# Python code, return ans\nlast_year_movies = 15\nthis_year_movies = 3\ntotal_movies = last_year_movies + this_year_movies\nans = total_movies",
            "# Python code, return ans\nlast_year_movies = 15\nthis_year_movies = 3\ntotal_movies = last_year_movies + this_year_movies\nans = total_movies"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "Olivia picked up sixteen pieces of paper from the floor. If Edward picked up three pieces, how many did they pick up total?",
        "answer": 19,
        "generated": [
            "# Python code, return ans\nOlivia_picked = 16\nEdward_picked = 3\ntotal_picked = Olivia_picked + Edward_picked\nans = total_picked",
            "# Python code, return ans\nOlivia_papers = 16\nEdward_papers = 3\ntotal_papers = Olivia_papers + Edward_papers\nans = total_papers",
            "# Python code, return ans\nOlivia_paper = 16\nEdward_paper = 3\ntotal_paper = Olivia_paper + Edward_paper\nans = total_paper"
        ],
        "results": [
            19.0,
            19.0,
            19.0
        ],
        "result_counter": {
            "19.0": 3
        },
        "prediction": 19.0
    },
    {
        "question": "Victor had nine books. During the book fair he bought three more. How many books did Victor have total?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\ninitial_books = 9\nbooks_bought = 3\ntotal_books = initial_books + books_bought\nans = total_books",
            "# Python code, return ans\ninitial_books = 9\nbooks_bought = 3\ntotal_books = initial_books + books_bought\nans = total_books",
            "# Python code, return ans\ninitial_books = 9\nbooks_bought = 3\ntotal_books = initial_books + books_bought\nans = total_books"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Katie had twelve pencils in her desk and three more in her backpack. How many did she have total?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\npencils_desk = 12\npencils_backpack = 3\ntotal_pencils = pencils_desk + pencils_backpack\nans = total_pencils",
            "# Python code, return ans\npencils_in_desk = 12\npencils_in_backpack = 3\ntotal_pencils = pencils_in_desk + pencils_in_backpack\nans = total_pencils",
            "# Python code, return ans\npencils_desk = 12\npencils_backpack = 3\ntotal_pencils = pencils_desk + pencils_backpack\nans = total_pencils"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "Debby had twelve pounds of flour. If she bought another four pounds, how many pounds would she have total?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\nflour_initial = 12\nflour_bought = 4\ntotal_flour = flour_initial + flour_bought\nans = total_flour",
            "# Python code, return ans\nflour_initial = 12\nflour_bought = 4\ntotal_flour = flour_initial + flour_bought\nans = total_flour",
            "# Python code, return ans\ninitial_flour = 12\nadditional_flour = 4\ntotal_flour = initial_flour + additional_flour\nans = total_flour"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "At the fair Haley went on six rides in the day and three at night. How many rides did Haley go on total?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nrides_day = 6\nrides_night = 3\ntotal_rides = rides_day + rides_night\nans = total_rides",
            "# Python code, return ans\nrides_day = 6\nrides_night = 3\ntotal_rides = rides_day + rides_night\nans = total_rides",
            "# Python code, return ans\nrides_day = 6\nrides_night = 3\ntotal_rides = rides_day + rides_night\nans = total_rides"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Lana had eleven DS games. If she bought two more games, how many would she have total?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\nLana_games = 11\nnew_games = 2\ntotal_games = Lana_games + new_games\nans = total_games",
            "# Python code, return ans\nLana_games = 11\nnew_games = 2\ntotal_games = Lana_games + new_games\nans = total_games",
            "# Python code, return ans\nLana_games = 11\nbought_games = 2\ntotal_games = Lana_games + bought_games\nans = total_games"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "Jerry owned seven video games. For his birthday he got two more. How many games did Jerry have total?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nowned_games = 7\nbirthday_games = 2\ntotal_games = owned_games + birthday_games\nans = total_games",
            "# Python code, return ans\nowned_games = 7\nbirthday_games = 2\ntotal_games = owned_games + birthday_games\nans = total_games",
            "# Python code, return ans\nvideo_games_owned = 7\nbirthday_games = 2\ntotal_games = video_games_owned + birthday_games\nans = total_games"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "A clown gave away eleven balloons to girls and three balloons to boys. How many balloons did he give away total?",
        "answer": 14,
        "generated": [
            "# Python code, return ans\nballoons_girls = 11\nballoons_boys = 3\ntotal_balloons = balloons_girls + balloons_boys\nans = total_balloons",
            "# Python code, return ans\nballoons_girls = 11\nballoons_boys = 3\ntotal_balloons = balloons_girls + balloons_boys\nans = total_balloons",
            "# Python code, return ans\nballoons_girls = 11\nballoons_boys = 3\ntotal_balloons = balloons_girls + balloons_boys\nans = total_balloons"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "There were ten people on the bus. At the next stop three more people got on the bus. How many people are there on the bus now?",
        "answer": 13,
        "generated": [
            "# Python code, return ans\npeople_initial = 10\npeople_got_on = 3\ntotal_people = people_initial + people_got_on\nans = total_people",
            "# Python code, return ans\ninitial_people = 10\nnew_people = 3\ntotal_people = initial_people + new_people\nans = total_people",
            "# Python code, return ans\ninitial_people_on_bus = 10\npeople_got_on = 3\ntotal_people_on_bus = initial_people_on_bus + people_got_on\nans = total_people_on_bus"
        ],
        "results": [
            13.0,
            13.0,
            13.0
        ],
        "result_counter": {
            "13.0": 3
        },
        "prediction": 13.0
    },
    {
        "question": "Oliver collected two seashells from the beach on Monday and two more on Tuesday. How many seashells did Oliver collect all together?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nseashells_Monday = 2\nseashells_Tuesday = 2\ntotal_seashells = seashells_Monday + seashells_Tuesday\nans = total_seashells",
            "# Python code, return ans\nseashells_Monday = 2\nseashells_Tuesday = 2\ntotal_seashells = seashells_Monday + seashells_Tuesday\nans = total_seashells",
            "# Python code, return ans\nseashells_Monday = 2\nseashells_Tuesday = 2\ntotal_seashells = seashells_Monday + seashells_Tuesday\nans = total_seashells"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "For Halloween Faye scored 47 pieces of candy. She ate 25 pieces the first night and then her sister gave her 40 more pieces. How many pieces of candy does Faye have now?",
        "answer": 62,
        "generated": [
            "# Python code, return ans\ninitial_candy = 47\ncandy_eaten = 25\ncandy_from_sister = 40\ncurrent_candy = initial_candy - candy_eaten + candy_from_sister\nans = current_candy",
            "# Python code, return ans\ninitial_candy = 47\ncandy_eaten = 25\ncandy_from_sister = 40\ncurrent_candy = initial_candy - candy_eaten + candy_from_sister\nans = current_candy",
            "# Python code, return ans\ninitial_candy = 47\ncandy_eaten = 25\ncandy_from_sister = 40\ncurrent_candy = initial_candy - candy_eaten + candy_from_sister\nans = current_candy"
        ],
        "results": [
            62.0,
            62.0,
            62.0
        ],
        "result_counter": {
            "62.0": 3
        },
        "prediction": 62.0
    },
    {
        "question": "A waiter had 47 customers to wait on. If 41 customers left and he got another 20 customers, how many customers would he have?",
        "answer": 26,
        "generated": [
            "# Python code, return ans\ninitial_customers = 47\ncustomers_left = 41\nnew_customers = 20\ncurrent_customers = initial_customers - customers_left + new_customers\nans = current_customers",
            "# Python code, return ans\ninitial_customers = 47\ncustomers_left = 41\nnew_customers = 20\ncurrent_customers = initial_customers - customers_left + new_customers\nans = current_customers",
            "# Python code, return ans\ninitial_customers = 47\ncustomers_left = 41\nnew_customers = 20\ncurrent_customers = initial_customers - customers_left + new_customers\nans = current_customers"
        ],
        "results": [
            26.0,
            26.0,
            26.0
        ],
        "result_counter": {
            "26.0": 3
        },
        "prediction": 26.0
    },
    {
        "question": "For the school bake sale Katie made 26 cupcakes. If she sold 20 of them and then made 20 more, how many cupcakes would she have?",
        "answer": 26,
        "generated": [
            "# Python code, return ans\ninitial_cupcakes = 26\nsold_cupcakes = 20\nnew_cupcakes = 20\nremaining_cupcakes = initial_cupcakes - sold_cupcakes\ntotal_cupcakes = remaining_cupcakes + new_cupcakes\nans = total_cupcakes",
            "# Python code, return ans\ninitial_cupcakes = 26\nsold_cupcakes = 20\nmade_cupcakes = 20\nremaining_cupcakes = initial_cupcakes - sold_cupcakes\ntotal_cupcakes = remaining_cupcakes + made_cupcakes\nans = total_cupcakes",
            "# Python code, return ans\ninitial_cupcakes = 26\nsold_cupcakes = 20\nmade_cupcakes = 20\nremaining_cupcakes = initial_cupcakes - sold_cupcakes + made_cupcakes\nans = remaining_cupcakes"
        ],
        "results": [
            26.0,
            26.0,
            26.0
        ],
        "result_counter": {
            "26.0": 3
        },
        "prediction": 26.0
    },
    {
        "question": "Adam had 5 dollars. At the store he spent $2 on a new game. If he got another 5 dollars for his allowance, how much money does he have now?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ninitial_money = 5\nspent_money = 2\nallowance = 5\ncurrent_money = initial_money - spent_money + allowance\nans = current_money",
            "# Python code, return ans\ninitial_money = 5\nspent_money = 2\nallowance = 5\ncurrent_money = initial_money - spent_money + allowance\nans = current_money",
            "# Python code, return ans\ninitial_money = 5\nspent_on_game = 2\nallowance = 5\ncurrent_money = initial_money - spent_on_game + allowance\nans = current_money"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Tiffany was playing a video game and had 43 lives. In a hard part of the game she lost 14 lives. If she got 27 more lives in the next level, how many lives would she have?",
        "answer": 56,
        "generated": [
            "# Python code, return ans\ninitial_lives = 43\nlost_lives = 14\ngained_lives = 27\nfinal_lives = initial_lives - lost_lives + gained_lives\nans = final_lives",
            "# Python code, return ans\ninitial_lives = 43\nlost_lives = 14\ngained_lives = 27\nfinal_lives = initial_lives - lost_lives + gained_lives\nans = final_lives",
            "# Python code, return ans\ninitial_lives = 43\nlost_lives = 14\ngained_lives = 27\nremaining_lives = initial_lives - lost_lives + gained_lives\nans = remaining_lives"
        ],
        "results": [
            56.0,
            56.0,
            56.0
        ],
        "result_counter": {
            "56.0": 3
        },
        "prediction": 56.0
    },
    {
        "question": "A teacher had 38 worksheets to grade. If she graded 4, but then another 15 were turned in, how many worksheets would she have to grade?",
        "answer": 49,
        "generated": [
            "# Python code, return ans\ninitial_worksheets = 38\ngraded_worksheets = 4\nnew_worksheets = 15\nremaining_worksheets = initial_worksheets - graded_worksheets + new_worksheets\nans = remaining_worksheets",
            "# Python code, return ans\ninitial_worksheets = 38\ngraded_worksheets = 4\nnew_worksheets = 15\nremaining_worksheets = initial_worksheets - graded_worksheets + new_worksheets\nans = remaining_worksheets",
            "# Python code, return ans\ninitial_worksheets = 38\ngraded_worksheets = 4\nnew_worksheets = 15\nremaining_worksheets = initial_worksheets - graded_worksheets + new_worksheets\nans = remaining_worksheets"
        ],
        "results": [
            49.0,
            49.0,
            49.0
        ],
        "result_counter": {
            "49.0": 3
        },
        "prediction": 49.0
    },
    {
        "question": "A book store had 4 books in the bargin bin. If they sold 3 books, but then put 10 more in the bin, how many books would be in the bin?",
        "answer": 11,
        "generated": [
            "# Python code, return ans\ninitial_books = 4\nsold_books = 3\nadded_books = 10\nfinal_books = initial_books - sold_books + added_books\nans = final_books",
            "# Python code, return ans\ninitial_books = 4\nsold_books = 3\nadded_books = 10\nbooks_in_bin = initial_books - sold_books + added_books\nans = books_in_bin",
            "# Python code, return ans\nbooks_initial = 4\nbooks_sold = 3\nbooks_added = 10\nbooks_final = books_initial - books_sold + books_added\nans = books_final"
        ],
        "results": [
            11.0,
            11.0,
            11.0
        ],
        "result_counter": {
            "11.0": 3
        },
        "prediction": 11.0
    },
    {
        "question": "Bianca had 45 coloring books. If she gave away 6 of them, but then bought 20 more, how many would she have total?",
        "answer": 59,
        "generated": [
            "# Python code, return ans\ninitial_books = 45\ngave_away = 6\nbought = 20\ntotal_books = initial_books - gave_away + bought\nans = total_books",
            "# Python code, return ans\ninitial_books = 45\ngave_away = 6\nbought = 20\ntotal_books = initial_books - gave_away + bought\nans = total_books",
            "# Python code, return ans\ninitial_books = 45\ngave_away = 6\nbought = 20\ntotal_books = initial_books - gave_away + bought\nans = total_books"
        ],
        "results": [
            59.0,
            59.0,
            59.0
        ],
        "result_counter": {
            "59.0": 3
        },
        "prediction": 59.0
    },
    {
        "question": "Adam had 33 books. If he sold 11 of them and used the money he earned to buy 23 new books, how many books would Adam have?",
        "answer": 45,
        "generated": [
            "# Python code, return ans\ninitial_books = 33\nsold_books = 11\nnew_books = 23\nremaining_books = initial_books - sold_books\ntotal_books = remaining_books + new_books\nans = total_books",
            "# Python code, return ans\ninitial_books = 33\nsold_books = 11\nbought_books = 23\nfinal_books = initial_books - sold_books + bought_books\nans = final_books",
            "# Python code, return ans\ninitial_books = 33\nsold_books = 11\nbought_books = 23\nfinal_books = initial_books - sold_books + bought_books\nans = final_books"
        ],
        "results": [
            45.0,
            45.0,
            45.0
        ],
        "result_counter": {
            "45.0": 3
        },
        "prediction": 45.0
    },
    {
        "question": "At the fair there were 10 people in line for the bumper cars. If 2 of them got tired of waiting and left and 2 more got in line, how many people would be in line?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\ninitial_people = 10\nleft_people = 2\nnew_people = 2\nans = initial_people - left_people + new_people\nans",
            "# Python code, return ans\ninitial_people = 10\npeople_left = 2\npeople_joined = 2\nfinal_people = initial_people - people_left + people_joined\nans = final_people",
            "# Python code, return ans\ninitial_people = 10\nleft_people = 2\nnew_people = 2\nfinal_people = initial_people - left_people + new_people\nans = final_people"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "In fourth grade there were 35 students at the start of the year. During the year 10 students left and 10 new students came to school. How many students were in fourth grade at the end?",
        "answer": 35,
        "generated": [
            "# Python code, return ans\nstudents_start = 35\nstudents_left = 10\nstudents_new = 10\nstudents_end = students_start - students_left + students_new\nans = students_end",
            "# Python code, return ans\ninitial_students = 35\nstudents_left = 10\nnew_students = 10\nfinal_students = initial_students - students_left + new_students\nans = final_students",
            "# Python code, return ans\ninitial_students = 35\nstudents_left = 10\nnew_students = 10\nfinal_students = initial_students - students_left + new_students\nans = final_students"
        ],
        "results": [
            35.0,
            35.0,
            35.0
        ],
        "result_counter": {
            "35.0": 3
        },
        "prediction": 35.0
    },
    {
        "question": "Robin had 30 songs on her mp3 player. If she deleted 8 old songs from it and then added 10 new songs, how many songs does she have on her mp3 player?",
        "answer": 32,
        "generated": [
            "# Python code, return ans\ninitial_songs = 30\ndeleted_songs = 8\nadded_songs = 10\nfinal_songs = initial_songs - deleted_songs + added_songs\nans = final_songs",
            "# Python code, return ans\ninitial_songs = 30\ndeleted_songs = 8\nadded_songs = 10\nfinal_songs = initial_songs - deleted_songs + added_songs\nans = final_songs",
            "# Python code, return ans\ninitial_songs = 30\ndeleted_songs = 8\nadded_songs = 10\nfinal_songs = initial_songs - deleted_songs + added_songs\nans = final_songs"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "The school cafeteria had 17 apples. If they used 2 to make lunch for the students and then bought 23 more, how many apples would they have?",
        "answer": 38,
        "generated": [
            "# Python code, return ans\ninitial_apples = 17\nused_apples = 2\nbought_apples = 23\ntotal_apples = initial_apples - used_apples + bought_apples\nans = total_apples",
            "# Python code, return ans\ninitial_apples = 17\nused_apples = 2\nbought_apples = 23\nfinal_apples = initial_apples - used_apples + bought_apples\nans = final_apples",
            "# Python code, return ans\ninitial_apples = 17\nused_apples = 2\nbought_apples = 23\nremaining_apples = initial_apples - used_apples + bought_apples\nans = remaining_apples"
        ],
        "results": [
            38.0,
            38.0,
            38.0
        ],
        "result_counter": {
            "38.0": 3
        },
        "prediction": 38.0
    },
    {
        "question": "Nancy picked 12 carrots from her garden. If she threw out 2 of them and then picked 21 more the next day, how many carrots would she have total?",
        "answer": 31,
        "generated": [
            "# Python code, return ans\npicked_carrots_first_day = 12\nthrown_out_carrots = 2\npicked_carrots_second_day = 21\ntotal_carrots = (picked_carrots_first_day - thrown_out_carrots) + picked_carrots_second_day\nans = total_carrots",
            "# Python code, return ans\ncarrots_picked_first_day = 12\ncarrots_thrown_out = 2\ncarrots_picked_second_day = 21\ntotal_carrots = (carrots_picked_first_day - carrots_thrown_out) + carrots_picked_second_day\nans = total_carrots",
            "# Python code, return ans\npicked_carrots = 12\nthrown_out_carrots = 2\npicked_next_day = 21\ntotal_carrots = (picked_carrots - thrown_out_carrots) + picked_next_day\nans = total_carrots"
        ],
        "results": [
            31.0,
            31.0,
            31.0
        ],
        "result_counter": {
            "31.0": 3
        },
        "prediction": 31.0
    },
    {
        "question": "John had 33 socks. If he threw away 19 old ones that didn't fit and bought 13 new ones, how many socks would he have?",
        "answer": 27,
        "generated": [
            "# Python code, return ans\ninitial_socks = 33\nthrown_away_socks = 19\nnew_socks = 13\nfinal_socks = initial_socks - thrown_away_socks + new_socks\nans = final_socks",
            "# Python code, return ans\ninitial_socks = 33\nthrown_away_socks = 19\nnew_socks = 13\ntotal_socks = initial_socks - thrown_away_socks + new_socks\nans = total_socks",
            "# Python code, return ans\ninitial_socks = 33\nthrown_away_socks = 19\nnew_socks = 13\nfinal_socks = initial_socks - thrown_away_socks + new_socks\nans = final_socks"
        ],
        "results": [
            27.0,
            27.0,
            27.0
        ],
        "result_counter": {
            "27.0": 3
        },
        "prediction": 27.0
    },
    {
        "question": "Zoe had 42 bottles of water in her fridge. If she drank 25 of them and then bought 30 more, how many bottles would she have?",
        "answer": 47,
        "generated": [
            "# Python code, return ans\ninitial_bottles = 42\ndrank_bottles = 25\nbought_bottles = 30\nfinal_bottles = initial_bottles - drank_bottles + bought_bottles\nans = final_bottles",
            "# Python code, return ans\ninitial_bottles = 42\ndrank_bottles = 25\nbought_bottles = 30\nremaining_bottles = initial_bottles - drank_bottles + bought_bottles\nans = remaining_bottles",
            "# Python code, return ans\ninitial_bottles = 42\ndrank_bottles = 25\nbought_bottles = 30\nfinal_bottles = initial_bottles - drank_bottles + bought_bottles\nans = final_bottles"
        ],
        "results": [
            47.0,
            47.0,
            47.0
        ],
        "result_counter": {
            "47.0": 3
        },
        "prediction": 47.0
    },
    {
        "question": "Luke had 48 dollars in January. By March he had spent 11 dollars. If he got another 21 dollars from his mom, how much money would he have?",
        "answer": 58,
        "generated": [
            "# Python code, return ans\ninitial_money = 48\nspent_money = 11\nmoney_from_mom = 21\ncurrent_money = initial_money - spent_money + money_from_mom\nans = current_money",
            "# Python code, return ans\ninitial_amount = 48\nspent_amount = 11\nadditional_amount = 21\nfinal_amount = initial_amount - spent_amount + additional_amount\nans = final_amount",
            "# Python code, return ans\ninitial_money = 48\nspent_money = 11\nmoney_from_mom = 21\nremaining_money = initial_money - spent_money + money_from_mom\nans = remaining_money"
        ],
        "results": [
            58.0,
            58.0,
            58.0
        ],
        "result_counter": {
            "58.0": 3
        },
        "prediction": 58.0
    },
    {
        "question": "A florist had 50 roses. If she sold 15 of them and then later picked 21 more, how many roses would she have?",
        "answer": 56,
        "generated": [
            "# Python code, return ans\ninitial_roses = 50\nsold_roses = 15\npicked_roses = 21\nfinal_roses = initial_roses - sold_roses + picked_roses\nans = final_roses",
            "# Python code, return ans\ninitial_roses = 50\nroses_sold = 15\nroses_picked = 21\nfinal_roses = initial_roses - roses_sold + roses_picked\nans = final_roses",
            "# Python code, return ans\ninitial_roses = 50\nsold_roses = 15\npicked_roses = 21\nfinal_roses = initial_roses - sold_roses + picked_roses\nans = final_roses"
        ],
        "results": [
            56.0,
            56.0,
            56.0
        ],
        "result_counter": {
            "56.0": 3
        },
        "prediction": 56.0
    },
    {
        "question": "At the arcade Dave won 11 tickets. If he spent 5 tickets on a beanie and later won 10 more tickets, how many would he have?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\ninitial_tickets = 11\nspent_tickets = 5\nwon_tickets = 10\nremaining_tickets = initial_tickets - spent_tickets + won_tickets\nans = remaining_tickets",
            "# Python code, return ans\ninitial_tickets = 11\ntickets_spent = 5\ntickets_won_later = 10\ntotal_tickets = initial_tickets - tickets_spent + tickets_won_later\nans = total_tickets",
            "# Python code, return ans\ninitial_tickets = 11\nspent_tickets = 5\nwon_tickets = 10\nremaining_tickets = initial_tickets - spent_tickets + won_tickets\nans = remaining_tickets"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "A store had 40 oranges in a bin. If they threw away 25 of the old ones and put 21 new ones in the bin, how many would be in the bin?",
        "answer": 36,
        "generated": [
            "# Python code, return ans\ninitial_oranges = 40\nthrown_away_oranges = 25\nnew_oranges = 21\nfinal_oranges = initial_oranges - thrown_away_oranges + new_oranges\nans = final_oranges",
            "# Python code, return ans\ninitial_oranges = 40\nthrown_away_oranges = 25\nnew_oranges = 21\noranges_in_bin = initial_oranges - thrown_away_oranges + new_oranges\nans = oranges_in_bin",
            "# Python code, return ans\ninitial_oranges = 40\noranges_thrown_away = 25\nnew_oranges = 21\nfinal_oranges = initial_oranges - oranges_thrown_away + new_oranges\nans = final_oranges"
        ],
        "results": [
            36.0,
            36.0,
            36.0
        ],
        "result_counter": {
            "36.0": 3
        },
        "prediction": 36.0
    },
    {
        "question": "Vanessa uploaded twenty-three pictures from her phone and seven from her camera to Facebook. If she sorted the pics into five different albums with the same amount of pics in each album, how many pictures were in each of the albums?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nphone_pictures = 23\ncamera_pictures = 7\ntotal_pictures = phone_pictures + camera_pictures\nalbums = 5\npictures_per_album = total_pictures // albums\nans = pictures_per_album",
            "# Python code, return ans\nphone_pics = 23\ncamera_pics = 7\ntotal_pics = phone_pics + camera_pics\nalbums = 5\npics_per_album = total_pics // albums\nans = pics_per_album",
            "# Python code, return ans\nphone_pictures = 23\ncamera_pictures = 7\ntotal_pictures = phone_pictures + camera_pictures\nalbum_num = 5\npictures_per_album = total_pictures // album_num\nans = pictures_per_album"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "For a birthday party Cody bought thirty regular sodas and five diet sodas. If his fridge would only hold seven on each shelf, how many shelves would he fill up?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nregular_sodas = 30\ndiet_sodas = 5\ntotal_sodas = regular_sodas + diet_sodas\nsodas_per_shelf = 7\nnum_of_shelves = total_sodas // sodas_per_shelf\nif total_sodas % sodas_per_shelf != 0:\n    num_of_shelves += 1\nans = num_of_shelves",
            "# Python code, return ans\nregular_sodas = 30\ndiet_sodas = 5\ntotal_sodas = regular_sodas + diet_sodas\nsodas_per_shelf = 7\nnum_shelves = total_sodas // sodas_per_shelf\nif total_sodas % sodas_per_shelf > 0:\n    num_shelves += 1\nans = num_shelves",
            "# Python code, return ans\nregular_sodas = 30\ndiet_sodas = 5\nsodas_per_shelf = 7\ntotal_sodas = regular_sodas + diet_sodas\nshelves_needed = total_sodas / sodas_per_shelf\nans = math.ceil(shelves_needed)"
        ],
        "results": [
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 2
        },
        "prediction": 5.0
    },
    {
        "question": "Paul made forty-four dollars mowing lawns and twenty-eight dollars weed eating. If he only spent nine dollar a week, how long would the money last him?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nmoney_mowing = 44\nmoney_weed_eating = 28\ntotal_money = money_mowing + money_weed_eating\nweekly_expense = 9\nweeks_money_last = total_money / weekly_expense\nans = weeks_money_last",
            "# Python code, return ans\nmowing_lawns_income = 44\nweed_eating_income = 28\ntotal_income = mowing_lawns_income + weed_eating_income\nweekly_expense = 9\nweeks_money_would_last = total_income / weekly_expense\nans = weeks_money_would_last",
            "# Python code, return ans\nmoney_mowing = 44\nmoney_weed_eating = 28\ntotal_money = money_mowing + money_weed_eating\nweekly_expense = 9\nweeks_money_would_last = total_money / weekly_expense\nans = weeks_money_would_last"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "The school's baseball team had two new players and twenty-two returning players. If the coach put them into groups with three players in each group, how many groups would there be?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nnew_players = 2\nreturning_players = 22\ntotal_players = new_players + returning_players\ngroups = total_players // 3\nans = groups",
            "# Python code, return ans\nnew_players = 2\nreturning_players = 22\ntotal_players = new_players + returning_players\ngroups = total_players // 3\nans = groups",
            "# Python code, return ans\nnew_players = 2\nreturning_players = 22\ntotal_players = new_players + returning_players\ngroups = total_players // 3\nans = groups"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Kaleb had saved up thirty-nine dollars. If he received another twenty-five dollars for his allowance, how many eight dollar toys could he buy?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nsaved_money = 39\nallowance = 25\ntotal_money = saved_money + allowance\ntoy_price = 8\nnum_toys = total_money // toy_price\nans = num_toys",
            "# Python code, return ans\nsaved_money = 39\nallowance = 25\ntotal_money = saved_money + allowance\ntoy_cost = 8\ntoys_to_buy = total_money // toy_cost\nans = toys_to_buy",
            "# Python code, return ans\nsaved_money = 39\nallowance = 25\ntotal_money = saved_money + allowance\ntoy_price = 8\nnum_toys = total_money // toy_price\nans = num_toys"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "The school's debate team had thirty-one boys and thirty-two girls on it. If they were split into groups of nine, how many groups could they make?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nboys = 31\ngirls = 32\ntotal_students = boys + girls\ngroups = total_students // 9\nans = groups",
            "# Python code, return ans\nboys = 31\ngirls = 32\ntotal_students = boys + girls\ngroups = total_students // 9\nans = groups",
            "# Python code, return ans\nboys = 31\ngirls = 32\ntotal_students = boys + girls\ngroups = total_students // 9\nans = groups"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Chloe and her friends were recycling paper for their class. For every six pounds they recycled they earned 1 point. If Chloe recycled twenty-eight pounds and her friends recycled two pounds, how many points did they earn?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nChloe_recycled = 28\nfriends_recycled = 2\ntotal_recycled = Chloe_recycled + friends_recycled\npoints = total_recycled // 6\nans = points",
            "# Python code, return ans\nChloe_recycled = 28\nfriends_recycled = 2\ntotal_recycled = Chloe_recycled + friends_recycled\npoints_earned = total_recycled // 6\nans = points_earned",
            "# Python code, return ans\nChloe_recycled = 28\nfriends_recycled = 2\ntotal_recycled = Chloe_recycled + friends_recycled\npoints_earned = total_recycled // 6\nans = points_earned"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "A group of nine friends went into a restaurant. The chef already had two chicken wings cooked but cooked twenty-five more for the group. If they each got the same amount, how many would each person get?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\ntotal_friends = 9\ncooked_chicken_wings = 2\nadditional_chicken_wings = 25\ntotal_chicken_wings = cooked_chicken_wings + additional_chicken_wings\nchicken_wings_per_person = total_chicken_wings // total_friends\nans = chicken_wings_per_person",
            "# Python code, return ans\ntotal_friends = 9\ninitial_chicken_wings = 2\ncooked_chicken_wings = 25\ntotal_chicken_wings = initial_chicken_wings + cooked_chicken_wings\nchicken_wings_per_person = total_chicken_wings // total_friends\nans = chicken_wings_per_person",
            "# Python code, return ans\nfriends = 9\ninitial_wings = 2\ncooked_wings = 25\ntotal_wings = initial_wings + cooked_wings\nwings_per_person = total_wings // friends\nans = wings_per_person"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "A pet shelter had twenty-three puppies when another two were brought in. If five puppies a day are adopted, how long would it take for all of them to be adopted?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ninitial_puppies = 23\nnew_puppies = 2\npuppies_adopted_per_day = 5\ntotal_puppies = initial_puppies + new_puppies\ndays_to_adopt_all = total_puppies / puppies_adopted_per_day\nans = days_to_adopt_all",
            "# Python code, return ans\ninitial_puppies = 23\nnew_puppies = 2\ntotal_puppies = initial_puppies + new_puppies\nadopted_per_day = 5\ndays_to_adopt_all = total_puppies / adopted_per_day\nans = days_to_adopt_all",
            "# Python code, return ans\ninitial_puppies = 23\nnew_puppies = 2\ntotal_puppies = initial_puppies + new_puppies\nadopted_per_day = 5\ndays_to_adopt_all = total_puppies / adopted_per_day\nans = days_to_adopt_all"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Haley's old washing machine could only wash seven pieces of clothing at a time. If she had to wash two shirts and thirty-three sweaters, how many loads would she have to do?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nclothes_to_wash = 2 + 33\nold_washing_machine_capacity = 7\nloads_needed = clothes_to_wash // old_washing_machine_capacity\nif clothes_to_wash % old_washing_machine_capacity != 0:\n    loads_needed += 1\nans = loads_needed",
            "# Python code, return ans\nshirts = 2\nsweaters = 33\ntotal_clothing = shirts + sweaters\nwashing_capacity = 7\nloads = total_clothing // washing_capacity\n\nif total_clothing % washing_capacity > 0:\n    loads += 1\n\nans = loads",
            "# Python code, return ans\nshirts = 2\nsweaters = 33\ntotal_clothes = shirts + sweaters\nwashing_capacity = 7\nloads = total_clothes // washing_capacity\nif total_clothes % washing_capacity > 0:\n    loads += 1\nans = loads"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Dave was organizing his baseball cards in a binder with eight on each page. If he had three new cards and thirteen old cards to put in the binder, how many pages would he use?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\nnew_cards = 3\nold_cards = 13\ntotal_cards = new_cards + old_cards\ncards_per_page = 8\npages_needed = (total_cards + cards_per_page - 1) // cards_per_page\nans = pages_needed",
            "# Python code, return ans\nnew_cards = 3\nold_cards = 13\ntotal_cards = new_cards + old_cards\ncards_per_page = 8\npages_needed = total_cards / cards_per_page\nans = int(pages_needed) if total_cards % cards_per_page == 0 else int(pages_needed) + 1\nans",
            "# Python code, return ans\nnew_cards = 3\nold_cards = 13\ntotal_cards = new_cards + old_cards\ncards_per_page = 8\npages_used = (total_cards + cards_per_page - 1) // cards_per_page\nans = pages_used"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Ned was helping the cafeteria workers pick up lunch trays, but he could only carry eight trays at a time. If he had to pick up twenty-seven trays from one table and five trays from another, how many trips will he make?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ntrays_table1 = 27\ntrays_table2 = 5\ntotal_trays = trays_table1 + trays_table2\ntrays_per_trip = 8\ntrips = total_trays // trays_per_trip\nif total_trays % trays_per_trip != 0:\n    trips += 1\nans = trips",
            "# Python code, return ans\ntrays_from_table1 = 27\ntrays_from_table2 = 5\ntotal_trays = trays_from_table1 + trays_from_table2\ntray_capacity = 8\ntrips = total_trays // tray_capacity\nif total_trays % tray_capacity != 0:\n    trips += 1\nans = trips",
            "# Python code, return ans\ntrays_table1 = 27\ntrays_table2 = 5\ntotal_trays = trays_table1 + trays_table2\ntrays_per_trip = 8\ntrips_needed = total_trays / trays_per_trip\nans = int(trips_needed) if total_trays % trays_per_trip == 0 else int(trips_needed) + 1"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "At a company picnic three managers and three employees decided to start a game of volleyball. If they split into three teams, how many people would be on each team?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ntotal_people = 3 + 3\nteams = 3\npeople_per_team = total_people / teams\nans = people_per_team",
            "# Python code, return ans\ntotal_people = 3 + 3\nteams = 3\npeople_per_team = total_people / teams\nans = people_per_team",
            "# Python code, return ans\ntotal_people = 3 + 3\nteams = 3\npeople_per_team = total_people / teams\nans = people_per_team"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "A vase can hold nine flowers. If you had four carnations and twenty-three roses, how many vases would you need to hold the flowers?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\ncarnations = 4\nroses = 23\ntotal_flowers = carnations + roses\nvase_capacity = 9\nvases_needed = total_flowers // vase_capacity + (1 if total_flowers % vase_capacity > 0 else 0)\nans = vases_needed",
            "# Python code, return ans\ncarnations = 4\nroses = 23\ntotal_flowers = carnations + roses\nvase_capacity = 9\nvases_needed = total_flowers // vase_capacity\nif total_flowers % vase_capacity != 0:\n    vases_needed += 1\nans = vases_needed",
            "# Python code, return ans\ncarnations = 4\nroses = 23\ntotal_flowers = carnations + roses\nvase_capacity = 9\nvases_needed = total_flowers // vase_capacity\n\nif total_flowers % vase_capacity != 0:\n    vases_needed += 1\n\nans = vases_needed"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "For homework Megan had thirty-six math problems and twenty-eight spelling problems. If she can finish eight problems in an hour, how long will it take her to finish all the problems?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\nmath_problems = 36\nspelling_problems = 28\ntotal_problems = math_problems + spelling_problems\nproblems_per_hour = 8\ntime_to_finish = total_problems / problems_per_hour\nans = time_to_finish",
            "# Python code, return ans\nmath_problems = 36\nspelling_problems = 28\ntotal_problems = math_problems + spelling_problems\nproblems_per_hour = 8\ntime_to_finish = total_problems / problems_per_hour\nans = time_to_finish",
            "# Python code, return ans\nmath_problems = 36\nspelling_problems = 28\ntotal_problems = math_problems + spelling_problems\nproblems_per_hour = 8\ntime_to_finish = total_problems / problems_per_hour\nans = time_to_finish"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Gwen's class is going on a field trip to the zoo. If each van can hold seven people and there are thirty-three students and nine adults going, how many vans will they need?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nstudents = 33\nadults = 9\npeople_per_van = 7\ntotal_people = students + adults\nvans_needed = (total_people + people_per_van - 1) // people_per_van\nans = vans_needed",
            "# Python code, return ans\nstudents = 33\nadults = 9\ntotal_people = students + adults\nvan_capacity = 7\nvans_needed = (total_people + van_capacity - 1) // van_capacity\nans = vans_needed",
            "# Python code, return ans\nstudents = 33\nadults = 9\ntotal_people = students + adults\nvan_capacity = 7\nvans_needed = (total_people + van_capacity - 1) // van_capacity\nans = vans_needed"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "For Halloween Isabel received sixteen pieces of candy from neighbors and five pieces from her older sister. If she only ate three pieces a day, how long would the candy last her?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ncandy_from_neighbors = 16\ncandy_from_sister = 5\ntotal_candy = candy_from_neighbors + candy_from_sister\ncandy_eaten_per_day = 3\ndays_to_finish_candy = total_candy / candy_eaten_per_day\nans = days_to_finish_candy",
            "# Python code, return ans\ncandy_from_neighbors = 16\ncandy_from_sister = 5\ntotal_candy = candy_from_neighbors + candy_from_sister\ncandy_eaten_per_day = 3\ndays_to_finish_candy = total_candy / candy_eaten_per_day\nans = days_to_finish_candy",
            "# Python code, return ans\ncandy_from_neighbors = 16\ncandy_from_sister = 5\ntotal_candy = candy_from_neighbors + candy_from_sister\ncandy_per_day = 3\ndays_to_finish_candy = total_candy / candy_per_day\nans = days_to_finish_candy"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "While playing at the arcade, Kaleb won eight tickets playing 'whack a mole' and seven tickets playing 'skee ball'. If he was trying to buy candy that cost five tickets a piece, how many could he buy?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nwhack_a_mole_tickets = 8\nskee_ball_tickets = 7\ntotal_tickets = whack_a_mole_tickets + skee_ball_tickets\ncandy_cost = 5\ncandy_num = total_tickets // candy_cost\nans = candy_num",
            "# Python code, return ans\nwhack_a_mole_tickets = 8\nskee_ball_tickets = 7\ntotal_tickets = whack_a_mole_tickets + skee_ball_tickets\ncandy_cost = 5\ncandy_num = total_tickets // candy_cost\nans = candy_num",
            "# Python code, return ans\nwhack_a_mole_tickets = 8\nskee_ball_tickets = 7\ntotal_tickets = whack_a_mole_tickets + skee_ball_tickets\ncandy_cost = 5\ncandy_num = total_tickets // candy_cost\nans = candy_num"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Chloe was making baggies of cookies with seven cookies in each bag. If she had thirty-four chocolate chip cookies and twenty-nine oatmeal cookies, how many baggies could she make?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nchocolate_chip_cookies = 34\noatmeal_cookies = 29\ntotal_cookies = chocolate_chip_cookies + oatmeal_cookies\ncookies_per_bag = 7\nbaggies = total_cookies // cookies_per_bag\nans = baggies",
            "# Python code, return ans\nchocolate_chip_cookies = 34\noatmeal_cookies = 29\ntotal_cookies = chocolate_chip_cookies + oatmeal_cookies\ncookies_per_bag = 7\nbaggies = total_cookies // cookies_per_bag\nans = baggies",
            "# Python code, return ans\nchocolate_chip_cookies = 34\noatmeal_cookies = 29\ntotal_cookies = chocolate_chip_cookies + oatmeal_cookies\ncookies_per_bag = 7\nbaggies = total_cookies // cookies_per_bag\nans = baggies"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "At the town carnival Billy rode the ferris wheel seven times and the bumper cars three times. If each ride cost five tickets, how many tickets did he use?",
        "answer": 50,
        "generated": [
            "# Python code, return ans\nferris_wheel_rides = 7\nbumper_cars_rides = 3\ntotal_rides = ferris_wheel_rides + bumper_cars_rides\ntickets_per_ride = 5\ntotal_tickets = total_rides * tickets_per_ride\nans = total_tickets",
            "# Python code, return ans\nferris_wheel_rides = 7\nbumper_cars_rides = 3\ntotal_rides = ferris_wheel_rides + bumper_cars_rides\nticket_cost = 5\ntotal_tickets_used = total_rides * ticket_cost\nans = total_tickets_used",
            "# Python code, return ans\nferris_wheel_rides = 7\nbumper_cars_rides = 3\nride_cost = 5\ntotal_rides = ferris_wheel_rides + bumper_cars_rides\ntotal_tickets_used = total_rides * ride_cost\nans = total_tickets_used"
        ],
        "results": [
            50.0,
            50.0,
            50.0
        ],
        "result_counter": {
            "50.0": 3
        },
        "prediction": 50.0
    },
    {
        "question": "Wendy was playing a video game where she scores five points for each treasure she finds. If she found four treasures on the first level and three on the second, what would her score be?",
        "answer": 35,
        "generated": [
            "# Python code, return ans\ntreasures_first_level = 4\ntreasures_second_level = 3\npoints_per_treasure = 5\ntotal_treasures = treasures_first_level + treasures_second_level\ntotal_score = total_treasures * points_per_treasure\nans = total_score",
            "# Python code, return ans\ntreasure_first_level = 4\ntreasure_second_level = 3\npoints_per_treasure = 5\ntotal_treasures = treasure_first_level + treasure_second_level\ntotal_points = total_treasures * points_per_treasure\nans = total_points",
            "# Python code, return ans\ntreasures_first_level = 4\ntreasures_second_level = 3\npoints_per_treasure = 5\ntotal_treasures = treasures_first_level + treasures_second_level\ntotal_points = total_treasures * points_per_treasure\nans = total_points"
        ],
        "results": [
            35.0,
            35.0,
            35.0
        ],
        "result_counter": {
            "35.0": 3
        },
        "prediction": 35.0
    },
    {
        "question": "Paul bought six boxes of chocolate candy and four boxes of caramel candy. If each box has nine pieces inside it, how much candy did he have total?",
        "answer": 90,
        "generated": [
            "# Python code, return ans\nchocolate_boxes = 6\ncaramel_boxes = 4\ntotal_boxes = chocolate_boxes + caramel_boxes\npieces_per_box = 9\ntotal_candy = total_boxes * pieces_per_box\nans = total_candy",
            "# Python code, return ans\nchocolate_boxes = 6\ncaramel_boxes = 4\npieces_per_box = 9\ntotal_candy = (chocolate_boxes + caramel_boxes) * pieces_per_box\nans = total_candy",
            "# Python code, return ans\nchocolate_boxes = 6\ncaramel_boxes = 4\npieces_per_box = 9\ntotal_candy = (chocolate_boxes + caramel_boxes) * pieces_per_box\nans = total_candy"
        ],
        "results": [
            90.0,
            90.0,
            90.0
        ],
        "result_counter": {
            "90.0": 3
        },
        "prediction": 90.0
    },
    {
        "question": "At Billy's Restaurant a group with two adults and five children came in to eat. If each meal cost three dollars, how much was the bill?",
        "answer": 21,
        "generated": [
            "# Python code, return ans\nadults = 2\nchildren = 5\nmeal_cost = 3\ntotal_meals = adults + children\nbill = total_meals * meal_cost\nans = bill",
            "# Python code, return ans\nadults = 2\nchildren = 5\nmeal_cost = 3\ntotal_people = adults + children\ntotal_cost = total_people * meal_cost\nans = total_cost",
            "# Python code, return ans\nadults = 2\nchildren = 5\nmeal_cost = 3\ntotal_meals = adults + children\nbill = total_meals * meal_cost\nans = bill"
        ],
        "results": [
            21.0,
            21.0,
            21.0
        ],
        "result_counter": {
            "21.0": 3
        },
        "prediction": 21.0
    },
    {
        "question": "While playing a trivia game, Adam answered five questions correct in the first half and five questions correct in the second half. If each question was worth five points, what was his final score?",
        "answer": 50,
        "generated": [
            "# Python code, return ans\ncorrect_questions_first_half = 5\ncorrect_questions_second_half = 5\npoints_per_question = 5\ntotal_correct_questions = correct_questions_first_half + correct_questions_second_half\nfinal_score = total_correct_questions * points_per_question\nans = final_score",
            "# Python code, return ans\ncorrect_questions_first_half = 5\ncorrect_questions_second_half = 5\npoints_per_question = 5\ntotal_correct_questions = correct_questions_first_half + correct_questions_second_half\nfinal_score = total_correct_questions * points_per_question\nans = final_score",
            "# Python code, return ans\ncorrect_questions_first_half = 5\ncorrect_questions_second_half = 5\npoints_per_question = 5\ntotal_correct_questions = correct_questions_first_half + correct_questions_second_half\nfinal_score = total_correct_questions * points_per_question\nans = final_score"
        ],
        "results": [
            50.0,
            50.0,
            50.0
        ],
        "result_counter": {
            "50.0": 3
        },
        "prediction": 50.0
    },
    {
        "question": "Haley's favorite band was holding a concert where tickets were four dollars each. Haley bought three tickets for herself and her friends and five extra tickets in case anyone else wanted to go. How much did she spend?",
        "answer": 32,
        "generated": [
            "# Python code, return ans\nticket_price = 4\ntickets_bought = 3 + 5\ntotal_spent = ticket_price * tickets_bought\nans = total_spent",
            "# Python code, return ans\nticket_price = 4\ntickets_bought = 3\nextra_tickets = 5\ntotal_tickets = tickets_bought + extra_tickets\ntotal_cost = total_tickets * ticket_price\nans = total_cost",
            "# Python code, return ans\nticket_cost = 4\ntickets_bought = 3 + 5\ntotal_cost = ticket_cost * tickets_bought\nans = total_cost"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "Luke was putting his spare change into piles. He had five piles of quarters and five piles of dimes. If each pile had three coins in it, how many coins did he have total?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\npiles_of_quarters = 5\npiles_of_dimes = 5\ncoins_per_pile = 3\ntotal_coins = (piles_of_quarters + piles_of_dimes) * coins_per_pile\nans = total_coins",
            "# Python code, return ans\npiles_of_quarters = 5\npiles_of_dimes = 5\ncoins_per_pile = 3\ntotal_coins = (piles_of_quarters + piles_of_dimes) * coins_per_pile\nans = total_coins",
            "# Python code, return ans\npiles = 5 + 5\ncoins_per_pile = 3\ntotal_coins = piles * coins_per_pile\nans = total_coins"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "Victor and his friend were buying trick decks from the magic shop for eight dollars each. How much did they spend if Victor bought six decks and his friend bought two decks?",
        "answer": 64,
        "generated": [
            "# Python code, return ans\ndeck_cost = 8\nVictor_decks = 6\nfriend_decks = 2\ntotal_cost = (Victor_decks + friend_decks) * deck_cost\nans = total_cost",
            "# Python code, return ans\ntrick_deck_price = 8\nVictor_decks = 6\nfriend_decks = 2\ntotal_decks = Victor_decks + friend_decks\ntotal_spent = total_decks * trick_deck_price\nans = total_spent",
            "# Python code, return ans\ntrick_deck_price = 8\nVictor_decks = 6\nfriend_decks = 2\ntotal_decks = Victor_decks + friend_decks\ntotal_spent = total_decks * trick_deck_price\nans = total_spent"
        ],
        "results": [
            64.0,
            64.0,
            64.0
        ],
        "result_counter": {
            "64.0": 3
        },
        "prediction": 64.0
    },
    {
        "question": "Katie was selling her necklaces at a garage sale. She sold four bead necklaces and three gem stone necklaces. If each necklace cost three dollars, how much money did she earn?",
        "answer": 21,
        "generated": [
            "# Python code, return ans\nbead_necklaces = 4\ngem_stone_necklaces = 3\ntotal_necklaces = bead_necklaces + gem_stone_necklaces\ncost_per_necklace = 3\ntotal_money = total_necklaces * cost_per_necklace\nans = total_money",
            "# Python code, return ans\nbead_necklaces = 4\ngem_stone_necklaces = 3\nnecklace_cost = 3\ntotal_necklaces = bead_necklaces + gem_stone_necklaces\nmoney_earned = total_necklaces * necklace_cost\nans = money_earned",
            "# Python code, return ans\nbead_necklaces = 4\ngem_necklaces = 3\ntotal_necklaces = bead_necklaces + gem_necklaces\nprice_per_necklace = 3\ntotal_money = total_necklaces * price_per_necklace\nans = total_money"
        ],
        "results": [
            21.0,
            21.0,
            21.0
        ],
        "result_counter": {
            "21.0": 3
        },
        "prediction": 21.0
    },
    {
        "question": "Tiffany had six pages of math homework and four pages of reading homework. If each page had three problems on it, how many problems did she have to complete total?",
        "answer": 30,
        "generated": [
            "# Python code, return ans\nmath_pages = 6\nreading_pages = 4\nproblems_per_page = 3\ntotal_problems = (math_pages + reading_pages) * problems_per_page\nans = total_problems",
            "# Python code, return ans\nmath_pages = 6\nreading_pages = 4\nproblems_per_page = 3\ntotal_problems = (math_pages + reading_pages) * problems_per_page\nans = total_problems",
            "# Python code, return ans\nmath_pages = 6\nreading_pages = 4\nproblems_per_page = 3\ntotal_problems = (math_pages + reading_pages) * problems_per_page\nans = total_problems"
        ],
        "results": [
            30.0,
            30.0,
            30.0
        ],
        "result_counter": {
            "30.0": 3
        },
        "prediction": 30.0
    },
    {
        "question": "Zoe was unboxing some of her old winter clothes. She found eight boxes of clothing and inside each box there were four scarves and six mittens. How many pieces of winter clothing did Zoe have total?",
        "answer": 80,
        "generated": [
            "# Python code, return ans\nboxes = 8\nscarves_per_box = 4\nmittens_per_box = 6\ntotal_clothing = boxes * (scarves_per_box + mittens_per_box)\nans = total_clothing",
            "# Python code, return ans\nboxes = 8\nscarves_per_box = 4\nmittens_per_box = 6\ntotal_clothing = boxes * (scarves_per_box + mittens_per_box)\nans = total_clothing",
            "# Python code, return ans\nboxes = 8\nscarves_per_box = 4\nmittens_per_box = 6\ntotal_scarves = boxes * scarves_per_box\ntotal_mittens = boxes * mittens_per_box\ntotal_clothing = total_scarves + total_mittens\nans = total_clothing"
        ],
        "results": [
            80.0,
            80.0,
            80.0
        ],
        "result_counter": {
            "80.0": 3
        },
        "prediction": 80.0
    },
    {
        "question": "Gwen was organizing her book case making sure each of the shelves had exactly four books on it. If she had five shelves of mystery books and three shelves of picture books, how many books did she have total?",
        "answer": 32,
        "generated": [
            "# Python code, return ans\nmystery_shelves = 5\npicture_shelves = 3\nbooks_per_shelf = 4\ntotal_books = (mystery_shelves + picture_shelves) * books_per_shelf\nans = total_books",
            "# Python code, return ans\nmystery_shelves = 5\npicture_shelves = 3\nbooks_per_shelf = 4\ntotal_books = (mystery_shelves + picture_shelves) * books_per_shelf\nans = total_books",
            "# Python code, return ans\nmystery_shelves = 5\npicture_shelves = 3\nbooks_per_shelf = 4\ntotal_books = (mystery_shelves + picture_shelves) * books_per_shelf\nans = total_books"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "While shopping for music online, Zoe bought three country albums and five pop albums. Each album came with a lyric sheet and had three songs. How many songs did Zoe buy total?",
        "answer": 24,
        "generated": [
            "# Python code, return ans\ncountry_albums = 3\npop_albums = 5\ntotal_albums = country_albums + pop_albums\nsongs_per_album = 3\ntotal_songs = total_albums * songs_per_album\nans = total_songs",
            "# Python code, return ans\ncountry_albums = 3\npop_albums = 5\ntotal_albums = country_albums + pop_albums\nsongs_per_album = 3\ntotal_songs = total_albums * songs_per_album\nans = total_songs",
            "# Python code, return ans\ncountry_albums = 3\npop_albums = 5\ntotal_albums = country_albums + pop_albums\nsongs_per_album = 3\ntotal_songs = total_albums * songs_per_album\nans = total_songs"
        ],
        "results": [
            24.0,
            24.0,
            24.0
        ],
        "result_counter": {
            "24.0": 3
        },
        "prediction": 24.0
    },
    {
        "question": "April's discount flowers was having a sale where each flower was eight dollars. If Vanessa bought three roses and three daisies, how much did she spend?",
        "answer": 48,
        "generated": [
            "# Python code, return ans\nflower_cost = 8\nroses = 3\ndaisies = 3\ntotal_flowers = roses + daisies\ntotal_cost = total_flowers * flower_cost\nans = total_cost",
            "# Python code, return ans\nrose_cost = 8\ndaisy_cost = 8\nrose_num = 3\ndaisy_num = 3\ntotal_cost = (rose_cost * rose_num) + (daisy_cost * daisy_num)\nans = total_cost",
            "# Python code, return ans\nflower_cost = 8\nroses = 3\ndaisies = 3\ntotal_flowers = roses + daisies\ntotal_cost = total_flowers * flower_cost\nans = total_cost"
        ],
        "results": [
            48.0,
            48.0,
            48.0
        ],
        "result_counter": {
            "48.0": 3
        },
        "prediction": 48.0
    },
    {
        "question": "Rachel bought seven new chairs and three new tables for her house. If she spent four minutes on each piece furniture putting it together, how many minutes did it take her to finish?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\nchairs = 7\ntables = 3\ntime_per_furniture = 4\ntotal_furniture = chairs + tables\ntotal_time = total_furniture * time_per_furniture\nans = total_time",
            "# Python code, return ans\nchairs = 7\ntables = 3\ntime_per_furniture = 4\ntotal_furniture = chairs + tables\ntotal_time = total_furniture * time_per_furniture\nans = total_time",
            "# Python code, return ans\nchairs = 7\ntables = 3\ntime_per_furniture = 4\ntotal_furniture = chairs + tables\ntotal_time = total_furniture * time_per_furniture\nans = total_time"
        ],
        "results": [
            40.0,
            40.0,
            40.0
        ],
        "result_counter": {
            "40.0": 3
        },
        "prediction": 40.0
    },
    {
        "question": "Kaleb was collecting cans for recycling. On Saturday he filled five bags up and on Sunday he filled five more bags. If each bag had four cans in it, how many cans did he pick up total?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\nbags_on_Saturday = 5\nbags_on_Sunday = 5\ncans_per_bag = 4\ntotal_cans = (bags_on_Saturday + bags_on_Sunday) * cans_per_bag\nans = total_cans",
            "# Python code, return ans\nbags_on_Saturday = 5\nbags_on_Sunday = 5\ncans_per_bag = 4\ntotal_cans = (bags_on_Saturday + bags_on_Sunday) * cans_per_bag\nans = total_cans",
            "# Python code, return ans\nbags_on_Saturday = 5\nbags_on_Sunday = 5\ntotal_bags = bags_on_Saturday + bags_on_Sunday\ncans_per_bag = 4\ntotal_cans = total_bags * cans_per_bag\nans = total_cans"
        ],
        "results": [
            40.0,
            40.0,
            40.0
        ],
        "result_counter": {
            "40.0": 3
        },
        "prediction": 40.0
    },
    {
        "question": "A waiter had five tables he was waiting on, with five women and three men at each table. How many customers total did the waiter have?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\ntables = 5\nwomen_per_table = 5\nmen_per_table = 3\ntotal_customers_per_table = women_per_table + men_per_table\ntotal_customers = tables * total_customers_per_table\nans = total_customers",
            "# Python code, return ans\ntables = 5\nwomen_per_table = 5\nmen_per_table = 3\ntotal_customers = tables * (women_per_table + men_per_table)\nans = total_customers",
            "# Python code, return ans\ntables = 5\nwomen_per_table = 5\nmen_per_table = 3\ntotal_customers_per_table = women_per_table + men_per_table\ntotal_customers = tables * total_customers_per_table\nans = total_customers"
        ],
        "results": [
            40.0,
            40.0,
            40.0
        ],
        "result_counter": {
            "40.0": 3
        },
        "prediction": 40.0
    },
    {
        "question": "Dave was working as a sacker at a grocery store where he made six dollars an hour. On Monday he worked six hours and on Tuesday he worked two hours. How much money did Dave make in those two days?",
        "answer": 48,
        "generated": [
            "# Python code, return ans\nhourly_wage = 6\nMonday_hours = 6\nTuesday_hours = 2\ntotal_hours = Monday_hours + Tuesday_hours\ntotal_money = total_hours * hourly_wage\nans = total_money",
            "# Python code, return ans\nhourly_rate = 6\nhours_on_Monday = 6\nhours_on_Tuesday = 2\ntotal_hours = hours_on_Monday + hours_on_Tuesday\ntotal_money = total_hours * hourly_rate\nans = total_money",
            "# Python code, return ans\nhourly_rate = 6\nhours_Monday = 6\nhours_Tuesday = 2\ntotal_hours = hours_Monday + hours_Tuesday\ntotal_money = hourly_rate * total_hours\nans = total_money"
        ],
        "results": [
            48.0,
            48.0,
            48.0
        ],
        "result_counter": {
            "48.0": 3
        },
        "prediction": 48.0
    },
    {
        "question": "A store had eighty-seven coloring books in stock. They ended up putting them on sale and getting rid of thirty-three of them. The put the ones they still had onto shelves with six on each shelf. How many shelves did they use?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ncoloring_books_stock = 87\ncoloring_books_sold = 33\ncoloring_books_left = coloring_books_stock - coloring_books_sold\nbooks_per_shelf = 6\nshelves_used = coloring_books_left // books_per_shelf\nif coloring_books_left % books_per_shelf != 0:\n    shelves_used += 1\nans = shelves_used",
            "# Python code, return ans\ncoloring_books_stock = 87\ncoloring_books_sold = 33\ncoloring_books_left = coloring_books_stock - coloring_books_sold\nbooks_per_shelf = 6\nshelves_needed = coloring_books_left // books_per_shelf + (1 if coloring_books_left % books_per_shelf > 0 else 0)\nans = shelves_needed",
            "# Python code, return ans\ncoloring_books_stock = 87\ncoloring_books_sold = 33\ncoloring_books_left = coloring_books_stock - coloring_books_sold\nbooks_per_shelf = 6\nshelves_used = coloring_books_left // books_per_shelf\nif coloring_books_left % books_per_shelf != 0:\n    shelves_used += 1\nans = shelves_used"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Amy was planting vegetables in her garden. She started with one hundred one seeds and planted forty-seven of them in the big garden and in each of her small gardens put six seeds each. How many small gardens did Amy have?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ntotal_seeds = 101\nseeds_in_big_garden = 47\nseeds_in_small_garden = 6\nremaining_seeds = total_seeds - seeds_in_big_garden\nsmall_gardens = remaining_seeds / seeds_in_small_garden\nans = small_gardens",
            "# Python code, return ans\ntotal_seeds = 101\nplanted_in_big_garden = 47\nseeds_in_small_garden = 6\nremaining_seeds = total_seeds - planted_in_big_garden\nsmall_gardens = remaining_seeds / seeds_in_small_garden\nans = small_gardens",
            "# Python code, return ans\ntotal_seeds = 101\nseeds_in_big_garden = 47\nseeds_in_small_garden = 6\nremaining_seeds = total_seeds - seeds_in_big_garden\nnum_small_gardens = remaining_seeds / seeds_in_small_garden\nans = num_small_gardens"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "A waiter had sixty-two customers in his section. If seventeen of them left and the rest of his tables had nine people at each table, how many tables did he have?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ntotal_customers = 62\ncustomers_left = 17\nremaining_customers = total_customers - customers_left\npeople_per_table = 9\nnum_tables = remaining_customers // people_per_table\nans = num_tables",
            "# Python code, return ans\ntotal_customers = 62\ncustomers_left = 17\nremaining_customers = total_customers - customers_left\npeople_per_table = 9\ntables = remaining_customers // people_per_table\nans = tables",
            "# Python code, return ans\ntotal_customers = 62\ncustomers_left = 17\nremaining_customers = total_customers - customers_left\npeople_per_table = 9\ntotal_tables = remaining_customers // people_per_table\nans = total_tables"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Tom had thirty-six pieces of clothing to wash. He put eighteen of them in one load, but decided to split the rest into two equal loads. How many pieces of clothing could go in each of the small loads?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ntotal_clothing = 36\nfirst_load = 18\nremaining_clothing = total_clothing - first_load\nsmall_loads = remaining_clothing / 2\nans = small_loads",
            "# Python code, return ans\ntotal_clothing = 36\nfirst_load = 18\nremaining_clothing = total_clothing - first_load\nsmall_load = remaining_clothing / 2\nans = small_load",
            "# Python code, return ans\ntotal_clothing = 36\nfirst_load = 18\nremaining_clothing = total_clothing - first_load\nsmall_loads = remaining_clothing // 2\nans = small_loads"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Nancy had forty-three files on her computer. She deleted thirty-one of them and put the rest into folders with six files in each one. How many folders did Nancy end up with?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\nfiles_total = 43\nfiles_deleted = 31\nfiles_remaining = files_total - files_deleted\nfolders = files_remaining / 6\nans = folders",
            "# Python code, return ans\ntotal_files = 43\ndeleted_files = 31\nremaining_files = total_files - deleted_files\nfiles_per_folder = 6\nfolders = remaining_files / files_per_folder\nans = folders",
            "# Python code, return ans\nfiles_total = 43\nfiles_deleted = 31\nfiles_remaining = files_total - files_deleted\nfolders = files_remaining // 6\nans = folders"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Mike made ninety dollars mowing lawns over the summer. If he spent forty-five dollars buying new mower blades, how many five dollar games could he buy with the money he had left?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nMike_earning = 90\nmower_blades_cost = 45\nmoney_left = Mike_earning - mower_blades_cost\ngame_cost = 5\ngames_to_buy = money_left // game_cost\nans = games_to_buy",
            "# Python code, return ans\nMike_money = 90\nmower_blades_cost = 45\nmoney_left = Mike_money - mower_blades_cost\ngame_cost = 5\ngames_can_buy = money_left // game_cost\nans = games_can_buy",
            "# Python code, return ans\ntotal_money = 90\nmoney_spent_on_blades = 45\nmoney_left = total_money - money_spent_on_blades\nprice_of_game = 5\nnum_of_games = money_left // price_of_game\nans = num_of_games"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "A pet store had forty-five puppies. In one day they sold thirty-nine of them and put the rest into cages with two in each cage. How many cages did they use?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\ntotal_puppies = 45\nsold_puppies = 39\nremaining_puppies = total_puppies - sold_puppies\npuppies_per_cage = 2\ncages_needed = remaining_puppies // puppies_per_cage\nans = cages_needed",
            "# Python code, return ans\ntotal_puppies = 45\nsold_puppies = 39\nremaining_puppies = total_puppies - sold_puppies\ncages_needed = remaining_puppies // 2\nans = cages_needed",
            "# Python code, return ans\ntotal_puppies = 45\npuppies_sold = 39\npuppies_left = total_puppies - puppies_sold\ncages_needed = puppies_left / 2\nans = cages_needed"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Faye picked eighty-eight flowers for her friend's wedding. She was making bouquets with five flowers in each one. If forty-eight of the flowers wilted before the wedding, how many bouquets could she still make?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\npicked_flowers = 88\nwilted_flowers = 48\nflowers_left = picked_flowers - wilted_flowers\nflowers_per_bouquet = 5\nbouquets = flowers_left // flowers_per_bouquet\nans = bouquets",
            "# Python code, return ans\ntotal_flowers = 88\nwilted_flowers = 48\nflowers_left = total_flowers - wilted_flowers\nflowers_per_bouquet = 5\nbouquets = flowers_left // flowers_per_bouquet\nans = bouquets",
            "# Python code, return ans\npicked_flowers = 88\nflowers_per_bouquet = 5\nwilted_flowers = 48\nremaining_flowers = picked_flowers - wilted_flowers\nbouquets = remaining_flowers // flowers_per_bouquet\nans = bouquets"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "Tom bought sixty-three tickets at the state fair. He spent fourteen tickets at the 'dunk a clown' booth and decided to use the rest on rides. If each ride cost seven tickets, how many rides could he go on?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ntotal_tickets = 63\ntickets_spent = 14\ntickets_left = total_tickets - tickets_spent\nride_cost = 7\nrides = tickets_left // ride_cost\nans = rides",
            "# Python code, return ans\ntotal_tickets = 63\ntickets_spent = 14\ntickets_left = total_tickets - tickets_spent\nride_cost = 7\nnum_rides = tickets_left // ride_cost\nans = num_rides",
            "# Python code, return ans\ntotal_tickets = 63\ntickets_spent = 14\ntickets_left = total_tickets - tickets_spent\nride_cost = 7\nrides = tickets_left // ride_cost\nans = rides"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Amy baked fifty cupcakes for her school's bake sale. If her brother, Todd, ate five of them, how many packages could she make if she put five cupcake in each package?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ntotal_cupcakes = 50\ncupcakes_eaten = 5\ncupcakes_left = total_cupcakes - cupcakes_eaten\ncupcakes_per_package = 5\npackages = cupcakes_left // cupcakes_per_package\nans = packages",
            "# Python code, return ans\ntotal_cupcakes = 50\ncupcakes_eaten_by_Todd = 5\ncupcakes_left = total_cupcakes - cupcakes_eaten_by_Todd\ncupcakes_per_package = 5\npackages = cupcakes_left // cupcakes_per_package\nans = packages",
            "# Python code, return ans\ntotal_cupcakes = 50\ncupcakes_eaten = 5\ncupcakes_left = total_cupcakes - cupcakes_eaten\ncupcakes_per_package = 5\npackages = cupcakes_left / cupcakes_per_package\nans = packages"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Roger had sixty-three dollars. If he spent forty-eight bucks on a new game, how many three dollar toys could he buy with the money he had left?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ntotal_money = 63\nspent_on_game = 48\nmoney_left = total_money - spent_on_game\ntoy_cost = 3\ntoys_can_buy = money_left // toy_cost\nans = toys_can_buy",
            "# Python code, return ans\ninitial_money = 63\nspent_on_game = 48\nmoney_left = initial_money - spent_on_game\ntoy_cost = 3\nnum_toys = money_left // toy_cost\nans = num_toys",
            "# Python code, return ans\ninitial_money = 63\nspent_on_game = 48\nremaining_money = initial_money - spent_on_game\ntoy_cost = 3\ntoys_can_buy = remaining_money // toy_cost\nans = toys_can_buy"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Roger is at the library helping put away books. There are fifty-four book to put away total but a librarian takes nineteen of them and leaves Roger with the rest. If he can fit five books on a shelf, how many shelves will he need?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ntotal_books = 54\nbooks_taken_by_librarian = 19\nbooks_left = total_books - books_taken_by_librarian\nbooks_per_shelf = 5\nshelves_needed = (books_left + books_per_shelf - 1) // books_per_shelf\nans = shelves_needed",
            "# Python code, return ans\ntotal_books = 54\nbooks_taken_by_librarian = 19\nbooks_left = total_books - books_taken_by_librarian\nbooks_per_shelf = 5\nshelves_needed = -(-books_left // books_per_shelf)  # using ceiling division\nans = shelves_needed",
            "# Python code, return ans\ntotal_books = 54\nlibrarian_books = 19\nroger_books = total_books - librarian_books\nbooks_per_shelf = 5\nshelves_needed = (roger_books + books_per_shelf - 1) // books_per_shelf\nans = shelves_needed"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Paige had one hundred ten homework problems. She finished forty-seven of them but still had seven pages of problems to do. If each page has the same number of problems on it, how many problems are on each page?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ntotal_homework = 110\nfinished_problems = 47\nremaining_problems = total_homework - finished_problems\npages_left = 7\nproblems_per_page = remaining_problems / pages_left\nans = problems_per_page",
            "# Python code, return ans\ntotal_problems = 110\nfinished_problems = 47\nremaining_problems = total_problems - finished_problems\npages_left = 7\nproblems_per_page = remaining_problems / pages_left\nans = problems_per_page",
            "# Python code, return ans\ntotal_problems = 110\nfinished_problems = 47\nremaining_problems = total_problems - finished_problems\npages_left = 7\nproblems_per_page = remaining_problems / pages_left\nans = problems_per_page"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Paige uploaded thirty-five pictures to Facebook. She put fourteen pics into one album and put the rest into three different albums. How many pictures were in each of the three albums?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ntotal_pictures = 35\npictures_in_one_album = 14\npictures_left = total_pictures - pictures_in_one_album\npictures_in_each_album = pictures_left / 3\nans = pictures_in_each_album",
            "# Python code, return ans\ntotal_pictures = 35\npictures_in_one_album = 14\nremaining_pictures = total_pictures - pictures_in_one_album\npictures_in_each_album = remaining_pictures / 3\nans = pictures_in_each_album",
            "# Python code, return ans\ntotal_pictures = 35\npics_in_one_album = 14\npics_remaining = total_pictures - pics_in_one_album\npics_in_each_album = pics_remaining / 3\nans = pics_in_each_album"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Faye's team won their baseball game and scored sixty-eight points total. If Faye scored twenty-eight of the points and everyone else scored eight points each, how many players were on her team?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ntotal_points = 68\nFaye_points = 28\nother_players_points_each = 8\nother_players_total_points = total_points - Faye_points\nother_players_num = other_players_total_points / other_players_points_each\nteam_size = other_players_num + 1  # Including Faye\nans = team_size",
            "# Python code, return ans\ntotal_points = 68\nFaye_points = 28\nother_points_each = 8\nother_players_points = total_points - Faye_points\nother_players = other_players_points / other_points_each\ntotal_players = other_players + 1\nans = total_players",
            "# Python code, return ans\ntotal_points = 68\nFaye_points = 28\nother_points_each = 8\nother_players_points = total_points - Faye_points\nother_players = other_players_points / other_points_each\nteam_size = other_players + 1\nans = team_size"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "A company invited sixty-eight people to a luncheon, but fifty of them didn't show up. If the tables they had held three people each, how many tables do they need?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ntotal_people_invited = 68\npeople_not_show_up = 50\npeople_show_up = total_people_invited - people_not_show_up\ntable_capacity = 3\ntables_needed = -(-people_show_up // table_capacity)  # Using ceiling division\nans = tables_needed",
            "# Python code, return ans\npeople_invited = 68\npeople_not_show = 50\npeople_attended = people_invited - people_not_show\ntable_capacity = 3\ntables_needed = people_attended // table_capacity\nif people_attended % table_capacity != 0:\n    tables_needed += 1\nans = tables_needed",
            "# Python code, return ans\ntotal_people_invited = 68\npeople_not_show_up = 50\npeople_show_up = total_people_invited - people_not_show_up\ntable_capacity = 3\ntables_needed = people_show_up // table_capacity\nif people_show_up % table_capacity != 0:\n    tables_needed += 1\nans = tables_needed"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "For Halloween Bianca received seventeen pieces of candy. She ate two pieces then placed the rest into piles with three in each pile. How many piles could she make?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ncandy_received = 17\ncandy_eaten = 2\ncandy_left = candy_received - candy_eaten\npile_size = 3\nnum_piles = candy_left // pile_size\nans = num_piles",
            "# Python code, return ans\ncandy_received = 17\ncandy_eaten = 2\ncandy_left = candy_received - candy_eaten\npiles = candy_left // 3\nans = piles",
            "# Python code, return ans\ncandy_received = 17\ncandy_eaten = 2\ncandy_left = candy_received - candy_eaten\npile_size = 3\npiles = candy_left // pile_size\nans = piles"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "The cafeteria had fifty-one apples. For lunch they handed out forty-one to students and decided to use the rest to make pies. If each pie takes five apples, how many pies could they make?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ntotal_apples = 51\napples_given_to_students = 41\napples_left = total_apples - apples_given_to_students\npies_possible = apples_left // 5\nans = pies_possible",
            "# Python code, return ans\ntotal_apples = 51\napples_given_to_students = 41\nremaining_apples = total_apples - apples_given_to_students\npies = remaining_apples // 5\nans = pies",
            "# Python code, return ans\ntotal_apples = 51\napples_given = 41\napples_left = total_apples - apples_given\npies = apples_left // 5\nans = pies"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Jerry was selling his old games. He started out with sixty-eight but sold four of them. He packed the rest up putting eight games into each box. How many boxes did he have to use?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\ngames_initial = 68\ngames_sold = 4\ngames_left = games_initial - games_sold\ngames_per_box = 8\nboxes_needed = games_left // games_per_box\nif games_left % games_per_box > 0:\n    boxes_needed += 1\nans = boxes_needed",
            "# Python code, return ans\ninitial_games = 68\ngames_sold = 4\ngames_left = initial_games - games_sold\ngames_per_box = 8\nboxes_needed = games_left // games_per_box\nif games_left % games_per_box != 0:\n    boxes_needed += 1\nans = boxes_needed",
            "# Python code, return ans\ninitial_games = 68\nsold_games = 4\nremaining_games = initial_games - sold_games\ngames_per_box = 8\nboxes_needed = remaining_games / games_per_box\nans = boxes_needed"
        ],
        "results": [
            8.0,
            8.0,
            8.0
        ],
        "result_counter": {
            "8.0": 3
        },
        "prediction": 8.0
    },
    {
        "question": "There are fifty-eight students trying out for the school's trivia teams. If twenty-eight of them didn't get picked for the team and the rest were put into five groups, how many students would be in each group?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ntotal_students = 58\nnot_picked = 28\nstudents_picked = total_students - not_picked\ngroups = 5\nstudents_per_group = students_picked // groups\nans = students_per_group",
            "# Python code, return ans\ntotal_students = 58\nnot_picked_students = 28\npicked_students = total_students - not_picked_students\ngroup_num = 5\nstudents_per_group = picked_students // group_num\nans = students_per_group",
            "# Python code, return ans\ntotal_students = 58\nnot_picked_students = 28\npicked_students = total_students - not_picked_students\ngroups = 5\nstudents_per_group = picked_students // groups\nans = students_per_group"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "A new building needed 14 windows. The builder had already installed 5 of them. If it takes 4 hours to install each window, how long will it take him to install the rest?",
        "answer": 36,
        "generated": [
            "# Python code, return ans\ntotal_windows = 14\ninstalled_windows = 5\nremaining_windows = total_windows - installed_windows\ntime_per_window = 4\ntime_to_install_rest = remaining_windows * time_per_window\nans = time_to_install_rest",
            "# Python code, return ans\ntotal_windows = 14\ninstalled_windows = 5\nwindows_to_install = total_windows - installed_windows\ntime_per_window = 4\ntime_to_install_rest = windows_to_install * time_per_window\nans = time_to_install_rest",
            "# Python code, return ans\ntotal_windows = 14\ninstalled_windows = 5\nremaining_windows = total_windows - installed_windows\ntime_per_window = 4\ntime_to_install_rest = remaining_windows * time_per_window\nans = time_to_install_rest"
        ],
        "results": [
            36.0,
            36.0,
            36.0
        ],
        "result_counter": {
            "36.0": 3
        },
        "prediction": 36.0
    },
    {
        "question": "A painter needed to paint 10 rooms in a building. Each room takes 8 hours to paint. If he already painted 8 rooms, how much longer will he take to paint the rest?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\nrooms_to_paint = 10\nrooms_painted = 8\nhours_per_room = 8\nremaining_rooms = rooms_to_paint - rooms_painted\ntime_remaining = remaining_rooms * hours_per_room\nans = time_remaining",
            "# Python code, return ans\nrooms_total = 10\nrooms_painted = 8\nrooms_left = rooms_total - rooms_painted\ntime_per_room = 8\ntime_left = rooms_left * time_per_room\nans = time_left",
            "# Python code, return ans\ntotal_rooms = 10\npainted_rooms = 8\nremaining_rooms = total_rooms - painted_rooms\ntime_per_room = 8\ntime_remaining = remaining_rooms * time_per_room\nans = time_remaining"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "In a video game, each enemy defeated gives you 3 points. If a level has 6 enemies total and you destroy all but 2 of them, how many points would you earn?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\npoints_per_enemy = 3\ntotal_enemies = 6\nenemies_left = 2\nenemies_defeated = total_enemies - enemies_left\npoints_earned = enemies_defeated * points_per_enemy\nans = points_earned",
            "# Python code, return ans\npoints_per_enemy = 3\ntotal_enemies = 6\nenemies_left = 2\nenemies_defeated = total_enemies - enemies_left\npoints_earned = enemies_defeated * points_per_enemy\nans = points_earned",
            "# Python code, return ans\npoints_per_enemy = 3\ntotal_enemies = 6\nenemies_left = 2\nenemies_defeated = total_enemies - enemies_left\npoints_earned = enemies_defeated * points_per_enemy\nans = points_earned"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "Wendy earned 5 points for each bag of cans she recycled. If she had 11 bags, but didn't recycle 2 of them, how many points would she have earned?",
        "answer": 45,
        "generated": [
            "# Python code, return ans\nbags_recycled = 11 - 2\npoints_per_bag = 5\ntotal_points = bags_recycled * points_per_bag\nans = total_points",
            "# Python code, return ans\nbags_recycled = 11 - 2\npoints_per_bag = 5\ntotal_points = bags_recycled * points_per_bag\nans = total_points",
            "# Python code, return ans\nbags_recycled = 11 - 2\npoints_per_bag = 5\npoints_earned = bags_recycled * points_per_bag\nans = points_earned"
        ],
        "results": [
            45.0,
            45.0,
            45.0
        ],
        "result_counter": {
            "45.0": 3
        },
        "prediction": 45.0
    },
    {
        "question": "Kaleb bought 14 boxes of chocolate candy and gave 5 to his little brother. If each box has 6 pieces inside it, how many pieces did Kaleb still have?",
        "answer": 54,
        "generated": [
            "# Python code, return ans\nboxes_bought = 14\nboxes_given = 5\nboxes_left = boxes_bought - boxes_given\npieces_per_box = 6\ntotal_pieces = boxes_left * pieces_per_box\nans = total_pieces",
            "# Python code, return ans\nboxes_bought = 14\nboxes_given = 5\nboxes_left = boxes_bought - boxes_given\npieces_per_box = 6\ntotal_pieces = boxes_left * pieces_per_box\nans = total_pieces",
            "# Python code, return ans\nboxes_bought = 14\nboxes_given = 5\nboxes_left = boxes_bought - boxes_given\npieces_per_box = 6\ntotal_pieces = boxes_left * pieces_per_box\nans = total_pieces"
        ],
        "results": [
            54.0,
            54.0,
            54.0
        ],
        "result_counter": {
            "54.0": 3
        },
        "prediction": 54.0
    },
    {
        "question": "Adam earned 9 dollars for each lawn he mowed. If he had 12 lawns to mow, but forgot to mow 8 of them, how much money did he actually earn?",
        "answer": 36,
        "generated": [
            "# Python code, return ans\ndollars_per_lawn = 9\ntotal_lawns = 12\nunmowed_lawns = 8\nmowed_lawns = total_lawns - unmowed_lawns\nearned_money = mowed_lawns * dollars_per_lawn\nans = earned_money",
            "# Python code, return ans\ndollars_per_lawn = 9\ntotal_lawns = 12\nunmowed_lawns = 8\nmowed_lawns = total_lawns - unmowed_lawns\nearned_money = mowed_lawns * dollars_per_lawn\nans = earned_money",
            "# Python code, return ans\nearn_per_lawn = 9\ntotal_lawns = 12\nforgotten_lawns = 8\nmowed_lawns = total_lawns - forgotten_lawns\nearned_money = mowed_lawns * earn_per_lawn\nans = earned_money"
        ],
        "results": [
            36.0,
            36.0,
            36.0
        ],
        "result_counter": {
            "36.0": 3
        },
        "prediction": 36.0
    },
    {
        "question": "A magician was selling magic card decks for 2 dollars each. If he started with 5 decks and by the end of the day he had 3 left, how much money did he earn?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ndeck_price = 2\ninitial_decks = 5\nremaining_decks = 3\ndecks_sold = initial_decks - remaining_decks\nmoney_earned = decks_sold * deck_price\nans = money_earned",
            "# Python code, return ans\ndeck_start = 5\ndeck_end = 3\ndeck_sold = deck_start - deck_end\nprice_per_deck = 2\nmoney_earned = deck_sold * price_per_deck\nans = money_earned",
            "# Python code, return ans\ndeck_price = 2\ninitial_decks = 5\ndecks_left = 3\ndecks_sold = initial_decks - decks_left\nmoney_earned = decks_sold * deck_price\nans = money_earned"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "A chef needs to cook 12 potatoes. He has already cooked 6. If each potato takes 6 minutes to cook, how long will it take him to cook the rest?",
        "answer": 36,
        "generated": [
            "# Python code, return ans\ntotal_potatoes = 12\ncooked_potatoes = 6\nremaining_potatoes = total_potatoes - cooked_potatoes\ntime_per_potato = 6\ntime_to_cook_rest = remaining_potatoes * time_per_potato\nans = time_to_cook_rest",
            "# Python code, return ans\npotatoes_needed = 12\npotatoes_cooked = 6\npotatoes_left = potatoes_needed - potatoes_cooked\ncooking_time_per_potato = 6\ntotal_cooking_time = potatoes_left * cooking_time_per_potato\nans = total_cooking_time",
            "# Python code, return ans\ntotal_potatoes = 12\ncooked_potatoes = 6\nremaining_potatoes = total_potatoes - cooked_potatoes\ncooking_time_per_potato = 6\ntotal_cooking_time = remaining_potatoes * cooking_time_per_potato\nans = total_cooking_time"
        ],
        "results": [
            36.0,
            36.0,
            36.0
        ],
        "result_counter": {
            "36.0": 3
        },
        "prediction": 36.0
    },
    {
        "question": "John had 5 action figures, but needed 7 total for a complete collection. If each one costs $5, how much money would he need to finish his collection?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\naction_figures_needed = 7 - 5\ncost_per_figure = 5\ntotal_cost = action_figures_needed * cost_per_figure\nans = total_cost",
            "# Python code, return ans\naction_figures_needed = 7 - 5\ncost_per_figure = 5\ntotal_cost = action_figures_needed * cost_per_figure\nans = total_cost",
            "# Python code, return ans\naction_figures_needed = 7 - 5\ncost_per_figure = 5\ntotal_cost = action_figures_needed * cost_per_figure\nans = total_cost"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "At lunch a waiter had 10 customers and 5 of them didn't leave a tip. If he got $3 each from the ones who did tip, how much money did he earn?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\ntotal_customers = 10\ncustomers_no_tip = 5\ncustomers_tipped = total_customers - customers_no_tip\ntip_per_customer = 3\ntotal_earned = customers_tipped * tip_per_customer\nans = total_earned",
            "# Python code, return ans\ntotal_customers = 10\ncustomers_without_tip = 5\ncustomers_with_tip = total_customers - customers_without_tip\ntip_per_customer = 3\ntotal_money_earned = customers_with_tip * tip_per_customer\nans = total_money_earned",
            "# Python code, return ans\ntotal_customers = 10\ncustomers_no_tip = 5\ncustomers_tipped = total_customers - customers_no_tip\ntip_per_customer = 3\ntotal_earned = customers_tipped * tip_per_customer\nans = total_earned"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "A worksheet had 4 problems on it. If a teacher had 9 worksheets to grade and had already graded 5 of them, how many more problems does she have to grade?",
        "answer": 16,
        "generated": [
            "# Python code, return ans\nproblems_per_worksheet = 4\ntotal_worksheets = 9\ngraded_worksheets = 5\nremaining_worksheets = total_worksheets - graded_worksheets\nremaining_problems = remaining_worksheets * problems_per_worksheet\nans = remaining_problems",
            "# Python code, return ans\nproblems_per_worksheet = 4\ntotal_worksheets = 9\ngraded_worksheets = 5\nremaining_worksheets = total_worksheets - graded_worksheets\nremaining_problems = remaining_worksheets * problems_per_worksheet\nans = remaining_problems",
            "# Python code, return ans\nproblems_per_worksheet = 4\ntotal_worksheets = 9\ngraded_worksheets = 5\nremaining_worksheets = total_worksheets - graded_worksheets\nremaining_problems = remaining_worksheets * problems_per_worksheet\nans = remaining_problems"
        ],
        "results": [
            16.0,
            16.0,
            16.0
        ],
        "result_counter": {
            "16.0": 3
        },
        "prediction": 16.0
    },
    {
        "question": "Each chocolate bar in a box cost $3. If a box had 9 bars total and Wendy sold all but 3 bars, how much money would she have made?",
        "answer": 18,
        "generated": [
            "# Python code, return ans\ncost_per_bar = 3\ntotal_bars = 9\nunsold_bars = 3\nsold_bars = total_bars - unsold_bars\nmoney_made = sold_bars * cost_per_bar\nans = money_made",
            "# Python code, return ans\nchocolate_bar_cost = 3\ntotal_bars = 9\nunsold_bars = 3\nsold_bars = total_bars - unsold_bars\nmoney_made = sold_bars * chocolate_bar_cost\nans = money_made",
            "# Python code, return ans\nchocolate_bar_cost = 3\ntotal_bars = 9\nunsold_bars = 3\nsold_bars = total_bars - unsold_bars\nmoney_made = sold_bars * chocolate_bar_cost\nans = money_made"
        ],
        "results": [
            18.0,
            18.0,
            18.0
        ],
        "result_counter": {
            "18.0": 3
        },
        "prediction": 18.0
    },
    {
        "question": "Dave had 10 video games but 2 of them weren't working. If he wanted to sell the working games for $4 each, how much money could he earn?",
        "answer": 32,
        "generated": [
            "# Python code, return ans\nvideo_games = 10\nnot_working_games = 2\nworking_games = video_games - not_working_games\nprice_per_game = 4\ntotal_money = working_games * price_per_game\nans = total_money",
            "# Python code, return ans\ntotal_video_games = 10\nnon_working_games = 2\nworking_games = total_video_games - non_working_games\nprice_per_game = 4\nmoney_earned = working_games * price_per_game\nans = money_earned",
            "# Python code, return ans\ntotal_games = 10\nbroken_games = 2\nworking_games = total_games - broken_games\nprice_per_game = 4\nmoney_earned = working_games * price_per_game\nans = money_earned"
        ],
        "results": [
            32.0,
            32.0,
            32.0
        ],
        "result_counter": {
            "32.0": 3
        },
        "prediction": 32.0
    },
    {
        "question": "April's discount flowers was having a sale where each rose was 4 dollars. If April started with 13 roses and had 4 roses left, how much money did she earn?",
        "answer": 36,
        "generated": [
            "# Python code, return ans\nrose_price = 4\ntotal_roses = 13\nroses_left = 4\nroses_sold = total_roses - roses_left\nmoney_earned = roses_sold * rose_price\nans = money_earned",
            "# Python code, return ans\nrose_price = 4\nrose_start = 13\nrose_left = 4\nrose_sold = rose_start - rose_left\nmoney_earned = rose_sold * rose_price\nans = money_earned",
            "# Python code, return ans\nrose_price = 4\ntotal_roses = 13\nremaining_roses = 4\nsold_roses = total_roses - remaining_roses\nearned_money = sold_roses * rose_price\nans = earned_money"
        ],
        "results": [
            36.0,
            36.0,
            36.0
        ],
        "result_counter": {
            "36.0": 3
        },
        "prediction": 36.0
    },
    {
        "question": "Isabel baked 3 brownies, but needed 5 total for her party. If she used 5 cups of flour on each one, how much cups of flour does she still need?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\nbrownies_baked = 3\nbrownies_needed = 5\nflour_per_brownie = 5\nbrownies_to_bake = brownies_needed - brownies_baked\nflour_needed = brownies_to_bake * flour_per_brownie\nans = flour_needed",
            "# Python code, return ans\nbrownies_needed = 5\nbrownies_baked = 3\nbrownies_to_bake = brownies_needed - brownies_baked\nflour_per_brownie = 5\nflour_needed = brownies_to_bake * flour_per_brownie\nans = flour_needed",
            "# Python code, return ans\nbrownies_needed = 5\nbrownies_baked = 3\nbrownies_to_bake = brownies_needed - brownies_baked\nflour_per_brownie = 5\nflour_needed = brownies_to_bake * flour_per_brownie\nans = flour_needed"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "At a restaurant each adult meal costs $8 and kids eat free. If a group of 11 people came in and 2 were kids, how much would it cost for the group to eat?",
        "answer": 72,
        "generated": [
            "# Python code, return ans\nadult_meal_cost = 8\nadults = 11 - 2\ntotal_cost = adults * adult_meal_cost\nans = total_cost",
            "# Python code, return ans\nadult_meal_cost = 8\ntotal_people = 11\nkids = 2\nadults = total_people - kids\ntotal_cost = adults * adult_meal_cost\nans = total_cost",
            "# Python code, return ans\nadult_meal_cost = 8\ntotal_people = 11\nkids = 2\nadults = total_people - kids\ntotal_cost = adults * adult_meal_cost\nans = total_cost"
        ],
        "results": [
            72.0,
            72.0,
            72.0
        ],
        "result_counter": {
            "72.0": 3
        },
        "prediction": 72.0
    },
    {
        "question": "At the fair Kaleb bought 6 tickets. After riding the ferris wheel he had 3 tickets left. If each ticket cost 9 dollars, how much money did Kaleb spend riding the ferris wheel?",
        "answer": 27,
        "generated": [
            "# Python code, return ans\ntickets_bought = 6\ntickets_left = 3\ntickets_used = tickets_bought - tickets_left\nticket_cost = 9\nmoney_spent = tickets_used * ticket_cost\nans = money_spent",
            "# Python code, return ans\ntotal_tickets = 6\ntickets_left = 3\ntickets_used = total_tickets - tickets_left\nticket_cost = 9\nmoney_spent = tickets_used * ticket_cost\nans = money_spent",
            "# Python code, return ans\ntickets_bought = 6\ntickets_left = 3\ntickets_used = tickets_bought - tickets_left\nticket_cost = 9\nmoney_spent = tickets_used * ticket_cost\nans = money_spent"
        ],
        "results": [
            27.0,
            27.0,
            27.0
        ],
        "result_counter": {
            "27.0": 3
        },
        "prediction": 27.0
    },
    {
        "question": "A trivia team had 9 members total, but during a game 3 members didn't show up. If each member that did show up scored 2 points, how many points were scored total?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\ntotal_members = 9\nabsent_members = 3\npresent_members = total_members - absent_members\npoints_per_member = 2\ntotal_points = present_members * points_per_member\nans = total_points",
            "# Python code, return ans\ntotal_members = 9\nabsent_members = 3\npresent_members = total_members - absent_members\npoints_per_member = 2\ntotal_points = present_members * points_per_member\nans = total_points",
            "# Python code, return ans\nteam_members = 9\nabsent_members = 3\npresent_members = team_members - absent_members\npoints_per_member = 2\ntotal_points = present_members * points_per_member\nans = total_points"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "There were 8 friends playing a video game online when 3 players quit. If each player left had 3 lives, how many lives did they have total?",
        "answer": 15,
        "generated": [
            "# Python code, return ans\nfriends_playing = 8\nplayers_quit = 3\nremaining_players = friends_playing - players_quit\nlives_per_player = 3\ntotal_lives = remaining_players * lives_per_player\nans = total_lives",
            "# Python code, return ans\nfriends_playing = 8\nplayers_quit = 3\nremaining_players = friends_playing - players_quit\nlives_per_player = 3\ntotal_lives = remaining_players * lives_per_player\nans = total_lives",
            "# Python code, return ans\nfriends_playing = 8\nfriends_quit = 3\nremaining_friends = friends_playing - friends_quit\nlives_per_friend = 3\ntotal_lives = remaining_friends * lives_per_friend\nans = total_lives"
        ],
        "results": [
            15.0,
            15.0,
            15.0
        ],
        "result_counter": {
            "15.0": 3
        },
        "prediction": 15.0
    },
    {
        "question": "Sam invited 9 friends to a birthday party, but 6 couldn't come. If he wanted to buy enough cupcakes so each person could have exactly 2, how many should he buy?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ninvited_friends = 9\nfriends_not_coming = 6\nfriends_coming = invited_friends - friends_not_coming\ncupcakes_per_person = 2\ntotal_cupcakes = friends_coming * cupcakes_per_person\nans = total_cupcakes",
            "# Python code, return ans\ninvited_friends = 9\nfriends_not_coming = 6\nfriends_coming = invited_friends - friends_not_coming\ncupcakes_per_person = 2\ntotal_cupcakes = friends_coming * cupcakes_per_person\nans = total_cupcakes",
            "# Python code, return ans\nfriends_invited = 9\nfriends_not_coming = 6\nfriends_attending = friends_invited - friends_not_coming\ncupcakes_per_person = 2\ntotal_cupcakes = friends_attending * cupcakes_per_person\nans = total_cupcakes"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "If Helen sold 12 boxes of Trefoils, how many cases of 12 boxes does Helen pickup from the cookie mom?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\nboxes_sold = 12\nboxes_per_case = 12\ncases_needed = boxes_sold / boxes_per_case\nans = cases_needed",
            "# Python code, return ans\nboxes_sold = 12\nboxes_per_case = 12\ncases_picked_up = boxes_sold / boxes_per_case\nans = cases_picked_up",
            "# Python code, return ans\nboxes_sold = 12\nboxes_per_case = 12\ncases = boxes_sold / boxes_per_case\nans = cases"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "Girl Scout cookies come packed 12 boxes to a case. Scout Deborah sold 31 boxes of Lemon Chalet Cremes. How many boxes will not be packed to a case?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\nboxes_per_case = 12\nboxes_sold = 31\nboxes_not_packed = boxes_sold % boxes_per_case\nans = boxes_not_packed",
            "# Python code, return ans\nboxes_per_case = 12\nboxes_sold = 31\nremainder_boxes = boxes_sold % boxes_per_case\nans = remainder_boxes",
            "# Python code, return ans\nboxes_per_case = 12\nboxes_sold = 31\nboxes_not_packed = boxes_sold % boxes_per_case\nans = boxes_not_packed"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Nancy sold 45 boxes of Tagalongs. How many cases of 12 boxes, plus extra boxes does Nancy need?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\nboxes_sold = 45\nboxes_per_case = 12\ncases_needed = boxes_sold // boxes_per_case\nextra_boxes = boxes_sold % boxes_per_case\nans = (cases_needed, extra_boxes)",
            "# Python code, return ans\nboxes_sold = 45\nboxes_per_case = 12\ncases_needed = boxes_sold // boxes_per_case\nextra_boxes = boxes_sold % boxes_per_case\nans = (cases_needed, extra_boxes)",
            "# Python code, return ans\nboxes_sold = 45\nboxes_per_case = 12\ncases_needed = boxes_sold // boxes_per_case\nextra_boxes = boxes_sold % boxes_per_case\nans = (cases_needed, extra_boxes)"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Anne had 15 Sweettarts. If Anne gave equal numbers of Sweettarts to her 3 friends, how many Sweettarts did each person eat?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\nAnne_Sweettarts = 15\nfriends = 3\nSweettarts_each = Anne_Sweettarts / friends\nans = Sweettarts_each",
            "# Python code, return ans\nAnne_Sweettarts = 15\nfriends_num = 3\nSweettarts_per_friend = Anne_Sweettarts / friends_num\nans = Sweettarts_per_friend",
            "# Python code, return ans\nAnne_Sweettarts = 15\nfriend_num = 3\nSweettarts_each = Anne_Sweettarts / friend_num\nans = Sweettarts_each"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Sean had 45 Starbursts. If Sean gave equal numbers of Starbursts to his 18 friends and then he ate what was left, how many Starbursts did each person eat?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ntotal_starbursts = 45\nnum_friends = 18\nstarbursts_per_friend = total_starbursts // num_friends\nans = starbursts_per_friend",
            "# Python code, return ans\ntotal_starbursts = 45\nnum_friends = 18\nstarbursts_per_friend = total_starbursts // num_friends\nans = starbursts_per_friend",
            "# Python code, return ans\ntotal_starbursts = 45\nnum_friends = 18\nstarbursts_per_friend = total_starbursts // num_friends\nans = starbursts_per_friend"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Matthew had 27 crackers. If Matthew gave equal numbers of crackers to his 9 friends, how many crackers did each person eat?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\ntotal_crackers = 27\nfriends = 9\ncrackers_per_person = total_crackers / friends\nans = crackers_per_person",
            "# Python code, return ans\ncrackers = 27\nfriends = 9\ncrackers_each = crackers / friends\nans = crackers_each",
            "# Python code, return ans\ntotal_crackers = 27\nfriends = 9\ncrackers_per_person = total_crackers / friends\nans = crackers_per_person"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Mary sold 9 boxes of Do-Si-Dos. How many cases of 6 boxes, plus extra boxes does Mary need to deliver?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\nboxes_sold = 9\nboxes_per_case = 6\ncases_needed = boxes_sold // boxes_per_case\nextra_boxes = boxes_sold % boxes_per_case\nans = (cases_needed, extra_boxes)",
            "# Python code, return ans\nboxes_sold = 9\nboxes_per_case = 6\ncases_needed = boxes_sold // boxes_per_case\nextra_boxes = boxes_sold % boxes_per_case\nans = (cases_needed, extra_boxes)",
            "# Python code, return ans\nboxes_sold = 9\nboxes_per_case = 6\ncases_needed = boxes_sold // boxes_per_case\nextra_boxes = boxes_sold % boxes_per_case\nans = (cases_needed, extra_boxes)"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "Samuel had 14 Skittles. If Samuel gave equal numbers of Skittles to his 4 friends and then he ate what was left, how many Skittles did each person eat?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nSamuel_skittles = 14\nfriend_num = 4\nskittles_each = Samuel_skittles // friend_num\nans = skittles_each",
            "# Python code, return ans\nSamuel_skittles = 14\nfriend_num = 4\nskittles_each = Samuel_skittles // friend_num\nans = skittles_each",
            "# Python code, return ans\nSamuel_skittles = 14\nfriend_num = 4\nskittles_each = Samuel_skittles // friend_num\nans = skittles_each"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "If Lillian split 20 Skittles between 8 people in her class and kept the left overs, how many Skittles did each classmate get?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ntotal_skittles = 20\npeople_in_class = 8\nskittles_per_classmate = total_skittles // people_in_class\nans = skittles_per_classmate",
            "# Python code, return ans\ntotal_skittles = 20\npeople = 8\nskittles_per_person = total_skittles // people\nans = skittles_per_person",
            "# Python code, return ans\ntotal_skittles = 20\npeople = 8\nskittles_per_person = total_skittles // people\nans = skittles_per_person"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Lemon heads come in packages of 3. Patricia ate 15 Lemon Heads. How many Lemon Heads does she have left?",
        "answer": 0,
        "generated": [
            "# Python code, return ans\ntotal_lemon_heads = 15\npackage_size = 3\nlemon_heads_left = total_lemon_heads % package_size\nans = lemon_heads_left",
            "# Python code, return ans\ntotal_lemon_heads = 15\npackage_size = 3\nlemon_heads_left = total_lemon_heads % package_size\nans = lemon_heads_left",
            "# Python code, return ans\npackage_of_lemon_heads = 3\ntotal_lemon_heads = 15\nlemon_heads_left = total_lemon_heads % package_of_lemon_heads\nans = lemon_heads_left"
        ],
        "results": [
            0.0,
            0.0,
            0.0
        ],
        "result_counter": {
            "0.0": 3
        },
        "prediction": 0.0
    },
    {
        "question": "Crackers come in packages of 18. Betty ate 45 crackers. How many crackers does she have left?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\ncrackers_per_package = 18\ncrackers_eaten = 45\npackages_needed = crackers_eaten // crackers_per_package\nremaining_crackers = (packages_needed + 1) * crackers_per_package - crackers_eaten\nans = remaining_crackers",
            "# Python code, return ans\npackage_crackers = 18\ncrackers_eaten = 45\ntotal_crackers = package_crackers - crackers_eaten\nans = total_crackers",
            "# Python code, return ans\npackage_crackers = 18\ncrackers_eaten = 45\nremaining_crackers = package_crackers - crackers_eaten\nans = remaining_crackers"
        ],
        "results": [
            9.0,
            -27.0,
            -27.0
        ],
        "result_counter": {
            "9.0": 1,
            "-27.0": 2
        },
        "prediction": -27.0
    },
    {
        "question": "Skittles come in packages of 6. Juan ate 24 Skittles. How many Skittles does he have left?",
        "answer": 0,
        "generated": [
            "# Python code, return ans\ntotal_skittles = 6 * 6  # 6 packages of skittles\nskittles_eaten = 24\nskittles_left = total_skittles - skittles_eaten\nans = skittles_left",
            "# Python code, return ans\npackage_size = 6\ntotal_skittles = 24\nremaining_skittles = total_skittles % package_size\nans = remaining_skittles",
            "# Python code, return ans\npackage_size = 6\ntotal_skittles = 24\nremaining_skittles = total_skittles % package_size\nans = remaining_skittles"
        ],
        "results": [
            12.0,
            0.0,
            0.0
        ],
        "result_counter": {
            "12.0": 1,
            "0.0": 2
        },
        "prediction": 0.0
    },
    {
        "question": "Virginia had 13 Sweettarts. If Virginia gave equal numbers of Sweettarts to her 4 friends and then she ate what was left, how many Sweettarts did each person eat?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nVirginia_Sweettarts = 13\nfriends = 4\nSweettarts_each_friend = Virginia_Sweettarts // friends\nans = Sweettarts_each_friend",
            "# Python code, return ans\ntotal_sweettarts = 13\nnum_friends = 4\nsweettarts_per_friend = total_sweettarts // num_friends\nans = sweettarts_per_friend",
            "# Python code, return ans\nVirginia_Sweettarts = 13\nfriends_num = 4\nSweettarts_each = Virginia_Sweettarts // friends_num\nans = Sweettarts_each"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Shirley sold 54 boxes of Trefoils. How many cases of 6 boxes does Shirley need to deliver?",
        "answer": 9,
        "generated": [
            "# Python code, return ans\nboxes_sold = 54\nboxes_per_case = 6\ncases_needed = boxes_sold // boxes_per_case\nans = cases_needed",
            "# Python code, return ans\nboxes_sold = 54\nboxes_per_case = 6\ncases_needed = boxes_sold / boxes_per_case\nans = cases_needed",
            "# Python code, return ans\nboxes_sold = 54\nboxes_per_case = 6\ncases_needed = boxes_sold / boxes_per_case\nans = cases_needed"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Atomic fireballs come in packages of 9. Barbara ate 59 Atomic Fireballs. How many Atomic Fireballs does she have left?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ntotal_fireballs = 59\npackage_size = 9\nfireballs_left = total_fireballs % package_size\nans = fireballs_left",
            "# Python code, return ans\npackage_size = 9\ntotal_fireballs = 59\nleft_fireballs = total_fireballs % package_size\nans = left_fireballs",
            "# Python code, return ans\ntotal_atomic_fireballs = 59\npackage_size = 9\npackages_eaten = total_atomic_fireballs // package_size\nremaining_fireballs = total_atomic_fireballs - (packages_eaten * package_size)\nans = remaining_fireballs"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Billy had 72 Lemon Heads. If Billy gave equal numbers of Lemon Heads to his 6 friends, how many Lemon Heads did each person eat?",
        "answer": 12,
        "generated": [
            "# Python code, return ans\nLemon_Heads = 72\nfriends = 6\nLemon_Heads_each = Lemon_Heads / friends\nans = Lemon_Heads_each",
            "# Python code, return ans\nlemon_heads = 72\nfriends = 6\nlemon_heads_each = lemon_heads / friends\nans = lemon_heads_each",
            "# Python code, return ans\nlemon_heads = 72\nfriends = 6\nlemon_heads_each = lemon_heads / friends\nans = lemon_heads_each"
        ],
        "results": [
            12.0,
            12.0,
            12.0
        ],
        "result_counter": {
            "12.0": 3
        },
        "prediction": 12.0
    },
    {
        "question": "There are 25 pencils in Frances's pencil collection. If the pencils are organized into 5 groups, how big is each group?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\npencil_collection = 25\ngroups = 5\ngroup_size = pencil_collection / groups\nans = group_size",
            "# Python code, return ans\npencil_collection = 25\ngroup_num = 5\npencils_per_group = pencil_collection / group_num\nans = pencils_per_group",
            "# Python code, return ans\npencil_collection = 25\ngroup_num = 5\ngroup_size = pencil_collection / group_num\nans = group_size"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "There are 35 eggs in Margaret's egg collection. If the eggs are organized into 5 groups, how big is each group?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ntotal_eggs = 35\nnum_groups = 5\neggs_per_group = total_eggs / num_groups\nans = eggs_per_group",
            "# Python code, return ans\neggs_total = 35\ngroup_num = 5\neggs_per_group = eggs_total // group_num\nans = eggs_per_group",
            "# Python code, return ans\ntotal_eggs = 35\ngroups = 5\neggs_per_group = total_eggs / groups\nans = eggs_per_group"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "There are 9 students in the class and 27 Skittles. If the Skittles are divided equally among the students, how many does each student get?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nstudents = 9\nskittles = 27\nskittles_per_student = skittles / students\nans = skittles_per_student",
            "# Python code, return ans\nstudents = 9\nskittles = 27\nskittles_per_student = skittles // students\nans = skittles_per_student",
            "# Python code, return ans\nstudents = 9\nskittles = 27\nskittles_per_student = skittles / students\nans = skittles_per_student"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "The school is planning a field trip. There are 60 students and 10 seats on each school bus. How many buses are needed to take the trip?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\nstudents = 60\nseats_per_bus = 10\nbuses_needed = students // seats_per_bus\nif students % seats_per_bus != 0:\n    buses_needed += 1\nans = buses_needed",
            "# Python code, return ans\nstudents = 60\nseats_per_bus = 10\nbuses_needed = students // seats_per_bus\nif students % seats_per_bus > 0:\n    buses_needed += 1\nans = buses_needed",
            "# Python code, return ans\nstudents = 60\nseats_per_bus = 10\nbuses_needed = students // seats_per_bus + (students % seats_per_bus > 0)\nans = buses_needed"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "There are 560 bottle caps in Terry's bottle cap collection. If the bottle caps are organized into 80 groups, how big is each group?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ntotal_caps = 560\nnum_groups = 80\ncaps_per_group = total_caps / num_groups\nans = caps_per_group",
            "# Python code, return ans\ntotal_caps = 560\nnum_groups = 80\ncaps_per_group = total_caps / num_groups\nans = caps_per_group",
            "# Python code, return ans\ntotal_bottle_caps = 560\nnum_of_groups = 80\ncaps_per_group = total_bottle_caps / num_of_groups\nans = caps_per_group"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Philip has 60 bottle caps stored in boxes. If the are 60 boxes, how many bottle caps must go in each box?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\nbottle_caps = 60\nboxes = 60\ncaps_per_box = bottle_caps / boxes\nans = caps_per_box",
            "# Python code, return ans\ntotal_bottle_caps = 60\ntotal_boxes = 60\nbottle_caps_per_box = total_bottle_caps / total_boxes\nans = bottle_caps_per_box",
            "# Python code, return ans\ntotal_bottle_caps = 60\ntotal_boxes = 60\nbottle_caps_per_box = total_bottle_caps / total_boxes\nans = bottle_caps_per_box"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "There are 64 marbles in Phyllis's marble collection. If the marbles are organized into 32 groups, how big is each group?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\nmarble_total = 64\ngroup_num = 32\nmarble_per_group = marble_total // group_num\nans = marble_per_group",
            "# Python code, return ans\nmarbles_total = 64\ngroups = 32\nmarbles_per_group = marbles_total / groups\nans = marbles_per_group",
            "# Python code, return ans\nmarbles_total = 64\ngroups = 32\nmarbles_per_group = marbles_total / groups\nans = marbles_per_group"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Lawrence has 5504 marbles. If he shares them among 64 friends, how many marbles does each friend get?",
        "answer": 86,
        "generated": [
            "# Python code, return ans\ntotal_marbles = 5504\nfriends = 64\nmarbles_per_friend = total_marbles // friends\nans = marbles_per_friend",
            "# Python code, return ans\nmarbles = 5504\nfriends = 64\nmarbles_per_friend = marbles // friends\nans = marbles_per_friend",
            "# Python code, return ans\nmarbles_total = 5504\nfriends_num = 64\nmarbles_per_friend = marbles_total // friends_num\nans = marbles_per_friend"
        ],
        "results": [
            86.0,
            86.0,
            86.0
        ],
        "result_counter": {
            "86.0": 3
        },
        "prediction": 86.0
    },
    {
        "question": "Peter wants to split a collection of pencils into groups of 11. Peter has 154 pencils. How many groups will be created?",
        "answer": 14,
        "generated": [
            "# Python code, return ans\npencil_num = 154\ngroup_size = 11\ngroup_num = pencil_num // group_size\nans = group_num",
            "# Python code, return ans\npencil_num = 154\ngroup_size = 11\ngroup_num = pencil_num // group_size\nans = group_num",
            "# Python code, return ans\npencils = 154\ngroup_size = 11\ngroups_created = pencils // group_size\nans = groups_created"
        ],
        "results": [
            14.0,
            14.0,
            14.0
        ],
        "result_counter": {
            "14.0": 3
        },
        "prediction": 14.0
    },
    {
        "question": "Albert is inviting 34 friends to a party. He has 1802 cookies. How many cookies will each friend get?",
        "answer": 53,
        "generated": [
            "# Python code, return ans\ntotal_cookies = 1802\ntotal_friends = 34\ncookies_per_friend = total_cookies // total_friends\nans = cookies_per_friend",
            "# Python code, return ans\ntotal_cookies = 1802\ntotal_friends = 34\ncookies_per_friend = total_cookies // total_friends\nans = cookies_per_friend",
            "# Python code, return ans\ntotal_cookies = 1802\nnum_friends = 34\ncookies_per_friend = total_cookies // num_friends\nans = cookies_per_friend"
        ],
        "results": [
            53.0,
            53.0,
            53.0
        ],
        "result_counter": {
            "53.0": 3
        },
        "prediction": 53.0
    },
    {
        "question": "There are 820 blocks in Bridget's block collection. If the blocks are organized into 82 groups, how big is each group?",
        "answer": 10,
        "generated": [
            "# Python code, return ans\ntotal_blocks = 820\ntotal_groups = 82\nblocks_per_group = total_blocks / total_groups\nans = blocks_per_group",
            "# Python code, return ans\ntotal_blocks = 820\nnum_groups = 82\nblocks_per_group = total_blocks / num_groups\nans = blocks_per_group",
            "# Python code, return ans\ntotal_blocks = 820\nnum_groups = 82\ngroup_size = total_blocks / num_groups\nans = group_size"
        ],
        "results": [
            10.0,
            10.0,
            10.0
        ],
        "result_counter": {
            "10.0": 3
        },
        "prediction": 10.0
    },
    {
        "question": "There are 407 bananas in Philip's banana collection. If the bananas are organized into 11 groups, how big is each group?",
        "answer": 37,
        "generated": [
            "# Python code, return ans\ntotal_bananas = 407\ngroup_num = 11\nbananas_per_group = total_bananas // group_num\nans = bananas_per_group",
            "# Python code, return ans\ntotal_bananas = 407\nnum_groups = 11\nbananas_per_group = total_bananas // num_groups\nans = bananas_per_group",
            "# Python code, return ans\ntotal_bananas = 407\nnum_groups = 11\nbananas_per_group = total_bananas // num_groups\nans = bananas_per_group"
        ],
        "results": [
            37.0,
            37.0,
            37.0
        ],
        "result_counter": {
            "37.0": 3
        },
        "prediction": 37.0
    },
    {
        "question": "Dennis has 4028 pencils stored in boxes. If the are 53 boxes, how many pencils must go in each box?",
        "answer": 76,
        "generated": [
            "# Python code, return ans\ntotal_pencils = 4028\ntotal_boxes = 53\npencils_per_box = total_pencils // total_boxes\nans = pencils_per_box",
            "# Python code, return ans\ntotal_pencils = 4028\ntotal_boxes = 53\npencils_per_box = total_pencils // total_boxes\nans = pencils_per_box",
            "# Python code, return ans\ntotal_pencils = 4028\ntotal_boxes = 53\npencils_per_box = total_pencils // total_boxes\nans = pencils_per_box"
        ],
        "results": [
            76.0,
            76.0,
            76.0
        ],
        "result_counter": {
            "76.0": 3
        },
        "prediction": 76.0
    },
    {
        "question": "Peter has 54 tickets and 4 pencils. If he shares the tickets among 9 friends, how many tickets does each friend get?",
        "answer": 6,
        "generated": [
            "# Python code, return ans\ntotal_tickets = 54\nnum_friends = 9\ntickets_per_friend = total_tickets // num_friends\nans = tickets_per_friend",
            "# Python code, return ans\ntotal_tickets = 54\nnum_friends = 9\ntickets_per_friend = total_tickets // num_friends\nans = tickets_per_friend",
            "# Python code, return ans\ntotal_tickets = 54\nfriends = 9\ntickets_per_friend = total_tickets // friends\nans = tickets_per_friend"
        ],
        "results": [
            6.0,
            6.0,
            6.0
        ],
        "result_counter": {
            "6.0": 3
        },
        "prediction": 6.0
    },
    {
        "question": "Ronald has 16 eggs and 3 candies. If he shares the eggs among 8 friends, how many eggs does each friend get?",
        "answer": 2,
        "generated": [
            "# Python code, return ans\ntotal_eggs = 16\nfriends = 8\neggs_per_friend = total_eggs // friends\nans = eggs_per_friend",
            "# Python code, return ans\ntotal_eggs = 16\nfriends = 8\neggs_per_friend = total_eggs // friends\nans = eggs_per_friend",
            "# Python code, return ans\ntotal_eggs = 16\nnum_friends = 8\neggs_per_friend = total_eggs // num_friends\nans = eggs_per_friend"
        ],
        "results": [
            2.0,
            2.0,
            2.0
        ],
        "result_counter": {
            "2.0": 3
        },
        "prediction": 2.0
    },
    {
        "question": "Rebecca wants to split a collection of eggs into groups of 2. Rebecca has 16 eggs and 3 marbles. How many groups will be created?",
        "answer": 8,
        "generated": [
            "# Python code, return ans\neggs = 16\nmarbles = 3\ntotal_items = eggs + marbles\ngroups = total_items // 2\nans = groups",
            "# Python code, return ans\neggs = 16\nmarbles = 3\ntotal_items = eggs + marbles\ngroups = total_items // 2\nans = groups",
            "# Python code, return ans\neggs = 16\nmarbles = 3\ntotal_items = eggs + marbles\ngroups = total_items // 2\nans = groups"
        ],
        "results": [
            9.0,
            9.0,
            9.0
        ],
        "result_counter": {
            "9.0": 3
        },
        "prediction": 9.0
    },
    {
        "question": "Laura has 28 blocks and 8 cards. If she shares the blocks among 4 friends, how many blocks does each friend get?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ntotal_blocks = 28\nnum_friends = 4\nblocks_per_friend = total_blocks / num_friends\nans = blocks_per_friend",
            "# Python code, return ans\nblocks = 28\ncards = 8\nfriends = 4\nblocks_per_friend = blocks / friends\nans = blocks_per_friend",
            "# Python code, return ans\ntotal_blocks = 28\nnum_friends = 4\nblocks_per_friend = total_blocks / num_friends\nans = blocks_per_friend"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "Catherine has 18 bottle caps and 19 blocks. If she shares the bottle caps among 6 friends, how many bottle caps does each friend get?",
        "answer": 3,
        "generated": [
            "# Python code, return ans\nCatherine_bottle_caps = 18\nfriend_num = 6\ncaps_per_friend = Catherine_bottle_caps / friend_num\nans = caps_per_friend",
            "# Python code, return ans\nCatherine_bottle_caps = 18\nfriend_num = 6\nbottle_caps_per_friend = Catherine_bottle_caps / friend_num\nans = bottle_caps_per_friend",
            "# Python code, return ans\nCatherine_bottle_caps = 18\nfriend_num = 6\nbottle_caps_each_friend = Catherine_bottle_caps / friend_num\nans = bottle_caps_each_friend"
        ],
        "results": [
            3.0,
            3.0,
            3.0
        ],
        "result_counter": {
            "3.0": 3
        },
        "prediction": 3.0
    },
    {
        "question": "Denise has 210 crayons and 3 blocks. If she shares the crayons among 30 friends, how many crayons does each friend get?",
        "answer": 7,
        "generated": [
            "# Python code, return ans\ntotal_crayons = 210\nfriends = 30\ncrayons_per_friend = total_crayons // friends\nans = crayons_per_friend",
            "# Python code, return ans\ntotal_crayons = 210\nnum_friends = 30\ncrayons_per_friend = total_crayons // num_friends\nans = crayons_per_friend",
            "# Python code, return ans\ncrayons = 210\nfriends = 30\ncrayons_per_friend = crayons // friends\nans = crayons_per_friend"
        ],
        "results": [
            7.0,
            7.0,
            7.0
        ],
        "result_counter": {
            "7.0": 3
        },
        "prediction": 7.0
    },
    {
        "question": "The school is planning a field trip. The school has 11 classrooms. There are 100 students in the school and 20 seats on each school bus. How many buses are needed to take the trip?",
        "answer": 5,
        "generated": [
            "# Python code, return ans\ntotal_students = 100\nseats_per_bus = 20\nbuses_needed = total_students / seats_per_bus\nans = int(buses_needed) if buses_needed.is_integer() else int(buses_needed) + 1",
            "# Python code, return ans\ntotal_students = 100\nseats_per_bus = 20\nbuses_needed = total_students // seats_per_bus\nif total_students % seats_per_bus != 0:\n    buses_needed += 1\nans = buses_needed",
            "# Python code, return ans\nclassrooms = 11\nstudents = 100\nseats_per_bus = 20\nbuses_needed = students // seats_per_bus\nif students % seats_per_bus > 0:\n    buses_needed += 1\nans = buses_needed"
        ],
        "results": [
            5.0,
            5.0,
            5.0
        ],
        "result_counter": {
            "5.0": 3
        },
        "prediction": 5.0
    },
    {
        "question": "Virginia has 40 bananas and 4 marbles. If she shares the bananas among 40 friends, how many bananas does each friend get?",
        "answer": 1,
        "generated": [
            "# Python code, return ans\ntotal_bananas = 40\ntotal_friends = 40\nbananas_per_friend = total_bananas / total_friends\nans = bananas_per_friend",
            "# Python code, return ans\ntotal_bananas = 40\ntotal_friends = 40\nbananas_per_friend = total_bananas / total_friends\nans = bananas_per_friend",
            "# Python code, return ans\ntotal_bananas = 40\ntotal_friends = 40\nbananas_per_friend = total_bananas / total_friends\nans = bananas_per_friend"
        ],
        "results": [
            1.0,
            1.0,
            1.0
        ],
        "result_counter": {
            "1.0": 3
        },
        "prediction": 1.0
    },
    {
        "question": "There are 5929 Skittles in Steven's Skittle collection. Steven also has 11 erasers. If the Skittles are organized into 77 groups, how big is each group?",
        "answer": 77,
        "generated": [
            "# Python code, return ans\nskittles = 5929\ngroups = 77\nskittles_per_group = skittles // groups\nans = skittles_per_group",
            "# Python code, return ans\nSkittles = 5929\ngroups = 77\ngroup_size = Skittles // groups\nans = group_size",
            "# Python code, return ans\nskittles = 5929\ngroups = 77\nskittles_per_group = skittles // groups\nans = skittles_per_group"
        ],
        "results": [
            77.0,
            77.0,
            77.0
        ],
        "result_counter": {
            "77.0": 3
        },
        "prediction": 77.0
    },
    {
        "question": "There are 3300 bananas in Janice's banana collection. Janice also has 5 crayons. If the bananas are organized into 75 groups, how big is each group?",
        "answer": 44,
        "generated": [
            "# Python code, return ans\ntotal_bananas = 3300\ntotal_groups = 75\nbananas_per_group = total_bananas / total_groups\nans = bananas_per_group",
            "# Python code, return ans\nbananas = 3300\ngroups = 75\nbananas_per_group = bananas // groups\nans = bananas_per_group",
            "# Python code, return ans\ntotal_bananas = 3300\ntotal_groups = 75\nbananas_per_group = total_bananas / total_groups\nans = bananas_per_group"
        ],
        "results": [
            44.0,
            44.0,
            44.0
        ],
        "result_counter": {
            "44.0": 3
        },
        "prediction": 44.0
    },
    {
        "question": "Janice has 316 bottle caps that must be put away in boxes. Douglas comes to help and brings 17 cookies to share with Janice. If there are 79 boxes, how many bottle caps must go in each box?",
        "answer": 4,
        "generated": [
            "# Python code, return ans\ntotal_caps = 316\ntotal_boxes = 79\ncaps_per_box = total_caps // total_boxes\nans = caps_per_box",
            "# Python code, return ans\ntotal_bottle_caps = 316\ntotal_boxes = 79\nbottle_caps_per_box = total_bottle_caps // total_boxes\nans = bottle_caps_per_box",
            "# Python code, return ans\ntotal_bottle_caps = 316\ntotal_boxes = 79\nbottle_caps_per_box = total_bottle_caps // total_boxes\nans = bottle_caps_per_box"
        ],
        "results": [
            4.0,
            4.0,
            4.0
        ],
        "result_counter": {
            "4.0": 3
        },
        "prediction": 4.0
    },
    {
        "question": "Chris is inviting 82 friends to a party. He has 1804 cookies and 10 peices of candy. How many cookies will each friend get?",
        "answer": 22,
        "generated": [
            "# Python code, return ans\ntotal_cookies = 1804\ntotal_friends = 82\ncookies_per_friend = total_cookies // total_friends\nans = cookies_per_friend",
            "# Python code, return ans\ntotal_cookies = 1804\ntotal_friends = 82\ncookies_per_friend = total_cookies // total_friends\nans = cookies_per_friend",
            "# Python code, return ans\ntotal_cookies = 1804\ntotal_friends = 82\ncookies_per_friend = total_cookies // total_friends\nans = cookies_per_friend"
        ],
        "results": [
            22.0,
            22.0,
            22.0
        ],
        "result_counter": {
            "22.0": 3
        },
        "prediction": 22.0
    },
    {
        "question": "Keith has 5530 marbles and 3 pencils. If he shares the marbles among 79 friends, how many marbles does each friend get?",
        "answer": 70,
        "generated": [
            "# Python code, return ans\nmarbles = 5530\nfriends = 79\nmarbles_per_friend = marbles // friends\nans = marbles_per_friend",
            "# Python code, return ans\nmarbles = 5530\npencils = 3\nfriends = 79\nmarbles_per_friend = marbles // friends\nans = marbles_per_friend",
            "# Python code, return ans\nmarbles = 5530\npencils = 3\nfriends = 79\nmarbles_per_friend = marbles // friends\nans = marbles_per_friend"
        ],
        "results": [
            70.0,
            70.0,
            70.0
        ],
        "result_counter": {
            "70.0": 3
        },
        "prediction": 70.0
    },
    {
        "question": "There are 43 students and 1720 apples. Each student has 9 Skittles. If the apples are divided equally among the students, how many does each student get?",
        "answer": 40,
        "generated": [
            "# Python code, return ans\nstudents = 43\napples = 1720\napples_per_student = apples // students\nans = apples_per_student",
            "# Python code, return ans\ntotal_students = 43\ntotal_apples = 1720\napples_per_student = total_apples // total_students\nans = apples_per_student",
            "# Python code, return ans\nstudents = 43\napples = 1720\napples_per_student = apples // students\nans = apples_per_student"
        ],
        "results": [
            40.0,
            40.0,
            40.0
        ],
        "result_counter": {
            "40.0": 3
        },
        "prediction": 40.0
    }
]